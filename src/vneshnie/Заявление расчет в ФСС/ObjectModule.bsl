
Функция ПолучитьЗапросПоКодам() 
	 
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	КодыОрганизацииСрезПоследних.НомерФСС КАК НомерРегистрации,
	               |	КодыОрганизацииСрезПоследних.КодПоЕДРПОУ,
	               |	КодыОрганизацииСрезПоследних.ИНН,
	               |	КодыОрганизацииСрезПоследних.КодКВЕД,
	               |	КодыОрганизацииСрезПоследних.ФИОДиректораФонда,
	               |	КодыОрганизацииСрезПоследних.КлассПрофессиональногоРиска,
	               |	КодыОрганизацииСрезПоследних.НазваниеРабочегоОрганаФонда
	               |ИЗ
	               |	РегистрСведений.КодыОрганизации.СрезПоследних(&ПериодРегистрации, Организация = &Организация) КАК КодыОрганизацииСрезПоследних";
	 
	 Запрос.УстановитьПараметр("Организация", СсылкаНаОбъект.Организация );
	 Запрос.УстановитьПараметр("ПериодРегистрации", СсылкаНаОбъект.ПериодРегистрации);
	 
	 Возврат Запрос.Выполнить();

КонецФункции

// Печать
//
Функция Печать() Экспорт
	
	// Для отладки
	лТест = Серна.ЕстьРеквизитДокумента("Организация", СсылкаНаОбъект.Метаданные());
	
	Объект = СсылкаНаОбъект;
	Организация = СсылкаНаОбъект.Организация;
	ВсегоПоБольничным = СсылкаНаОбъект.ВсегоПоБольничным;
	ВсегоПоБольничнымПоУходу = СсылкаНаОбъект.ВсегоПоБольничнымПоУходу;
	ВсегоПоБеременностиИРодам = СсылкаНаОбъект.ВсегоПоБеременностиИРодам;
	КоличествоДнейПоБольничным = СсылкаНаОбъект.КоличествоДнейПоБольничным;
	КоличествоДнейПоБольничнымПоУходу = СсылкаНаОбъект.КоличествоДнейПоБольничнымПоУходу;
	КоличествоДнейПоБеременостиИРодам = СсылкаНаОбъект.КоличествоДнейПоБеременостиИРодам;
	ВсегоНаПогребение = СсылкаНаОбъект.ВсегоНаПогребение;
	ВсегоПоДокументу = СсылкаНаОбъект.ВсегоПоДокументу;
	
	ТабДокумент = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("Заявка");
	
	//Шапка 
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапка.Параметры.Организация = Организация.НаименованиеПолное;
	
	//Получим данные из РС КодыОрганизаций
	 Результат = ПолучитьЗапросПоКодам();
	 Выборка = Результат.Выбрать();
	 
	 Если Выборка.Следующий() Тогда
		 //ОбластьШапка.Параметры.ФИОДиректораФонда = Выборка.ФИОДиректораФонда;
		 //ОбластьШапка.Параметры.НазваниеРабочегоОрганаФонда = Выборка.НазваниеРабочегоОрганаФонда;
		 ОбластьШапка.Параметры.КодПоЕДРПОУ = Выборка.КодПоЕДРПОУ;
		 ОбластьШапка.Параметры.НомерРегистрации = Выборка.НомерРегистрации;
	 КонецЕсли;
	 
	 //Получим данные из РС КонтактнаяИнформация для адреса организации
	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                |	КонтактнаяИнформация.Представление КАК Адрес
	                |ИЗ
	                |	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	                |ГДЕ
	                |	КонтактнаяИнформация.Объект = &Объект
	                |	И КонтактнаяИнформация.Тип = &Тип
	                |	И КонтактнаяИнформация.Вид = &Вид";
	 
	 Запрос.УстановитьПараметр("Объект", Организация );
	 Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.Адрес);
	 Запрос.УстановитьПараметр("Вид", Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);
	 
	 Результат = Запрос.Выполнить();
	 Выборка = Результат.Выбрать();
	 
	 Если Выборка.Следующий() Тогда
		 ОбластьШапка.Параметры.Адрес = Выборка.Адрес;	 
	 КонецЕсли;
	 
	 //Получим данные из РС КонтактнаяИнформация для телефона организации
	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                |	КонтактнаяИнформация.Представление КАК Телефон
	                |ИЗ
	                |	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	                |ГДЕ
	                |	КонтактнаяИнформация.Объект = &Объект
	                |	И КонтактнаяИнформация.Тип = &Тип
	                |	И КонтактнаяИнформация.Вид = &Вид";
	 
	 Запрос.УстановитьПараметр("Объект", Организация );
	 Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.Телефон);
	 Запрос.УстановитьПараметр("Вид", Справочники.ВидыКонтактнойИнформации.ТелефонОрганизации);
	 
	 Результат = Запрос.Выполнить();
	 Выборка = Результат.Выбрать();
	 
	 Если Выборка.Следующий() Тогда
		 ОбластьШапка.Параметры.Телефон = Выборка.Телефон;	 
	 КонецЕсли;
	 
	ОбластьШапка.Параметры.НомерСчета = Организация.БанковскийСчетДляРасчетовСФСС.Наименование;
	ОбластьШапка.Параметры.МФОБанкаОрганизации = Организация.БанковскийСчетДляРасчетовСФСС.Банк.Код;
	 
	ТабДокумент.Вывести(ОбластьШапка);
	
	//Заголовок
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
    ТабДокумент.Вывести(ОбластьЗаголовок);	
	
	//ШапкаТаблицы
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабДокумент.Вывести(ОбластьШапкаТаблицы);
	
	//СтрокаВремНетрудоспособность
	ОбластьВремНетрудоспособность = Макет.ПолучитьОбласть("СтрокаВремНетрудоспособность");
	ОбластьВремНетрудоспособность.Параметры.Сумма = Формат(ВсегоПоБольничным,"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
	ОбластьВремНетрудоспособность.Параметры.Дни = КоличествоДнейПоБольничным;
	ТабДокумент.Вывести(ОбластьВремНетрудоспособность);
	
	//СтрокаВремНетрудоспособностьУход
	ОбластьВремНетрудоспособностьУход = Макет.ПолучитьОбласть("СтрокаВремНетрудоспособностьУход");
	ОбластьВремНетрудоспособностьУход.Параметры.Сумма = Формат(ВсегоПоБольничнымПоУходу,"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
	ОбластьВремНетрудоспособностьУход.Параметры.Дни = КоличествоДнейПоБольничнымПоУходу;
	ТабДокумент.Вывести(ОбластьВремНетрудоспособностьУход);
	
	//СтрокаВремНетрудоспособностьБерем
	ОбластьВремНетрудоспособностьБерем = Макет.ПолучитьОбласть("СтрокаВремНетрудоспособностьБерем");
	ОбластьВремНетрудоспособностьБерем.Параметры.Сумма = Формат(ВсегоПоБеременностиИРодам,"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
	ОбластьВремНетрудоспособностьБерем.Параметры.Дни = КоличествоДнейПоБеременостиИРодам;
	ТабДокумент.Вывести(ОбластьВремНетрудоспособностьБерем);

	//СтрокаВремНетрудоспособностьПогребение 
	ОбластьВремНетрудоспособностьПогребение = Макет.ПолучитьОбласть("СтрокаВремНетрудоспособностьПогребение");
	ОбластьВремНетрудоспособностьПогребение.Параметры.Сумма = Формат(ВсегоНаПогребение,"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
	ТабДокумент.Вывести(ОбластьВремНетрудоспособностьПогребение);
	
	//Итог
	ОбластьИтог = Макет.ПолучитьОбласть("Итог");
	ОбластьИтог.Параметры.СуммаИтог = Формат(ВсегоПоДокументу,"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
	ТабДокумент.Вывести(ОбластьИтог);
	
	Возврат ТабДокумент;
	
КонецФункции

// СформироватьЗапросДляПечати
//
Функция СформироватьЗапросДляПечати(Режим)

	Ссылка = СсылкаНаОбъект;
	Организация = СсылкаНаОбъект.Организация;
	Дата = СсылкаНаОбъект.Дата;
	
	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	Запрос.УстановитьПараметр("Руководитель",	Перечисления.ОтветственныеЛицаОрганизаций.Руководитель);
    Запрос.УстановитьПараметр("ДатаДокумента",	 Дата);
    Запрос.УстановитьПараметр("РеглВалюта",	 Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ОсновноеМестоРаботы", Перечисления.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы);
	Запрос.УстановитьПараметр("Дата", СсылкаНаОбъект.Дата);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ФИОФизЛицСрезПоследних.Фамилия + ВЫБОР
	|			КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Имя, 1, 1) <> """"
	|				ТОГДА "" "" + ПОДСТРОКА(ФИОФизЛицСрезПоследних.Имя, 1, 1) + "".""
	|			ИНАЧЕ """"
	|		КОНЕЦ + ВЫБОР
	|			КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Отчество, 1, 1) <> """"
	|				ТОГДА "" "" + ПОДСТРОКА(ФИОФизЛицСрезПоследних.Отчество, 1, 1) + "".""
	|			ИНАЧЕ """"
	|		КОНЕЦ, ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо.Наименование) КАК ФИОРуководителя
	|ПОМЕСТИТЬ Руководитель
	|ИЗ
	|	РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(&Дата, ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.Руководитель)) КАК ОтветственныеЛицаОрганизацийСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ) КАК ФИОФизЛицСрезПоследних
	|		ПО ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо = ФИОФизЛицСрезПоследних.ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Рег.Сотрудник КАК Сотрудник,
	|	Рег.Показатель1 КАК Оклад,
	|	Рег.Валюта1 КАК Валюта
	|ПОМЕСТИТЬ Оклады
	|ИЗ
	|	РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций.СрезПоследних(
	|			КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ),
	|			Активность
	|				И ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОкладПоДням)) КАК Рег
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Рег.Объект КАК Сотрудник,
	|	ВЫБОР
	|		КОГДА Рег.Значение.Наименование = ""1. Повна матеріальна відповідальність""
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК МатОтветственность
	|ПОМЕСТИТЬ МатОтветств
	|ИЗ
	|	РегистрСведений.ЗначенияСвойствОбъектов КАК Рег
	|ГДЕ
	|	Рег.Свойство.Наименование = ""Материальная ответственность""
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДокТЧ.Ссылка.Дата КАК ДатаДок,
	|	ДокТЧ.Ссылка.Номер КАК НомерДок,
	|	ДокТЧ.НомерСтроки КАК НомерСтроки,
	|	ДокТЧ.Сотрудник КАК Работник,
	|	ДокТЧ.ДатаНачала КАК ДатаПриема,
	|	ДокТЧ.Сотрудник.Код КАК ТабельныйНомер,
	|	ДокТЧ.ПодразделениеОрганизации КАК Подразделение,
	|	ДокТЧ.Должность КАК Должность,
	|	ВЫБОР
	|		КОГДА ДокТЧ.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ФлагКонтракт,
	|	ДокТЧ.ДатаОкончания КАК ДатаОкончания,
	|	ЛОЖЬ КАК ФлагИспытательныйСрок,
	|	"""" КАК ИспытательныйСрокНачало,
	|	"""" КАК ИспытательныйСрокКонец,
	|	ВЫБОР
	|		КОГДА ДокТЧ.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ФлагОсновная,
	|	ВЫБОР
	|		КОГДА ДокТЧ.ГрафикРаботы.ДлительностьРабочейНедели = 40
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ФлагДлительность,
	|	ВЫБОР
	|		КОГДА ДокТЧ.ЗанимаемыхСтавок < 1
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ФлагНеполнаяСтавка,
	|	ВЫБОР
	|		КОГДА ДокТЧ.ЗанимаемыхСтавок = 0.25
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ФлагСтавка025,
	|	ВЫБОР
	|		КОГДА ДокТЧ.ЗанимаемыхСтавок = 0.5
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ФлагСтавка050,
	|	ВЫБОР
	|		КОГДА ДокТЧ.ЗанимаемыхСтавок = 0.75
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ФлагСтавка075,
	|	ВЫБОР
	|		КОГДА ДокТЧ.ГрафикРаботы.ДлительностьРабочейНедели = 40
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ФлагЧасовВНеделю,
	|	ЛОЖЬ КАК ФлагЧасовВДень,
	|	ВЫБОР
	|		КОГДА ДокТЧ.ГрафикРаботы.ДлительностьРабочейНедели = 40
	|			ТОГДА 0
	|		ИНАЧЕ ДокТЧ.ГрафикРаботы.ДлительностьРабочейНедели
	|	КОНЕЦ КАК ЧасовВНеделю,
	|	0 КАК ЧасовВДень,
	|	ВЫБОР
	|		КОГДА МатОтветств.МатОтветственность ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ФлагМатериальнаяОтветственность,
	|	ВЫБОР
	|		КОГДА МатОтветств.МатОтветственность ЕСТЬ NULL 
	|			ТОГДА """"
	|		КОГДА МатОтветств.МатОтветственность
	|			ТОГДА ""Повна""
	|		ИНАЧЕ ""Неповна""
	|	КОНЕЦ КАК МатериальнаяОтветственность,
	|	ЕСТЬNULL(Оклады.Оклад, 0) КАК Оклад,
	|	ЕСТЬNULL(Оклады.Валюта, ЗНАЧЕНИЕ(Справочник.Валюты.Гривна)) КАК Валюта,
	|	Руководитель.ФИОРуководителя
	|ИЗ
	|	Документ.КадровоеПеремещениеОрганизаций.РаботникиОрганизации КАК ДокТЧ
	|		ЛЕВОЕ СОЕДИНЕНИЕ МатОтветств КАК МатОтветств
	|		ПО ДокТЧ.Сотрудник = МатОтветств.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ Оклады КАК Оклады
	|		ПО ДокТЧ.Сотрудник = Оклады.Сотрудник,
	|	Руководитель КАК Руководитель
	|ГДЕ
	|	ДокТЧ.Ссылка = &ДокументСсылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|ИТОГИ ПО
	|	НомерСтроки";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросДляПечати()

// СведенияОВнешнейОбработке
//
Функция СведенияОВнешнейОбработке() Экспорт
	ПараметрыРегистрации = Новый Структура;
	МассивНазначений = Новый Массив;
	МассивНазначений.Добавить("Документ.ЗаявлениеРасчетВФСС");
	ПараметрыРегистрации.Вставить("Вид", "ПечатнаяФорма");
	//возможны варианты - ЗаполнениеОбъекта, ДополнительныйОтчет, СозданиеСвязанныхОбъектов,
	ПараметрыРегистрации.Вставить("Назначение", МассивНазначений);
	ПараметрыРегистрации.Вставить("Наименование", "Печатная форма заявления в ФСС"); //имя под kt обработка зарегистрирована будет в справочнике внешних обработок
	ПараметрыРегистрации.Вставить("Версия", "1.0");
	ПараметрыРегистрации.Вставить("БезопасныйРежим", ЛОЖЬ);
	ПараметрыРегистрации.Вставить("Информация", "Печатная форма заявления в ФСС");
	//команды
	ТаблицаКоманд = Новый ТаблицаЗначений;
	ТаблицаКоманд.Колонки.Добавить("Представление"); //как будет выглядеть описание печ.формы для пользователя
	ТаблицаКоманд.Колонки.Добавить("Идентификатор"); //имя нашего макета
	ТаблицаКоманд.Колонки.Добавить("Использование"); //ВызовСерверногоМетода
	ТаблицаКоманд.Колонки.Добавить("ПоказыватьОповещение"); //Истина
	ТаблицаКоманд.Колонки.Добавить("Модификатор"); //ПечатьМХL
	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда.Представление = "Печатная форма заявления в ФСС";
	НоваяКоманда.Идентификатор = "ФормаЗаявкаФСС"; //Внешняя печатная форма
	НоваяКоманда.Использование = "ВызовКлиентскогоМетода"; //здесь можно прописать использование как серверного так и клиентского, отличие в том, что серверный метод будет обращаться к экспортной процедуре из модуля объекта, клиентский - к экспортной процедуре из модуля формы объекта
	НоваяКоманда.ПоказыватьОповещение = Истина;
	НоваяКоманда.Модификатор = "ПечатьMXL";
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
	Возврат ПараметрыРегистрации;
КонецФункции
