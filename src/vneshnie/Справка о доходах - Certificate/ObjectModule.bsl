Функция Печать() Экспорт
	
	// Для отладки
	лТест = Серна.ЕстьРеквизитДокумента("Сотрудник", СсылкаНаОбъект.Метаданные() );
	лЭтотОбъект = СсылкаНаОбъект;
	Дата = лЭтотОбъект.Дата;
	Номер = лЭтотОбъект.Номер;
	Сотрудник = лЭтотОбъект.Сотрудник;
	Организация = лЭтотОбъект.Организация;
	ДатаНач = лЭтотОбъект.ДатаНач;
	ДатаКон = лЭтотОбъект.ДатаКон;
	НазначениеСправки = СокрЛП(лЭтотОбъект.НазначениеСправки);
	Если Не ЗначениеЗаполнено(НазначениеСправки) Тогда НазначениеСправки = "The statement is issued to be presented on demand."; КонецЕсли;
	ФизЛицо = лЭтотОбъект.ФизЛицо;
	Доходы = лЭтотОбъект.Доходы;
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// получаем данные для печати
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество
	|ИЗ
	|		РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дт, ) КАК ФИОФизЛицСрезПоследних
	|ГДЕ
	|	ФизЛицо = &ФизЛицо";
		
	ЗапросФИО = Новый Запрос(ТекстЗапроса);
	ЗапросФИО.УстановитьПараметр("ФизЛицо", Сотрудник.ФизЛицо);
	ЗапросФИО.УстановитьПараметр("Дт", Дата);
		
	РезультатФИО = ЗапросФИО.Выполнить().Выбрать();
	РезультатФИО.Следующий();
		
	ТекстЗапроса =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Работники.Должность
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&Дт, Организация=&Организация И ЗанимаемыхСтавок>0) КАК Работники
	|ГДЕ
	|	Работники.Сотрудник = &Сотрудник
	|	И Работники.Сотрудник.ВидЗанятости <> &ВидЗанятостиСовмещение
	|УПОРЯДОЧИТЬ ПО
	|	Работники.Период УБЫВ";
		
	ЗапросДолжность = Новый Запрос(ТекстЗапроса);
	ЗапросДолжность.УстановитьПараметр("Дт", Дата);
	ЗапросДолжность.УстановитьПараметр("Сотрудник", Сотрудник);
	ЗапросДолжность.УстановитьПараметр("Организация", Организация);
	ЗапросДолжность.УстановитьПараметр("ВидЗанятостиСовмещение", Перечисления.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство);
		
	РезультатДолжность = ЗапросДолжность.Выполнить().Выбрать();
	РезультатДолжность.Следующий();
		
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МИНИМУМ(Доходы.Период) КАК НачалоПериодаДоходов,
	|	МАКСИМУМ(КОНЕЦПЕРИОДА(Доходы.Период,МЕСЯЦ)) КАК ОкончаниеПериодаДоходов
	|ИЗ
	|	Документ.СправкаОДоходах.Доходы КАК Доходы
	|ГДЕ
	|	Доходы.Ссылка = &Ссылка";
		
	ЗапросПериодДоходов = Новый Запрос(ТекстЗапроса);
	ЗапросПериодДоходов.УстановитьПараметр("Ссылка", лЭтотОбъект);
		
	РезультатПериодДоходов = ЗапросПериодДоходов.Выполнить().Выбрать();
	РезультатПериодДоходов.Следующий();
				
	// получаем макет
	Макет = ПолучитьМакет("Макет");
	
	// печать производится на языке, указанном в настройках пользователя
	Макет.КодЯзыкаМакета = "ru";
	
	//Выводим шапку
	ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакетаШапка.Параметры.ФИОФизлица 			= СокрЛП(СокрЛП(Сотрудник.NameFamily) + " " + СокрЛП(Сотрудник.Name) + " " + СокрЛП(Сотрудник.NameSecond));
	ОбластьМакетаШапка.Параметры.ИдентификационныйКод	= Сотрудник.Физлицо.КодПоДРФО;
	ОбластьМакетаШапка.Параметры.ДатаПриемаНаРаботу 	= Формат(Сотрудник.ДатаПриемаНаРаботу, "ДЛФ=Д");
	ОбластьМакетаШапка.Параметры.он = ?(Сотрудник.Физлицо.Пол = Перечисления.ПолФизическихЛиц.Мужской, "he", "she");
	ОбластьМакетаШапка.Параметры.Должность = ?(ЗначениеЗаполнено(РезультатДолжность.Должность.Name), РезультатДолжность.Должность.Name, РезультатДолжность.Должность.Наименование);
	ОбластьМакетаШапка.Параметры.Номер						= Номер;
	ОбластьМакетаШапка.Параметры.Дата						= Формат(Дата, "ДЛФ=Д");
	ОбластьМакетаШапка.Параметры.ДатаНач					= Формат(МАКС(Сотрудник.ДатаПриемаНаРаботу,РезультатПериодДоходов.НачалоПериодаДоходов), "ДЛФ=Д");
	ОбластьМакетаШапка.Параметры.ДатаКон					= Формат(?(НЕ ЗначениеЗаполнено(Сотрудник.ДатаУвольнения),РезультатПериодДоходов.ОкончаниеПериодаДоходов,МИН(Сотрудник.ДатаУвольнения,РезультатПериодДоходов.ОкончаниеПериодаДоходов)), "ДЛФ=Д");
	ОбластьМакетаШапка.Параметры.СуммаДоход	= Формат(Доходы.Итог("СовокупныйДоход"),	"ЧЦ=10; ЧДЦ=2");
		
	ТабДокумент.Вывести(ОбластьМакетаШапка);
		
	// выводим строки
	ОбластьМакета = Макет.ПолучитьОбласть("СтрокаПериод"); // строка периода
	Для каждого СтрокаТЧ Из Доходы Цикл
		ОбластьМакета.Параметры.Период			= Формат(СтрокаТЧ.Период,			"Л=en; ДФ='ММММ ` гггг'");
		ОбластьМакета.Параметры.СовокупныйДоход	= Формат(СтрокаТЧ.СовокупныйДоход,	"ЧЦ=10; ЧДЦ=2");
		ОбластьМакета.Параметры.Удержания		= Формат(СтрокаТЧ.Удержания,		"ЧЦ=10; ЧДЦ=2");
		ОбластьМакета.Параметры.НачисленоПрочее	= Формат(СтрокаТЧ.НачисленоПрочее,	"ЧЦ=10; ЧДЦ=2");
		ОбластьМакета.Параметры.СуммаКВыплате	= Формат(СтрокаТЧ.СуммаКВыплате,	"ЧЦ=10; ЧДЦ=2");
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЦикла;		
		
	//Итоги
	ОбластьМакета = Макет.ПолучитьОбласть("СтрокаИтого");
	ОбластьМакета.Параметры.СовокупныйДоход	= Формат(Доходы.Итог("СовокупныйДоход"),	"ЧЦ=10; ЧДЦ=2");
	ОбластьМакета.Параметры.Удержания		= Формат(Доходы.Итог("Удержания"),			"ЧЦ=10; ЧДЦ=2");
	ОбластьМакета.Параметры.НачисленоПрочее	= Формат(Доходы.Итог("НачисленоПрочее"),	"ЧЦ=10; ЧДЦ=2");
	ОбластьМакета.Параметры.СуммаКВыплате	= Формат(Доходы.Итог("СуммаКВыплате"),		"ЧЦ=10; ЧДЦ=2");
	ТабДокумент.Вывести(ОбластьМакета);
		
	//Дно
	ТекстЗапроса="ВЫБРАТЬ
	             |	ФИОФизЛицСрезПоследних.Фамилия,
	             |	ФИОФизЛицСрезПоследних.Имя,
	             |	ФИОФизЛицСрезПоследних.Отчество
	             |ИЗ
	             |	РегистрСведений.ФИОФизЛиц.СрезПоследних КАК ФИОФизЛицСрезПоследних
	             |ГДЕ
	             |	ФИОФизЛицСрезПоследних.ФизЛицо = &ФизЛицо";
	Запрос = Новый Запрос(ТекстЗапроса);
		
	Отбор = Новый Структура("СтруктурнаяЕдиница, ОтветственноеЛицо");
	Отбор.СтруктурнаяЕдиница	= Организация;
	Отбор.ОтветственноеЛицо		= Перечисления.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер;
		
	Выборка = РегистрыСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(Дата, Отбор);
	Для Каждого Строка Из Выборка Цикл
		Если Не (Строка.ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка()) Тогда  
			лГлавныйБухгалтерФизическоеЛицо = Строка.ФизическоеЛицо;
			Запрос.УстановитьПараметр("ФизЛицо",Строка.ФизическоеЛицо);
			ВыборкаФам = Запрос.Выполнить().Выбрать();
			ВыборкаФам.Следующий();
			ГлавныйБухгалтер = ВыборкаФам.Фамилия +" "+Лев(ВыборкаФам.Имя, 1)+"."+Лев(ВыборкаФам.Отчество, 1);
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Отбор = Новый Структура("СтруктурнаяЕдиница, ОтветственноеЛицо");
	Отбор.СтруктурнаяЕдиница	= Организация;
	Отбор.ОтветственноеЛицо		= Перечисления.ОтветственныеЛицаОрганизаций.Руководитель;
		
	Выборка = РегистрыСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(Дата, Отбор);
	Для Каждого Строка Из Выборка Цикл
		Если Не (Строка.ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка()) Тогда 
			лДиректорФизическоеЛицо = Строка.ФизическоеЛицо;
			Запрос.УстановитьПараметр("ФизЛицо",Строка.ФизическоеЛицо);
			ВыборкаФам = Запрос.Выполнить().Выбрать();
			ВыборкаФам.Следующий();
			Директор = ВыборкаФам.Фамилия +" "+Лев(ВыборкаФам.Имя, 1)+"."+Лев(ВыборкаФам.Отчество, 1);
			Прервать;
		КонецЕсли;
	КонецЦикла;


	ОбластьМакета = Макет.ПолучитьОбласть("Дно");
	ОбластьМакета.Параметры.НазначениеСправки	= НазначениеСправки;
	
	лСотрудникТут = Справочники.СотрудникиОрганизаций.НайтиПоРеквизиту("ФизЛицо", лГлавныйБухгалтерФизическоеЛицо);
	Если ЗначениеЗаполнено(лСотрудникТут) Тогда
		лИмяТут = СокрЛП(СокрЛП(лСотрудникТут.NameFamily) + " " + СокрЛП(лСотрудникТут.Name) + " " + СокрЛП(лСотрудникТут.NameSecond));
	Иначе
		лИмяТут = ГлавныйБухгалтер;
	КонецЕсли;
	ОбластьМакета.Параметры.ГлавныйБухгалтер	= лИмяТут;
	
	//лСотрудникТут = Справочники.СотрудникиОрганизаций.НайтиПоРеквизиту("ФизЛицо", лДиректорФизическоеЛицо);
	//Если ЗначениеЗаполнено(лСотрудникТут) Тогда
	//	лИмяТут = СокрЛП(СокрЛП(лСотрудникТут.NameFamily) + " " + СокрЛП(лСотрудникТут.Name) + " " + СокрЛП(лСотрудникТут.NameSecond));
	//Иначе
	//	лИмяТут = Директор;
	//КонецЕсли;
	//ОбластьМакета.Параметры.Директор			= лИмяТут;
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	Возврат ТабДокумент;
	
КонецФункции

Функция СведенияОВнешнейОбработке() Экспорт
	ПараметрыРегистрации = Новый Структура;
	МассивНазначений = Новый Массив;
	МассивНазначений.Добавить("Документ.СправкаОДоходах");
	ПараметрыРегистрации.Вставить("Вид", "ПечатнаяФорма");
	//возможны варианты - ЗаполнениеОбъекта, ДополнительныйОтчет, СозданиеСвязанныхОбъектов,
	ПараметрыРегистрации.Вставить("Назначение", МассивНазначений);
	ПараметрыРегистрации.Вставить("Наименование", "Справка о доходах - Certificate"); //имя под kt обработка зарегистрирована будет в справочнике внешних обработок
	ПараметрыРегистрации.Вставить("Версия", "1.0");
	ПараметрыРегистрации.Вставить("БезопасныйРежим", ЛОЖЬ);
	ПараметрыРегистрации.Вставить("Информация", "Справка о доходах - Certificate");
	//команды
	ТаблицаКоманд = Новый ТаблицаЗначений;
	ТаблицаКоманд.Колонки.Добавить("Представление"); //как будет выглядеть описание печ.формы для пользователя
	ТаблицаКоманд.Колонки.Добавить("Идентификатор"); //имя нашего макета
	ТаблицаКоманд.Колонки.Добавить("Использование"); //ВызовСерверногоМетода
	ТаблицаКоманд.Колонки.Добавить("ПоказыватьОповещение"); //Истина
	ТаблицаКоманд.Колонки.Добавить("Модификатор"); //ПечатьМХL
	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда.Представление = "Справка о доходах - Certificate";
	НоваяКоманда.Идентификатор = "ПечатьСправкаОДоходахCertificate"; //Внешняя печатная форма
	НоваяКоманда.Использование = "ВызовКлиентскогоМетода"; //здесь можно прописать использование как серверного так и клиентского, отличие в том, что серверный метод будет обращаться к экспортной процедуре из модуля объекта, клиентский - к экспортной процедуре из модуля формы объекта
	НоваяКоманда.ПоказыватьОповещение = Истина;
	НоваяКоманда.Модификатор = "ПечатьMXL";
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
	Возврат ПараметрыРегистрации;
КонецФункции