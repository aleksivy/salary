Перем мОбъект Экспорт;
Перем мИмяТабличнойЧасти Экспорт;

// Инициализировать
//
Процедура Инициализировать(Объект, ИмяТабличнойЧасти, ПолеРасшифровки ) Экспорт 
	
	мОбъект = Объект;
	мИмяТабличнойЧасти = ИмяТабличнойЧасти;
	
	Заполнить();
	
КонецПроцедуры // Инициализировать

// Заполнить
//
Процедура Заполнить() Экспорт
	// Для отладки
	лТмп = Серна.ЕстьРеквизитДокумента("Организация", мОбъект.Метаданные());
	
	// Документ должен быть проведен! Суммы базы для расчетов будем брать из движений документа!
	Если Не мОбъект.Проведен Тогда
#Если Клиент Тогда
		Сообщить("Документ не проведен - " + мОбъект + "!");
#КонецЕсли	
		Возврат;
	КонецЕсли;
	Если мОбъект.ОсновныеНачисления.Количество() = 0 Тогда
#Если Клиент Тогда
		Сообщить("Документ не заполнен - " + мОбъект + "!");
#КонецЕсли	
		Возврат;
	КонецЕсли;
	
	СтруктураРезультата = Новый Структура("Результат, Сторно",0,Ложь);
	СтруктураНовыхЗаписей = Новый Структура("Сторно",Ложь);
	НеРассчитан = мОбъект.ОсновныеНачисления.НайтиСтроки(СтруктураРезультата).Количество() = мОбъект.ОсновныеНачисления.НайтиСтроки(СтруктураНовыхЗаписей).Количество() И мОбъект.ОсновныеНачисления.НайтиСтроки(СтруктураНовыхЗаписей).Количество() > 0;
	
	// Документ должен быть расчитан! Суммы базы для расчетов будем брать из движений документа!
//	Если НеРассчитан Тогда
//#Если Клиент Тогда
//		Сообщить("Документ не рассчитан - " + мОбъект + "!");
//#КонецЕсли	
//		Возврат;
//	КонецЕсли;
	
	// Обработка только для расчетов по видам расчетов : '20. Доплата до відпускних' и '23. Доплата до средньоденного (відрядження)'
	лВидРасчетаДоплата = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.НайтиПоНаименованию( "23. Доплата до средньоденного (відрядження)" );
	лтзВидыРасчета = мОбъект.ОсновныеНачисления.Выгрузить(,"ВидРасчета");
	лтзВидыРасчета.Свернуть("ВидРасчета", "");
	Для каждого лСтрока Из лтзВидыРасчета Цикл
		Если (Не лСтрока.ВидРасчета = лВидРасчетаДоплата) Тогда
#Если Клиент Тогда
			Сообщить("Обработку можно использовать только для вида расчета '" + лВидРасчетаДоплата.Наименование + "' !");
#КонецЕсли	
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
	лЗапрос = Новый Запрос;
	лсзТмп = Новый СписокЗначений; лсзТмп.Добавить("Сотрудник");
	лЗапрос.УстановитьПараметр("Осн", лсзТмп);
	лсзТмп = Новый СписокЗначений; лсзТмп.Добавить("ВидРасчета");
	лЗапрос.УстановитьПараметр("Разрезы", лсзТмп);
	лЗапрос.УстановитьПараметр("Доллар", Справочники.Валюты.Доллар);
	лЗапрос.УстановитьПараметр("ВидРасчета", лВидРасчетаДоплата);
	лЗапрос.УстановитьПараметр("Регистратор", мОбъект.Ссылка);
	лЗапрос.УстановитьПараметр("Дата", мОбъект.Дата);
	лЗапрос.Текст =
	"ВЫБРАТЬ
	|	Рег.Регистратор,
	|	Рег.НомерСтроки,
	|	Рег.ПериодДействияНачало,
	|	Рег.ПериодДействияКонец,
	|	РАЗНОСТЬДАТ(Рег.ПериодДействияНачало, Рег.ПериодДействияКонец, ДЕНЬ) + 1 КАК КолвоДней,
	|	Рег.Сотрудник,
	|	Рег.Результат КАК РезультатЕсть,
	|	Рег.Показатель1 КАК СтавкаНадо,
	|	ВЫБОР
	|		КОГДА Рег.ОплаченоДнейЧасовБаза > 0
	|			ТОГДА Рег.РезультатБаза / Рег.ОплаченоДнейЧасовБаза
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтавкаЕсть,
	|	Рег.РезультатБаза,
	|	Рег.ОплаченоДнейЧасовБаза
	|ПОМЕСТИТЬ ИзРегистра
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.БазаОсновныеНачисленияРаботниковОрганизаций(&Осн, &Осн, &Разрезы, ) КАК Рег
	|ГДЕ
	|	ИСТИНА
	|	И Рег.Регистратор = &Регистратор
	|	И Рег.ВидРасчета = &ВидРасчета
	|	И Рег.Результат = 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Оклады.Сотрудник,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА Оклады.Валюта1 = &Доллар
	|				ТОГДА ВЫБОР
	|						КОГДА Курсы.Кратность = 0
	|								ИЛИ Курсы.Кратность = 1
	|							ТОГДА Курсы.Курс
	|						ИНАЧЕ Курсы.Курс / Курсы.Кратность
	|					КОНЕЦ
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК Курс
	|ПОМЕСТИТЬ Курсы
	|ИЗ
	|	РегистрСведений.КурсыВалютДляРасчетовСПерсоналом.СрезПоследних(
	|			КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ),
	|			Валюта = &Доллар
	|				И Период >= НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ)
	|				И Период <= КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ)) КАК Курсы,
	|	РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций.СрезПоследних(
	|			КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ),
	|			ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОкладПоДням)
	|				И Сотрудник В
	|					(ВЫБРАТЬ
	|						ИзРегистра.Сотрудник
	|					ИЗ
	|						ИзРегистра КАК ИзРегистра)) КАК Оклады
	|
	|СГРУППИРОВАТЬ ПО
	|	Оклады.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Рег.Регистратор,
	|	Рег.НомерСтроки КАК НомерСтроки,
	|	Рег.ПериодДействияНачало,
	|	Рег.ПериодДействияКонец,
	|	Рег.КолвоДней,
	|	Рег.Сотрудник,
	|	Рег.СтавкаНадо * ЕСТЬNULL(Курсы.Курс, 1) КАК СтавкаНадо,
	|	Рег.СтавкаЕсть,
	|	Рег.РезультатБаза,
	|	Рег.ОплаченоДнейЧасовБаза,
	|	Рег.РезультатЕсть,
	|	ВЫБОР
	|		КОГДА Рег.ОплаченоДнейЧасовБаза > 0
	|			ТОГДА ВЫБОР
	|					КОГДА Рег.СтавкаНадо * ЕСТЬNULL(Курсы.Курс, 1) > Рег.РезультатБаза / Рег.ОплаченоДнейЧасовБаза
	|						ТОГДА ВЫРАЗИТЬ((Рег.СтавкаНадо * ЕСТЬNULL(Курсы.Курс, 1) - Рег.РезультатБаза / Рег.ОплаченоДнейЧасовБаза) * Рег.КолвоДней КАК ЧИСЛО(15, 2))
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Результат,
	|	Рег.РезультатЕсть - ВЫБОР
	|		КОГДА Рег.ОплаченоДнейЧасовБаза > 0
	|			ТОГДА ВЫБОР
	|					КОГДА Рег.СтавкаНадо * ЕСТЬNULL(Курсы.Курс, 1) > Рег.РезультатБаза / Рег.ОплаченоДнейЧасовБаза
	|						ТОГДА ВЫРАЗИТЬ((Рег.СтавкаНадо * ЕСТЬNULL(Курсы.Курс, 1) - Рег.РезультатБаза / Рег.ОплаченоДнейЧасовБаза) * Рег.КолвоДней КАК ЧИСЛО(15, 2))
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Разница
	|ИЗ
	|	ИзРегистра КАК Рег
	|		ЛЕВОЕ СОЕДИНЕНИЕ Курсы КАК Курсы
	|		ПО Рег.Сотрудник = Курсы.Сотрудник
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	лтзРез = лЗапрос.Выполнить().Выгрузить();
	Для каждого лСтрокаТЗ Из лтзРез Цикл
		лСтрока = мОбъект.ОсновныеНачисления[ лСтрокаТЗ.НомерСтроки-1 ];
		лСтрока.Результат = лСтрокаТЗ.Результат;
	КонецЦикла;
КонецПроцедуры // Заполнить
