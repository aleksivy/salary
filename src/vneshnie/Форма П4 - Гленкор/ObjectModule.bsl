
// Печать
//
Функция Печать() Экспорт
	
	// Для отладки
	лТест = Серна.ЕстьРеквизитДокумента("Организация", СсылкаНаОбъект.Метаданные());
	
	Объект = СсылкаНаОбъект;
	Организация = СсылкаНаОбъект.Организация;
	Дата = СсылкаНаОбъект.Дата;
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_УвольнениеИзОрганизаций_П4_Гленкор";
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	// получаем данные для печати
	ВыборкаРаботники = СформироватьЗапросДляПечати().Выбрать();
	СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, Дата);
	
	// запоминаем области макета
	Макет = ПолучитьМакет("П4_от_05_12_2008");
	ОбластьМакета = Макет.ПолучитьОбласть("Форма");
	
	// Начинаем формировать выходной документ
	Пока ВыборкаРаботники.Следующий() Цикл

		// Каждый приказ на отдельной странице.
		Если ТабДокумент.ВысотаТаблицы > 0 Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		// Данные по работнику.
		ОбластьМакета.Параметры.Заполнить(ВыборкаРаботники);
		ОбластьМакета.Параметры.ФИОРуководителя = "Балан В.С.";
		ОбластьМакета.Параметры.НазваниеОрганизации = СведенияОбОрганизации.ПолноеНаименование;
		ОбластьМакета.Параметры.ЕДРПОУ = УправлениеКонтактнойИнформацией.ПолучитьКодОрганизации(СведенияОбОрганизации);
		Попытка
			ОбластьМакета.Параметры.НомерДок = Число( Прав(ВыборкаРаботники.НомерДок, 9) );
		Исключение
		    ОбластьМакета.Параметры.НомерДок = Прав(ВыборкаРаботники.НомерДок, 9);
		КонецПопытки;
		Попытка
			ОбластьМакета.Параметры.ТабельныйНомер = Число( ВыборкаРаботники.ТабельныйНомер );
		Исключение
		    ОбластьМакета.Параметры.ТабельныйНомер = ВыборкаРаботники.ТабельныйНомер;
		КонецПопытки;
		
		Если ВыборкаРаботники.Пособие <> 0 Тогда
			ОбластьМакета.Параметры.ПособиеГривны = Цел(ВыборкаРаботники.Пособие); 
			ОбластьМакета.Параметры.ПособиеКопейки = (ВыборкаРаботники.Пособие-Цел(ВыборкаРаботники.Пособие))*100; 
		КонецЕсли;	
		
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЦикла;

	Возврат ТабДокумент;
	
КонецФункции

// СформироватьЗапросДляПечати
//
Функция СформироватьЗапросДляПечати()

	Ссылка = СсылкаНаОбъект;
	Организация = СсылкаНаОбъект.Организация;
	Дата = СсылкаНаОбъект.Дата;
	
	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
    Запрос.УстановитьПараметр("ДатаДокумента",	 Дата);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДокТЧ.Ссылка.Номер КАК НомерДок,
	|	ДокТЧ.Ссылка.Дата КАК ДатаДок,
	|	ЕСТЬNULL(ФИОСотрудника.Фамилия + "" "" + ФИОСотрудника.Имя + "" "" + ФИОСотрудника.Отчество, ДокТЧ.Сотрудник.Наименование) КАК Работник,
	|	ДокТЧ.ДатаУвольнения,
	|	Работники.ПодразделениеОрганизации КАК Подразделение,
	|	Работники.Должность КАК Должность,
	|	ДокТЧ.СтатьяКЗОТ КАК СтатьяКЗОТ,
	|	ДокТЧ.РеквизитыДокументаОснования КАК ОснованиеУвольнения,
	|	ВЫБОР
	|		КОГДА ДокТЧ.КомпенсироватьДнейЕжегодногоОтпуска > 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ФлагКомпенсация,
	|	ВЫБОР
	|		КОГДА ДокТЧ.КомпенсироватьДнейЕжегодногоОтпуска > 0
	|			ТОГДА ДокТЧ.КомпенсироватьДнейЕжегодногоОтпуска
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоДнейКомпенсировать,
	|	ВЫБОР
	|		КОГДА ДокТЧ.КомпенсироватьДнейЕжегодногоОтпуска < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ФлагУдержать,
	|	ВЫБОР
	|		КОГДА ДокТЧ.КомпенсироватьДнейЕжегодногоОтпуска < 0
	|			ТОГДА -ДокТЧ.КомпенсироватьДнейЕжегодногоОтпуска
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоДнейУдержать,
	|	ДокТЧ.Сотрудник.ДатаДоговора КАК ТрудовойДоговорДата,
	|	ДокТЧ.Сотрудник.НомерДоговора КАК ТрудовойДоговорНомер,
	|	ДокТЧ.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(Пособие.Результат, 0) КАК Пособие,
	|	ДокТЧ.Сотрудник.Код КАК ТабельныйНомер,
	|	ЕСТЬNULL(ФИОДиректора.Фамилия + ВЫБОР
	|			КОГДА ПОДСТРОКА(ФИОДиректора.Имя, 1, 1) <> """"
	|				ТОГДА "" "" + ПОДСТРОКА(ФИОДиректора.Имя, 1, 1) + "".""
	|			ИНАЧЕ """"
	|		КОНЕЦ + ВЫБОР
	|			КОГДА ПОДСТРОКА(ФИОДиректора.Отчество, 1, 1) <> """"
	|				ТОГДА "" "" + ПОДСТРОКА(ФИОДиректора.Отчество, 1, 1) + "".""
	|			ИНАЧЕ """"
	|		КОНЕЦ, Директор.ФизическоеЛицо.Наименование) КАК ФИОРуководителя
	|ИЗ
	|	Документ.УвольнениеИзОрганизаций.РаботникиОрганизации КАК ДокТЧ
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			СписокДат.Сотрудник КАК Сотрудник,
	|			РаботникиОрганизации.ПодразделениеОрганизации.Наименование КАК ПодразделениеОрганизации,
	|			РаботникиОрганизации.Должность.Наименование КАК Должность
	|		ИЗ
	|			(ВЫБРАТЬ
	|				РаботникиВнутри.Сотрудник КАК Сотрудник,
	|				МАКСИМУМ(РаботникиВнутри.Период) КАК ДатаПоследнегоИзменения
	|			ИЗ
	|				РегистрСведений.РаботникиОрганизаций КАК РаботникиВнутри
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.УвольнениеИзОрганизаций.РаботникиОрганизации КАК Док
	|					ПО РаботникиВнутри.Период <= Док.ДатаУвольнения
	|						И РаботникиВнутри.Сотрудник = Док.Сотрудник
	|			ГДЕ
	|				Док.Ссылка = &ДокументСсылка
	|			
	|			СГРУППИРОВАТЬ ПО
	|				РаботникиВнутри.Сотрудник) КАК СписокДат
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
	|				ПО СписокДат.ДатаПоследнегоИзменения = РаботникиОрганизации.Период
	|					И СписокДат.Сотрудник = РаботникиОрганизации.Сотрудник) КАК Работники
	|		ПО ДокТЧ.Сотрудник = Работники.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(
	|				&ДатаДокумента,
	|				Физлицо В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						УвольнениеИзОрганизацииРаботники.Сотрудник.Физлицо
	|					ИЗ
	|						Документ.УвольнениеИзОрганизаций.РаботникиОрганизации КАК УвольнениеИзОрганизацииРаботники
	|					ГДЕ
	|						УвольнениеИзОрганизацииРаботники.Ссылка = &ДокументСсылка)) КАК ФИОСотрудника
	|		ПО ДокТЧ.Сотрудник.Физлицо = ФИОСотрудника.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Начисления.Сотрудник КАК Сотрудник,
	|			ИСТИНА КАК Флаг,
	|			Начисления.Результат КАК Результат
	|		ИЗ
	|			РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Начисления
	|		ГДЕ
	|			Начисления.ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ВыходноеПособие)) КАК Пособие
	|		ПО (Пособие.Сотрудник = ДокТЧ.Сотрудник),
	|	РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(&ДатаДокумента, ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.Руководитель)) КАК Директор
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних КАК ФИОДиректора
	|		ПО Директор.ФизическоеЛицо = ФИОДиректора.ФизЛицо
	|ГДЕ
	|	ДокТЧ.Ссылка = &ДокументСсылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросДляПечати()

// СведенияОВнешнейОбработке
//
Функция СведенияОВнешнейОбработке() Экспорт
	ПараметрыРегистрации = Новый Структура;
	МассивНазначений = Новый Массив;
	МассивНазначений.Добавить("Документ.УвольнениеИзОрганизаций");
	ПараметрыРегистрации.Вставить("Вид", "ПечатнаяФорма");
	//возможны варианты - ЗаполнениеОбъекта, ДополнительныйОтчет, СозданиеСвязанныхОбъектов,
	ПараметрыРегистрации.Вставить("Назначение", МассивНазначений);
	ПараметрыРегистрации.Вставить("Наименование", "Печатная форма приказа об увольнении (форма П4 - Гленкор)"); //имя под kt обработка зарегистрирована будет в справочнике внешних обработок
	ПараметрыРегистрации.Вставить("Версия", "1.0");
	ПараметрыРегистрации.Вставить("БезопасныйРежим", ЛОЖЬ);
	ПараметрыРегистрации.Вставить("Информация", "Печатная форма приказа об увольнении (форма П4 - Гленкор)");
	//команды
	ТаблицаКоманд = Новый ТаблицаЗначений;
	ТаблицаКоманд.Колонки.Добавить("Представление"); //как будет выглядеть описание печ.формы для пользователя
	ТаблицаКоманд.Колонки.Добавить("Идентификатор"); //имя нашего макета
	ТаблицаКоманд.Колонки.Добавить("Использование"); //ВызовСерверногоМетода
	ТаблицаКоманд.Колонки.Добавить("ПоказыватьОповещение"); //Истина
	ТаблицаКоманд.Колонки.Добавить("Модификатор"); //ПечатьМХL
	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда.Представление = "Печатная форма приказа об увольнении (форма П4 - Гленкор)";
	НоваяКоманда.Идентификатор = "ПечатьП4Гленкор"; //Внешняя печатная форма
	НоваяКоманда.Использование = "ВызовКлиентскогоМетода"; //здесь можно прописать использование как серверного так и клиентского, отличие в том, что серверный метод будет обращаться к экспортной процедуре из модуля объекта, клиентский - к экспортной процедуре из модуля формы объекта
	НоваяКоманда.ПоказыватьОповещение = Истина;
	НоваяКоманда.Модификатор = "ПечатьMXL";
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
	Возврат ПараметрыРегистрации;
КонецФункции
