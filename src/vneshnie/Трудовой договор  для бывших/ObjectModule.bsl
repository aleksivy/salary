
// Печать
//
Функция Печать() Экспорт
	
	// Для отладки
	лТест = Серна.ЕстьРеквизитДокумента("Организация", СсылкаНаОбъект.Метаданные());
	
	Объект = СсылкаНаОбъект;
	Организация = СсылкаНаОбъект.Организация;
	Дата = Дата(2018,7,2);
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ТрудовойДоговор_Гленкор";
	
	// запоминаем области макета
	Макет = ПолучитьМакет("Договор");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьИспытательныйСрок = Макет.ПолучитьОбласть("ИспытательныйСрок");
	ОбластьТелоДоговора1 = Макет.ПолучитьОбласть("ТелоДоговора1");
	ОбластьПодписи = Макет.ПолучитьОбласть("Подписи");
	
	Для каждого лСтрока Из Объект.РаботникиОрганизации Цикл
		// Каждый приказ на отдельной странице.
		Если ТабДокумент.ВысотаТаблицы > 0 Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		// Нужные параметры : 
		// Шапка : ТабельныйНомер, ДатаДоговора, ДатаДоговораАнгл, ФИО, ФИОАнгл, Должность, ДолжностьАнгл, ДатаПриема, ДатаПриемаАнгл, 
		лстрПараметрыШапка = Новый Структура;
		лТабельныйНомер = СокрЛП(лСтрока.Сотрудник.Код);
		Пока (Лев(лТабельныйНомер, 1) = "0") Цикл
			лТабельныйНомер = Прав(лТабельныйНомер, СтрДлина(лТабельныйНомер)-1);
		КонецЦикла;
		лстрПараметрыШапка.Вставить("ТабельныйНомер", лТабельныйНомер);
		лФИО = СокрЛП(лСтрока.ФизЛицо.Наименование);
		лФИОАнгл = СокрЛП(СокрЛП(лСтрока.Сотрудник.NameFamily) + " " + СокрЛП(лСтрока.Сотрудник.Name) + " " + СокрЛП(лСтрока.Сотрудник.NameSecond));
		лстрПараметрыШапка.Вставить("ФИО", лФИО);
		лстрПараметрыШапка.Вставить("ФИОАнгл", лФИОАнгл);
		лстрПараметрыШапка.Вставить("Должность", СокрЛП(Сотрудник.ТекущаяДолжностьОрганизации.Наименование));
		лстрПараметрыШапка.Вставить("ДолжностьАнгл", СокрЛП(Сотрудник.ТекущаяДолжностьОрганизации.Name));
		лстрПараметрыШапка.Вставить("ДатаДоговора", Формат(Дата, "ДЛФ=ДД"));
		лстрПараметрыШапка.Вставить("ДатаДоговораАнгл", Формат(Дата, "Л=en; ДЛФ=ДД"));
		лстрПараметрыШапка.Вставить("ДатаПриема", Формат(лСтрока.ДатаПриема, "ДЛФ=ДД"));
		лстрПараметрыШапка.Вставить("ДатаПриемаАнгл", Формат(лСтрока.ДатаПриема, "Л=en; ДЛФ=ДД"));
		
		ОбластьШапка.Параметры.Заполнить( лстрПараметрыШапка );
		Для каждого лПараметр Из лстрПараметрыШапка Цикл
			Если Не ЗначениеЗаполнено(лПараметр.Значение) Тогда
				ОбщегоНазначения.СообщитьОбОшибке("Не указан параметр - '" + лПараметр.Ключ + "' для сотрудника - " + лСтрока.Сотрудник);
			КонецЕсли;
		КонецЦикла;
		
		ТабДокумент.Вывести(ОбластьШапка);
		
		//Если лСтрока.ИспытательныйСрок > 0 Тогда
		//	// Нужные параметры : 
		//	// ИспытательныйСрок : ДатаИспытательногоСрока, ДатаИспытательногоСрокаАнгл
		//	ОбластьИспытательныйСрок.Параметры.ДатаИспытательногоСрока = Формат(ДобавитьМесяц(лСтрока.ДатаПриема, лСтрока.ИспытательныйСрок), "ДЛФ=ДД");
		//	ОбластьИспытательныйСрок.Параметры.ДатаИспытательногоСрокаАнгл = Формат(ДобавитьМесяц(лСтрока.ДатаПриема, лСтрока.ИспытательныйСрок), "Л=en; ДЛФ=ДД");
		//	ТабДокумент.Вывести(ОбластьИспытательныйСрок);
		//КонецЕсли;
		ТабДокумент.Вывести(ОбластьТелоДоговора1);
		
		// Нужные параметры : 
		// Подписи : ФИО, ФИОАнгл, ПаспортСерия, ПаспортНомер, ПаспортВыдан, ИНН, Адрес, АдресАнгл
		лстрПараметрыПодписи = Новый Структура;
		лстрПараметрыПодписи.Вставить("ФИО", лФИО);
		лстрПараметрыПодписи.Вставить("ФИОАнгл", лФИОАнгл);
		лДанныеПаспорта = РегистрыСведений.ПаспортныеДанныеФизЛиц.ПолучитьПоследнее(Дата, Новый Структура("ФизЛицо", лСтрока.ФизЛицо));
		лстрПараметрыПодписи.Вставить("ПаспортСерия", СокрЛП(лДанныеПаспорта.ДокументСерия));
		лстрПараметрыПодписи.Вставить("ПаспортНомер", СокрЛП(лДанныеПаспорта.ДокументНомер));
		лстрПараметрыПодписи.Вставить("ПаспортВыдан", СокрЛП(лДанныеПаспорта.ДокументКемВыдан) + " " + Формат(лДанныеПаспорта.ДокументДатаВыдачи, "ДЛФ=ДД"));
		лстрПараметрыПодписи.Вставить("ИНН", СокрЛП(лСтрока.ФизЛицо.КодПоДРФО));
		лЗапрос = Новый Запрос("ВЫБРАТЬ Рег.Представление ИЗ РегистрСведений.КонтактнаяИнформация КАК Рег ГДЕ Рег.Объект = &ФизЛицо И Рег.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес) И Рег.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресФизЛица)");
		лЗапрос.УстановитьПараметр("ФизЛицо", лСтрока.ФизЛицо);
		лВыборка = лЗапрос.Выполнить().Выбрать();
		Если лВыборка.Следующий() Тогда
			лстрПараметрыПодписи.Вставить("Адрес", СокрЛП(лВыборка.Представление));
		Иначе
			лстрПараметрыПодписи.Вставить("Адрес", "");
		КонецЕсли;
		лЗапрос = Новый Запрос("ВЫБРАТЬ Рег.Представление ИЗ РегистрСведений.КонтактнаяИнформация КАК Рег ГДЕ Рег.Объект = &ФизЛицо И Рег.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес) И Рег.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ИнострАдресФизЛица)");
		лЗапрос.УстановитьПараметр("ФизЛицо", лСтрока.ФизЛицо);
		лВыборка = лЗапрос.Выполнить().Выбрать();
		Если лВыборка.Следующий() Тогда
			лстрПараметрыПодписи.Вставить("АдресАнгл", СокрЛП(лВыборка.Представление));
		Иначе
			лстрПараметрыПодписи.Вставить("АдресАнгл", "");
		КонецЕсли;
		
		ОбластьПодписи.Параметры.Заполнить( лстрПараметрыПодписи );
		Для каждого лПараметр Из лстрПараметрыПодписи Цикл
			Если Не ЗначениеЗаполнено(лПараметр.Значение) Тогда
				ОбщегоНазначения.СообщитьОбОшибке("Не указан параметр - '" + лПараметр.Ключ + "' для физического лица - " + лСтрока.ФизЛицо);
			КонецЕсли;
		КонецЦикла;
		ТабДокумент.Вывести(ОбластьПодписи);
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции

// СведенияОВнешнейОбработке
//
Функция СведенияОВнешнейОбработке() Экспорт
	ПараметрыРегистрации = Новый Структура;
	МассивНазначений = Новый Массив;
	МассивНазначений.Добавить("Документ.ПриемНаРаботуВОрганизацию");
	ПараметрыРегистрации.Вставить("Вид", "ПечатнаяФорма");
	//возможны варианты - ЗаполнениеОбъекта, ДополнительныйОтчет, СозданиеСвязанныхОбъектов,
	ПараметрыРегистрации.Вставить("Назначение", МассивНазначений);
	ПараметрыРегистрации.Вставить("Наименование", "Трудовой договор (Гленкор)"); //имя под kt обработка зарегистрирована будет в справочнике внешних обработок
	ПараметрыРегистрации.Вставить("Версия", "1.0");
	ПараметрыРегистрации.Вставить("БезопасныйРежим", ЛОЖЬ);
	ПараметрыРегистрации.Вставить("Информация", "Трудовой договор (Гленкор)");
	//команды
	ТаблицаКоманд = Новый ТаблицаЗначений;
	ТаблицаКоманд.Колонки.Добавить("Представление"); //как будет выглядеть описание печ.формы для пользователя
	ТаблицаКоманд.Колонки.Добавить("Идентификатор"); //имя нашего макета
	ТаблицаКоманд.Колонки.Добавить("Использование"); //ВызовСерверногоМетода
	ТаблицаКоманд.Колонки.Добавить("ПоказыватьОповещение"); //Истина
	ТаблицаКоманд.Колонки.Добавить("Модификатор"); //ПечатьМХL
	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда.Представление = "Трудовой договор (Гленкор)";
	НоваяКоманда.Идентификатор = "ТрудовойДоговорГленкор"; //Внешняя печатная форма
	НоваяКоманда.Использование = "ВызовКлиентскогоМетода"; //здесь можно прописать использование как серверного так и клиентского, отличие в том, что серверный метод будет обращаться к экспортной процедуре из модуля объекта, клиентский - к экспортной процедуре из модуля формы объекта
	НоваяКоманда.ПоказыватьОповещение = Истина;
	НоваяКоманда.Модификатор = "ПечатьMXL";
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
	Возврат ПараметрыРегистрации;
КонецФункции
