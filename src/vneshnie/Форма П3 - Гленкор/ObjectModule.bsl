Функция Печать() Экспорт
	
	// Для отладки
	лТест = Серна.ЕстьРеквизитДокумента("Организация", СсылкаНаОбъект.Метаданные() );
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ОтпускаОрганизации_П6";
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	ОтборОрганизация = Новый Структура("Организация", СсылкаНаОбъект.Организация);
	ВестиУчетОстатковОтпусков = РегистрыСведений.УчетнаяПолитикаПоПерсоналуОрганизаций.Получить(ОтборОрганизация).ВестиУчетОстатковОтпусков;
	БезОстатков = Ложь;
	
	// получаем данные для печати
	ВыборкаДляШапки = СформироватьЗапросДляПечатиП3("ПоРеквизитамДокумента").Выбрать();
	ВыборкаДляШапки.Следующий();
	ВыборкаРаботники = СформироватьЗапросДляПечатиП3("ПоТабличнойЧастиДокумента",ВестиУчетОстатковОтпусков).Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Сотрудник");
	СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(СсылкаНаОбъект.Организация, СсылкаНаОбъект.Дата);

	// запоминаем области макета
	Макет = ПолучитьМакет("П3_от_05_12_2008");
	ОбластьМакета = Макет.ПолучитьОбласть("Форма");

	//Данная переменная указывает на то требуется ли создавать отдельную информацию, или нет
	//поскольку строки с разными видами отпуска могут идти подряд, поэтому требуется печатать их в одной печатной форме.
	Печатать = Ложь;
	ВидОтпуска = "";
	
	Пока Истина Цикл
		// Начинаем формировать выходной документ
		Пока ВыборкаРаботники.Следующий() Цикл
			РабочийПериодНачало = Дата(1,1,1);
			РабочийПериодНачало = Дата(1,1,1);
			РабочийПериодОкончание = Дата(1,1,1);
			ИспользованоДнейРабочегоПериода = 0;
			ОстатокДнейВРабочемПериоде = 0;
			ДатаНачала = Дата(1,1,1);
			ДатаОкончания = Дата(1,1,1);
			КвоДней = 0;
			
			ВыборкаВидОтпуска = ВыборкаРаботники.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"ВидОтпуска");
				
			Пока ВыборкаВидОтпуска.Следующий() Цикл
				ВыборкаДатаНачала = ВыборкаВидОтпуска.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"ДатаНачала");
				РабочийПериодНачало = Дата(1,1,1);

				Пока ВыборкаДатаНачала.Следующий() Цикл
					Выборка = ВыборкаДатаНачала.Выбрать();
					КвоДнейПоПериодам = 0;
					
					Если НЕ ЗначениеЗаполнено(РабочийПериодНачало) Тогда
						РабочийПериодНачало = ВыборкаДатаНачала.РабочийПериодНачало;
					КонецЕсли;
					ИспользованоДнейРабочегоПериода = ОстатокДнейВРабочемПериоде;
					//Если ДатаНачала = Дата(1,1,1) Тогда
						ДатаНачала = ВыборкаДатаНачала.ДатаНачала;
					//КонецЕсли;
					ДатаОкончания = ВыборкаДатаНачала.ДатаОкончания; 
					
					Если ДатаОкончания  <> Дата(1,1,1) Тогда
							Если ВыборкаДатаНачала.ДатаНачала = ДатаОкончания + 1 Тогда
								Печатать = Ложь;
								КвоДней = КвоДней + ВыборкаДатаНачала.КвоДней;
							Иначе
								Печатать = Истина;
								КвоДней = ВыборкаДатаНачала.КвоДней;
								ВидОтпуска =  ВыборкаДатаНачала.ВидОтпуска.ВидОтпускаДляФормОтчетности;
							КонецЕсли;
						Иначе
							Печатать = Ложь;
							КвоДней = КвоДней + ВыборкаДатаНачала.КвоДней;
					КонецЕсли;
					
					Если Не Печатать Тогда
						Если СтрЧислоВхождений(ВидОтпуска,ВыборкаДатаНачала.ВидОтпуска.ВидОтпускаДляФормОтчетности) = 0 Тогда
							Если ВидОтпуска  <> ""  Тогда
								ВидОтпуска =  ВидОтпуска + ", " + ВыборкаДатаНачала.ВидОтпуска.ВидОтпускаДляФормОтчетности;
							Иначе
								ВидОтпуска =  ВыборкаДатаНачала.ВидОтпуска.ВидОтпускаДляФормОтчетности;
							КонецЕсли;					
						КонецЕсли;
					КонецЕсли;
					
					Пока Выборка.Следующий() Цикл	
						Если Выборка.РабочийПериодНачало < РабочийПериодНачало Тогда
							Продолжить;
						КонецЕсли;
						
	//					КвоДней = Выборка.КвоДней;
						Если КвоДней > КвоДнейПоПериодам Тогда
							ИспользованиеДнейРабочегоПериода = ИспользованоДнейРабочегоПериода + ?(КвоДней - КвоДнейПоПериодам > Выборка.ИспользоватьДней,Выборка.ИспользоватьДней, КвоДней - КвоДнейПоПериодам)	;
							КвоДнейПоПериодам = КвоДнейПоПериодам + ИспользованиеДнейРабочегоПериода - ИспользованоДнейРабочегоПериода;
							РабочийПериодОкончание = Выборка.РабочийПериодОкончание;						
							ОстатокДнейВРабочемПериоде = Выборка.ИспользоватьДней - ИспользованиеДнейРабочегоПериода;
						Иначе
							Продолжить;
						КонецЕсли;
					КонецЦикла;
						
					// Каждый приказ на отдельной странице.
					Если ТабДокумент.ВысотаТаблицы > 0 Тогда
						ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					КонецЕсли;

					ОбластьМакета.Параметры.Заполнить(ВыборкаДляШапки);
					ОбластьМакета.Параметры.НазваниеОрганизации = СведенияОбОрганизации.ПолноеНаименование;
					ОбластьМакета.Параметры.ЕДРПОУ = УправлениеКонтактнойИнформацией.ПолучитьКодОрганизации(СведенияОбОрганизации);

					// Данные по работнику.
					ОбластьМакета.Параметры.Работник = ВыборкаДатаНачала.Работник;
					ОбластьМакета.параметры.ТабельныйНомер = ВыборкаДатаНачала.Сотрудник.Код;
					ОбластьМакета.параметры.ФИОРуководителяПодразделения = ВыборкаДатаНачала.ФИОРуководителяПодразделения;
					ОбластьМакета.Параметры.ВидОтпуска = ВидОтпуска;
					
					
					ОбластьМакета.параметры.ДатаНачалаВсего = ДатаНачала;
					ОбластьМакета.Параметры.ДатаОкончанияВсего = ДатаОкончания;


			       	ПродолжительностьВсего = ?(ЗначениеЗаполнено(ДатаНачала) И ЗначениеЗаполнено(ДатаОкончания),КвоДнейПоПериодам,0);
					ПродолжительностьВсего = ОбщегоНазначения.РазложитьЧислоВСтроку(ПродолжительностьВсего,2,Истина);
					Для Сч = 1 По 2 Цикл
						ОбластьМакета.Параметры["Продолжительность" + Сч] = Сред(Строка(ПродолжительностьВсего), Сч, 1);
					КонецЦикла;

					ОбластьМакета.Параметры.ПодразделениеРаботника = ВыборкаДатаНачала.ПодразделениеОрганизацииНаименование;
					ОбластьМакета.Параметры.Должность = ВыборкаДатаНачала.ДолжностьНаименование;
					 
					Если Печатать Тогда
						ТабДокумент.Вывести(ОбластьМакета);
						ВидОтпуска = "";
					КонецЕсли;
				КонецЦикла;
				Если НЕ Печатать Тогда //значит последняя форма не напечаталась
					ТабДокумент.Вывести(ОбластьМакета);
					ВидОтпуска = "";
				КонецЕсли;	
			КонецЦикла;
		КонецЦикла;	
		
		Если НЕ ВестиУчетОстатковОтпусков ИЛИ БезОстатков Тогда
			Прервать;
		Иначе
			БезОстатков = Истина;
			ВыборкаРаботники = СформироватьЗапросДляПечатиП3("ПоТабличнойЧастиДокумента",ВестиУчетОстатковОтпусков,БезОстатков).Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Сотрудник");
			РабочийПериодНачало = Дата(1,1,1);
			РабочийПериодОкончание = Дата(1,1,1);
			ИспользованоДнейРабочегоПериода = 0;
			ОстатокДнейВРабочемПериоде = 0;
			ДатаНачала = Дата(1,1,1);
			ДатаОкончания = Дата(1,1,1);
			КвоДней = 0;

			Печатать = Ложь;
			ВидОтпуска = "";
		КонецЕсли;	
		
	КонецЦикла;	
		
	Возврат ТабДокумент;

КонецФункции

Функция СведенияОВнешнейОбработке() Экспорт
	ПараметрыРегистрации = Новый Структура;
	МассивНазначений = Новый Массив;
	МассивНазначений.Добавить("Документ.ОтпускаОрганизаций");
	ПараметрыРегистрации.Вставить("Вид", "ПечатнаяФорма");
	//возможны варианты - ЗаполнениеОбъекта, ДополнительныйОтчет, СозданиеСвязанныхОбъектов,
	ПараметрыРегистрации.Вставить("Назначение", МассивНазначений);
	ПараметрыРегистрации.Вставить("Наименование", "Печатная форма П3"); //имя под kt обработка зарегистрирована будет в справочнике внешних обработок
	ПараметрыРегистрации.Вставить("Версия", "1.0");
	ПараметрыРегистрации.Вставить("БезопасныйРежим", ЛОЖЬ);
	ПараметрыРегистрации.Вставить("Информация", "Печатная форма П3");
	//команды
	ТаблицаКоманд = Новый ТаблицаЗначений;
	ТаблицаКоманд.Колонки.Добавить("Представление"); //как будет выглядеть описание печ.формы для пользователя
	ТаблицаКоманд.Колонки.Добавить("Идентификатор"); //имя нашего макета
	ТаблицаКоманд.Колонки.Добавить("Использование"); //ВызовСерверногоМетода
	ТаблицаКоманд.Колонки.Добавить("ПоказыватьОповещение"); //Истина
	ТаблицаКоманд.Колонки.Добавить("Модификатор"); //ПечатьМХL
	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда.Представление = "Печатная форма П3";
	НоваяКоманда.Идентификатор = "ПечатнаяФормаП3_от_05_12_2008"; //Внешняя печатная форма
	НоваяКоманда.Использование = "ВызовКлиентскогоМетода"; //здесь можно прописать использование как серверного так и клиентского, отличие в том, что серверный метод будет обращаться к экспортной процедуре из модуля объекта, клиентский - к экспортной процедуре из модуля формы объекта
	НоваяКоманда.ПоказыватьОповещение = Истина;
	НоваяКоманда.Модификатор = "ПечатьMXL";
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
	Возврат ПараметрыРегистрации;
КонецФункции

// Формирует запрос по документу и связанным регистрам сведений
//
// Параметры: 
//  Режим - строка, может принимать значения:
//			"ПоРеквизитамДокумента"
//			"ПоТабличнойЧастиДокумента"
//
// Возвращаемое значение:
//  Результат запроса с данными об организации или о работниках из табличной части
//
Функция СформироватьЗапросДляПечатиП3(Режим,ВестиУчетОстатковОтпусков = Ложь,БезОстатков = Ложь)

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект.Ссылка);
	Запрос.УстановитьПараметр("Руководитель",	 Перечисления.ОтветственныеЛицаОрганизаций.Руководитель);
	Запрос.УстановитьПараметр("ДатаДокумента",	 СсылкаНаОбъект.Дата);
	Запрос.УстановитьПараметр("ЕжегодныйОтпуск", Перечисления.ПричиныОтсутствияНаРаботеВОрганизации.ОтпускЕжегодный);
	Запрос.УстановитьПараметр("ПустаяДата",		 '00010101');
	Запрос.УстановитьПараметр("ПустойОтпуск",	 ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПустаяСсылка());

	Если Режим = "ПоРеквизитамДокумента" Тогда

		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ОтпускаОрганизаций.Дата КАК ДатаДок,
		|	ОтпускаОрганизаций.Номер КАК НомерДок,
		|	ОтпускаОрганизаций.Организация.НаименованиеПолное КАК НазваниеОрганизации,
		|	ОтветственныеЛицаОрганизацийСрезПоследних.Должность.Представление КАК ДолжностьРуководителя,
		|	ЕСТЬNULL(ФИОФизЛицСрезПоследних.Фамилия + ВЫБОР
		|			КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Имя, 1, 1) <> """"
		|				ТОГДА "" "" + ПОДСТРОКА(ФИОФизЛицСрезПоследних.Имя, 1, 1) + "".""
		|			ИНАЧЕ """"
		|		КОНЕЦ + ВЫБОР
		|			КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Отчество, 1, 1) <> """"
		|				ТОГДА "" "" + ПОДСТРОКА(ФИОФизЛицСрезПоследних.Отчество, 1, 1) + "".""
		|			ИНАЧЕ """"
		|		КОНЕЦ, ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо.Наименование) КАК ФИОРуководителя,
		|	ОтветственныеЛицаОрганизацийСрезПоследних.ОтветственноеЛицо
		|ИЗ
		|	Документ.ОтпускаОрганизаций КАК ОтпускаОрганизаций
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(&ДатаДокумента, ОтветственноеЛицо = &Руководитель) КАК ОтветственныеЛицаОрганизацийСрезПоследних
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаДокумента, ) КАК ФИОФизЛицСрезПоследних
		|			ПО ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо = ФИОФизЛицСрезПоследних.ФизЛицо
		|		ПО ОтпускаОрганизаций.Организация = ОтветственныеЛицаОрганизацийСрезПоследних.СтруктурнаяЕдиница
		|
		|ГДЕ
		|	ОтпускаОрганизаций.Ссылка = &ТекущийДокумент";

	ИначеЕсли Режим = "ПоТабличнойЧастиДокумента" Тогда

		Если ВестиУчетОстатковОтпусков И НЕ БезОстатков Тогда
		
			Запрос.УстановитьПараметр("ГоловнаяОрганизация", ОбщегоНазначения.ГоловнаяОрганизация(СсылкаНаОбъект.Организация));
			Запрос.УстановитьПараметр("Праздник", Перечисления.ВидыДнейПроизводственногоКалендаря.Праздник);
			
			Запрос.Текст ="
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ИспользованиеЕжегодногоОтпуска.Сотрудник,
			|	ИспользованиеЕжегодногоОтпуска.ВидОтпуска,
			|	ИспользованиеЕжегодногоОтпуска.РабочийПериодНачало,
			|	ИспользованиеЕжегодногоОтпуска.РабочийПериодОкончание,
			|	РаботникиОрганизации.ДатаНачала,
			|	РаботникиОрганизации.ДатаОкончания,
			|	РаботникиОрганизации.КвоДней,
			|	ИспользованиеЕжегодногоОтпуска.ИспользоватьДней,
			|	ДанныеОРаботникахОрганизации.ПодразделениеОрганизацииНаименование,
			|	ДанныеОРаботникахОрганизации.ДолжностьНаименование,
			|	ЕСТЬNULL(ФИОФизЛиц.Фамилия + "" "" + ФИОФизЛиц.Имя + "" "" + ФИОФизЛиц.Отчество, РаботникиОрганизации.Сотрудник.Наименование) КАК Работник,
			|	Руководители.ФИОПолное КАК ФИОРуководителяПодразделения
			|ИЗ
			|	Документ.ОтпускаОрганизаций.ИспользованиеЕжегодногоОтпуска	 КАК ИспользованиеЕжегодногоОтпуска		
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|	Документ.ОтпускаОрганизаций.РаботникиОрганизации КАК РаботникиОрганизации
			|ПО
			|	РаботникиОрганизации.Ссылка = ИспользованиеЕжегодногоОтпуска.Ссылка
			|	И РаботникиОрганизации.Сотрудник = ИспользованиеЕжегодногоОтпуска.Сотрудник
			|	И РаботникиОрганизации.ВидОтпуска = ИспользованиеЕжегодногоОтпуска.ВидОтпуска
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|	(ВЫБРАТЬ
			|			СписокДат.Сотрудник КАК Сотрудник,
			|			РаботникиОрганизации.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
			|			РаботникиОрганизации.ПодразделениеОрганизации.Наименование КАК ПодразделениеОрганизацииНаименование,
			|			РаботникиОрганизации.Должность.Наименование КАК ДолжностьНаименование,
			|			СписокДат.НомерСтроки КАК НомерСтроки
			|		ИЗ
			|			(ВЫБРАТЬ
			|				РаботникиВнутри.Сотрудник КАК Сотрудник,
			|				МАКСИМУМ(РаботникиВнутри.Период) КАК ДатаПоследнегоИзменения,
			|				ОтпускаОрганизаций.НомерСтроки КАК НомерСтроки
			|			ИЗ
			|				РегистрСведений.РаботникиОрганизаций КАК РаботникиВнутри
			|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтпускаОрганизаций.РаботникиОрганизации КАК ОтпускаОрганизаций
			|					ПО РаботникиВнутри.Период < ОтпускаОрганизаций.ДатаНачала
			|						И РаботникиВнутри.Сотрудник = ОтпускаОрганизаций.Сотрудник
			|			ГДЕ
			|				ОтпускаОрганизаций.Ссылка = &ТекущийДокумент
			|			
			|			СГРУППИРОВАТЬ ПО
			|				ОтпускаОрганизаций.НомерСтроки,
			|				РаботникиВнутри.Сотрудник) КАК СписокДат
			|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
			|				ПО СписокДат.ДатаПоследнегоИзменения = РаботникиОрганизации.Период
			|					И СписокДат.Сотрудник = РаботникиОрганизации.Сотрудник
			|) КАК ДанныеОРаботникахОрганизации
			|ПО РаботникиОрганизации.НомерСтроки = ДанныеОРаботникахОрганизации.НомерСтроки		
			
			|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(
			|		&ДатаДокумента,
			|		ФизЛицо В
			|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
			|				ОтпускаОрганизацииРаботники.Сотрудник.Физлицо
			|			ИЗ
			|				Документ.ОтпускаОрганизаций.РаботникиОрганизации КАК ОтпускаОрганизацииРаботники
			|			ГДЕ
			|				ОтпускаОрганизацииРаботники.Ссылка = &ТекущийДокумент)) КАК ФИОФизЛиц
			|ПО РаботникиОрганизации.Сотрудник.Физлицо = ФИОФизЛиц.ФизЛицо
			|		ЛЕВОЕ СОЕДИНЕНИЕ
			|       (ВЫБРАТЬ
			|			ОтветственныеЛицаОрганизацийСрезПоследних.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
			|			ОтветственныеЛицаОрганизацийСрезПоследних.ОтветственноеЛицо,
			|			ОтветственныеЛицаОрганизацийСрезПоследних.Должность.Наименование КАК Должность,
			|			ЕСТЬNULL(ФИОФизЛицСрезПоследних.Фамилия + ВЫБОР
			|			КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Имя, 1, 1) <> """"
			|				ТОГДА "" "" + ПОДСТРОКА(ФИОФизЛицСрезПоследних.Имя, 1, 1) + "".""
			|			ИНАЧЕ """"
			|			КОНЕЦ + ВЫБОР
			|			КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Отчество, 1, 1) <> """"
			|				ТОГДА "" "" + ПОДСТРОКА(ФИОФизЛицСрезПоследних.Отчество, 1, 1) + "".""
			|			ИНАЧЕ """"
			|			КОНЕЦ, ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо.Наименование) КАК ФИОПолное
			|		ИЗ
			|			РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(&ДатаДокумента, ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.Руководитель)) КАК ОтветственныеЛицаОрганизацийСрезПоследних
			|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаДокумента, ) КАК ФИОФизЛицСрезПоследних
			|				ПО ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо = ФИОФизЛицСрезПоследних.ФизЛицо)КАК Руководители
			|       ПО Руководители.СтруктурнаяЕдиница = ДанныеОРаботникахОрганизации.ПодразделениеОрганизации
			|	
			|ГДЕ
			|	РаботникиОрганизации.Ссылка = &ТекущийДокумент
			|ИТОГИ МАКСИМУМ(ДатаОкончания), МИНИМУМ(РабочийПериодНачало), МАКСИМУМ(КвоДней),
			|	МАКСИМУМ(ПодразделениеОрганизацииНаименование), МАКСИМУМ(ДолжностьНаименование),
			|	МАКСИМУМ(ФИОРуководителяПодразделения), МАКСИМУМ(Работник)
			|ПО
			|	ИспользованиеЕжегодногоОтпуска.Сотрудник,
			|	ИспользованиеЕжегодногоОтпуска.ВидОтпуска,
			|	РаботникиОрганизации.ДатаНачала
			|";
		Иначе  //Не ведется учет остатков отпусков
			
			Запрос.Текст ="
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	РаботникиОрганизации.Сотрудник				КАК Сотрудник,
			|	РаботникиОрганизации.ВидОтпуска				КАК ВидОтпуска,
			|	РаботникиОрганизации.РабочийГодС			КАК РабочийПериодНачало,
			|	РаботникиОрганизации.РабочийГодПо			КАК РабочийПериодОкончание,
			|	РаботникиОрганизации.ДатаНачала				КАК ДатаНачала,
			|	РаботникиОрганизации.ДатаОкончания			КАК ДатаОкончания,
			|	РаботникиОрганизации.КвоДней				КАК КвоДней,
			|	РаботникиОрганизации.КвоДней				КАК ИспользоватьДней,
			|	ДанныеОРаботникахОрганизации.ПодразделениеОрганизацииНаименование,
			|	ДанныеОРаботникахОрганизации.ДолжностьНаименование,
			|	ЕСТЬNULL(ФИОФизЛиц.Фамилия + "" "" + ФИОФизЛиц.Имя + "" "" + ФИОФизЛиц.Отчество, РаботникиОрганизации.Сотрудник.Наименование) КАК Работник,
			|	Руководители.ФИОПолное КАК ФИОРуководителяПодразделения
			|ИЗ
			|	Документ.ОтпускаОрганизаций.РаботникиОрганизации КАК РаботникиОрганизации
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|	(ВЫБРАТЬ
			|			СписокДат.Сотрудник КАК Сотрудник,
			|			РаботникиОрганизации.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
			|			РаботникиОрганизации.ПодразделениеОрганизации.Наименование КАК ПодразделениеОрганизацииНаименование,
			|			РаботникиОрганизации.Должность.Наименование КАК ДолжностьНаименование,
			|			СписокДат.НомерСтроки КАК НомерСтроки
			|		ИЗ
			|			(ВЫБРАТЬ
			|				РаботникиВнутри.Сотрудник КАК Сотрудник,
			|				МАКСИМУМ(РаботникиВнутри.Период) КАК ДатаПоследнегоИзменения,
			|				ОтпускаОрганизаций.НомерСтроки КАК НомерСтроки
			|			ИЗ
			|				РегистрСведений.РаботникиОрганизаций КАК РаботникиВнутри
			|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтпускаОрганизаций.РаботникиОрганизации КАК ОтпускаОрганизаций
			|					ПО РаботникиВнутри.Период < ОтпускаОрганизаций.ДатаНачала
			|						И РаботникиВнутри.Сотрудник = ОтпускаОрганизаций.Сотрудник
			|			ГДЕ
			|				ОтпускаОрганизаций.Ссылка = &ТекущийДокумент
			|			
			|			СГРУППИРОВАТЬ ПО
			|				ОтпускаОрганизаций.НомерСтроки,
			|				РаботникиВнутри.Сотрудник) КАК СписокДат
			|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
			|				ПО СписокДат.ДатаПоследнегоИзменения = РаботникиОрганизации.Период
			|					И СписокДат.Сотрудник = РаботникиОрганизации.Сотрудник
			|) КАК ДанныеОРаботникахОрганизации
			|ПО РаботникиОрганизации.НомерСтроки = ДанныеОРаботникахОрганизации.НомерСтроки		
			|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(
			|		&ДатаДокумента,
			|		ФизЛицо В
			|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
			|				ОтпускаОрганизацииРаботники.Сотрудник.Физлицо
			|			ИЗ
			|				Документ.ОтпускаОрганизаций.РаботникиОрганизации КАК ОтпускаОрганизацииРаботники
			|			ГДЕ
			|				ОтпускаОрганизацииРаботники.Ссылка = &ТекущийДокумент)) КАК ФИОФизЛиц
			|ПО РаботникиОрганизации.Сотрудник.Физлицо = ФИОФизЛиц.ФизЛицо
			|		ЛЕВОЕ СОЕДИНЕНИЕ
			|       (ВЫБРАТЬ
			|			ОтветственныеЛицаОрганизацийСрезПоследних.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
			|			ОтветственныеЛицаОрганизацийСрезПоследних.ОтветственноеЛицо,
			|			ОтветственныеЛицаОрганизацийСрезПоследних.Должность.Наименование КАК Должность,
			|			ЕСТЬNULL(ФИОФизЛицСрезПоследних.Фамилия + ВЫБОР
			|			КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Имя, 1, 1) <> """"
			|				ТОГДА "" "" + ПОДСТРОКА(ФИОФизЛицСрезПоследних.Имя, 1, 1) + "".""
			|			ИНАЧЕ """"
			|			КОНЕЦ + ВЫБОР
			|			КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Отчество, 1, 1) <> """"
			|				ТОГДА "" "" + ПОДСТРОКА(ФИОФизЛицСрезПоследних.Отчество, 1, 1) + "".""
			|			ИНАЧЕ """"
			|			КОНЕЦ, ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо.Наименование) КАК ФИОПолное
			|		ИЗ
			|			РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(&ДатаДокумента, ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.Руководитель)) КАК ОтветственныеЛицаОрганизацийСрезПоследних
			|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаДокумента, ) КАК ФИОФизЛицСрезПоследних
			|				ПО ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо = ФИОФизЛицСрезПоследних.ФизЛицо)КАК Руководители
			|       ПО Руководители.СтруктурнаяЕдиница = ДанныеОРаботникахОрганизации.ПодразделениеОрганизации
			|	
			|ГДЕ
			|	РаботникиОрганизации.Ссылка = &ТекущийДокумент
			|"+?(БезОстатков,"	И НЕ РаботникиОрганизации.ВидОтпуска.ВедетсяУчетОстатков","")+"
			|ИТОГИ МАКСИМУМ(ДатаОкончания), МИНИМУМ(РабочийПериодНачало), МАКСИМУМ(КвоДней),
			|	МАКСИМУМ(ПодразделениеОрганизацииНаименование), МАКСИМУМ(ДолжностьНаименование),
			|	МАКСИМУМ(ФИОРуководителяПодразделения), МАКСИМУМ(Работник)
			|ПО
			|	РаботникиОрганизации.Сотрудник,
			|	РаботникиОрганизации.ВидОтпуска,
			|	РаботникиОрганизации.ДатаНачала
			|";

			
			
		КонецЕсли;
	Иначе
		Возврат Неопределено
	КонецЕсли;
	
	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросДляПечати()
