Перем мДокументОбъект Экспорт;

Функция РассчитатьРасчетСреднего( Сотрудник ) Экспорт
	
	// очистить расчитываемые поля в ТЧ РасчетСреднего
	Для каждого ТекущаяСтрока Из мДокументОбъект.РасчетСреднего Цикл
		
		Если ТекущаяСтрока.Авторасчет Тогда
			ТекущаяСтрока.Результат = 0;
			ТекущаяСтрока.РезультатПолный = 0;
			
			ТекущаяСтрока.ОтработаноДней = 0;
			ТекущаяСтрока.ОтработаноЧасов = 0;
			ТекущаяСтрока.КалендарныеДни = 0;
			ТекущаяСтрока.НормаДней = 0;
			ТекущаяСтрока.НормаЧасов = 0;
		КонецЕсли;
		
	КонецЦикла;
	мДокументОбъект.Записать( РежимЗаписиДокумента.Запись );
	
	// 1. Если расчет по Окладу
	//
	Если  мДокументОбъект.РасчетСреднего.Количество() > 0 И мДокументОбъект.РасчетСреднего[0].ВидРасчета = ПланыВидовРасчета.СреднийЗаработок.ПоОкладу Тогда
		
		ПараметрыОклада = ПроведениеРасчетов.ПолучитьПараметыОклада(мДокументОбъект.ПериодРасчетаСреднегоКонец, Сотрудник);
		мДокументОбъект.РасчетСреднего[0].Результат			= ПараметрыОклада["Оклад"];
		мДокументОбъект.РасчетСреднего[0].ОтработаноДней	= ПараметрыОклада["НормаДней"];
		мДокументОбъект.РасчетСреднего[0].ОтработаноЧасов	= ПараметрыОклада["НормаЧасов"];
		мДокументОбъект.РасчетСреднего[0].КалендарныеДни	= ПараметрыОклада["КалендарныеДни"];
		
		РасчитатьСреднюю( Сотрудник );
		мДокументОбъект.Записать( РежимЗаписиДокумента.Запись );
		Возврат Истина;
		
	КонецЕсли;
	
	// 2. Стандартный расчет
    //
	НачатьТранзакцию();
	мДокументОбъект.Прочитать();
	ВыборкаПоСредним = мДокументОбъект.СформироватьЗапросПоРасчетСреднего().Выбрать();
	ЗафиксироватьТранзакцию();
	
	// Создадим рабочие наборы записей
	Отказ = Ложь;
	НаборСредних = РегистрыРасчета.РасчетСреднегоЗаработка.СоздатьНаборЗаписей();
	НаборСредних.Отбор.Регистратор.Значение = мДокументОбъект.Ссылка;
	Пока ВыборкаПоСредним.Следующий() Цикл
		
		мДокументОбъект.ПроверитьЗаполнениеСтрокиРасчетСреднего(ВыборкаПоСредним, Отказ);
		Если НЕ Отказ Тогда
			// Заполним записи в наборах записей регистров
			мДокументОбъект.ДобавитьСтрокуРасчетаСреднего(ВыборкаПоСредним, НаборСредних);
		КонецЕсли;
		
	КонецЦикла;
	НаборСредних.Записать();
	
	Если Отказ Тогда
		
		// Если есть какие-то проблемы - удаляем движения (тут нет транзакции) 
		// Удаляем движения
		НаборСредних.Очистить();
		НаборСредних.Записать();
		
		Возврат Не Отказ;
		
	КонецЕсли;
	
	ОсновнойВидРасчета = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуДляОтпуска;
	тКоэффициентПовышенияОкладов = мДокументОбъект.КоэффициентПовышенияОкладов;
	
	Выборка = ПроведениеРасчетов.РассчитатьСреднююПорядок100(мДокументОбъект.Ссылка, Ложь).Выбрать();  
	
	Пока Выборка.Следующий() Цикл
		
		СтрокаТабличнойЧасти = мДокументОбъект.РасчетСреднего.Получить( Выборка.НомерСтроки - 1 );
		
		Если НЕ СтрокаТабличнойЧасти.Авторасчет Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаТабличнойЧасти.Результат				= Окр(Выборка.Результат,2) * тКоэффициентПовышенияОкладов;
		СтрокаТабличнойЧасти.РезультатПолный		= Выборка.РезультатПолный;
		
		СтрокаТабличнойЧасти.ОтработаноДней			= Выборка.ОтработаноДней;
		СтрокаТабличнойЧасти.ОтработаноЧасов		= Выборка.ОтработаноЧасов;
		СтрокаТабличнойЧасти.КалендарныеДни		    = Выборка.КалендарныеДни;
		СтрокаТабличнойЧасти.НормаДней				= Выборка.НормаДней;
		СтрокаТабличнойЧасти.НормаЧасов				= Выборка.НормаЧасов;
		
		Если Выборка.ВидРасчета = ОсновнойВидРасчета Тогда
			тКоэффициентПовышенияОкладов = тКоэффициентПовышенияОкладов * Выборка.КоэффициентПовышенияОкладов;
		КонецЕсли;
	КонецЦикла;
	НаборСредних.Очистить();
	НаборСредних.Записать();
	
	РасчитатьСреднюю( Сотрудник );
	
КонецФункции  // РассчитатьРасчетСреднего()

Функция СоздатьСтрокуРасчетСреднего( ВидРасч, Коэффициент, БазовыйПериодНачало, БазовыйПериодКонец) 
	
	// строку втавляем на первую позицию, потому что коэффициент считали в обратном порядке
	СтрокаТабличнойЧасти =  мДокументОбъект.РасчетСреднего.Вставить(0);
	
	СтрокаТабличнойЧасти.Авторасчет 			= Истина;
	СтрокаТабличнойЧасти.ВидРасчета 			= ВидРасч;
	СтрокаТабличнойЧасти.БазовыйПериодНачало 	= БазовыйПериодНачало;
	СтрокаТабличнойЧасти.БазовыйПериодКонец 	= БазовыйПериодКонец;
	СтрокаТабличнойЧасти.КоэффициентПовышенияОкладов = Коэффициент;
	
КонецФункции  // СоздатьСтрокуРасчетСреднего()

Функция АвтозаполнениеРасчетСреднего() Экспорт
	Перем ДатаОкончанияСобытия;
	
	//	1. Проверка если данных для расчета средней ещ нет (человек мало проработал, начисляем по окладу)
	//
	Если  НачалоДня(ДобавитьМесяц(мДокументОбъект.ПериодРасчетаСреднегоНачало,1)-1) > мДокументОбъект.ПериодРасчетаСреднегоКонец Тогда
		
		// проработал меньше целого месяца
		// если есть за что платить, пользователю прийдется заполнить эти суммы вручную
		//
		мДокументОбъект.СоздатьСтрокуРасчетСреднего( ПланыВидовРасчета.СреднийЗаработок.ПоОкладу, 1, НачалоМесяца(мДокументОбъект.ПериодРасчетаСреднегоНачало), КонецМесяца(мДокументОбъект.ПериодРасчетаСреднегоНачало));
	
		Возврат Истина;
	КонецЕсли;
	
	// 2. Данные для расчета есть - рассчитываем
	//
	
	// Сначала определим коэффициент увеличения окладща 
	// если он вдруг поменялся за время пока за человеком 
	// сохранялась средняя ЗП
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр( "парамСотрудник",	мДокументОбъект.Сотрудник );
	Запрос.УстановитьПараметр( "парамНачало",		КонецДня(мДокументОбъект.ПериодРасчетаСреднегоКонец) + 1 );
	Запрос.УстановитьПараметр( "парамКонец",		мДокументОбъект.ДатаУвольнения );
	
	ТекстЗапроса = " 
	|ВЫБРАТЬ
	|	КоэффициентПовышения.Период,
	|	КоэффициентПовышения.Коэффициент
	|ИЗ РегистрСведений.КоэффициентыПовышенияОкладов КАК	КоэффициентПовышения		
	|ГДЕ	КоэффициентПовышения.Сотрудник	= &парамСотрудник
	|	И	КоэффициентПовышения.Период >= &парамНачало
	|	И	КоэффициентПовышения.Период <= &парамКонец
	|";
	Запрос.Текст = ТекстЗапроса;
	Выборка = Запрос.Выполнить().Выбрать();
	Коэф = 1;
	Пока Выборка.Следующий() Цикл
		Коэф = Коэф * Выборка.Коэффициент;
	КонецЦикла;
	КоэффициентПовышенияОкладов = Коэф;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр( "парамСотрудник",	мДокументОбъект.Сотрудник );
	Запрос.УстановитьПараметр( "парамНачало",		мДокументОбъект.ПериодРасчетаСреднегоНачало );
	Запрос.УстановитьПараметр( "парамКонец",		мДокументОбъект.ПериодРасчетаСреднегоКонец );
	
	//	ВТВремя
	Если Истина Тогда
		//	Описание:
		// 		таблица периодов для расчета средней
		//		
		Начало = мДокументОбъект.ПериодРасчетаСреднегоНачало;
		Конец = мДокументОбъект.ПериодРасчетаСреднегоКонец;
		Запрос.УстановитьПараметр( "парамНачало1", Начало );
		Запрос.УстановитьПараметр( "парамКонец1", Мин( КонецМесяца(Начало), Конец ) );
		ТекстЗапросаВТ = " 
		|	ВЫБРАТЬ
		|		&парамНачало1	КАК БазовыйПериодНачало,
		|		&парамКонец1	КАК БазовыйПериодКонец
		|ПОМЕСТИТЬ ВТВремя	
		|";
		
		Начало = ДобавитьМесяц(НачалоМесяца(Начало),1);
		Инд = 2;
		Пока Начало <= Конец Цикл
			
			Запрос.УстановитьПараметр( "парамНачало"+Инд    , Начало );
			Запрос.УстановитьПараметр( "парамКонец"+Инд    , Мин( КонецМесяца(Начало), Конец ) );
			ТекстЗапросаВТ = ТекстЗапросаВТ + " 
			|	ОБЪЕДИНИТЬ	  
			|	ВЫБРАТЬ
			|		&парамНачало"+Инд+"	КАК БазовыйПериодНачало,
			|		&парамКонец"+Инд+"	КАК БазовыйПериодКонец
			|";	  
			Инд = Инд + 1;
			Начало = ДобавитьМесяц(НачалоМесяца(Начало),1);
			
		КонецЦикла;
		
		Запрос.Текст = ТекстЗапросаВТ;
		Запрос.Выполнить();
		ТекстЗапросаВТВремя = "ВТВремя";
	КонецЕсли;
	
	//	ВТКоэффициент
	Если Истина Тогда
		//	Описание:
		// 		таблица с коффициентами для оклада и периодами (нижняя граница)
		//		
		ТекстЗапросаВТ = " 
		|	ВЫБРАТЬ
		|		КоэффициентПовышения.Период			КАК ПериодНачало,
		|		КоэффициентПовышения.Коэффициент	КАК Коэффициент,
		|		МИНИМУМ(
		|			ВЫБОР	КОГДА КоэффициентПовышения1.Период ЕСТЬ NULL 
		|						ТОГДА &парамКонец 	
		|					ИНАЧЕ ДОБАВИТЬКДАТЕ(КоэффициентПовышения1.Период,СЕКУНДА,-1) 
		|			КОНЕЦ ) КАК ПериодКонец
		|ПОМЕСТИТЬ ВТКоэффициент	
		|	ИЗ (
		|			ВЫБРАТЬ
		|				&парамНачало	КАК Период,
		|				1				КАК Коэффициент
		|	
		|	    	ОБЪЕДИНИТЬ 
		|			ВЫБРАТЬ
		|				КоэффициентПовышения.Период,
		|				КоэффициентПовышения.Коэффициент
		|			ИЗ РегистрСведений.КоэффициентыПовышенияОкладов КАК	КоэффициентПовышения		
		|			ГДЕ		КоэффициентПовышения.Сотрудник	= &парамСотрудник
		|				И	КоэффициентПовышения.Период > &парамНачало
		|	)КАК КоэффициентПовышения
		|	
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ  РегистрСведений.КоэффициентыПовышенияОкладов 	КАК КоэффициентПовышения1
		|	ПО		КоэффициентПовышения1.Сотрудник	= &парамСотрудник
		|		И	КоэффициентПовышения1.Период > КоэффициентПовышения.Период
		|	
		|	СГРУППИРОВАТЬ ПО
		|		КоэффициентПовышения.Период,
		|		КоэффициентПовышения.Коэффициент
		|";
		Запрос.Текст = ТекстЗапросаВТ;
		Запрос.Выполнить();
		ТекстЗапросаВТКоэффициент = "ВТКоэффициент";
	КонецЕсли;

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА КоэффициентПериоды.ПериодНачало >= ВсеПериоды.БазовыйПериодНачало И КоэффициентПериоды.ПериодНачало <= ВсеПериоды.БазовыйПериодКонец ТОГДА КоэффициентПериоды.Коэффициент ИНАЧЕ 1 КОНЕЦ	КАК Коэффициент,
	|	ВЫБОР КОГДА КоэффициентПериоды.ПериодНачало <= ВсеПериоды.БазовыйПериодНачало ТОГДА ВсеПериоды.БазовыйПериодНачало ИНАЧЕ КоэффициентПериоды.ПериодНачало КОНЕЦ	КАК БазовыйПериодНачало,
	|	ВЫБОР КОГДА КоэффициентПериоды.ПериодКонец <= ВсеПериоды.БазовыйПериодКонец ТОГДА КоэффициентПериоды.ПериодКонец ИНАЧЕ ВсеПериоды.БазовыйПериодКонец КОНЕЦ	КАК БазовыйПериодКонец
	|ИЗ ВТВремя КАК ВсеПериоды
	|	
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТКоэффициент КАК КоэффициентПериоды
	|ПО		ВсеПериоды.БазовыйПериодНачало <= КоэффициентПериоды.ПериодКонец
	|И		КоэффициентПериоды.ПериодНачало <= ВсеПериоды.БазовыйПериодКонец	
	|	
	|УПОРЯДОЧИТЬ ПО
	|	ВЫБОР	КОГДА КоэффициентПериоды.ПериодНачало <= ВсеПериоды.БазовыйПериодНачало 
	|				ТОГДА ВсеПериоды.БазовыйПериодНачало
	|			ИНАЧЕ КоэффициентПериоды.ПериодНачало КОНЕЦ УБЫВ
	|";			
	Запрос.Текст = ТекстЗапроса;
	
	мЕстьПремии = РегистрыСведений.ПараметрыРасчетаЗарплатыОрганизаций.Получить(Новый Структура ("Организация", мДокументОбъект.Организация)).ЕстьПремии;
	мЕстьГодоваяПремия = РегистрыСведений.ПараметрыРасчетаЗарплатыОрганизаций.Получить(Новый Структура ("Организация", мДокументОбъект.Организация)).ЕстьГодоваяПремия;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СоздатьСтрокуРасчетСреднего(ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуДляОтпуска, Выборка.Коэффициент, Выборка.БазовыйПериодНачало, Выборка.БазовыйПериодКонец);
		Если мЕстьПремии  Тогда
			СоздатьСтрокуРасчетСреднего(ПланыВидовРасчета.СреднийЗаработок.ПоПремиямОтпуска, 0, Выборка.БазовыйПериодНачало, Выборка.БазовыйПериодКонец);
			СоздатьСтрокуРасчетСреднего(ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямОтпуска, 0, Выборка.БазовыйПериодНачало, Выборка.БазовыйПериодКонец);
		КонецЕсли;
		Если мЕстьГодоваяПремия Тогда
			СоздатьСтрокуРасчетСреднего(ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремии, 0, Выборка.БазовыйПериодНачало, Выборка.БазовыйПериодКонец);
		КонецЕсли;
		
	КонецЦикла;
	
КонецФункции  // АвтозаполнениеРасчетСреднего()

Процедура ПолучитьПериодПоРаботнику( Сотрудник )
	Перем ДатаОкончанияСобытия, ДатаПриемаПервыйРабочийДень;
	
	// -1- работает дольше 12-и месяцев
	// -2- работает меньше 12 месяцев, но дольше 1-го месяца
	// -3- работает меньше целого месяца, но в отпуск не в первый рабочий день - заполняеи реальный период с даты приема
	// -4- в отпуск в первый рабочий день, нет начисленной зарплаты
	ДатаУвольнения = КонецМесяца(Дата) + 1;
	
	ДатаНачалаСобытия = ДатаУвольнения;
	ДатаПриема = ПолучитьДанныеОПриеме(Сотрудник, ДатаПриемаПервыйРабочийДень);
	
	Если Не ЗначениеЗаполнено(ДатаПриема) Тогда
		Возврат;
	КонецЕсли;

	НеПроработалЦелогоМесяца = Ложь;
	
	Если ДобавитьМесяц(НачалоМесяца(ДатаНачалаСобытия), -12)>= ДатаПриема Тогда
		// -1- работает дольше 12-и месяцев
		НачалоПериода	= ДобавитьМесяц(НачалоМесяца(ДатаНачалаСобытия), -12);
		КонецПериода	= НачалоДня(НачалоМесяца(ДатаНачалаСобытия)-1);
		
	ИначеЕсли КонецМесяца(ДобавитьМесяц(ДатаНачалаСобытия, -1)) >= ДатаПриема Тогда
		//-2-3-
		Если ДатаПриемаПервыйРабочийДень Тогда
			// -2- работает меньше 12 месяцев, но дольше 1-го месяца
			// если дата приема первый рабочий день месяца, то месяц считаем целым
			НачалоПериода	= ДатаПриема;	
			КонецПериода	= НачалоДня(НачалоМесяца(ДатаНачалаСобытия)-1);
		ИначеЕсли ДобавитьМесяц(НачалоМесяца(ДатаНачалаСобытия), -1) > ДатаПриема Тогда
			// -2- работает меньше 12 месяцев, но дольше 1-го месяца
			// если дата приема не первый рабочий день месяца, но есть целые отработанные месяцы
			НачалоПериода	= ДобавитьМесяц(НачалоМесяца(ДатаПриема),1);
			КонецПериода	= НачалоДня(НачалоМесяца(ДатаНачалаСобытия)-1);
		Иначе
			// -3- работает меньше целого месяца, но в отпуск не в первый рабочий день 
			//    - заполняеи реальный период с даты приема
			НачалоПериода	= ДатаПриема;	
			КонецПериода	= НачалоДня(ДатаНачалаСобытия-1);
			НеПроработалЦелогоМесяца = Истина;
		КонецЕсли;
		
	ИначеЕсли ДатаНачалаСобытия = ДатаПриема Тогда
		// -4- в отпуск в первый рабочий день, нет начисленной зарплаты
		НачалоПериода	= ДатаПриема;
		КонецПериода	= ДатаПриема;
		НеПроработалЦелогоМесяца = Истина;
		
	Иначе
		// -3- работает меньше целого месяца, но в отпуск не в первый рабочий день 
		//    - заполняеи реальный период с даты приема
		// прием в месяце ухода в отпуск
		НачалоПериода	= ДатаПриема;	
		КонецПериода	= НачалоДня(ДатаНачалаСобытия-1);
		НеПроработалЦелогоМесяца = Истина;
		
	КонецЕсли;

КонецПроцедуры // ПолучитьПериодПоРаботнику()

Функция	ПолучитьДанныеОПриеме(Сотрудник, ДатаПриемаПервыйРабочийДень)
	
	ЭтоПервыйРабочийДень = Ложь;
	ДатаПриема = Дата('00010101');
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("парамСотрудник",	Сотрудник );
	ТекстЗапроса = "
	|	ВЫБРАТЬ
	|       ПриемРаботников.ДатаПриема КАК ДатаПриема,
	|		СУММА(ЕСТЬNULL(Графики.ОсновноеЗначение,0)) КАК ОтработаноДнейСНачалаМесяца
	|   ИЗ (
	|		ВЫБРАТЬ 
	|          	МИНИМУМ(Работники.Период) КАК ДатаПриема
	|		ИЗ РегистрСведений.РаботникиОрганизаций КАК Работники
	|   	ГДЕ Работники.Сотрудник = &парамСотрудник
	|       ) КАК ПриемРаботников
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК Работники 
	|   	ПО		Работники.Сотрудник = &парамСотрудник
	|			И	Работники.Период = ПриемРаботников.ДатаПриема
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикиРаботыПоВидамВремени КАК Графики
	|   	ПО  	Графики.Дата >= НАЧАЛОПЕРИОДА(Работники.Период, МЕСЯЦ)
	|			И	Графики.Дата < Работники.Период
	|			И	Графики.ВидУчетаВремени = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремени.ПоДням)
	|			// индивидуальные графики и табели не анализируем, так как нас интерисует только норма времени
	|			И	ВЫБОР КОГДА Работники.ГрафикРаботы.ГрафикПолногоРабочегоВремени <> ЗНАЧЕНИЕ(Справочник.ГрафикиРаботы.ПустаяСсылка)
	|						ТОГДА  Работники.ГрафикРаботы.ГрафикПолногоРабочегоВремени
	|                     ИНАЧЕ Работники.ГрафикРаботы
	|				КОНЕЦ = Графики.ГрафикРаботы
	|    СГРУППИРОВАТЬ ПО
	|       ПриемРаботников.ДатаПриема
	|";
	Запрос.Текст = ТекстЗапроса;
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ДатаПриема = Выборка.ДатаПриема;
		ДатаПриемаПервыйРабочийДень = Выборка.ОтработаноДнейСНачалаМесяца = 0;
	КонецЕсли;

	Возврат ДатаПриема;
	
КонецФункции  // ПолучитьДанныеОПриеме()

Процедура РасчитатьПараметрыСредней( Сотрудник )
	
	ПолучитьПериодПоРаботнику( Сотрудник );
		
	ВидУчетаВремениДляСредней	= Перечисления.ВидыУчетаВремениДляСредней.ПоКалендарнымДням;
		
КонецПроцедуры

Процедура РассчитатьОдного( Сотрудник ) Экспорт
	Если Не ЗначениеЗаполнено(Сотрудник) Тогда
		Предупреждение("Перед началом заполнения табличной части необходимо выбрать работника");
		Возврат;
	КонецЕсли;
	Если мДокументОбъект.РасчетСреднего.Количество()>0 Тогда
		мДокументОбъект.РасчетСреднего.Очистить(); 
	КонецЕсли;
	мДокументОбъект.Сотрудник = Сотрудник;
	мДокументОбъект.Записать( РежимЗаписиДокумента.Запись );
	
	мДокументОбъект.ПолучитьПериодПоРаботнику();
		
	мДокументОбъект.ГодоваяПремияБазовыйПериодНачало = НачалоГода(НачалоГода(мДокументОбъект.ПериодРасчетаСреднегоНачало)-1);
	мДокументОбъект.ГодоваяПремия = ПроведениеРасчетов.РассчитатьПремияЗаГод(мДокументОбъект.ГодоваяПремияБазовыйПериодНачало, Сотрудник);

	мДокументОбъект.АвтозаполнениеРасчетСреднего();
	
	мДокументОбъект.РассчитатьРасчетСреднего( Ложь );
	
КонецПроцедуры

Процедура РасчитатьСреднюю( Сотрудник )
	ОплачиваемоеВремя = мДокументОбъект.РасчетСреднего.Итог("КалендарныеДни");
	СуммаСреднейДляОдного = ?(ОплачиваемоеВремя = 0 , 0, мДокументОбъект.РасчетСреднего.Итог("Результат") / ОплачиваемоеВремя);
КонецПроцедуры
