Функция ПолучитьОкладПоСотруднику( Сотрудник, Курс )
	лЗапрос = Новый Запрос;
	лЗапрос.УстановитьПараметр("Дата", Дата);
	лЗапрос.УстановитьПараметр("Сотрудник", Сотрудник);
	лЗапрос.Текст =
	"ВЫБРАТЬ
	|	Рег.Сотрудник КАК Сотрудник,
	|	Рег.Показатель1 КАК Сумма,
	|	Рег.Валюта1 КАК Валюта
	|ИЗ
	|	РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций.СрезПоследних(
	|			КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ),
	|			Активность
	|				И Сотрудник = &Сотрудник
	|				И ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОкладПоДням)) КАК Рег
	|";
	лВыборка = лЗапрос.Выполнить().Выбрать();
	лСуммаГрн = 0;
	Пока лВыборка.Следующий() Цикл
		Если лВыборка.Валюта = Справочники.Валюты.Доллар Тогда
			лСуммаГрн = лСуммаГрн + Окр(лВыборка.Сумма * Курс, 2);
		Иначе
			лСуммаГрн = лСуммаГрн + лВыборка.Сумма;
		КонецЕсли;
	КонецЦикла;
	Возврат лСуммаГрн;
КонецФункции

Функция НайтиСлужебныйДокумент()
	лЗапрос = Новый Запрос;
	лЗапрос.Текст =
	"ВЫБРАТЬ Док.Ссылка ИЗ Документ.РасчетПриУвольненииРаботникаОрганизаций КАК Док
	|ГДЕ ПОДСТРОКА(Док.Комментарий, 1, 59) = ""Служебный документ для расчета средней для всех сотрудников""
	|";
	лВыборка = лЗапрос.Выполнить().Выбрать();
	лВыборка.Следующий();
	Возврат лВыборка.Ссылка;
КонецФункции

Процедура КнопкаВыполнитьНажатие(Кнопка)
	ггуСредняяЗарплата.Очистить();
	
	лОтбор = Новый Структура;
	лОтбор.Вставить("Валюта", глЗначениеПеременной("ВалютаУправленческогоУчета") );
	лстрКурс = РегистрыСведений.КурсыВалютДляЗакрытия.ПолучитьПоследнее(Дата, лОтбор);
	лЗначениеКурса = лстрКурс.Курс / лстрКурс.Кратность;
	
	// Определим список работающих сотрудников по состоянию на конец месяца
	лЗапрос = Новый Запрос;
	лЗапрос.УстановитьПараметр("Дата", Дата);
	лЗапрос.УстановитьПараметр("Сотрудник", СотрудникДляОтчета);
	лЗапрос.Текст =
	"ВЫБРАТЬ
	|	Рег.Сотрудник КАК Сотрудник
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ), ) КАК Рег
	|ГДЕ
	|	Рег.ЗанимаемыхСтавок > 0
	|	И (Рег.Сотрудник = &Сотрудник
	|			ИЛИ &Сотрудник = ЗНАЧЕНИЕ(Справочник.СотрудникиОрганизаций.ПустаяСсылка))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник
	|АВТОУПОРЯДОЧИВАНИЕ
	|";
	лтзСписокСотрудников = лЗапрос.Выполнить().Выгрузить();
	лСотрудникДляОтчетаСтарый = СотрудникДляОтчета;
	Для каждого лСтрока Из лтзСписокСотрудников Цикл
		Состояние("Рассчитываем сотрудника - " + лСтрока.Сотрудник);
		ОбработкаПрерыванияПользователя();
		
		СотрудникДляОтчета = лСтрока.Сотрудник;
		РассчитатьОдного( СотрудникДляОтчета );
		
		лНоваяСтрока = ггуСредняяЗарплата.Добавить();
		лНоваяСтрока.Период = НачалоМесяца(Дата);
		лНоваяСтрока.Сотрудник = СотрудникДляОтчета;
		Если мДокументОбъект.СуммаСредней = 0 Тогда
			// Скорее всего сюда попадут находящиеся в отпуске по уходу за ребенком до 3-х лет
			// Расчет проведем по окладу
			лСуммаГрн = ПолучитьОкладПоСотруднику( лСтрока.Сотрудник, лЗначениеКурса );
			лСуммаГрн = Окр(лСуммаГрн * 12 / 354, 2);
		Иначе
			лСуммаГрн = мДокументОбъект.СуммаСредней;
		КонецЕсли;
		лНоваяСтрока.СуммаГрн = лСуммаГрн;
		лНоваяСтрока.СуммаДол = Окр(лСуммаГрн / лЗначениеКурса, 2);
		Если Дата < Дата(2015,12,1) Тогда
			лНоваяСтрока.ПроцентЕСВ = 37.26;
		Иначе
			лНоваяСтрока.ПроцентЕСВ = 22.00;
		КонецЕсли;
	КонецЦикла;
	СотрудникДляОтчета = лСотрудникДляОтчетаСтарый;
	
	// Запишем рассчитанные данные в регистр сведений
	лНаборЗаписей = РегистрыСведений.ггуСредняяЗарплата.СоздатьНаборЗаписей();
	лНаборЗаписей.Отбор.Период.Использование = Истина;
	лНаборЗаписей.Отбор.Период.ВидСравнения = ВидСравнения.Равно;
	лНаборЗаписей.Отбор.Период.Значение = НачалоМесяца(Дата);
	Если ЗначениеЗаполнено(СотрудникДляОтчета) Тогда
		лНаборЗаписей.Отбор.Сотрудник.Использование = Истина;
		лНаборЗаписей.Отбор.Сотрудник.ВидСравнения = ВидСравнения.Равно;
		лНаборЗаписей.Отбор.Сотрудник.Значение = СотрудникДляОтчета;
	КонецЕсли;
	лНаборЗаписей.Прочитать();
	лНаборЗаписей.Очистить();
	лНаборЗаписей.Записать();
	лНаборЗаписей.Загрузить( ггуСредняяЗарплата.Выгрузить() );
	лНаборЗаписей.Записать();

	// Очистим поле Сотрудник в Документе
	мДокументОбъект.Сотрудник = Неопределено;
	мДокументОбъект.Записать( РежимЗаписиДокумента.Запись );
КонецПроцедуры

Процедура ПриОткрытии()
	Если Не ЗначениеЗаполнено(Дата) Тогда 
		Дата = КонецМесяца( НачалоМесяца(ТекущаяДата())-1 ); 
	Иначе
		Дата = КонецМесяца( Дата ); 
	КонецЕсли;
	ДатаПриИзменении("");
	
КонецПроцедуры

Процедура ДатаПриИзменении(Элемент)
	Если Не ЗначениеЗаполнено(Дата) Тогда 
		Дата = КонецМесяца( НачалоМесяца(ТекущаяДата())-1 ); 
	Иначе
		Дата = КонецМесяца( Дата ); 
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДокументСлужебный) Тогда ДокументСлужебный = НайтиСлужебныйДокумент(); КонецЕсли;
	
	Попытка
		мДокументОбъект = ДокументСлужебный.ПолучитьОбъект();
		мДокументОбъект.Начисления.Очистить();
		мДокументОбъект.РасчетСреднего.Очистить();
		мДокументОбъект.Дата = Дата;
		мДокументОбъект.ДатаУвольнения = КонецМесяца(Дата) + 1;
		мДокументОбъект.ПериодРегистрации = КонецМесяца(Дата) + 1;
		мДокументОбъект.Записать( РежимЗаписиДокумента.Запись );
	Исключение
	    Сообщить("Ошибка очистки служебного документа - " + ДокументСлужебный + " : " + ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры
