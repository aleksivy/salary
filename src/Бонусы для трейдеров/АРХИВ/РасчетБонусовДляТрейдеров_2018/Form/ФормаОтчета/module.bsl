// УстановитьОтбор
//
Процедура УстановитьОтбор(КомпоновщикНастроек, ИмяПараметра, ЗначениеПараметра, ВидСравнения)
	ЭлементОтбора = КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяПараметра);
	ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный;
	ЭлементОтбора.ПравоеЗначение = ЗначениеПараметра;	
	ЭлементОтбора.ВидСравнения = ВидСравнения;
	ЭлементОтбора.Использование = ЗначениеЗаполнено(ЗначениеПараметра);
КонецПроцедуры

// УстановитьПараметр
//
Процедура УстановитьПараметр(КомпоновщикНастроек, ИмяПараметра, ЗначениеПараметра)
	ПараметрДанныхТекущий = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных(ИмяПараметра));
	ПараметрДанныхТекущий.Значение = ЗначениеПараметра;
	ПараметрДанныхТекущий.Использование = ЗначениеЗаполнено(ЗначениеПараметра);
КонецПроцедуры

Процедура УстановитьПараметрыОтборы()
	КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.ВариантыНастроек[ЭлементыФормы.СписокВариантов.Значение].Настройки);
	
	Для каждого лРеквизит Из ЭтотОбъект.Метаданные().Реквизиты Цикл
		УстановитьПараметр(КомпоновщикНастроек, лРеквизит.Имя, ЭтотОбъект[лРеквизит.Имя] );
	КонецЦикла;
КонецПроцедуры

Процедура ПриОткрытии()
	Если Не ЗначениеЗаполнено(ДатаОтчета) Тогда ДатаОтчета = НачалоМесяца( ТекущаяДата() ) - 1; КонецЕсли;
	Если Не ЗначениеЗаполнено(ГГУ) Тогда ГГУ = Справочники.Организации.НайтиПоКоду("000000001"); КонецЕсли;
	Если Не ЗначениеЗаполнено(ГГБВ) Тогда ГГБВ = Справочники.Организации.НайтиПоКоду("000000002"); КонецЕсли;
	Если Не ЗначениеЗаполнено(Зерновые) Тогда Зерновые = Справочники.Номенклатура.НайтиПоНаименованию("Зернові"); КонецЕсли;
	Если Не ЗначениеЗаполнено(Бобовые) Тогда Бобовые = Справочники.Номенклатура.НайтиПоНаименованию("Бобові"); КонецЕсли;
	Если Не ЗначениеЗаполнено(Производитель) Тогда Производитель = Справочники.ЦБТ_ТипКонтрагента.НайтиПоНаименованию("Производитель"); КонецЕсли;
	Если Не ЗначениеЗаполнено(Посредник1) Тогда Посредник1 = Справочники.ЦБТ_ТипКонтрагента.НайтиПоНаименованию("Первый посредник"); КонецЕсли;
	Если Не ЗначениеЗаполнено(Посредник2) Тогда Посредник2 = Справочники.ЦБТ_ТипКонтрагента.НайтиПоНаименованию("Второй посредник"); КонецЕсли;
	Если Не ЗначениеЗаполнено(CPT) Тогда CPT = Справочники.ЦБТ_УсловияПоставокИнкотермс.CPT; КонецЕсли;
	Если Не ЗначениеЗаполнено(DAP) Тогда DAP = Справочники.ЦБТ_УсловияПоставокИнкотермс.DAP; КонецЕсли;
	Если Не ЗначениеЗаполнено(DAT) Тогда DAT = Справочники.ЦБТ_УсловияПоставокИнкотермс.DAT; КонецЕсли;
	Если Не ЗначениеЗаполнено(EXW) Тогда EXW = Справочники.ЦБТ_УсловияПоставокИнкотермс.EXW; КонецЕсли;
	Если Не ЗначениеЗаполнено(FCA) Тогда FCA = Справочники.ЦБТ_УсловияПоставокИнкотермс.FCA; КонецЕсли;
	Если Не ЗначениеЗаполнено(Киев) Тогда Киев = Справочники.Подразделения.НайтиПоНаименованию("Киев"); КонецЕсли;
	Если Не ЗначениеЗаполнено(Group) Тогда Group = Справочники.Контрагенты.НайтиПоНаименованию("Group"); КонецЕсли;
	Если Не ЗначениеЗаполнено(GroupSilos) Тогда GroupSilos = Справочники.Контрагенты.НайтиПоНаименованию("Silos"); КонецЕсли;
	
	лсзВарианты = Новый СписокЗначений;
	Для каждого лВариант Из СхемаКомпоновкиДанных.ВариантыНастроек Цикл лсзВарианты.Добавить( лВариант.Имя, лВариант.Представление ); КонецЦикла;
	ЭлементыФормы.СписокВариантов.СписокВыбора = лсзВарианты;
	ЭлементыФормы.СписокВариантов.Значение = лсзВарианты.Получить(0).Значение;
	
	УстановитьПараметрыОтборы();
КонецПроцедуры

Процедура ДатаОтчетаПриИзменении(Элемент)
	УстановитьПараметрыОтборы();
КонецПроцедуры

Процедура СписокВариантовПриИзменении(Элемент)
	УстановитьПараметрыОтборы();
КонецПроцедуры
