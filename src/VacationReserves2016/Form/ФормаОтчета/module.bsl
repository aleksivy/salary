// УстановитьОтбор
//
Процедура УстановитьОтбор(КомпоновщикНастроек, ИмяПараметра, ЗначениеПараметра)
	ЭлементОтбора = КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяПараметра);
	ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный;
	Если ЗначениеЗаполнено(ЗначениеПараметра) Тогда
		ЭлементОтбора.Использование = Истина;
		ЭлементОтбора.ПравоеЗначение = ЗначениеПараметра;	
		Попытка
			лЭтоГруппа = ЗначениеПараметра.ЭтоГруппа;
			Если лЭтоГруппа Тогда
				ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВИерархии;
			Иначе
				ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
			КонецЕсли;
		Исключение
			ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		КонецПопытки;
	Иначе
		ЭлементОтбора.Использование = Ложь;
	КонецЕсли;
КонецПроцедуры

// УстановитьПараметр
//
Процедура УстановитьПараметр(КомпоновщикНастроек, ИмяПараметра, ЗначениеПараметра)
	ПараметрДанныхТекущий = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных(ИмяПараметра));
	ПараметрДанныхТекущий.Значение = ЗначениеПараметра;
	ПараметрДанныхТекущий.Использование = Истина;
КонецПроцедуры

Процедура УстановитьПараметрыОтборы()
	ЭлементыФормы.ДействияФормы.Кнопки.ЗаписатьРегистр.Доступность = ?((ЭлементыФормы.СписокВариантов.Значение = "СернаНачисления") или (ЭлементыФормы.СписокВариантов.Значение = "ггуСредняяЗарплата"), Истина, Ложь);
	
	КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.ВариантыНастроек[ЭлементыФормы.СписокВариантов.Значение].Настройки);
	УстановитьПараметр(КомпоновщикНастроек, "Дата", НачалоДня(Дата) );
	УстановитьПараметр(КомпоновщикНастроек, "Серна", Серна );
	УстановитьПараметр(КомпоновщикНастроек, "ВидОтпуска", ВидОтпуска );
КонецПроцедуры

Процедура ПриОткрытии()
	Если Не ЗначениеЗаполнено(Дата) Тогда Дата = КонецМесяца( НачалоМесяца(ТекущаяДата())-1 ); КонецЕсли;
	Если Не ЗначениеЗаполнено(Серна) Тогда Серна = Справочники.ПодразделенияОрганизаций.НайтиПоНаименованию("Центральний офіс, м.Київ"); КонецЕсли;
	Если Не ЗначениеЗаполнено(ВидОтпуска) Тогда ВидОтпуска = Справочники.ВидыОтпусков.ЕжегодныйОсновной; КонецЕсли;
	
	лсзВарианты = Новый СписокЗначений;
	Для каждого лВариант Из СхемаКомпоновкиДанных.ВариантыНастроек Цикл лсзВарианты.Добавить( лВариант.Имя, лВариант.Представление ); КонецЦикла;
	ЭлементыФормы.СписокВариантов.СписокВыбора = лсзВарианты;
	ЭлементыФормы.СписокВариантов.Значение = лсзВарианты.Получить(0).Значение;
	
	УстановитьПараметрыОтборы();
КонецПроцедуры

Процедура ДатаПриИзменении(Элемент)
	УстановитьПараметрыОтборы();
КонецПроцедуры

Процедура СернаПриИзменении(Элемент)
	УстановитьПараметрыОтборы();
КонецПроцедуры

Процедура СписокВариантовПриИзменении(Элемент)
	УстановитьПараметрыОтборы();
КонецПроцедуры

Процедура ДействияФормыЗаписатьРегистр(Кнопка)
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	МакетКомпоновкиДанных = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.Настройки, , , Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных);
	лТаблицаЗначений = Новый ТаблицаЗначений;
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ПроцессорВывода.УстановитьОбъект(лТаблицаЗначений);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	Если 	  (ЭлементыФормы.СписокВариантов.Значение = "СернаНачисления") Тогда
		лтзВрем = лТаблицаЗначений.Скопировать( , "ВидРасчета" );
		лтзВрем.Свернуть("ВидРасчета", "");
		Для каждого лЗнач Из лтзВрем Цикл 
			лНаборЗаписей = РегистрыСведений.СернаНачисления.СоздатьНаборЗаписей();
			лНаборЗаписей.Отбор.Период.Использование = Истина;
			лНаборЗаписей.Отбор.Период.ВидСравнения = ВидСравнения.Равно;
			лНаборЗаписей.Отбор.Период.Значение = НачалоМесяца(Дата);
			лНаборЗаписей.Отбор.ВидРасчета.Использование = Истина;
			лНаборЗаписей.Отбор.ВидРасчета.ВидСравнения = ВидСравнения.Равно;
			лНаборЗаписей.Отбор.ВидРасчета.Значение = лЗнач.ВидРасчета;
			лНаборЗаписей.Отбор.ЭтоВыплата.Использование = Истина;
			лНаборЗаписей.Отбор.ЭтоВыплата.ВидСравнения = ВидСравнения.Равно;
			лНаборЗаписей.Отбор.ЭтоВыплата.Значение = Ложь;
			лНаборЗаписей.Прочитать();
			лНаборЗаписей.Очистить();
			лНаборЗаписей.Записать();
		КонецЦикла;
		
		лТаблицаЗначений.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата"));
		лТаблицаЗначений.ЗаполнитьЗначения( НачалоМесяца(Дата), "Период");
		Для каждого лСтрока Из лТаблицаЗначений Цикл
			лСтрока.СуммаГрн = лСтрока.СуммаГрн + лСтрока.СуммаЕСВГрн;
			лСтрока.СуммаДол = лСтрока.СуммаДол + лСтрока.СуммаЕСВДол;
		КонецЦикла;
		лНаборЗаписей = РегистрыСведений.СернаНачисления.СоздатьНаборЗаписей();
		лНаборЗаписей.Загрузить( лТаблицаЗначений );
		лНаборЗаписей.Записать( Ложь );
	ИначеЕсли (ЭлементыФормы.СписокВариантов.Значение = "ггуСредняяЗарплата") Тогда
		лНаборЗаписей = РегистрыСведений.ггуСредняяЗарплата.СоздатьНаборЗаписей();
		лНаборЗаписей.Отбор.Период.Использование = Истина;
		лНаборЗаписей.Отбор.Период.ВидСравнения = ВидСравнения.Равно;
		лНаборЗаписей.Отбор.Период.Значение = НачалоМесяца(Дата);
		лНаборЗаписей.Прочитать();
		лНаборЗаписей.Очистить();
		лНаборЗаписей.Записать();
		
		лТаблицаЗначений.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата"));
		лТаблицаЗначений.ЗаполнитьЗначения( НачалоМесяца(Дата), "Период");
		лТаблицаЗначений.Колонки[ "СуммаГрнЗаДень" ].Имя = "СуммаГрн";
		лТаблицаЗначений.Колонки[ "СуммаДолЗаДень" ].Имя = "СуммаДол";
		лНаборЗаписей = РегистрыСведений.ггуСредняяЗарплата.СоздатьНаборЗаписей();
		лНаборЗаписей.Загрузить( лТаблицаЗначений );
		лНаборЗаписей.Записать( Ложь );
	КонецЕсли;
КонецПроцедуры

Процедура ВидОтпускаПриИзменении(Элемент)
	УстановитьПараметрыОтборы();
КонецПроцедуры
