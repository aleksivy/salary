// УстановитьОтбор
//
Процедура УстановитьОтбор(КомпоновщикНастроек, ИмяПараметра, ЗначениеПараметра)
	ЭлементОтбора = КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяПараметра);
	ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный;
	Если ЗначениеЗаполнено(ЗначениеПараметра) Тогда
		ЭлементОтбора.Использование = Истина;
		ЭлементОтбора.ПравоеЗначение = ЗначениеПараметра;	
		Попытка
			лЭтоГруппа = ЗначениеПараметра.ЭтоГруппа;
			Если лЭтоГруппа Тогда
				ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВИерархии;
			Иначе
				ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
			КонецЕсли;
		Исключение
			ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		КонецПопытки;
	Иначе
		ЭлементОтбора.Использование = Ложь;
	КонецЕсли;
КонецПроцедуры

// УстановитьПараметр
//
Процедура УстановитьПараметр(КомпоновщикНастроек, ИмяПараметра, ЗначениеПараметра)
	ПараметрДанныхТекущий = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных(ИмяПараметра));
	ПараметрДанныхТекущий.Значение = ЗначениеПараметра;
	ПараметрДанныхТекущий.Использование = ЗначениеЗаполнено(ЗначениеПараметра);
КонецПроцедуры

Процедура УстановитьПараметрыОтборы()
	УстановитьПараметр(КомпоновщикНастроек, "ДатаНач", НачалоДня(ДатаНач) );
	УстановитьПараметр(КомпоновщикНастроек, "ДатаКон", КонецДня(ДатаКон) );
	УстановитьПараметр(КомпоновщикНастроек, "Счет92", ПланыСчетов.МСФО.НайтиПоКоду("92") );
	УстановитьПараметр(КомпоновщикНастроек, "арендажилья", Справочники.СтатьиЗатрат.НайтиПоНаименованию("оренда житла для проживання співробітників", Истина) );
	УстановитьПараметр(КомпоновщикНастроек, "компенсационныезатраты", Справочники.СтатьиЗатрат.НайтиПоНаименованию("компенсаційні витрати (розїздний характер)", Истина) );
	УстановитьПараметр(КомпоновщикНастроек, "МатПомощь", Справочники.СтатьиЗатрат.НайтиПоНаименованию("матеріальна допомога співробітникам", Истина) );
	УстановитьПараметр(КомпоновщикНастроек, "медстраховка", Справочники.СтатьиЗатрат.НайтиПоНаименованию("медичне страхування", Истина) );
	УстановитьПараметр(КомпоновщикНастроек, "обучениеперсонала", Справочники.СтатьиЗатрат.НайтиПоНаименованию("навчання персоналу", Истина) );
	УстановитьПараметр(КомпоновщикНастроек, "оплатапраці1заробітнаплата", Справочники.СтатьиЗатрат.НайтиПоНаименованию("оплата праці (1.заробітна плата)", Истина) );
	УстановитьПараметр(КомпоновщикНастроек, "оплатапраці3премиявзарплату", Справочники.СтатьиЗатрат.НайтиПоНаименованию("оплата праці (3.премія в зарплату)", Истина) );
	УстановитьПараметр(КомпоновщикНастроек, "оплатапраці4торгбонус", Справочники.СтатьиЗатрат.НайтиПоНаименованию("оплата праці (4.торг.бонус річний)", Истина) );
	УстановитьПараметр(КомпоновщикНастроек, "оплатапраці5админбонус", Справочники.СтатьиЗатрат.НайтиПоНаименованию("оплата праці (5.адмін.бонус річний)", Истина) );
	УстановитьПараметр(КомпоновщикНастроек, "оплатапраці6отпускные", Справочники.СтатьиЗатрат.НайтиПоНаименованию("оплата праці (6.відпускні)", Истина) );
	УстановитьПараметр(КомпоновщикНастроек, "оплатапрацівнештатники", Справочники.СтатьиЗатрат.НайтиПоНаименованию("оплата праці (позаштатні)", Истина) );
	УстановитьПараметр(КомпоновщикНастроек, "пенсионныйфонд", Справочники.СтатьиЗатрат.НайтиПоНаименованию("пенсійний фонд", Истина) );
КонецПроцедуры

Процедура ПриОткрытии()
	Если Не ЗначениеЗаполнено(ДатаНач) Тогда ДатаНач = НачалоМесяца(НачалоМесяца(ТекущаяДата())-1); КонецЕсли;
	Если Не ЗначениеЗаполнено(ДатаКон) Тогда ДатаКон = КонецМесяца( ДатаНач ); КонецЕсли;
	УстановитьПараметрыОтборы();
КонецПроцедуры

Процедура ДатаНачПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ДатаНач) Тогда ДатаКон = КонецМесяца( ДатаНач ); КонецЕсли;
	УстановитьПараметрыОтборы();
КонецПроцедуры

Процедура ДатаКонПриИзменении(Элемент)
	УстановитьПараметрыОтборы();
КонецПроцедуры
