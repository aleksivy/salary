////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

// Переменные механизма встроенной справки
Перем ОтображатьСправкуФормы;

Перем ЕстьДоступУпр;
Перем ЕстьДоступРегл;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Процедура ОбновитьДанные()
	
	Если РежимНабораПерсонала = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
		ОбновитьДанныеПодразделенияОрганизации();
	Иначе
		ОбновитьДанныеПодразделения();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПодготовитьСправкуФормы()
	
	РежимНабораПерсонала_ПоСтруктуреЮридическихЛиц	= ?(РежимНабораПерсонала = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц, "inline", "none");
	РежимНабораПерсонала_ПоЦентрамОтветственности	= ?(РежимНабораПерсонала = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоЦентрамОтветственности, "inline", "none");
	
	ЦветФонаСправки		= РаботаСДиалогами.ВернутьШестнадцатиричноеПредставлениеЦвета(РаботаСДиалогами.ВстроеннаяСправка_ЦветФона());
	ЦветСсылкиСправки	= РаботаСДиалогами.ВернутьШестнадцатиричноеПредставлениеЦвета(РаботаСДиалогами.ВстроеннаяСправка_ЦветСсылки());
	
	ЭлементыФормы.ПанельСправкиФормы.ЦветРамки			= РаботаСДиалогами.ВстроеннаяСправка_ЦветРамки();
	ЭлементыФормы.НадписьЗакрытьСправкуФормы.ЦветФона	= РаботаСДиалогами.ВстроеннаяСправка_ЦветФона();
	ЭлементыФормы.НадписьЗакрытьСправкуФормы.ЦветТекста	= РаботаСДиалогами.ВстроеннаяСправка_ЦветСсылки();
	
	ТекстМакетаВстроеннойСправки =
	"<HTML>
	|	<HEAD>
	|		<META http-equiv=Content-Type content=""text/html; charset=utf-8"">" + РаботаСДиалогами.ВстроеннаяСправка_СтилиДокумента() + "
	|	</HEAD>
	|
	|	<BODY aLink="+ЦветСсылкиСправки+" vLink="+ЦветСсылкиСправки+" link="+ЦветСсылкиСправки+" bgColor="+ЦветФонаСправки+" scroll=auto><FONT face=""MS Sans Serif"" size=1>
	|		<IMG src="+РаботаСДиалогами.ПолучитьПутьККартинкеДляHTML(БиблиотекаКартинок.КартинкаВстроеннойСправкиФормы, ЭлементыФормы.ВстроеннаяСправка)+">
	|		<DIV>В Кадровый план вводится потребность компании в персонале на тот или иной период. Вы можете задавать потребность в персонале в соответствии со <A id=Команда href=""1C:ОткрытьПодразделенияОрганизаций"">структурой организаций</A> - юридических лиц вашей компании или в соответствии со структурой <A id=ОткрытьСписок href=""1C:Справочники.Подразделения"">центров ответственности</A>. В начале работы с Кадровым планом вам необходимо выбрать один из этих режимов в зависимости от того, как в вашей компании формируется потребность в персонале, но в дальнейшем вы сможете изменить выбранный вами режим.</DIV>
	|		<DIV>Сейчас установлен режим кадрового планирования 
	|			<P id=РежимНабораПерсонала_ПоСтруктуреЮридическихЛиц style=""DISPLAY:"+РежимНабораПерсонала_ПоСтруктуреЮридическихЛиц+"""><A id=Команда href=""1C:ПереключитьРежимПланирования"">"+РежимНабораПерсонала+"</A>. Кадровый план отображен для организации <A id=Команда href=""1C:ВыборОрганизации"">"+Организация+"</A></P>
	|			<P id=РежимНабораПерсонала_ПоЦентрамОтветственности style=""DISPLAY:"+РежимНабораПерсонала_ПоЦентрамОтветственности+"""><A id=Команда href=""1C:ПереключитьРежимПланирования"">"+РежимНабораПерсонала+"</A></P>
	|			.
	|		</DIV>
	|		<DIV>В этой форме вы можете просматривать текущее состояние Кадрового плана или всю историю его изменения. 
	|			<P id=РежимПериода_ТекущееСостояние style=""DISPLAY:inline"">Сейчас отображено текущее состояние Кадрового плана (на <STRONG>" + ?(ДатаСреза = НачалоДня(ТекущаяДата()), "сегодня, ", "") + Формат(ДатаСреза, "ДФ='дд ММММ гггг'") + "</STRONG>)</P>
	|			<P id=РежимПериода_ИсторияВсехИзменений style=""DISPLAY:none"">Сейчас отображена вся история изменения Кадрового плана</P>
	|			. Вы можете <A id=Команда href=""1C:ПереключитьРежимПериода"">переключить</A> режим отображения Кадрового плана.
	|		</DIV>
	|	</FONT></BODY>
	|</HTML>";
	
	ЭлементыФормы.ВстроеннаяСправка.УстановитьТекст(ТекстМакетаВстроеннойСправки);
	
КонецПроцедуры

Процедура ОбновитьСправкуФормы(ПолеДанных = Неопределено)
	
	ДокHTML = ЭлементыФормы.ВстроеннаяСправка.Документ;
	
	Если ПолеДанных = Неопределено ИЛИ ПолеДанных = "РежимНабораПерсонала" ИЛИ ПолеДанных = "Организация" Тогда
		РаботаСДиалогами.УстановитьВидимостьТекста(ДокHTML, "РежимНабораПерсонала_ПоСтруктуреЮридическихЛиц", РежимНабораПерсонала = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц);
		РаботаСДиалогами.УстановитьВидимостьТекста(ДокHTML, "РежимНабораПерсонала_ПоЦентрамОтветственности", РежимНабораПерсонала = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоЦентрамОтветственности);
		ДокHTML.getElementById("РежимНабораПерсонала_ПоСтруктуреЮридическихЛиц").innerHTML	= "<A id=Команда href=""1C:ПереключитьРежимПланирования"">"+РежимНабораПерсонала+"</A>. Кадровый план отображен для организации <A id=Команда href=""1C:ВыборОрганизации"">"+Организация+"</A>";
		ДокHTML.getElementById("РежимНабораПерсонала_ПоЦентрамОтветственности").innerHTML	= "<A id=Команда href=""1C:ПереключитьРежимПланирования"">"+РежимНабораПерсонала+"</A>";
	КонецЕсли;
	
	Если ПолеДанных = Неопределено ИЛИ ПолеДанных = "РежимПериода" ИЛИ ПолеДанных = "ДатаСреза" Тогда
		РаботаСДиалогами.УстановитьВидимостьТекста(ДокHTML, "РежимПериода_ТекущееСостояние", Не РежимПериода);
		РаботаСДиалогами.УстановитьВидимостьТекста(ДокHTML, "РежимПериода_ИсторияВсехИзменений", РежимПериода);
		ДокHTML.getElementById("РежимПериода_ТекущееСостояние").innerHTML	= "Кадровый план отображен по состоянию на <STRONG>" + ?(ДатаСреза = НачалоДня(ТекущаяДата()), "сегодня, ", "") + Формат(ДатаСреза, "ДФ='дд ММММ гггг'") + "</STRONG>";
	КонецЕсли;
	
КонецПроцедуры // ПоказатьСправкуФормы()

Процедура УстановитьВидимостьСправкиФормы(ОбновитьСправку = Истина)
	
	РаботаСДиалогами.ИзменитьВидимостьПанелиПоГоризонтали(ЭтаФорма, ОтображатьСправкуФормы, "ПанельКадровогоПлана", "СправкиФормы");
	
	ЭлементыФормы.КоманднаяПанельСправкиФормы.Кнопки.ПереключениеСправкиФормы.Пометка = ОтображатьСправкуФормы;
	
	Если ОтображатьСправкуФормы Тогда
		ПодключитьОбработчикИзмененияДанных("РежимНабораПерсонала",	"ОбновитьСправкуФормы");
		ПодключитьОбработчикИзмененияДанных("РежимПериода",			"ОбновитьСправкуФормы");
		ПодключитьОбработчикИзмененияДанных("ДатаСреза",			"ОбновитьСправкуФормы");
		ПодключитьОбработчикИзмененияДанных("Организация",			"ОбновитьСправкуФормы");
		Если ОбновитьСправку Тогда
			ОбновитьСправкуФормы();
		КонецЕсли;
		
	Иначе
		ОтключитьОбработчикИзмененияДанных("РежимНабораПерсонала");
		ОтключитьОбработчикИзмененияДанных("РежимПериода");
		ОтключитьОбработчикИзмененияДанных("ДатаСреза");
		ОтключитьОбработчикИзмененияДанных("Организация");
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьКомандуФормы(Команда, ТекущееЗначение = "") Экспорт
	
	Если Команда = "ПереключитьРежимПериода" Тогда
		РежимПериода = Не РежимПериода;
		ПриИзмененииРежимаПериода();
		ОбновитьДанные();
		
	ИначеЕсли Команда = "ВыборОрганизации" Тогда
		Форма = Справочники.Организации.ПолучитьФормуВыбора();
		Форма.ПараметрТекущаяСтрока	= Организация;
		Форма.ВладелецФормы	= ЭлементыФормы.Организация;
		Форма.Открыть();
		
	ИначеЕсли Команда = "ОткрытьПодразделенияОрганизаций" Тогда
		Форма = Справочники.ПодразделенияОрганизаций.ПолучитьФормуВыбора();
		Форма.Организация	= Организация;
		Форма.Открыть();
		
	ИначеЕсли Команда = "ПереключитьРежимПланирования" Тогда
		Если РежимНабораПерсонала = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
			РежимНабораПерсонала = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоЦентрамОтветственности;
		Иначе
			РежимНабораПерсонала = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц;
		КонецЕсли;
		Константы.РежимНабораПерсонала.Установить(РежимНабораПерсонала);
		
		ПриИзмененииРежимаНабораПерсонала();
		
		Оповестить("ИзмененРежимНабораПерсонала");
		
		ОбновитьДанные();
		
	Иначе
		Сообщить(НСтр("ru='Неизвестная команда: ';uk='Невідома команда: '") + Команда);
		
	КонецЕсли;
	
КонецПроцедуры // ВыполнитьКомандуСправки()

Процедура ОбновитьДанныеПодразделения()
	
	РабочиеМеста.Очистить();
	
	Если Не ЕстьДоступУпр Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеСтроки = ЭлементыФормы.Подразделения.ТекущиеДанные;
	Если ДанныеСтроки = Неопределено Тогда
		ИзмененияКадровогоПлана.Отбор.ДокументыИзмененияКадровогоПланаПоПодразделению.Использование = Ложь;
		ОбновитьРабочиеМестаУпр(Неопределено, ?(РежимПериода, Неопределено, ДатаСреза));
		ЭлементыФормы.РабочиеМеста.Колонки.Подразделение.Видимость	= РабочиеМеста.Итог("ЕстьИерархия") > 0;
		Возврат;
	КонецЕсли;
	
	ОбновитьРабочиеМестаУпр(ДанныеСтроки.Ссылка, ?(РежимПериода, Неопределено, ДатаСреза));
	ЭлементыФормы.РабочиеМеста.Колонки.Подразделение.Видимость	= РабочиеМеста.Итог("ЕстьИерархия") > 0;
	
	ИзмененияКадровогоПлана.Отбор.ДокументыИзмененияКадровогоПланаПоПодразделению.Использование	= Истина;
	ИзмененияКадровогоПлана.Отбор.ДокументыИзмененияКадровогоПланаПоПодразделению.ВидСравнения	= ВидСравнения.ВИерархии;
	ИзмененияКадровогоПлана.Отбор.ДокументыИзмененияКадровогоПланаПоПодразделению.Значение		= ДанныеСтроки.Ссылка;
	
КонецПроцедуры

Процедура ОбновитьДанныеПодразделенияОрганизации()
	
	РабочиеМеста.Очистить();
	
	Если Не ЕстьДоступРегл Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеСтроки = ЭлементыФормы.ПодразделенияОрганизаций.ТекущиеДанные;
	Если ДанныеСтроки = Неопределено Тогда
		ИзмененияКадровогоПлана.Отбор.ДокументыИзмененияКадровогоПланаПоПодразделению.Использование = Ложь;
		ОбновитьРабочиеМестаРегл(Организация, Неопределено, ?(РежимПериода, Неопределено, ДатаСреза));
		ЭлементыФормы.РабочиеМеста.Колонки.Подразделение.Видимость	= РабочиеМеста.Итог("ЕстьИерархия") > 0;
		Возврат;
	КонецЕсли;
	
	ОбновитьРабочиеМестаРегл(Организация, ДанныеСтроки.Ссылка, ?(РежимПериода, Неопределено, ДатаСреза));
	ЭлементыФормы.РабочиеМеста.Колонки.Подразделение.Видимость	= РабочиеМеста.Итог("ЕстьИерархия") > 0;
	
	ИзмененияКадровогоПлана.Отбор.ДокументыИзмененияКадровогоПланаПоПодразделению.Использование	= Истина;
	ИзмененияКадровогоПлана.Отбор.ДокументыИзмененияКадровогоПланаПоПодразделению.ВидСравнения	= ВидСравнения.ВИерархии;
	ИзмененияКадровогоПлана.Отбор.ДокументыИзмененияКадровогоПланаПоПодразделению.Значение		= ДанныеСтроки.Ссылка;
	
КонецПроцедуры

Процедура ПриИзмененииРежимаПериода()
	
	ЭлементыФормы.РабочиеМеста.Колонки.Период.Видимость		= РежимПериода;
	ЭлементыФормы.РабочиеМеста.Колонки.Работает.Видимость	= Не РежимПериода;
	ЭлементыФормы.РабочиеМеста.Колонки.Вакантно.Видимость	= Не РежимПериода;
	
	ЭлементыФормы.ДействияФормыКадровыйПлан.Кнопки.ПодменюВид.Кнопки.ОтобразитьТекущееСостояниеКП.Пометка		= Не РежимПериода;
	ЭлементыФормы.ДействияФормыКадровыйПлан.Кнопки.ПодменюВид.Кнопки.ОтобразитьИсториюВсехИзмененийКП.Пометка	= РежимПериода;
	
КонецПроцедуры

Процедура ПриИзмененииРежимаНабораПерсонала()
	
	Если РежимНабораПерсонала = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
		ЭлементыФормы.ПанельРабочиеМеста.ТекущаяСтраница															= ЭлементыФормы.ПанельРабочиеМеста.Страницы.ПодразделенияОрганизаций;
		ЭлементыФормы.КоманднаяПанельРежимНабораПерсонала.Кнопки.Подменю.Кнопки.ПоСтруктуреЮридическихЛиц.Пометка	= Истина;
		ЭлементыФормы.КоманднаяПанельРежимНабораПерсонала.Кнопки.Подменю.Кнопки.ПоЦентрамОтветственности.Пометка	= Ложь;
		ЭлементыФормы.ДействияФормыКадровыйПлан.ИсточникДействий													= ЭлементыФормы.ПодразделенияОрганизаций;
	Иначе
		ЭлементыФормы.ПанельРабочиеМеста.ТекущаяСтраница															= ЭлементыФормы.ПанельРабочиеМеста.Страницы.ЦФО;
		ЭлементыФормы.КоманднаяПанельРежимНабораПерсонала.Кнопки.Подменю.Кнопки.ПоСтруктуреЮридическихЛиц.Пометка	= Ложь;
		ЭлементыФормы.КоманднаяПанельРежимНабораПерсонала.Кнопки.Подменю.Кнопки.ПоЦентрамОтветственности.Пометка	= Истина;
		ЭлементыФормы.ДействияФормыКадровыйПлан.ИсточникДействий													= ЭлементыФормы.Подразделения;
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьВидимостьВакансий()
	
	Если ПоказыватьВакансии Тогда
		ЭлементыФормы.НадписьУправлениеВидимостьюВакансий.Заголовок = НСтр("ru='Скрыть вакансии';uk='Приховати вакансії'");
	Иначе
		ЭлементыФормы.НадписьУправлениеВидимостьюВакансий.Заголовок = НСтр("ru='Показать вакансии';uk='Показати вакансії'");
	КонецЕсли;
	
	РаботаСДиалогами.ИзменитьВидимостьПанелиПоВертикали(ЭтаФорма, ПоказыватьВакансии, "ПанельВакансии", "Вакансии");
	
КонецПроцедуры

Процедура ПриИзмененииСортировкиВакансий(ИмяСортировки)
	
	Для Номер = 1 По 4 Цикл
		Кнопка = ЭлементыФормы.КоманднаяПанельВакансии.Кнопки.ПодменюУпорядочить.Кнопки[Номер-1];
		Кнопка.Пометка = Кнопка.Имя = ИмяСортировки;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПриИзмененииОтбораПоВакансии()
	
	ЭлементыФормы.КоманднаяПанельВакансии.Кнопки.ПодменюУпорядочить.Кнопки.ПоказыватьОткрытые.Пометка	= Вакансии.Отбор.Закрыта.Использование;
	ЭлементыФормы.КоманднаяПанельВакансии.Кнопки.ПодменюУпорядочить.Кнопки.ПоказыватьВсе.Пометка		= Не Вакансии.Отбор.Закрыта.Использование;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ЕстьДоступУпр	= ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.ЗанятыеРабочиеМеста) И ПравоДоступа("Добавление", Метаданные.Документы.ИзменениеКадровогоПлана);
	ЕстьДоступРегл	= ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.ЗанятыеШтатныеЕдиницыОрганизаций) И ПравоДоступа("Добавление", Метаданные.Документы.ИзменениеКадровогоПлана);
	
	ПоказыватьВакансии = ВосстановитьЗначение("КадровоеПланированиеПоказыватьВакансии");
	Если ПоказыватьВакансии = Неопределено Тогда
		ПоказыватьВакансии = Истина;
	КонецЕсли;
	УстановитьВидимостьВакансий();
	
	РазрешатьУдалятьНепосредственно = ПравоДоступа("ИнтерактивноеУдаление", Метаданные.Справочники.Вакансии);
	Если Не РазрешатьУдалятьНепосредственно Тогда
		ЭлементыФормы.КоманднаяПанельВакансии.Кнопки.ПодменюВакансии.Кнопки.Удалить(ЭлементыФормы.КоманднаяПанельВакансии.Кнопки.ПодменюВакансии.Кнопки.Удалить);
	КонецЕсли;
	
	ДатаСреза		= ТекущаяДата();
	РежимПериода	= Ложь;
	Организация		= УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");
	
	РежимНабораПерсонала	= Константы.РежимНабораПерсонала.Получить();
	Если РежимНабораПерсонала.Пустая() Тогда
		РежимНабораПерсонала = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоЦентрамОтветственности;
	КонецЕсли;
	
	ПриИзмененииРежимаНабораПерсонала();
	ПриИзмененииРежимаПериода();
	
	// Справка формы
	ОтображатьСправкуФормы = ВосстановитьЗначение("КадровоеПланированиеСправкаФормы");
	Если ОтображатьСправкуФормы = Неопределено Тогда
		ОтображатьСправкуФормы = Истина;
	КонецЕсли;
	
	ПодготовитьСправкуФормы();
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	// Установить колонки, видимостью которых пользователь управлять не может.
	СтруктураКолонок = Новый Структура;
	СтруктураКолонок.Вставить("Вакансия");

	// Установить ограничение - изменять видимость колонок табличной части РабочиеМеста
	ОбработкаТабличныхЧастей.УстановитьИзменятьВидимостьКолонокТабЧасти(ЭлементыФормы.РабочиеМеста.Колонки, СтруктураКолонок);
	
	УстановитьВидимостьСправкиФормы(Ложь);
	
	ЭлементыФормы.Вакансии.НастройкаПорядка.Наименование.Доступность	= Ложь;
	
	ПриИзмененииСортировкиВакансий("Наименование");
	
	Вакансии.Отбор.Закрыта.Установить(Ложь);
	ПриИзмененииОтбораПоВакансии();
	
	Если РежимНабораПерсонала = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
		Если Не ЕстьДоступРегл Тогда
			Предупреждение(НСтр("ru='У вас нет прав для планирования по структуре юридических лиц';uk='У вас немає прав для планування по структурі юридичних осіб'"));
		КонецЕсли;
	Иначе
		Если Не ЕстьДоступУпр Тогда
			Предупреждение(НСтр("ru='У вас нет прав для планирования по центрам ответственности';uk='У вас немає прав для планування за центрами відповідальності'"));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПриОткрытии()

Процедура ПриЗакрытии()
	
	СохранитьЗначение("КадровоеПланированиеСправкаФормы", ОтображатьСправкуФормы);
	СохранитьЗначение("КадровоеПланированиеПоказыватьВакансии", ПоказыватьВакансии);
	
КонецПроцедуры // ПриЗакрытии()

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ЗаписанаВакансия" Тогда
		ОбновитьДанные();
		
	ИначеЕсли ИмяСобытия = "ИзмененКадровыйПлан" Тогда
		ОбновитьДанные();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаписиНовогоОбъекта(Объект, Источник)
	
	Если ТипЗнч(Объект) = Тип("СправочникОбъект.Вакансии") Тогда
		ОбновитьДанные();
		
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.ИзменениеКадровогоПлана") Тогда
		ОбновитьДанные();
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

Процедура ДействияФормыОбновить(Кнопка)
	
	ОбновитьДанные();
	
КонецПроцедуры

Процедура ДействияФормыОтчетСостояниеКадровогоПлана(Кнопка)
	
	Отчет = Отчеты.СостояниеКадровогоПлана.Создать();
	Форма = Отчет.ПолучитьФорму();
	Форма.Открыть();
	Форма.ОбновитьОтчет();
	
КонецПроцедуры

Процедура ДействияФормыОтчетИсполнениеКадровогоПлана(Кнопка)
	
	Отчет = Отчеты.ИсполнениеКадровогоПлана.Создать();
	Форма = Отчет.ПолучитьФорму();
	Форма.Открыть();
	Форма.ОбновитьОтчет();
	
КонецПроцедуры

Процедура ДействияФормыОтчетКоэффициентТекучестиКадров(Кнопка)
	
	Если РежимНабораПерсонала = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
		Отчет = Отчеты.КоэффициентТекучестиКадровОрганизаций.Создать();
	Иначе
		Отчет = Отчеты.КоэффициентТекучестиКадров.Создать();
	КонецЕсли;
	
	Форма = Отчет.ПолучитьФорму();
	Форма.Открыть();
	Форма.ОбновитьОтчет();
	
КонецПроцедуры

Процедура ОткрытьНаборПерсонала(Кнопка)
	
	Обработки.НаборПерсонала.ПолучитьФорму().Открыть();
	
КонецПроцедуры

Процедура ПереключитьВидимостьСправкиФормы()
	
	ОтображатьСправкуФормы = Не ОтображатьСправкуФормы;
	УстановитьВидимостьСправкиФормы();
	
КонецПроцедуры // ПереключитьВидимостьСправкиФормы()


Процедура ДействияФормыКадровыйПланИзменить(Кнопка)
	
	ДанныеСтроки = ЭлементыФормы.РабочиеМеста.ТекущиеДанные;
	
	ФормаДокумента = Документы.ИзменениеКадровогоПлана.ПолучитьФормуНовогоДокумента(, ЭтаФорма, ЭтотОбъект);
	
	ФормаДокумента.ДатаИзменений	= ТекущаяДата();
	
	Для Каждого Строка Из ЭлементыФормы.РабочиеМеста.ВыделенныеСтроки Цикл
		СтрокаДокумента = ФормаДокумента.РабочиеМеста.Добавить();
		
		СтрокаДокумента.Подразделение	= Строка.Подразделение;
		СтрокаДокумента.Должность		= Строка.Должность;
		СтрокаДокумента.Количество		= Строка.Занято;
	КонецЦикла;
	
	ФормаДокумента.Открыть();
	
КонецПроцедуры


Процедура ОтобразитьТекущееСостояниеКП(Кнопка)
	
	РежимПериода = Ложь;
	
	ПриИзмененииРежимаПериода();
	
	ОбновитьДанные();
	
КонецПроцедуры

Процедура ОтобразитьИсториюВсехИзмененийКП(Кнопка)
	
	РежимПериода = Истина;
	
	ПриИзмененииРежимаПериода();
	
	ОбновитьДанные();
	
КонецПроцедуры

Процедура ПоСтруктуреЮридическихЛиц(Кнопка)
	
	Если Не (ЕстьДоступУпр И ЕстьДоступРегл) Тогда
		Предупреждение(НСтр("ru='У вас нет прав для изменения режима кадрового планирования';uk='У вас немає прав для зміни режиму кадрового планування'"));
		Возврат;
	КонецЕсли;
	
	РежимНабораПерсонала = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц;
	Константы.РежимНабораПерсонала.Установить(РежимНабораПерсонала);
	
	ПриИзмененииРежимаНабораПерсонала();
	
	Оповестить("ИзмененРежимНабораПерсонала");
	
	ОбновитьДанные();
	
КонецПроцедуры

Процедура ПоЦентрамОтветственности(Кнопка)
	
	Если Не (ЕстьДоступУпр И ЕстьДоступРегл) Тогда
		Предупреждение(НСтр("ru='У вас нет прав для изменения режима кадрового планирования';uk='У вас немає прав для зміни режиму кадрового планування'"));
		Возврат;
	КонецЕсли;
	
	РежимНабораПерсонала = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоЦентрамОтветственности;
	Константы.РежимНабораПерсонала.Установить(РежимНабораПерсонала);
	
	ПриИзмененииРежимаНабораПерсонала();
	
	Оповестить("ИзмененРежимНабораПерсонала");
	
	ОбновитьДанные();
	
КонецПроцедуры

Процедура НовыйДокумент(Кнопка)
	
	Документы.ИзменениеКадровогоПлана.ПолучитьФормуНовогоДокумента(, ЭтаФорма, ЭтотОбъект).Открыть();
	
КонецПроцедуры

Процедура ОткрытьШтатноеРасписание(Кнопка)
	
	РегистрыСведений.ШтатноеРасписаниеОрганизаций.ПолучитьФормуСписка().Открыть();
	
КонецПроцедуры


Процедура ЗакрытьВакансию(Кнопка)
	
	ДанныеСтроки = ЭлементыФормы.Вакансии.ТекущиеДанные;
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВакансияОбъект = ДанныеСтроки.Ссылка.ПолучитьОбъект();
	ВакансияОбъект.Закрыта = Истина;
	ВакансияОбъект.Записать();
	
КонецПроцедуры

Процедура УпорядочитьПоНаименованию(Кнопка)
	
	Вакансии.Порядок.Установить("Наименование ВОЗР");
	ПриИзмененииСортировкиВакансий("Наименование");
	
КонецПроцедуры

Процедура УпорядочитьПоДатеЗакрытия(Кнопка)
	
	Вакансии.Порядок.Установить("ПлановаяДатаЗакрытия УБЫВ");
	ПриИзмененииСортировкиВакансий("ПлановаяДатаЗакрытия");
	
КонецПроцедуры

Процедура УпорядочитьПоПодразделению(Кнопка)
	
	Вакансии.Порядок.Установить("Подразделение ВОЗР");
	ПриИзмененииСортировкиВакансий("Подразделение");
	
КонецПроцедуры

Процедура УпорядочитьПоДолжности(Кнопка)
	
	Вакансии.Порядок.Установить("Должность ВОЗР");
	ПриИзмененииСортировкиВакансий("Должность");
	
КонецПроцедуры

Процедура ПоказыватьОткрытые(Кнопка)
	
	Вакансии.Отбор.Закрыта.Установить(Ложь);
	ПриИзмененииОтбораПоВакансии();
	
КонецПроцедуры

Процедура ПоказыватьВсе(Кнопка)
	
	Вакансии.Отбор.Закрыта.Использование = Ложь;
	ПриИзмененииОтбораПоВакансии();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура ИзменитьВидимостьВакансий(Элемент)
	
	ПоказыватьВакансии = Не ПоказыватьВакансии;
	
	УстановитьВидимостьВакансий();
	
КонецПроцедуры

Процедура ВстроеннаяСправкаonclick(Элемент, pEvtObj)
	
	РаботаСДиалогами.ПолеHTMLДокументаOnClick(Элемент, pEvtObj, ЭтаФорма);
	
КонецПроцедуры // ПолеСправкиonclick()

Процедура ВстроеннаяСправкаonmouseout(Элемент, pEvtObj)
	
	РаботаСДиалогами.ПолеHTMLДокументаOnMouseOut(Элемент, pEvtObj);
	
КонецПроцедуры

Процедура ВстроеннаяСправкаonmouseover(Элемент, pEvtObj)
	
	РаботаСДиалогами.ПолеHTMLДокументаOnMouseOver(Элемент, pEvtObj);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ Вакансии

Процедура ВакансииПриАктивизацииСтроки(Элемент)
	
	ДанныеСтроки = ЭлементыФормы.Вакансии.ТекущиеДанные;
	
	ЭлементыФормы.КоманднаяПанельВакансии.Кнопки.ПодменюВакансии.Кнопки.Закрыть.Доступность = (ДанныеСтроки <> Неопределено) И Не ДанныеСтроки.Ссылка.Закрыта;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ Подразделения

Процедура ПодразделенияПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("ОбновитьДанныеПодразделения", 0.1, Истина);
	
КонецПроцедуры // ПодразделенияПриАктивизацииСтроки()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ ПодразделенияОрганизаций

Процедура ПодразделенияОрганизацийПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("ОбновитьДанныеПодразделенияОрганизации", 0.1, Истина);
	
КонецПроцедуры // ПодразделенияОрганизацийПриАктивизацииСтроки()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ РабочиеМеста

// Процедура - обработчик события "Выбор" табличного поля.
//
Процедура РабочиеМестаВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДанныеСтроки = ЭлементыФормы.РабочиеМеста.ТекущиеДанные;
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ФормаЗаписи = РегистрыСведений.КадровыйПлан.ПолучитьФорму("ФормаЗаписи");
	
	Если РежимНабораПерсонала = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоЦентрамОтветственности Тогда
		ФормаЗаписи.Подразделение				= ДанныеСтроки.Подразделение;
	Иначе
		ФормаЗаписи.ПодразделениеОрганизации	= ДанныеСтроки.Подразделение;
	КонецЕсли;
	ФормаЗаписи.Должность		= ВыбраннаяСтрока.Должность;
	
	ФормаЗаписи.Открыть();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
