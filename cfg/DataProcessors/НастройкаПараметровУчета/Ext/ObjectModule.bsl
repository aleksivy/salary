
#Если Клиент Тогда 
	
Процедура ПолучитьУчетнуюПолитикуПоПерсоналу(ФормаОбработки) 
	
	НаборЗаписей = РегистрыСведений.УчетнаяПолитикаПоПерсоналуОрганизаций.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Организация.Установить(Организация);
	НаборЗаписей.Прочитать();
	Если НаборЗаписей.Количество() > 0 Тогда
		ЗаполнитьЗначенияСвойств(ФормаОбработки.мУчетнаяПолитикаПоПерсоналуОрганизаций, НаборЗаписей[0]);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПолучитьУчетнуюПолитикуПоРасчетуЗарплаты(ФормаОбработки) 
	
	НаборЗаписей = РегистрыСведений.ПараметрыРасчетаЗарплатыОрганизаций.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Организация.Установить(Организация);
	НаборЗаписей.Прочитать();
	Если НаборЗаписей.Количество() > 0 Тогда
		ЗаполнитьЗначенияСвойств(ФормаОбработки.мУчетнаяПолитикаПоРасчетуЗарплаты, НаборЗаписей[0]);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПолучитьДанныеУчетнаяПолитикаПоПерсоналу(ФормаОбработки) Экспорт

	Если ФормаОбработки.ЭлементыФормы.ПанельНастроек.Страницы.УправленческийУчет.Видимость Тогда
		
		НаборЗаписей = РегистрыСведений.УчетнаяПолитикаПоПерсоналу.СоздатьНаборЗаписей();
		НаборЗаписей.Прочитать();
		Если НаборЗаписей.Количество() > 0 Тогда
			ЗаполнитьЗначенияСвойств(ФормаОбработки.мУчетнаяПолитикаПоПерсоналу, НаборЗаписей[0]);
			ФормаОбработки.ПоддерживатьНесколькоСхемМотивации = ФормаОбработки.мУчетнаяПолитикаПоПерсоналу.ПоддерживатьНесколькоСхемМотивации;
			ФормаОбработки.РасчетЗарплатыПоОтветственным = ФормаОбработки.мУчетнаяПолитикаПоПерсоналу.РасчетЗарплатыПоОтветственным;
			ФормаОбработки.ПоказыватьТабельныеНомераВДокументахУпр = ФормаОбработки.мУчетнаяПолитикаПоПерсоналу.ПоказыватьТабельныеНомераВДокументах;
			
		КонецЕсли;
		
		ФормаОбработки.ЭлементыФормы.НадписьСписокРасчетчиковЗарплатыУпр.Видимость = ФормаОбработки.мУчетнаяПолитикаПоПерсоналу.РасчетЗарплатыПоОтветственным;
		
		ФормаОбработки.РежимНабораПерсонала = Константы.РежимНабораПерсонала.Получить();
		
	КонецЕсли;	

КонецПроцедуры


// Процедура получает по организации и заполняет реквизиты формы
Процедура ПолучитьДанныеПоОрганизации(ФормаОбработки) Экспорт
	
	Если ФормаОбработки.ЭлементыФормы.ПанельНастроек.Страницы.КадровыйУчет.Видимость Тогда
		ПолучитьУчетнуюПолитикуПоПерсоналу(ФормаОбработки);
		ЗаполнитьЗначенияСвойств(ФормаОбработки, ФормаОбработки.мУчетнаяПолитикаПоПерсоналуОрганизаций);
		ФормаОбработки.ЭлементыФормы.НадписьСписокРасчетчиковЗарплаты.Видимость = ФормаОбработки.мУчетнаяПолитикаПоПерсоналуОрганизаций.РасчетЗарплатыОрганизацииПоОтветственным;
		ФормаОбработки.ЭлементыФормы.НадписьКурсыВалют.Видимость = ФормаОбработки.мУчетнаяПолитикаПоПерсоналуОрганизаций.ИспользуютсяНачисленияВВалюте;
	КонецЕсли;
	
	Если ФормаОбработки.ЭлементыФормы.ПанельНастроек.Страницы.РасчетЗарплаты.Видимость Тогда
		ПолучитьУчетнуюПолитикуПоРасчетуЗарплаты(ФормаОбработки);
		ЗаполнитьЗначенияСвойств(ФормаОбработки, ФормаОбработки.мУчетнаяПолитикаПоРасчетуЗарплаты);
	КонецЕсли;
	
КонецПроцедуры

// Функция записывает изменненые данные в регистры сведений
// УчетнаяПолитикаПоПерсоналуОрганизаций, УчетнаяПолитикаПоРасчетуЗарплатыОрганизаций, УчетнаяПолитикаНалоговыйУчет
// УчетнаяПолитикаПоЕСН, СтавкаВзносаНаСтрахованиеОтНесчастныхСлучаев
Функция ЗаписатьДанныеПоОрганизации(ФормаОбработки) Экспорт

	НадоОбновитьУчетнаяПолитикаПоПерсоналуОрганизации = Ложь;
	
	Если ФормаОбработки.ЭлементыФормы.ПанельНастроек.Страницы.КадровыйУчет.Видимость Тогда
		
		НадоЗаписать = Ложь;
		
		НаборЗаписей = РегистрыСведений.УчетнаяПолитикаПоПерсоналуОрганизаций.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Организация.Установить(Организация);
		НоваяЗапись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись, ФормаОбработки.мУчетнаяПолитикаПоПерсоналуОрганизаций);
		НоваяЗапись.Организация = Организация;

		НаборЗаписейДляПроверки = РегистрыСведений.УчетнаяПолитикаПоПерсоналуОрганизаций.СоздатьНаборЗаписей();
		НаборЗаписейДляПроверки.Отбор.Организация.Установить(Организация);
		НаборЗаписейДляПроверки.Прочитать();
		НадоЗаписать = Не НастройкаПравДоступа.СравнитьТаблицыНаборовЗаписей(НаборЗаписейДляПроверки.Выгрузить(), НаборЗаписей.Выгрузить());
				
		Если НадоЗаписать Тогда
			Если Не ОбщегоНазначения.ЗаписатьНабор(НаборЗаписей) Тогда
				Возврат Ложь
			КонецЕсли;	
			НадоОбновитьУчетнаяПолитикаПоПерсоналуОрганизации = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ФормаОбработки.ЭлементыФормы.ПанельНастроек.Страницы.РасчетЗарплаты.Видимость Тогда
		
		НадоЗаписать = Ложь;
		
		НаборЗаписей = РегистрыСведений.ПараметрыРасчетаЗарплатыОрганизаций.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Организация.Установить(Организация);
		НоваяЗапись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись, ФормаОбработки.мУчетнаяПолитикаПоРасчетуЗарплаты);
		НоваяЗапись.Организация = Организация;

		НаборЗаписейДляПроверки = РегистрыСведений.ПараметрыРасчетаЗарплатыОрганизаций.СоздатьНаборЗаписей();
		НаборЗаписейДляПроверки.Отбор.Организация.Установить(Организация);
		НаборЗаписейДляПроверки.Прочитать();
		НадоЗаписать = Не НастройкаПравДоступа.СравнитьТаблицыНаборовЗаписей(НаборЗаписейДляПроверки.Выгрузить(), НаборЗаписей.Выгрузить());
				
		Если НадоЗаписать Тогда
			Если Не ОбщегоНазначения.ЗаписатьНабор(НаборЗаписей) Тогда
				Возврат Ложь
			КонецЕсли;	
		КонецЕсли;

		Если НадоЗаписать Тогда
			Если Не ОбщегоНазначения.ЗаписатьНабор(НаборЗаписей) Тогда
				Возврат Ложь
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Если НадоОбновитьУчетнаяПолитикаПоПерсоналуОрганизации Тогда
		глЗначениеПеременнойУстановить("глУчетнаяПолитикаПоПерсоналуОрганизации", ЗаполнениеУчетнойПолитикиПоПерсоналуОрганизации(), ИСТИНА);
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции
	
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ 

Процедура ФормаОбработкиПередОткрытием(ФормаОбработки, Отказ) Экспорт

	Если ЗначениеЗаполнено(Организация) Тогда
		// в форму передана организация
		// проверим доступ
		Отказ = Не ОбщегоНазначения.ЭтоДоступнаяОрганизация(Организация)
	Иначе
		Организация = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"),"ОсновнаяОрганизация");
	КонецЕсли;
	
	Если Не Отказ Тогда
		
		РаботаСДиалогами.СформироватьСтраницыФормы(ФормаОбработки.мСоответствиеОбъектыМетаданных, ФормаОбработки.мСоответствиеРеквизитыФормы);
		
		Отказ = Истина;
		Для каждого СтраницаФормы Из ФормаОбработки.ЭлементыФормы.ПанельНастроек.Страницы Цикл
			Если СтраницаФормы.Видимость Тогда
				// на форме есть видимые страницы, можно открывать форму
				Если Отказ Тогда
					// это первая из видимых страниц, сделаем ее текущей
					ФормаОбработки.ЭлементыФормы.ПанельНастроек.ТекущаяСтраница = СтраницаФормы;
				КонецЕсли;
				Отказ = Ложь;
				
				МассивОбъектовМетаданных = ФормаОбработки.мСоответствиеОбъектыМетаданных[СтраницаФормы];
				Для каждого ОбъектМетаданных Из МассивОбъектовМетаданных Цикл
					Если Найти(ОбъектМетаданных.ПолноеИмя(), "Константа") <> 0 Тогда
//*						ФормаОбработки.мСтрокаКонстант = ФормаОбработки.мСтрокаКонстант + ОбъектМетаданных.Имя + ",";
					КонецЕсли;
				КонецЦикла;
				
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;	

КонецПроцедуры

#КонецЕсли
