
////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем ПериодДействия;

// Валюта
Перем мПоказватьВалютуЕжемесячно;
Перем мПоказватьВалютуПериодически;
Перем мВалютаПоУмолчанию;

Перем мЖирныйШрифт;
Перем ОтображенныеОрганизации;

Перем мПредопределенныеПоказатели;

Перем мПрежняяОрганизацияЕжемесячно;
Перем мПрежняяОрганизацияПериодически;

Перем мОрганизацияНеВыбранаЕжемесячно;
Перем мОрганизацияНеВыбранаПереодически;

Перем ОбработкаКомментариев;

Перем СотрудникиПометка;
Перем ПодразделенияПометка;


////////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура УправлениеГиперссылкой()
	
	Если ЭлементыФормы.ПанельПереодическиеПоказатели.Свертка = РежимСверткиЭлементаУправления.Нет Тогда
		ЭлементыФормы.НадписьУправлениеВидимостьюДолжностей.Заголовок = НСтр("ru='Скрыть';uk='Приховати'");
	Иначе
		ЭлементыФормы.НадписьУправлениеВидимостьюДолжностей.Заголовок = НСтр("ru='Показать периодические показатели';uk='Показати періодичні показники'");
	КонецЕсли;
	
КонецПроцедуры //УправлениеГиперссылкой

// Процедура устанавливает видимость колонок "Организация" и "ТабельныйНомер"
//
Процедура УстановитьВидимостьОрганизацииИТН()
	Показывать = РежимВвода И (ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц);
	
	ЭлементыФормы.ЕжемесячныеПоказатели.Колонки.Организация.Видимость = Показывать И ЭлементыФормы.ОтборыЕжемесячныхПоказателей.Кнопки.Подразделения.Пометка;
	ЭлементыФормы.ЕжемесячныеПоказатели.Колонки.ТабельныйНомер.Видимость = Показывать И ЭлементыФормы.ОтборыЕжемесячныхПоказателей.Кнопки.Сотрудники.Пометка;
КонецПроцедуры

// Процедура устанавливает отбор по показателям 
//
Процедура УстановитьОтборПоказателей()
	
	Показатели.Отбор.ВидПоказателя.Использование = Истина;
	Показатели.Отбор.ВидПоказателя.ВидСравнения	= ВидСравнения.Равно;
	Если ЭлементыФормы.ОтборыЕжемесячныхПоказателей.Кнопки.Сотрудники.Пометка Тогда
		Показатели.Отбор.ВидПоказателя.Значение	= Перечисления.ВидыПоказателейСхемМотивации.Индивидуальный;
	Иначе
		Показатели.Отбор.ВидПоказателя.Значение	= Перечисления.ВидыПоказателейСхемМотивации.ПоПодразделению;
	КонецЕсли;
	
КонецПроцедуры //УстановитьОтборПоказателей

// Процедура устанавливает заголовок для табличных частей
//
Процедура ИзменитьЗаголовокПоказателей(Режим = "Ежемесячно")
	
	Если Режим = "Ежемесячно" Тогда
		ЗаголовокРаздела = НСтр("ru=' Ежемесячные показатели (';uk=' Щомісячні показники ('") +МесяцСтрока+") ";
		
		ПанельОтборовПоЕжемесячнымПоказателям = ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям;
		Если ПанельОтборовПоЕжемесячнымПоказателям.ТекущаяСтраница = ПанельОтборовПоЕжемесячнымПоказателям.Страницы.Сотрудники Тогда
			Сотрудник = ЭлементыФормы.Сотрудники.ТекущаяСтрока;
			Если ЗначениеЗаполнено(Сотрудник) Тогда
				ЗаголовокРаздела = ЗаголовокРаздела + "; " + Сотрудник;
			КонецЕсли;
		ИначеЕсли ПанельОтборовПоЕжемесячнымПоказателям.ТекущаяСтраница = ПанельОтборовПоЕжемесячнымПоказателям.Страницы.ЦФО Тогда
			Подразделение = ЭлементыФормы.ТабличноеПолеПодразделенияПоЦФОЕжемесячные.ТекущаяСтрока;
			Если ЗначениеЗаполнено(Подразделение) Тогда
				ЗаголовокРаздела = ЗаголовокРаздела + "; " +Подразделение;
			КонецЕсли;
		ИначеЕсли ПанельОтборовПоЕжемесячнымПоказателям.ТекущаяСтраница = ПанельОтборовПоЕжемесячнымПоказателям.Страницы.Подразделения Тогда
			ТекущаяСтрока = ЭлементыФормы.ТабличноеПолеПодразделенияОрганизацийЕжемесячные.ТекущаяСтрока;
			ТекущаяКолонка = ЭлементыФормы.ТабличноеПолеПодразделенияОрганизацийЕжемесячные.ТекущаяКолонка;
			Если ТекущаяКолонка <> Неопределено Тогда
				Если ТекущаяКолонка.Имя = "Наименование" Тогда
					Если ЗначениеЗаполнено(ТекущаяСтрока.Владелец) Тогда
						ЗаголовокРаздела = ЗаголовокРаздела + "; " + ТекущаяСтрока.Владелец + "; " + ТекущаяСтрока.Наименование;
					КонецЕсли;
				Иначе
					Если ЗначениеЗаполнено(ТекущаяСтрока.Владелец) Тогда
						ЗаголовокРаздела = ЗаголовокРаздела + "; " + ТекущаяСтрока.Владелец;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли ПанельОтборовПоЕжемесячнымПоказателям.ТекущаяСтраница = ПанельОтборовПоЕжемесячнымПоказателям.Страницы.Показатели Тогда
			Показатель = ЭлементыФормы.Показатели.ТекущаяСтрока;
			Если ЗначениеЗаполнено(Показатель) Тогда
				ЗаголовокРаздела = ЗаголовокРаздела + "; " + Показатель;
			КонецЕсли;
		КонецЕсли;
		ЭлементыФормы.НадписьЕжемесячные.Заголовок = ЗаголовокРаздела;
	Иначе
		
		ЗаголовокРаздела = НСтр("ru=' Периодические показатели';uk=' Періодичні показники'");
		
		ПанельОтборыПодразделения = ЭлементыФормы.ПанельОтборыПодразделения;
		Если ПанельОтборыПодразделения.ТекущаяСтраница = ПанельОтборыПодразделения.Страницы.ПоЦФО Тогда
			 ЗаголовокРаздела = ЗаголовокРаздела + " " + ЭлементыФормы.ТабличноеПолеПодразделенияПоЦФО.ТекущаяСтрока;
		Иначе
			ТекущаяСтрока = ЭлементыФормы.ТабличноеПолеПодразделенияОрганизаций.ТекущаяСтрока;
			ТекущаяКолонка = ЭлементыФормы.ТабличноеПолеПодразделенияОрганизаций.ТекущаяКолонка;
			Если ТекущаяКолонка <> Неопределено Тогда
				Если ТекущаяКолонка.Имя = "Наименование" Тогда
					Если ЗначениеЗаполнено(ТекущаяСтрока.Владелец) Тогда
						ЗаголовокРаздела = ЗаголовокРаздела + " " + ТекущаяСтрока.Владелец + "; " + ТекущаяСтрока.Наименование;
					КонецЕсли;
				Иначе
					ЗаголовокРаздела = ЗаголовокРаздела + " " + ТекущаяСтрока.Владелец;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		ЭлементыФормы.НадписьПериодические.Заголовок = ЗаголовокРаздела;
	КонецЕсли;
	
	
КонецПроцедуры

// Процедура устанавливает видимость валюты при смене организации
//
Процедура ПриСменеОрганизации()
	
	мПоказватьВалютуЕжемесячно = ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуОрганизации(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), ОрганизацияЕжемесячные, "ИспользуютсяНачисленияВВалюте");
	мПоказватьВалютуПериодически = ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуОрганизации(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), ОрганизацияПереодически, "ИспользуютсяНачисленияВВалюте");
	УстанвоитьВидимостьВалюты();
	
КонецПроцедуры //ПриСменеОрганизации

// Процедура заполняет список предопределенных показателей, по которым потом будет устанавливаться отбор с видом сравнения
//			НеВСписке в форме выбора показателей
//
Процедура ЗапомнитьПредопределенныеПоказатели()
	
	Запрос = Новый Запрос;
	
	мПредопределенныеПоказатели = Новый СписокЗначений;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПоказателиСхемМотивации.Ссылка
	|ИЗ
	|	Справочник.ПоказателиСхемМотивации КАК ПоказателиСхемМотивации
	|ГДЕ
	|	ПоказателиСхемМотивации.Предопределенный
	|	ИЛИ ПоказателиСхемМотивации.ТипПоказателя = Значение(Перечисление.ТипыПоказателейСхемМотивации.ОценочнаяШкалаПроцентная)
	|	ИЛИ ПоказателиСхемМотивации.ТипПоказателя = Значение(Перечисление.ТипыПоказателейСхемМотивации.ОценочнаяШкалаЧисловая)";
	
		
	Запрос.Текст = ТекстЗапроса;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		мПредопределенныеПоказатели.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	
КонецПроцедуры //ЗапомнитьПредопределенныеПоказатели

// Процедура устанавливает пустую ссылку справочника Подразделения или Подразделения организации
//		в зависимости от вида организационной структуры
//
Процедура УстановитьПустуюСсылкуНаПродразделение()
	
	Если ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
		ПодразделениеЕжемесячные = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
	Иначе
		ПодразделениеЕжемесячные = Справочники.Подразделения.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры

// Процедура устанавливает отбор по организации для ежемесячных показателей
//
Процедура УстанвоитьОтборПоСтруктуреПредприятия()
	
	ЕжемесячныеПоказатели.Отбор.Организация.Использование					= Истина;
	ПлановыеЗначенияПоказателейСхемМотивации.Отбор.Организация.Использование= Истина;
	ЕжемесячныеПоказатели.Отбор.Организация.ВидСравнения					= ВидСравнения.Равно;
	ПлановыеЗначенияПоказателейСхемМотивации.Отбор.Организация.ВидСравнения	= ВидСравнения.Равно;
	Если ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
		ЕжемесячныеПоказатели.Отбор.Организация.Значение						= ОрганизацияЕжемесячные;
		ПлановыеЗначенияПоказателейСхемМотивации.Отбор.Организация.Значение		= ОрганизацияПереодически;
	Иначе
		ЕжемесячныеПоказатели.Отбор.Организация.Значение						= Справочники.Организации.ПустаяСсылка();
		ПлановыеЗначенияПоказателейСхемМотивации.Отбор.Организация.Значение		= Справочники.Организации.ПустаяСсылка();
	КонецЕсли;
	
	
КонецПроцедуры //УстанвоитьОтборПоСтруктуреПредприятия

// Устанавливает отборы в зависимости от выбранной организационной структуры 
//
Процедура ВидОрганизационнойСтруктурыПредприятияПриИзменении()
		
	Кнопки = ЭлементыФормы.ДействияФормы.Кнопки;

	Если ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
		
		ЭлементыФормы.ПанельОтборыПодразделения.ТекущаяСтраница				= ЭлементыФормы.ПанельОтборыПодразделения.Страницы.ПоЮрЛицо;
		
		Если РежимВвода Тогда
			ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.ТекущаяСтраница	= ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.Страницы.Показатели;
		ИначеЕсли ЭлементыФормы.ОтборыЕжемесячныхПоказателей.Кнопки.Подразделения.Пометка Тогда
			ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.ТекущаяСтраница	= ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.Страницы.Подразделения;
		Иначе
			ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.ТекущаяСтраница	= ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.Страницы.Сотрудники;
		КонецЕсли;
		
		Кнопки.ПорядокФормированияСМ.Кнопки.ПоЦФО.Пометка					= Ложь;
		Кнопки.ПорядокФормированияСМ.Кнопки.ПоОрганизациям.Пометка			= Истина;
		
		мПоказватьВалюту = ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуОрганизации(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), ОрганизацияЕжемесячные, "ИспользуютсяНачисленияВВалюте");
		УстанвоитьВидимостьВалюты();
		
		Если мПоказватьВалюту Тогда
			мВалютаПоУмолчанию = Константы.ВалютаРегламентированногоУчета.Получить();
		КонецЕсли;	
		
		
	Иначе
		
		ЭлементыФормы.ПанельОтборыПодразделения.ТекущаяСтраница				= ЭлементыФормы.ПанельОтборыПодразделения.Страницы.ПоЦФО;
		
		Если ЭлементыФормы.ОтборыЕжемесячныхПоказателей.Кнопки.Подразделения.Пометка Тогда
			ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.ТекущаяСтраница	= ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.Страницы.ЦФО;
		КонецЕсли;
		
		Кнопки.ПорядокФормированияСМ.Кнопки.ПоЦФО.Пометка					= Истина;
		Кнопки.ПорядокФормированияСМ.Кнопки.ПоОрганизациям.Пометка			= Ложь;
		
		мПоказватьВалюту = Истина;
		УстанвоитьВидимостьВалюты();
		
		мВалютаПоУмолчанию = Константы.ВалютаУправленческогоУчета.Получить();
				
	КонецЕсли;
	
	УстанвоитьОтборПоСтруктуреПредприятия();
	
	УстановитьВидимостьОрганизацииИТН();
	
КонецПроцедуры //ВидОрганизационнойСтруктурыПредприятияПриИзменении

// Возвращает первое подразделение выбранной организации или предприятия
//
// Параметры
//
// Возвращаемое значение:
//   СправочникиСсылка.ПодразделенияОрганизаций   – первое подразделение организации.
//   ИЛИ (зависит от заданного режима формирования схем мотивации)
//   СправочникиСсылка.Подразделения   – первое подразделение предприятия.
//
Функция ПервоеПодразделениеОрганизации()

	Запрос = Новый Запрос;
	
	Если ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПодразделенияОрганизаций.Ссылка
		|ИЗ
		|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
		|ГДЕ
		|	ПодразделенияОрганизаций.Владелец = &Организация
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПодразделенияОрганизаций.Наименование ИЕРАРХИЯ";
		
		Запрос.УстановитьПараметр("Организация", ОрганизацияЕжемесячные);
		
	Иначе
		
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Подразделения.Ссылка
		|ИЗ
		|	Справочник.Подразделения КАК Подразделения
		|
		|УПОРЯДОЧИТЬ ПО
		|	Подразделения.Наименование ИЕРАРХИЯ"
	
	КонецЕсли; 
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Возврат ?(Выборка.Следующий(), Выборка.Ссылка, ?(ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц,Справочники.ПодразделенияОрганизаций.ПустаяСсылка(),Справочники.Подразделения.ПустаяСсылка()));
	
КонецФункции // ПервоеПодразделениеОрганизации()

// Возвращает первое подразделение сотрудника организации или предприятия
//
// Параметры
//
// Возвращаемое значение:
//   СправочникиСсылка.ПодразделениеОрганизаций   – первое подразделение организации или Подразделение
//
Функция ПервоеПодразделение(Подразделение, Организация, НазваниеОрганизациии)
	
	Если ОтображенныеОрганизации[Организация] <> Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ПодразделенияОрганизаций.Ссылка,
	|	ПодразделенияОрганизаций.Владелец.Наименование КАК НазваниеОрганизациии
	|ИЗ
	|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	|ГДЕ
	|	ПодразделенияОрганизаций.Владелец = &Организация
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПодразделенияОрганизаций.Наименование ИЕРАРХИЯ";
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Выборка.Следующий();
	
	НазваниеОрганизациии = Выборка.НазваниеОрганизациии;
	
	ОтображенныеОрганизации[Организация] = Истина;
	
	Возврат Выборка.Ссылка = Подразделение;
	
КонецФункции //ПервоеПодразделение

// Устанавливает видимость колонок "Валюта" 
// 
Процедура УстанвоитьВидимостьВалюты()
	
	Если ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
		мПоказватьВалютуЕжемесячно = ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуОрганизации(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), ОрганизацияЕжемесячные, "ИспользуютсяНачисленияВВалюте");
		мПоказватьВалютуПериодически = ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуОрганизации(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), ОрганизацияПереодически, "ИспользуютсяНачисленияВВалюте");
	Иначе
		мПоказватьВалютуЕжемесячно		= Истина;
		мПоказватьВалютуПериодически	= Истина;
	КонецЕсли;

	ЭлементыФормы.ЕжемесячныеПоказатели.Колонки["Валюта"].Видимость						= мПоказватьВалютуЕжемесячно;
	ЭлементыФормы.ПлановыеЗначенияПоказателейСхемМотивации.Колонки["Валюта"].Видимость	= мПоказватьВалютуПериодически;
	
КонецПроцедуры //УстанвоитьВидимостьВалюты

// Устанавливает отбор по периоду действия
//
Процедура УстановитьОтборПоПериодуДействия()
	
	ЕжемесячныеПоказатели.Отбор.ПериодДействия.ВидСравнения	= ВидСравнения.ИнтервалВключаяГраницы;
	ЕжемесячныеПоказатели.Отбор.ПериодДействия.ЗначениеС		= НачалоМесяца(ПериодДействия);
	ЕжемесячныеПоказатели.Отбор.ПериодДействия.ЗначениеПо		= КонецМесяца(ПериодДействия);
	ЕжемесячныеПоказатели.Отбор.ПериодДействия.Использование	= Истина;
	
КонецПроцедуры //УстановитьОтборПоПериодуДействия

// Устанавливает отбор по сотруднику
//
Процедура ОтборПоСотрудникуЕжемесячно()
	
	ЕжемесячныеПоказатели.Отбор.Подразделение.Использование	= Ложь;
	ЕжемесячныеПоказатели.Отбор.Показатель.Использование	= Ложь;
	
	ТекущиеДанные = ЭлементыФормы.Сотрудники.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		Сотрудник = ЭлементыФормы.Сотрудники.ТекущиеДанные.Ссылка;
		ЕжемесячныеПоказатели.Отбор.Сотрудник.Использование	= (ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.ТекущаяСтраница = ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.Страницы.Сотрудники);
		ЕжемесячныеПоказатели.Отбор.Сотрудник.ВидСравнения	= ВидСравнения.Равно;
		ЕжемесячныеПоказатели.Отбор.Сотрудник.Значение		= Сотрудник;
	КонецЕсли;
	
КонецПроцедуры //ОтборПоСотрудникуЕжемесячно

// Открывает форму выбора показателей с установленными отборами
//
Процедура ВыборПоказателья(Элемент, СтандартнаяОбработка, ВыбраноПодразделение, ПоСотрудникам = Ложь, РежимВвода = "Ежемесячно")
	
	СтандартнаяОбработка = Ложь;
	
	ФормаВыбора = Справочники.ПоказателиСхемМотивации.ПолучитьФормуВыбора(, Элемент, Элемент.Значение);
	
	ФормаВыбора.Отбор.ВозможностьИзменения.Использование	= Истина;
	
	Если РежимВвода = "Ежемесячно" Тогда
		ФормаВыбора.Отбор.ВозможностьИзменения.ВидСравнения	= ВидСравнения.ВСписке;
		СЗ = Новый СписокЗначений;
		СЗ.Добавить(Перечисления.ИзменениеПоказателейСхемМотивации.ВиденНоНеРедактируетсяПриРасчете);
		СЗ.Добавить(Перечисления.ИзменениеПоказателейСхемМотивации.ИзменяетсяПриРасчете);
		ФормаВыбора.Отбор.ВозможностьИзменения.Значение		= СЗ;
	Иначе
		ФормаВыбора.Отбор.ВозможностьИзменения.ВидСравнения		= ВидСравнения.Равно;
		ФормаВыбора.Отбор.ВозможностьИзменения.Значение		= Перечисления.ИзменениеПоказателейСхемМотивации.Периодически;
	КонецЕсли;
	
	ФормаВыбора.Отбор.Ссылка.Использование		= Истина;
	ФормаВыбора.Отбор.Ссылка.ВидСравнения		= ВидСравнения.НеВСписке;
	ФормаВыбора.Отбор.Ссылка.Значение			= мПредопределенныеПоказатели;
	
	ФормаВыбора.Отбор.ВидПоказателя.Использование	= Истина;
	ФормаВыбора.Отбор.ВидПоказателя.ВидСравнения	= ВидСравнения.Равно;
	
	Если ПоСотрудникам Тогда
		ФормаВыбора.Отбор.ВидПоказателя.Значение		= Перечисления.ВидыПоказателейСхемМотивации.Индивидуальный;
	Иначе
		Если ВыбраноПодразделение Тогда
			ФормаВыбора.Отбор.ВидПоказателя.Значение		= Перечисления.ВидыПоказателейСхемМотивации.ПоПодразделению;
		Иначе
			ФормаВыбора.Отбор.ВидПоказателя.Значение		= Перечисления.ВидыПоказателейСхемМотивации.Общий;
		КонецЕсли;
	КонецЕсли;
	
	ФормаВыбора.ЗакрыватьПриЗакрытииВладельца = Истина;
	ФормаВыбора.НачальноеЗначениеВыбора = Элемент.Значение;
	ФормаВыбора.ЗакрыватьПриВыборе = Истина;
	ФормаВыбора.Открыть();

КонецПроцедуры //ВыборПоказателья

// Устанавлевает отбор в таблице ежемесячных показателей по подразделению и по организации 
//
Процедура УстановитьОтборПоПодразделениюИОрганизацииЕжемесячно(ОтборПоСотрудникам = Ложь, ОтборПоПодразделению = Истина, ОтборПоОрганизации = Истина)
	
	ЕжемесячныеПоказатели.Отбор.Сотрудник.Использование		= ОтборПоСотрудникам;
	ЕжемесячныеПоказатели.Отбор.Показатель.Использование	= Ложь;
	
	ЕжемесячныеПоказатели.Отбор.Подразделение.Использование	= ОтборПоПодразделению;
	ЕжемесячныеПоказатели.Отбор.Подразделение.ВидСравнения	= ВидСравнения.Равно;
	ЕжемесячныеПоказатели.Отбор.Подразделение.Значение		= ПодразделениеЕжемесячные;
	
	ЕжемесячныеПоказатели.Отбор.Организация.Использование	= Истина;
	
	УстанвоитьВидимостьВалюты();
	
	Если ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
		Если ОтборПоОрганизации Тогда
			ЕжемесячныеПоказатели.Отбор.Организация.ВидСравнения	= ВидСравнения.Равно;
			Если мОрганизацияНеВыбранаЕжемесячно <> Истина Тогда
				ЕжемесячныеПоказатели.Отбор.Организация.Значение		= ОрганизацияЕжемесячные;
			Иначе
				
				ЕжемесячныеПоказатели.Отбор.Организация.ВидСравнения	= ВидСравнения.ВСписке;
				ЕжемесячныеПоказатели.Отбор.Организация.Значение		= Новый СписокЗначений;
			КонецЕсли;
		Иначе
			ЕжемесячныеПоказатели.Отбор.Организация.ВидСравнения	= ВидСравнения.НеРавно;
			ЕжемесячныеПоказатели.Отбор.Организация.Значение		= Справочники.Организации.ПустаяСсылка();
		КонецЕсли;
	Иначе
		ЕжемесячныеПоказатели.Отбор.Организация.ВидСравнения	= ВидСравнения.Равно;
		ЕжемесячныеПоказатели.Отбор.Организация.Значение		= Справочники.Организации.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры //УстановитьОтборПоПодразделениюИОрганизацииЕжемесячно

// Устанавлевает отбор в таблице переодидческих показателей по подразделению и по организации 
//
Процедура УстановитьОтборПоПодразделениюИОрганизацииПериодически()
	
	ПлановыеЗначенияПоказателейСхемМотивации.Отбор.Подразделение.Использование	= Истина;
	ПлановыеЗначенияПоказателейСхемМотивации.Отбор.Подразделение.ВидСравнения	= ВидСравнения.Равно;
	ПлановыеЗначенияПоказателейСхемМотивации.Отбор.Подразделение.Значение		= ПодразделениеПереодически;
	
	ПлановыеЗначенияПоказателейСхемМотивации.Отбор.Организация.Использование	= Истина;
	ПлановыеЗначенияПоказателейСхемМотивации.Отбор.Организация.ВидСравнения	= ВидСравнения.Равно;
	ПлановыеЗначенияПоказателейСхемМотивации.Отбор.Организация.Значение		= ОрганизацияПереодически;
	
	УстанвоитьВидимостьВалюты();
	
КонецПроцедуры //УстановитьОтборПоПодразделениюИОрганизацииЕжемесячно

// Устанавливает заголовок формы
//
Процедура УстановитьЗаголовокФормы()
	Заголовок = НСтр("ru=' Значения показателей схем мотивации';uk=' Значення показників схем мотивації'");
	
	Если ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда 
		Заголовок = Заголовок + НСтр("ru=' по структуре юридических лиц';uk=' по структурі юридичних осіб'");
	Иначе
		Заголовок = Заголовок + НСтр("ru=' по центрам финансовой ответственности';uk=' по центрам фінансової відповідальності'");
	КонецЕсли;
	
КонецПроцедуры //УстановитьЗаголовокФормы


Процедура УстановитьПривязкиПериодическихПоказателей()

	НоваяСвертка = ?(ПоказыватьПериодическиеПоказатели, РежимСверткиЭлементаУправления.Нет, РежимСверткиЭлементаУправления.Низ);

	ЭлементыФормы.Разделитель2.Свертка = НоваяСвертка;
	ЭлементыФормы.ПанельПереодическиеПоказатели.Свертка = НоваяСвертка;
	
	УправлениеГиперссылкой();
КонецПроцедуры //УстановитьПривязкиПериодическихПоказателей

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПриОткрытии" формы
//
Процедура ПриОткрытии()
	
	ПериодДействия = НачалоМесяца(ОбщегоНазначения.ПолучитьРабочуюДату());
	МесяцСтрока = РаботаСДиалогами.ДатаКакМесяцПредставление(ПериодДействия);
	УстановитьОтборПоПериодуДействия();
	
	// проставляем организацию пользователя по умолчанию
	Если Не ЗначениеЗаполнено(ОрганизацияЕжемесячные) Тогда
		ОрганизацияЕжемесячные	= УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");
		ОрганизацияПереодически	= ОрганизацияЕжемесячные;
	КонецЕсли;
	Организация = ОрганизацияЕжемесячные;
	
	Если ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
		ДействияФормыПоОрганизациям();
	Иначе
		ДействияФормыПоЦФО();
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВидОрганизационнойСтруктурыПредприятия) Тогда
		ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц;
	КонецЕсли;
	
	УстановитьЗаголовокФормы();

	УстанвоитьВидимостьВалюты();
	
	Если ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
		Если мПоказватьВалютуЕжемесячно Или мПоказватьВалютуПериодически Тогда
			мВалютаПоУмолчанию = Константы.ВалютаРегламентированногоУчета.Получить();
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ЭлементыФормы.ТабличноеПолеПодразделенияОрганизаций.ТекущаяСтрока) Тогда
			ЭлементыФормы.ТабличноеПолеПодразделенияОрганизаций.ТекущаяСтрока = ПервоеПодразделениеОрганизации();
		КонецЕсли;
		
	Иначе
		мВалютаПоУмолчанию			= Константы.ВалютаУправленческогоУчета.Получить();
			
		Если НЕ ЗначениеЗаполнено(ЭлементыФормы.ТабличноеПолеПодразделенияПоЦФО.ТекущаяСтрока) Тогда
			ЭлементыФормы.ТабличноеПолеПодразделенияПоЦФО.ТекущаяСтрока = ПервоеПодразделениеОрганизации();
		КонецЕсли;
		
	КонецЕсли;

	ТабличноеПолеПодразделенияОрганизаций.Порядок.Установить("Владелец");
	ТабличноеПолеПодразделенияОрганизацийЕжемесячные.Порядок.Установить("Владелец");
	Сотрудники.Порядок.Установить("Организация");
	
	ВидОрганизационнойСтруктурыПредприятияПриИзменении();
	
	Если СотрудникиПометка Тогда
		ОтборыЕжемесячныхПоказателейСотрудники();
	Иначе
		ОтборыЕжемесячныхПоказателейПодразделения();
	КонецЕсли;
	
	ЗапомнитьПредопределенныеПоказатели();

	Показатели.Отбор.ВозможностьИзменения.Использование	= Истина;
	Показатели.Отбор.ВозможностьИзменения.ВидСравнения	= ВидСравнения.ВСписке;
	СЗ = Новый СписокЗначений;
	СЗ.Добавить(Перечисления.ИзменениеПоказателейСхемМотивации.ВиденНоНеРедактируетсяПриРасчете);
	СЗ.Добавить(Перечисления.ИзменениеПоказателейСхемМотивации.ИзменяетсяПриРасчете);
	Показатели.Отбор.ВозможностьИзменения.Значение		= СЗ;
	
	ПлановыеЗначенияПоказателейСхемМотивации.Порядок.Установить("Период");
	
	
	РежимВводаПриИзменении();
	
	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	ОбработкаКомментариев.УдалитьСообщения();
	
	УстановитьПривязкиПериодическихПоказателей();
		
	УправлениеГиперссылкой();
	

КонецПроцедуры //ПриОткрытии

// Процедура - обработчик события "ПередОткрытием" формы
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// ВидОрганизационнойСтруктурыПредприятия - может передаваться форме при вызове из меню, поэтому сначала проверим и только если пустой, заполним 
	Если Не ЗначениеЗаполнено(ВидОрганизационнойСтруктурыПредприятия) Тогда
		ВидОрганизационнойСтруктурыПредприятия = ВосстановитьЗначение("ВвоодПоказателейВидОрганизационнойСтруктурыПредприятия");
	КонецЕсли;
	
	ВосстановленныйРежимВвода = ВосстановитьЗначение("ВвоодПоказателейРежимВвода");
	Если ВосстановленныйРежимВвода = Неопределено Тогда
		РежимВвода = Истина
	Иначе
		РежимВвода = ВосстановитьЗначение("ВвоодПоказателейРежимВвода");
	КонецЕсли;
	
	СотрудникиПометка		= ВосстановитьЗначение("ВвоодПоказателейСотрудникиПометка");
	Если СотрудникиПометка = Неопределено Тогда
		СотрудникиПометка = Истина;
	КонецЕсли;
	
	ПодразделенияПометка	= ВосстановитьЗначение("ВвоодПоказателейПодразделенияПометка");
	Если ПодразделенияПометка = Неопределено Тогда
		ПодразделенияПометка = Ложь;
	КонецЕсли;	
	
	ПоказыватьПериодическиеПоказатели	= ВосстановитьЗначение("ВвоодПоказателейПоказыватьПериодическиеПоказатели");
	Если ПоказыватьПериодическиеПоказатели = Неопределено Тогда
		ПоказыватьПериодическиеПоказатели = Ложь;
	КонецЕсли;
КонецПроцедуры //ПередОткрытием

// Процедура - обработчик события "ПередЗакрытием" формы
//
Процедура ПриЗакрытии()
	
	СохранитьЗначение("ВвоодПоказателейВидОрганизационнойСтруктурыПредприятия",ВидОрганизационнойСтруктурыПредприятия);
	
	СохранитьЗначение("ВвоодПоказателейРежимВвода",РежимВвода);
	
	СохранитьЗначение("ВвоодПоказателейСотрудникиПометка",ЭлементыФормы.ОтборыЕжемесячныхПоказателей.Кнопки.Сотрудники.Пометка);
	
	СохранитьЗначение("ВвоодПоказателейПодразделенияПометка",ЭлементыФормы.ОтборыЕжемесячныхПоказателей.Кнопки.Подразделения.Пометка);
	
	СохранитьЗначение("ВвоодПоказателейПоказыватьПериодическиеПоказатели",ПоказыватьПериодическиеПоказатели);

КонецПроцедуры //ПриЗакрытии


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Процедура - обработчик события "ПриИзменении" реквизиты формы ПериодДействия
//
Процедура ПериодДействияПриИзменении(Элемент)
	
	РаботаСДиалогами.ДатаКакМесяцПодобратьДатуПоТексту(Элемент.Значение, ПериодДействия);
	Элемент.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(ПериодДействия);
	
	УстановитьОтборПоПериодуДействия();
	
	ИзменитьЗаголовокПоказателей("Ежемесячно");
	
КонецПроцедуры

// Процедура - обработчик события "НачалоВыбораИзСписка" реквизиты формы ПериодДействия
//
Процедура ПериодДействияНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	РаботаСДиалогами.НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, СтандартнаяОбработка, ПериодДействия, ЭтаФорма);
	
	УстановитьОтборПоПериодуДействия();
	
	ИзменитьЗаголовокПоказателей("Ежемесячно")
	
КонецПроцедуры

// Процедура - обработчик события "Очистка" реквизиты формы ПериодДействия
//
Процедура ПериодДействияОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

КонецПроцедуры

// Процедура - обработчик события "Регулирование" реквизиты формы ПериодДействия
//
Процедура ПериодДействияРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ПериодДействия = ДобавитьМесяц(ПериодДействия, Направление);
	Элемент.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(ПериодДействия);
	
	УстановитьОтборПоПериодуДействия();

	ИзменитьЗаголовокПоказателей("Ежемесячно");

КонецПроцедуры

// Процедура - обработчик события "АвтоПодборТекста" реквизиты формы ПериодДействия
//
Процедура ПериодДействияАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	РаботаСДиалогами.ДатаКакМесяцАвтоПодборТекста(Текст, ТекстАвтоПодбора, СтандартнаяОбработка);
	
	УстановитьОтборПоПериодуДействия();
	
	ИзменитьЗаголовокПоказателей("Ежемесячно");
	
КонецПроцедуры

// Процедура - обработчик события "ОкончаниеВводаТекста" реквизиты формы ПериодДействия
//
Процедура ПериодДействияОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	РаботаСДиалогами.ДатаКакМесяцОкончаниеВводаТекста(Текст, Значение, СтандартнаяОбработка);
	
	УстановитьОтборПоПериодуДействия();

	ИзменитьЗаголовокПоказателей("Ежемесячно");
	
КонецПроцедуры


// Процедура - обработчик события "ПриИзменении" реквизиты формы РежимВвода
//
Процедура РежимВводаПриИзменении()
	
	ЭлементыФормы.ЕжемесячныеПоказатели.Колонки.Показатель.Видимость = Не РежимВвода;
	
	Если ЭлементыФормы.ОтборыЕжемесячныхПоказателей.Кнопки.Сотрудники.Пометка Тогда
		ЭлементыФормы.ЕжемесячныеПоказатели.Колонки.Сотрудник.Видимость = РежимВвода;
		ЭлементыФормы.ЕжемесячныеПоказатели.Колонки.Подразделение.Видимость = Ложь;
		
		ЕжемесячныеПоказатели.Отбор.Сотрудник.Использование			= НЕ РежимВвода;
		
	ИначеЕсли ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц
		Или ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоЦентрамОтветственности Тогда
		ЭлементыФормы.ЕжемесячныеПоказатели.Колонки.Сотрудник.Видимость = Ложь;
		ЭлементыФормы.ЕжемесячныеПоказатели.Колонки.Подразделение.Видимость = РежимВвода;
		
		ЕжемесячныеПоказатели.Отбор.Подразделение.Использование		= НЕ РежимВвода;
		
	КонецЕсли;
	
	ЭтоРегУчёт = ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц;
		
	Если Не РежимВвода Тогда
		Если ЭлементыФормы.ОтборыЕжемесячныхПоказателей.Кнопки.Сотрудники.Пометка Тогда
			ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.ТекущаяСтраница = ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.Страницы.Сотрудники;
		ИначеЕсли ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
			ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.ТекущаяСтраница = ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.Страницы.Подразделения;
		ИначеЕсли ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоЦентрамОтветственности Тогда
			ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.ТекущаяСтраница = ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.Страницы.ЦФО;
		КонецЕсли;
	Иначе
		ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.ТекущаяСтраница = ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.Страницы.Показатели;
		
		УстановитьОтборПоказателей();
		
	КонецЕсли;
	
	ИзменитьЗаголовокПоказателей("Ежемесячно");
	
	УстановитьВидимостьОрганизацииИТН();
	
КонецПроцедуры //РежимВводаПриИзменении


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ КОМАНДНОЙ ПАНЕЛИ ДействияФормы

// Устанавливает порядок ввода показателей по ЦФО
//
Процедура ДействияФормыПоЦФО()
	
	Сотрудники.Отбор.ВидДоговора.Использование	= Ложь;

	ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоЦентрамОтветственности;
	ВидОрганизационнойСтруктурыПредприятияПриИзменении();
	ЭлементыФормы.ТабличноеПолеПодразделенияПоЦФО.ТекущаяСтрока = ПервоеПодразделениеОрганизации();
	ЭлементыФормы.ТабличноеПолеПодразделенияПоЦФОЕжемесячные.ТекущаяСтрока = ПервоеПодразделениеОрганизации();
		
	ИзменитьЗаголовокПоказателей("Периодически");
	ИзменитьЗаголовокПоказателей("Ежемесячно");
	
	УстанвоитьВидимостьВалюты();
	
	УстановитьЗаголовокФормы();
	
КонецПроцедуры

// Устанавливает порядок ввода показателей по Организации
//
Процедура ДействияФормыПоОрганизациям()
	
	Сотрудники.Отбор.ВидДоговора.Использование	= Истина;
	Сотрудники.Отбор.ВидДоговора.ВидСравнения	= ВидСравнения.НеРавно;
	Сотрудники.Отбор.ВидДоговора.Значение		= Перечисления.ВидыДоговоровСФизЛицами.ДоговорУправленческий;
	
	ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц;
	ВидОрганизационнойСтруктурыПредприятияПриИзменении();
	ЭлементыФормы.ТабличноеПолеПодразделенияОрганизацийЕжемесячные.ТекущаяСтрока = ПервоеПодразделениеОрганизации();
	ЭлементыФормы.ТабличноеПолеПодразделенияОрганизаций.ТекущаяСтрока = ПервоеПодразделениеОрганизации();
	
	ИзменитьЗаголовокПоказателей("Периодически");
	ИзменитьЗаголовокПоказателей("Ежемесячно");
	
	УстанвоитьВидимостьВалюты();
	
	УстановитьЗаголовокФормы();
	
КонецПроцедуры //ДействияФормыПоОрганизациям

// Процедура - открывает универсальную обработку загрузки данных из табличного документа 
//
Процедура ДействияФормыЗагрузить(Кнопка)
	
	ОбработкаЗагрузкиДанных = Обработки.ЗагрузкаДанныхИзТабличногоДокумента.Создать();
	ОбработкаЗагрузкиДанных.РежимЗагрузки = 2;  
	ОбработкаЗагрузкиДанных.ИмяВидаРегистра = "ЗначенияПоказателейСхемМотивации";
	ОбработкаЗагрузкиДанных.ЗамещатьСуществующиеЗаписи	= Истина;
	СсылкаИсточника         = ВосстановитьЗначение("ЗначенияПоказателейСхемМотивации");
	ФормаОбработкаЗагрузкиДанных = ОбработкаЗагрузкиДанных.ПолучитьФорму();
	ФормаОбработкаЗагрузкиДанных.ЭлементыФормы.ИмяВидаРегистра.Значение = "ЗначенияПоказателейСхемМотивации";	
	ФормаОбработкаЗагрузкиДанных.Открыть();

КонецПроцедуры //ДействияФормыЗагрузить

// Процедура - заполняет регистр по показателям, присутствующим в плановых начислениях 
//
Процедура ДействияФормыЗаполнитьПоРегистру(Кнопка)
	
	СписокНедоступныхВозможностейИзменения = Новый Массив;
	СписокНедоступныхВозможностейИзменения.Добавить(Перечисления.ИзменениеПоказателейСхемМотивации.ПустаяСсылка());
	СписокНедоступныхВозможностейИзменения.Добавить(Перечисления.ИзменениеПоказателейСхемМотивации.НеИзменяется);
	СписокНедоступныхВозможностейИзменения.Добавить(Перечисления.ИзменениеПоказателейСхемМотивации.ИзменяетсяПриРасчете);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПарамВозможностьИзменения", СписокНедоступныхВозможностейИзменения);
	Запрос.УстановитьПараметр("ПарамДата", КонецМесяца(ПериодДействия));
	Запрос.УстановитьПараметр("ПериодДействия", ПериодДействия);
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(ПериодДействия));
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ПоСотрудникам = ЭлементыФормы.ОтборыЕжемесячныхПоказателей.Кнопки.Сотрудники.Пометка И Не РежимВвода;
	ПоПодразделениям = ЭлементыФормы.ОтборыЕжемесячныхПоказателей.Кнопки.Подразделения.Пометка И Не РежимВвода;
	
	ПоСотрудникамКнопка = ЭлементыФормы.ОтборыЕжемесячныхПоказателей.Кнопки.Сотрудники.Пометка;
	
	Если ПоСотрудникам Тогда
		Запрос.УстановитьПараметр("Сотрудники", ЭлементыФормы.Сотрудники.ТекущаяСтрока);
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗначенияПоказателейСхемМотивации.Показатель,
	|	ЗначенияПоказателейСхемМотивации.Организация,
	|	ЗначенияПоказателейСхемМотивации.Подразделение,
	|	ЗначенияПоказателейСхемМотивации.Сотрудник
	|ИЗ
	|	РегистрСведений.ЗначенияПоказателейСхемМотивации КАК ЗначенияПоказателейСхемМотивации
	|ГДЕ
	|	ЗначенияПоказателейСхемМотивации.ПериодДействия = &ПериодДействия";
	
	ЗаполненныеПоказатели = Запрос.Выполнить().Выгрузить();
	
	Если РежимВвода Тогда
		Запрос.УстановитьПараметр("Показатель", ЭлементыФормы.Показатели.ТекущиеДанные.Ссылка);
	КонецЕсли;
	
	Если ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
		
		Если ПоПодразделениям Тогда
			Запрос.УстановитьПараметр("Подразделение", ЭлементыФормы.ТабличноеПолеПодразделенияОрганизацийЕжемесячные.ТекущиеДанные.Ссылка);
			Организация = ЭлементыФормы.ТабличноеПолеПодразделенияОрганизацийЕжемесячные.ТекущиеДанные.Владелец;
		ИначеЕсли ПоСотрудникам Тогда
			Организация = ЭлементыФормы.Сотрудники.ТекущиеДанные.Ссылка.Организация;
		КонецЕсли;
		
		Запрос.УстановитьПараметр("ГоловнаяОрганизация", Организация);
		Запрос.УстановитьПараметр("ОбособленноеПодразделение", Организация);
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	РаботникиОрганизаций.Сотрудник КАК Сотрудник,
		|	РаботникиОрганизаций.ПодразделениеОрганизации КАК Подразделение
		|ПОМЕСТИТЬ ВТСотрудники
		|ИЗ";
		Если ПоСотрудникам Тогда
			Запрос.Текст = Запрос.Текст + "
		|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ПарамДата, Организация = &ГоловнаяОрганизация И Сотрудник В (&Сотрудники)) КАК РаботникиОрганизаций";
		ИначеЕсли ПоПодразделениям Тогда 
			Запрос.Текст = Запрос.Текст + "
		|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ПарамДата, Организация = &ГоловнаяОрганизация И ПодразделениеОрганизации = &Подразделение) КАК РаботникиОрганизаций";
		Иначе
			Запрос.Текст = Запрос.Текст + "
		|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ПарамДата,) КАК РаботникиОрганизаций";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|ГДЕ";
		Если ПоСотрудникам Или ПоПодразделениям Тогда
			Запрос.Текст = Запрос.Текст + "
		|	РаботникиОрганизаций.Организация = &ГоловнаяОрганизация
		|	И";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|		РаботникиОрганизаций.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	РаботникиОрганизаций.Сотрудник,
		|	РаботникиОрганизаций.ПодразделениеОрганизации
		|ИЗ
		|	РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
		|ГДЕ
		|	РаботникиОрганизаций.Период > &ПериодДействия
		|	И РаботникиОрганизаций.Период <= &КонецМесяца";
		Если ПоСотрудникам Тогда
			Запрос.Текст = Запрос.Текст + "
		|	И РаботникиОрганизаций.ОбособленноеПодразделение = &ОбособленноеПодразделение
		|	И РаботникиОрганизаций.Организация = &ГоловнаяОрганизация
		|	И РаботникиОрганизаций.Сотрудник В (&Сотрудники)";
		ИначеЕсли ПоПодразделениям Тогда
			Запрос.Текст = Запрос.Текст + "
		|	И РаботникиОрганизаций.ОбособленноеПодразделение = &ОбособленноеПодразделение
		|	И РаботникиОрганизаций.Организация = &ГоловнаяОрганизация
		|	И РаботникиОрганизаций.ПодразделениеОрганизации = &Подразделение";
		КонецЕсли;
		Если ПоСотрудникам Тогда
			Запрос.Текст = Запрос.Текст + "
		|	И РаботникиОрганизаций.Сотрудник В (&Сотрудники)";
		ИначеЕсли ПоПодразделениям Тогда
			Запрос.Текст = Запрос.Текст + "
		|	И РаботникиОрганизаций.ПодразделениеОрганизации = &Подразделение";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник 
		|";
		
		Запрос.Выполнить();

		Запрос.Текст = "
		|ВЫБРАТЬ
		|		ВложенныйЗапрос.Организация КАК Организация,
		|		Сотрудники.Подразделение КАК Подразделение,
		|		&ПериодДействия КАК ПериодДействия,
		|		ВложенныйЗапрос.Сотрудник КАК Сотрудник,
		|		ВложенныйЗапрос.Показатель КАК Показатель,
		|		СУММА(ЕСТЬNULL(ВложенныйЗапрос.Значение, 0)) КАК Значение,
		|		ВложенныйЗапрос.Валюта КАК Валюта
		|	ПОМЕСТИТЬ ВТПлановыеПоказатели
		|	ИЗ
		|		(ВЫБРАТЬ
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Организация КАК Организация,
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Сотрудник КАК Сотрудник,
		|			Показатели.Показатель КАК Показатель,
		|			СУММА(ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Показатель1) КАК Значение,
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Валюта1 КАК Валюта
		|		ИЗ";
		Если ПоСотрудникам Или ПоПодразделениям Тогда
			Запрос.Текст = Запрос.Текст + "
		|			РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций.СрезПоследних(&ПарамДата, Организация = &ОбособленноеПодразделение  И Сотрудник В (ВЫБРАТЬ Сотрудник ИЗ ВТСотрудники)) КАК ПлановыеНачисленияРаботниковОрганизацийСрезПоследних";
		Иначе
			Запрос.Текст = Запрос.Текст + "
		|			РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций.СрезПоследних(&ПарамДата, Сотрудник В (ВЫБРАТЬ Сотрудник ИЗ ВТСотрудники)) КАК ПлановыеНачисленияРаботниковОрганизацийСрезПоследних";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|				ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели
		|				ПО (Показатели.НомерСтроки = 1)
		|					И (Показатели.Ссылка = ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ВидРасчета)
		|					И ((НЕ Показатели.Показатель.Предопределенный))
		|		ГДЕ
		|			Показатели.Показатель ЕСТЬ НЕ NULL 
		|			И (НЕ Показатели.Показатель.Предопределенный)
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Организация,
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Сотрудник,
		|			Показатели.Показатель,
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Валюта1
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Организация КАК Организация,
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Сотрудник,
		|			Показатели.Показатель,
		|			СУММА(ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Показатель2),
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Валюта2
		|		ИЗ";
		Если ПоСотрудникам Или ПоПодразделениям Тогда
			Запрос.Текст = Запрос.Текст + "
		|			РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций.СрезПоследних(&ПарамДата, Организация = &ОбособленноеПодразделение И Сотрудник В (ВЫБРАТЬ Сотрудник ИЗ ВТСотрудники)) КАК ПлановыеНачисленияРаботниковОрганизацийСрезПоследних";
		Иначе
			Запрос.Текст = Запрос.Текст + "
		|			РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций.СрезПоследних(&ПарамДата, Сотрудник В (ВЫБРАТЬ Сотрудник ИЗ ВТСотрудники)) КАК ПлановыеНачисленияРаботниковОрганизацийСрезПоследних";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|				ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели
		|				ПО (Показатели.НомерСтроки = 2)
		|					И (Показатели.Ссылка = ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ВидРасчета)
		|					И ((НЕ Показатели.Показатель.Предопределенный))
		|		ГДЕ
		|			Показатели.Показатель ЕСТЬ НЕ NULL 
		|			И (НЕ Показатели.Показатель.Предопределенный)
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Организация,
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Сотрудник,
		|			Показатели.Показатель,
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Валюта2
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Организация КАК Организация,
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Сотрудник,
		|			Показатели.Показатель,
		|			СУММА(ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Показатель3),
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Валюта3
		|		ИЗ";
		Если ПоСотрудникам Или ПоПодразделениям Тогда
			Запрос.Текст = Запрос.Текст + "	
		|			РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций.СрезПоследних(&ПарамДата, Организация = &ОбособленноеПодразделение И Сотрудник В (ВЫБРАТЬ Сотрудник ИЗ ВТСотрудники)) КАК ПлановыеНачисленияРаботниковОрганизацийСрезПоследних";
		Иначе
			Запрос.Текст = Запрос.Текст + "
		|			РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций.СрезПоследних(&ПарамДата, Сотрудник В (ВЫБРАТЬ Сотрудник ИЗ ВТСотрудники)) КАК ПлановыеНачисленияРаботниковОрганизацийСрезПоследних";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|				ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели
		|				ПО (Показатели.НомерСтроки = 3)
		|					И (Показатели.Ссылка = ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ВидРасчета)
		|					И ((НЕ Показатели.Показатель.Предопределенный))
		|		ГДЕ
		|			Показатели.Показатель ЕСТЬ НЕ NULL 
		|			И (НЕ Показатели.Показатель.Предопределенный)
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Организация,
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Сотрудник,
		|			Показатели.Показатель,
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Валюта3
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Организация КАК Организация,
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Сотрудник,
		|			Показатели.Показатель,
		|			СУММА(ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Показатель4),
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Валюта4
		|		ИЗ";
		Если ПоСотрудникам Или ПоПодразделениям Тогда
			Запрос.Текст = Запрос.Текст + "	
		|			РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций.СрезПоследних(&ПарамДата, Организация = &ОбособленноеПодразделение И Сотрудник В (ВЫБРАТЬ Сотрудник ИЗ ВТСотрудники)) КАК ПлановыеНачисленияРаботниковОрганизацийСрезПоследних";
		Иначе
			Запрос.Текст = Запрос.Текст + "	
		|			РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций.СрезПоследних(&ПарамДата, Сотрудник В (ВЫБРАТЬ Сотрудник ИЗ ВТСотрудники)) КАК ПлановыеНачисленияРаботниковОрганизацийСрезПоследних";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|				ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели
		|				ПО (Показатели.НомерСтроки = 4)
		|					И (Показатели.Ссылка = ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ВидРасчета)
		|					И ((НЕ Показатели.Показатель.Предопределенный))
		|		ГДЕ
		|			Показатели.Показатель ЕСТЬ НЕ NULL 
		|			И (НЕ Показатели.Показатель.Предопределенный)
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Организация,
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Сотрудник,
		|			Показатели.Показатель,
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Валюта4
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Организация КАК Организация,
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Сотрудник,
		|			Показатели.Показатель,
		|			СУММА(ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Показатель5),
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Валюта5
		|		ИЗ";
		Если ПоСотрудникам Или ПоПодразделениям Тогда
			Запрос.Текст = Запрос.Текст + "	
		|			РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций.СрезПоследних(&ПарамДата, Организация = &ОбособленноеПодразделение И Сотрудник В (ВЫБРАТЬ Сотрудник ИЗ ВТСотрудники)) КАК ПлановыеНачисленияРаботниковОрганизацийСрезПоследних";
		Иначе
			Запрос.Текст = Запрос.Текст + "
		|			РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций.СрезПоследних(&ПарамДата, Сотрудник В (ВЫБРАТЬ Сотрудник ИЗ ВТСотрудники)) КАК ПлановыеНачисленияРаботниковОрганизацийСрезПоследних";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|				ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели
		|				ПО (Показатели.НомерСтроки = 5)
		|					И (Показатели.Ссылка = ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ВидРасчета)
		|					И ((НЕ Показатели.Показатель.Предопределенный))
		|		ГДЕ
		|			Показатели.Показатель ЕСТЬ НЕ NULL 
		|			И (НЕ Показатели.Показатель.Предопределенный)
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Организация,
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Сотрудник,
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Валюта5,
		|			Показатели.Показатель
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Организация КАК Организация,
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Сотрудник,
		|			Показатели.Показатель,
		|			СУММА(ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Показатель6),
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Валюта6
		|		ИЗ";
		Если ПоСотрудникам Или ПоПодразделениям Тогда
			Запрос.Текст = Запрос.Текст + "	
		|			РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций.СрезПоследних(&ПарамДата, Организация = &ОбособленноеПодразделение И Сотрудник В (ВЫБРАТЬ Сотрудник ИЗ ВТСотрудники)) КАК ПлановыеНачисленияРаботниковОрганизацийСрезПоследних";
		Иначе
			Запрос.Текст = Запрос.Текст + "	
		|			РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций.СрезПоследних(&ПарамДата, Сотрудник В (ВЫБРАТЬ Сотрудник ИЗ ВТСотрудники)) КАК ПлановыеНачисленияРаботниковОрганизацийСрезПоследних";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|				ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели
		|				ПО (Показатели.НомерСтроки = 6)
		|					И (Показатели.Ссылка = ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ВидРасчета)
		|					И ((НЕ Показатели.Показатель.Предопределенный))
		|		ГДЕ
		|			Показатели.Показатель ЕСТЬ НЕ NULL 
		|			И (НЕ Показатели.Показатель.Предопределенный)
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Организация,
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Сотрудник,
		|			Показатели.Показатель,
		|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Валюта6
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			Показатели.Организация КАК Организация,
		|			Сотрудники.Сотрудник,
		|			Показатели.Показатель,
		|			СУММА(Показатели.Значение),
		|			Показатели.Валюта
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Организация,
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Сотрудник КАК Сотрудник,
		|				Показатели.Показатель КАК Показатель,
		|				СУММА(ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Показатель1) КАК Значение,
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Валюта1 КАК Валюта
		|			ИЗ";
		Если ПоСотрудникам Или ПоПодразделениям Тогда
			Запрос.Текст = Запрос.Текст + "	
		|				РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций.СрезПоследних(&ПарамДата, Организация = &ОбособленноеПодразделение И Сотрудник В (ВЫБРАТЬ Сотрудник ИЗ ВТСотрудники)) КАК ПлановыеУдержанияРаботниковОрганизацийСрезПоследних";
		Иначе
			Запрос.Текст = Запрос.Текст + "	
		|				РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций.СрезПоследних(&ПарамДата, Сотрудник В (ВЫБРАТЬ Сотрудник ИЗ ВТСотрудники)) КАК ПлановыеУдержанияРаботниковОрганизацийСрезПоследних";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "	
		|					ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.Показатели КАК Показатели
		|					ПО (Показатели.НомерСтроки = 1)
		|						И (Показатели.Ссылка = ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.ВидРасчета)
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Организация,
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Сотрудник,
		|				Показатели.Показатель,
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Валюта1
		|			
		|			ОБЪЕДИНИТЬ ВСЕ
		|			
		|			ВЫБРАТЬ
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Организация,
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Сотрудник,
		|				Показатели.Показатель,
		|				СУММА(ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Показатель2),
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Валюта2
		|			ИЗ";
		Если ПоСотрудникам Или ПоПодразделениям Тогда
			Запрос.Текст = Запрос.Текст + "
		|				РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций.СрезПоследних(&ПарамДата, Организация = &ОбособленноеПодразделение И Сотрудник В (ВЫБРАТЬ Сотрудник ИЗ ВТСотрудники)) КАК ПлановыеУдержанияРаботниковОрганизацийСрезПоследних";
		Иначе
			Запрос.Текст = Запрос.Текст + "
		|				РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций.СрезПоследних(&ПарамДата, Сотрудник В (ВЫБРАТЬ Сотрудник ИЗ ВТСотрудники)) КАК ПлановыеУдержанияРаботниковОрганизацийСрезПоследних";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|					ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.Показатели КАК Показатели
		|					ПО (Показатели.НомерСтроки = 2)
		|						И (Показатели.Ссылка = ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.ВидРасчета)
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Организация,
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Сотрудник,
		|				Показатели.Показатель,
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Валюта2
		|			
		|			ОБЪЕДИНИТЬ ВСЕ
		|			
		|			ВЫБРАТЬ
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Организация КАК Организация,
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Сотрудник,
		|				Показатели.Показатель,
		|				СУММА(ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Показатель3),
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Валюта3
		|			ИЗ";
		Если ПоСотрудникам Или ПоПодразделениям Тогда
			Запрос.Текст = Запрос.Текст + "
		|				РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций.СрезПоследних(&ПарамДата, Организация = &ОбособленноеПодразделение И Сотрудник В (ВЫБРАТЬ Сотрудник ИЗ ВТСотрудники)) КАК ПлановыеУдержанияРаботниковОрганизацийСрезПоследних";
		Иначе
			Запрос.Текст = Запрос.Текст + "
		|				РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций.СрезПоследних(&ПарамДата, Сотрудник В (ВЫБРАТЬ Сотрудник ИЗ ВТСотрудники)) КАК ПлановыеУдержанияРаботниковОрганизацийСрезПоследних";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|					ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.Показатели КАК Показатели
		|					ПО (Показатели.НомерСтроки = 3)
		|						И (Показатели.Ссылка = ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.ВидРасчета)
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Организация,
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Сотрудник,
		|				Показатели.Показатель,
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Валюта3
		|			
		|			ОБЪЕДИНИТЬ ВСЕ
		|			
		|			ВЫБРАТЬ
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Организация КАК Организация,
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Сотрудник,
		|				Показатели.Показатель,
		|				СУММА(ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Показатель4),
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Валюта4
		|			ИЗ";
		Если ПоСотрудникам Или ПоПодразделениям Тогда
			Запрос.Текст = Запрос.Текст + "
		|				РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций.СрезПоследних(&ПарамДата, Организация = &ОбособленноеПодразделение И Сотрудник В (ВЫБРАТЬ Сотрудник ИЗ ВТСотрудники)) КАК ПлановыеУдержанияРаботниковОрганизацийСрезПоследних";
		Иначе
			Запрос.Текст = Запрос.Текст + "
		|				РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций.СрезПоследних(&ПарамДата, Сотрудник В (ВЫБРАТЬ Сотрудник ИЗ ВТСотрудники)) КАК ПлановыеУдержанияРаботниковОрганизацийСрезПоследних";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|					ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.Показатели КАК Показатели
		|					ПО (Показатели.НомерСтроки = 4)
		|						И (Показатели.Ссылка = ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.ВидРасчета)
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Организация,
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Сотрудник,
		|				Показатели.Показатель,
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Валюта4
		|			
		|			ОБЪЕДИНИТЬ ВСЕ
		|			
		|			ВЫБРАТЬ
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Организация КАК Организация,
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Сотрудник,
		|				Показатели.Показатель,
		|				СУММА(ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Показатель5),
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Валюта5
		|			ИЗ";
		Если ПоСотрудникам Или ПоПодразделениям Тогда
			Запрос.Текст = Запрос.Текст + "
		|				РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций.СрезПоследних(&ПарамДата, Организация = &ОбособленноеПодразделение И Сотрудник В (ВЫБРАТЬ Сотрудник ИЗ ВТСотрудники)) КАК ПлановыеУдержанияРаботниковОрганизацийСрезПоследних";
		Иначе
			Запрос.Текст = Запрос.Текст + "
		|				РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций.СрезПоследних(&ПарамДата, Сотрудник В (ВЫБРАТЬ Сотрудник ИЗ ВТСотрудники)) КАК ПлановыеУдержанияРаботниковОрганизацийСрезПоследних";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|					ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.Показатели КАК Показатели
		|					ПО (Показатели.НомерСтроки = 5)
		|						И (Показатели.Ссылка = ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.ВидРасчета)
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Организация,
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Сотрудник,
		|				Показатели.Показатель,
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Валюта5
		|			
		|			ОБЪЕДИНИТЬ ВСЕ
		|			
		|			ВЫБРАТЬ
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Организация КАК Организация,
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Сотрудник,
		|				Показатели.Показатель,
		|				СУММА(ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Показатель6),
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Валюта6
		|			ИЗ";
		Если ПоСотрудникам Или ПоПодразделениям Тогда
			Запрос.Текст = Запрос.Текст + "
		|				РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций.СрезПоследних(&ПарамДата, Организация = &ОбособленноеПодразделение  И Сотрудник В (ВЫБРАТЬ Сотрудник ИЗ ВТСотрудники)) КАК ПлановыеУдержанияРаботниковОрганизацийСрезПоследних";
		Иначе
			Запрос.Текст = Запрос.Текст + "
		|				РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций.СрезПоследних(&ПарамДата, Сотрудник В (ВЫБРАТЬ Сотрудник ИЗ ВТСотрудники)) КАК ПлановыеУдержанияРаботниковОрганизацийСрезПоследних";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|					ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УдержанияОрганизаций.Показатели КАК Показатели
		|					ПО (Показатели.НомерСтроки = 6)
		|						И (Показатели.Ссылка = ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.ВидРасчета)
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Организация,
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Сотрудник,
		|				Показатели.Показатель,
		|				ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Валюта6) КАК Показатели
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					СписокСотрудников.Сотрудник КАК Сотрудник,
		|					СписокСотрудников.Физлицо КАК Физлицо
		|				ИЗ
		|					(ВЫБРАТЬ
		|						МАКСИМУМ(РаботникиОсновноеМесто.Сотрудник) КАК Сотрудник,
		|						РаботникиОсновноеМесто.Сотрудник.Физлицо КАК Физлицо,
		|						1 КАК Приоритет
		|					ИЗ
		|						РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ПарамДата, Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)) КАК РаботникиОсновноеМесто
		|					ГДЕ
		|						РаботникиОсновноеМесто.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|					
		|					СГРУППИРОВАТЬ ПО
		|						РаботникиОсновноеМесто.Сотрудник.Физлицо
		|					
		|					ОБЪЕДИНИТЬ
		|					
		|					ВЫБРАТЬ
		|						МАКСИМУМ(РаботникиСовместительство.Сотрудник),
		|						РаботникиСовместительство.Сотрудник.Физлицо,
		|						2
		|					ИЗ
		|						РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ПарамДата, Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)) КАК РаботникиСовместительство
		|					ГДЕ
		|						РаботникиСовместительство.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|					
		|					СГРУППИРОВАТЬ ПО
		|						РаботникиСовместительство.Сотрудник.Физлицо
		|					
		|					ОБЪЕДИНИТЬ
		|					
		|					ВЫБРАТЬ
		|						МАКСИМУМ(СотрудникиДУ.Ссылка),
		|						СотрудникиДУ.Физлицо,
		|						ВЫБОР
		|							КОГДА СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ДоговорУправленческий)
		|								ТОГДА 3
		|							КОГДА СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
		|								ТОГДА 4
		|							ИНАЧЕ 5
		|						КОНЕЦ
		|					ИЗ
		|						Справочник.СотрудникиОрганизаций КАК СотрудникиДУ
		|					
		|					СГРУППИРОВАТЬ ПО
		|						СотрудникиДУ.Физлицо,
		|						ВЫБОР
		|							КОГДА СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ДоговорУправленческий)
		|								ТОГДА 3
		|							КОГДА СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
		|								ТОГДА 4
		|							ИНАЧЕ 5
		|						КОНЕЦ) КАК СписокСотрудников
		|						ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|							СписокФизическихЛиц.Физлицо КАК Физлицо,
		|							МИНИМУМ(СписокФизическихЛиц.Приоритет) КАК Приоритет
		|						ИЗ
		|							(ВЫБРАТЬ
		|								РаботникиОсновноеМесто.Сотрудник.Физлицо КАК Физлицо,
		|								1 КАК Приоритет
		|							ИЗ
		|								РегистрСведений.РаботникиОрганизаций.СрезПоследних(
		|										&ПарамДата,
		|										Сотрудник.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
		|											И Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)) КАК РаботникиОсновноеМесто
		|							ГДЕ
		|								РаботникиОсновноеМесто.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|							
		|							ОБЪЕДИНИТЬ
		|							
		|							ВЫБРАТЬ
		|								РаботникиСовместительство.Сотрудник.Физлицо,
		|								2
		|							ИЗ
		|								РегистрСведений.РаботникиОрганизаций.СрезПоследних(
		|										&ПарамДата,
		|										Сотрудник.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
		|											И Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)) КАК РаботникиСовместительство
		|							ГДЕ
		|								РаботникиСовместительство.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|							
		|							ОБЪЕДИНИТЬ
		|							
		|							ВЫБРАТЬ
		|								СотрудникиДУ.Физлицо,
		|								ВЫБОР
		|									КОГДА СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ДоговорУправленческий)
		|										ТОГДА 3
		|									КОГДА СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
		|										ТОГДА 4
		|									ИНАЧЕ 5
		|								КОНЕЦ
		|							ИЗ
		|								Справочник.СотрудникиОрганизаций КАК СотрудникиДУ) КАК СписокФизическихЛиц
		|						
		|						СГРУППИРОВАТЬ ПО
		|							СписокФизическихЛиц.Физлицо) КАК СписокФизическихЛиц
		|						ПО СписокСотрудников.Физлицо = СписокФизическихЛиц.Физлицо
		|							И СписокСотрудников.Приоритет = СписокФизическихЛиц.Приоритет) КАК Сотрудники
		|				ПО Показатели.Сотрудник = Сотрудники.Физлицо
		|		ГДЕ
		|			Показатели.Показатель ЕСТЬ НЕ NULL 
		|			И (НЕ Показатели.Показатель.Предопределенный)";
		Если Не ПоСотрудникам И Не ПоПодразделениям Тогда
			Запрос.Текст = Запрос.Текст + "
		|			И Показатели.Показатель = (&Показатель)";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|		
		|		СГРУППИРОВАТЬ ПО
		|			Показатели.Организация,
		|			Показатели.Показатель,
		|			Сотрудники.Сотрудник,
		|			Показатели.Валюта) КАК ВложенныйЗапрос
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСотрудники КАК Сотрудники
		|		ПО Сотрудники.Сотрудник = ВложенныйЗапрос.Сотрудник
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ВложенныйЗапрос.Организация,
		|		Сотрудники.Подразделение,
		|		ВложенныйЗапрос.Сотрудник,
		|		ВложенныйЗапрос.Показатель,
		|		ВложенныйЗапрос.Валюта
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Показатель,
		|	Сотрудник,
		|	Подразделение";
			
		Запрос.Выполнить();

		Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	Показатели.Организация КАК Организация,
			|	ВЫБОР КОГДА Показатели.Показатель.ВидПоказателя = Значение(Перечисление.ВидыПоказателейСхемМотивации.ПоПодразделению) 
			|		ТОГДА Показатели.Подразделение
			|		ИНАЧЕ Значение(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
			|	КОНЕЦ КАК Подразделение,
			|	Показатели.ПериодДействия КАК ПериодДействия,
			|	ВЫБОР КОГДА Показатели.Показатель.ВидПоказателя = Значение(Перечисление.ВидыПоказателейСхемМотивации.Индивидуальный) 
			|		ТОГДА Показатели.Сотрудник
			|		ИНАЧЕ Значение(Справочник.СотрудникиОрганизаций.ПустаяСсылка)
			|	КОНЕЦ КАК Сотрудник,
			|	Показатели.Показатель КАК Показатель,
			|	Показатели.Валюта,
			|	СУММА(Показатели.Значение) КАК Значение
			|ИЗ
			|	(ВЫБРАТЬ
			|		ПлановыеПоказатели.Организация КАК Организация,
			|		ПлановыеПоказатели.Подразделение КАК Подразделение,
			|		ПлановыеПоказатели.ПериодДействия КАК ПериодДействия,
			|		ПлановыеПоказатели.Сотрудник КАК Сотрудник,
			|		ПлановыеПоказатели.Показатель КАК Показатель,
			|		ПлановыеПоказатели.Значение КАК Значение,
			|		ПлановыеПоказатели.Валюта КАК Валюта
			|	ИЗ
			|		ВТПлановыеПоказатели КАК ПлановыеПоказатели
			|	) КАК Показатели
			|
			|ГДЕ Показатели.Показатель.ВозможностьИзменения = ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.ВиденНоНеРедактируетсяПриРасчете)
			|    ИЛИ Показатели.Показатель.ВозможностьИзменения = ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.ИзменяетсяПриРасчете)";
			
			Если НЕ РежимВвода Тогда
				Если ПоСотрудникамКнопка Тогда
					Запрос.Текст = Запрос.Текст + "
					|И Показатели.Показатель.ВидПоказателя = Значение(Перечисление.ВидыПоказателейСхемМотивации.Индивидуальный)";
				Иначе
					Запрос.Текст = Запрос.Текст + "
					|И Показатели.Показатель.ВидПоказателя <> Значение(Перечисление.ВидыПоказателейСхемМотивации.Индивидуальный)";
				КонецЕсли;
			Иначе
				Если ПоСотрудникамКнопка Тогда
					Запрос.Текст = Запрос.Текст + "
					|И Показатели.Показатель= &Показатель";
				КонецЕсли;
			КонецЕсли;
			Запрос.Текст = Запрос.Текст + "
			|
			|СГРУППИРОВАТЬ ПО
			|	Показатели.Организация,
			|	Показатели.Сотрудник,
			|	Показатели.Показатель,
			|	Показатели.Подразделение,
			|	Показатели.Валюта,
			|	Показатели.Организация,
			|	Показатели.ПериодДействия
			|
			|УПОРЯДОЧИТЬ ПО
			|	Организация,
			|	Подразделение,
			|	Сотрудник,
			|	Показатель";
					
					
		
	Иначе

		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	Работники.ФизЛицо КАК ФизЛицо,
		|	Работники.Подразделение
		|ПОМЕСТИТЬ ВТСотрудники
		|ИЗ
		|	РегистрСведений.Работники.СрезПоследних(&ПарамДата, ) КАК Работники
		|ГДЕ
		|	Работники.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	Работники.ФизЛицо,
		|	NULL
		|ИЗ
		|	РегистрСведений.Работники КАК Работники
		|ГДЕ
		|	Работники.Период > &ПарамДата
		|	И Работники.Период <= &КонецМесяца
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	Работники.ФизЛицо,
		|	NULL
		|ИЗ
		|	РегистрСведений.Работники КАК Работники
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Работники КАК ПериодыПерекрытия
		|		ПО (ПериодыПерекрытия.Период > Работники.Период)
		|ГДЕ
		|	ПериодыПерекрытия.Период ЕСТЬ NULL 
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо
		|";
		
		Запрос.Выполнить();
		
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	Сотрудники.Подразделение КАК Подразделение,
		|	&ПериодДействия КАК ПериодДействия,
		|	ВложенныйЗапрос.ФизЛицо КАК ФизЛицо,
		|	ВложенныйЗапрос.Показатель КАК Показатель,
		|	СУММА(ЕСТЬNULL(ВложенныйЗапрос.Значение, 0)) КАК Значение,
		|	ВложенныйЗапрос.Валюта КАК Валюта
		|	ПОМЕСТИТЬ ВТПлановыеПоказатели
		|	ИЗ
		|		(ВЫБРАТЬ
		|			ПлановыеНачисленияРаботниковСрезПоследних.ФизЛицо КАК ФизЛицо,
		|			Показатели.Показатель КАК Показатель,
		|			СУММА(ПлановыеНачисленияРаботниковСрезПоследних.Показатель1) КАК Значение,
		|			ПлановыеНачисленияРаботниковСрезПоследних.Валюта1 КАК Валюта
		|		ИЗ
		|			РегистрСведений.ПлановыеНачисленияРаботников.СрезПоследних(&ПарамДата, ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ ВТСотрудники)) КАК ПлановыеНачисленияРаботниковСрезПоследних
		|				ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеНачисления.Показатели КАК Показатели
		|				ПО (Показатели.НомерСтроки = 1)
		|				И (Показатели.Ссылка = ПлановыеНачисленияРаботниковСрезПоследних.ВидРасчета)
		|				И ((НЕ Показатели.Показатель.Предопределенный))";
		Если РежимВвода Тогда
					Запрос.Текст = Запрос.Текст + "
		|			И Показатели.Показатель = &Показатель";
		КонецЕсли;
					Запрос.Текст = Запрос.Текст + "
		|				И Показатели.Показатель.ВозможностьИзменения <> ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.НеИзменяется)
		|				И Показатели.Показатель.ВозможностьИзменения <> ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.ПустаяСсылка)
		|				И Показатели.Показатель.ТипПоказателя <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ОценочнаяШкалаЧисловая)
		|				И Показатели.Показатель.ТипПоказателя <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ОценочнаяШкалаПроцентная)
		|				И Показатели.Показатель.ТипПоказателя <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ТарифныйРазряд)
		
		|		ГДЕ
		|			Показатели.Показатель ЕСТЬ НЕ NULL 
		|			И (НЕ Показатели.Показатель.Предопределенный)
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ПлановыеНачисленияРаботниковСрезПоследних.ФизЛицо,
		|			Показатели.Показатель,
		|			ПлановыеНачисленияРаботниковСрезПоследних.Валюта1
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ПлановыеНачисленияРаботниковСрезПоследних.ФизЛицо,
		|			Показатели.Показатель,
		|			СУММА(ПлановыеНачисленияРаботниковСрезПоследних.Показатель2),
		|			ПлановыеНачисленияРаботниковСрезПоследних.Валюта2
		|		ИЗ
		|			РегистрСведений.ПлановыеНачисленияРаботников.СрезПоследних(&ПарамДата,ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ ВТСотрудники)) КАК ПлановыеНачисленияРаботниковСрезПоследних
		|				ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеНачисления.Показатели КАК Показатели
		|				ПО (Показатели.НомерСтроки = 2)
		|					И (Показатели.Ссылка = ПлановыеНачисленияРаботниковСрезПоследних.ВидРасчета)
		|					И ((НЕ Показатели.Показатель.Предопределенный))
		|		ГДЕ
		|			Показатели.Показатель ЕСТЬ НЕ NULL 
		|			И (НЕ Показатели.Показатель.Предопределенный)";
		Если РежимВвода Тогда
					Запрос.Текст = Запрос.Текст + "
		|			И Показатели.Показатель = &Показатель";
		КонецЕсли;
					Запрос.Текст = Запрос.Текст + "
		|			И Показатели.Показатель.ВозможностьИзменения <> ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.НеИзменяется)
		|			И Показатели.Показатель.ВозможностьИзменения <> ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.ПустаяСсылка)
		|			И Показатели.Показатель.ТипПоказателя <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ОценочнаяШкалаЧисловая)
		|			И Показатели.Показатель.ТипПоказателя <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ОценочнаяШкалаПроцентная)
		|			И Показатели.Показатель.ТипПоказателя <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ТарифныйРазряд)
		
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ПлановыеНачисленияРаботниковСрезПоследних.ФизЛицо,
		|			Показатели.Показатель,
		|			ПлановыеНачисленияРаботниковСрезПоследних.Валюта2
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ПлановыеНачисленияРаботниковСрезПоследних.ФизЛицо,
		|			Показатели.Показатель,
		|			СУММА(ПлановыеНачисленияРаботниковСрезПоследних.Показатель3),
		|			ПлановыеНачисленияРаботниковСрезПоследних.Валюта3
		|		ИЗ
		|			РегистрСведений.ПлановыеНачисленияРаботников.СрезПоследних(&ПарамДата, ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ ВТСотрудники)) КАК ПлановыеНачисленияРаботниковСрезПоследних
		|				ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеНачисления.Показатели КАК Показатели
		|				ПО (Показатели.НомерСтроки = 3)
		|					И (Показатели.Ссылка = ПлановыеНачисленияРаботниковСрезПоследних.ВидРасчета)
		|					И ((НЕ Показатели.Показатель.Предопределенный))
		|		ГДЕ
		|			Показатели.Показатель ЕСТЬ НЕ NULL 
		|			И (НЕ Показатели.Показатель.Предопределенный)";
		Если РежимВвода Тогда
					Запрос.Текст = Запрос.Текст + "
		|			И Показатели.Показатель = &Показатель";
		КонецЕсли;
					Запрос.Текст = Запрос.Текст + "
		|			И Показатели.Показатель.ВозможностьИзменения <> ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.НеИзменяется)
		|			И Показатели.Показатель.ВозможностьИзменения <> ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.ПустаяСсылка)
		|			И Показатели.Показатель.ТипПоказателя <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ОценочнаяШкалаЧисловая)
		|			И Показатели.Показатель.ТипПоказателя <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ОценочнаяШкалаПроцентная)
		|			И Показатели.Показатель.ТипПоказателя <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ТарифныйРазряд)
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ПлановыеНачисленияРаботниковСрезПоследних.ФизЛицо,
		|			Показатели.Показатель,
		|			ПлановыеНачисленияРаботниковСрезПоследних.Валюта3
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ПлановыеНачисленияРаботниковСрезПоследних.ФизЛицо,
		|			Показатели.Показатель,
		|			СУММА(ПлановыеНачисленияРаботниковСрезПоследних.Показатель4),
		|			ПлановыеНачисленияРаботниковСрезПоследних.Валюта4
		|		ИЗ
		|			РегистрСведений.ПлановыеНачисленияРаботников.СрезПоследних(&ПарамДата, ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ ВТСотрудники)) КАК ПлановыеНачисленияРаботниковСрезПоследних
		|				ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеНачисления.Показатели КАК Показатели
		|				ПО (Показатели.НомерСтроки = 4)
		|					И (Показатели.Ссылка = ПлановыеНачисленияРаботниковСрезПоследних.ВидРасчета)
		|					И ((НЕ Показатели.Показатель.Предопределенный))
		|		ГДЕ
		|			Показатели.Показатель ЕСТЬ НЕ NULL 
		|			И (НЕ Показатели.Показатель.Предопределенный)";
		Если РежимВвода Тогда
					Запрос.Текст = Запрос.Текст + "
		|			И Показатели.Показатель = &Показатель";
		КонецЕсли;
					Запрос.Текст = Запрос.Текст + "		
		|			И Показатели.Показатель.ВозможностьИзменения <> ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.НеИзменяется)
		|			И Показатели.Показатель.ВозможностьИзменения <> ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.ПустаяСсылка)
		|			И Показатели.Показатель.ТипПоказателя <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ОценочнаяШкалаЧисловая)
		|			И Показатели.Показатель.ТипПоказателя <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ОценочнаяШкалаПроцентная)
		|			И Показатели.Показатель.ТипПоказателя <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ТарифныйРазряд)
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ПлановыеНачисленияРаботниковСрезПоследних.ФизЛицо,
		|			Показатели.Показатель,
		|			ПлановыеНачисленияРаботниковСрезПоследних.Валюта4
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ПлановыеНачисленияРаботниковСрезПоследних.ФизЛицо,
		|			Показатели.Показатель,
		|			СУММА(ПлановыеНачисленияРаботниковСрезПоследних.Показатель5),
		|			ПлановыеНачисленияРаботниковСрезПоследних.Валюта5
		|		ИЗ
		|			РегистрСведений.ПлановыеНачисленияРаботников.СрезПоследних(&ПарамДата, ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ ВТСотрудники)) КАК ПлановыеНачисленияРаботниковСрезПоследних
		|				ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеНачисления.Показатели КАК Показатели
		|				ПО (Показатели.НомерСтроки = 5)
		|					И (Показатели.Ссылка = ПлановыеНачисленияРаботниковСрезПоследних.ВидРасчета)
		|					И ((НЕ Показатели.Показатель.Предопределенный))
		|		ГДЕ
		|			Показатели.Показатель ЕСТЬ НЕ NULL";
		Если РежимВвода Тогда
			Запрос.Текст = Запрос.Текст + "
		|			И Показатели.Показатель = &Показатель";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|			И (НЕ Показатели.Показатель.Предопределенный)
		|			И Показатели.Показатель.ВозможностьИзменения <> ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.НеИзменяется)
		|			И Показатели.Показатель.ВозможностьИзменения <> ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.ПустаяСсылка)
		|			И Показатели.Показатель.ТипПоказателя <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ОценочнаяШкалаЧисловая)
		|			И Показатели.Показатель.ТипПоказателя <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ОценочнаяШкалаПроцентная)
		|			И Показатели.Показатель.ТипПоказателя <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ТарифныйРазряд)
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ПлановыеНачисленияРаботниковСрезПоследних.ФизЛицо,
		|			Показатели.Показатель,
		|			ПлановыеНачисленияРаботниковСрезПоследних.Валюта5
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ПлановыеНачисленияРаботниковСрезПоследних.ФизЛицо,
		|			Показатели.Показатель,
		|			СУММА(ПлановыеНачисленияРаботниковСрезПоследних.Показатель6),
		|			ПлановыеНачисленияРаботниковСрезПоследних.Валюта6
		|		ИЗ
		|			РегистрСведений.ПлановыеНачисленияРаботников.СрезПоследних(&ПарамДата, ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ ВТСотрудники)) КАК ПлановыеНачисленияРаботниковСрезПоследних
		|				ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеНачисления.Показатели КАК Показатели
		|				ПО (Показатели.НомерСтроки = 6)
		|					И (Показатели.Ссылка = ПлановыеНачисленияРаботниковСрезПоследних.ВидРасчета)
		|					И ((НЕ Показатели.Показатель.Предопределенный))
		|		ГДЕ
		|			Показатели.Показатель ЕСТЬ НЕ NULL 
		|			И (НЕ Показатели.Показатель.Предопределенный)";
		Если РежимВвода Тогда
					Запрос.Текст = Запрос.Текст + "
		|			И Показатели.Показатель = &Показатель";
		КонецЕсли;
					Запрос.Текст = Запрос.Текст + "
		|			И Показатели.Показатель.ВозможностьИзменения <> ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.НеИзменяется)
		|			И Показатели.Показатель.ВозможностьИзменения <> ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.ПустаяСсылка)
		|			И Показатели.Показатель.ТипПоказателя <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ОценочнаяШкалаЧисловая)
		|			И Показатели.Показатель.ТипПоказателя <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ОценочнаяШкалаПроцентная)
		|			И Показатели.Показатель.ТипПоказателя <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ТарифныйРазряд)
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ПлановыеНачисленияРаботниковСрезПоследних.ФизЛицо,
		|			Показатели.Показатель,
		|			ПлановыеНачисленияРаботниковСрезПоследних.Валюта6
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			Показатели.ФизЛицо,
		|			Показатели.Показатель,
		|			СУММА(Показатели.Значение),
		|			Показатели.Валюта
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ПлановыеУдержанияРаботниковСрезПоследних.ФизЛицо КАК ФизЛицо,
		|				Показатели.Показатель КАК Показатель,
		|				СУММА(ПлановыеУдержанияРаботниковСрезПоследних.Показатель1) КАК Значение,
		|				ПлановыеУдержанияРаботниковСрезПоследних.Валюта1 КАК Валюта
		|			ИЗ
		|				РегистрСведений.ПлановыеУдержанияРаботников.СрезПоследних(&ПарамДата, ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ ВТСотрудники)) КАК ПлановыеУдержанияРаботниковСрезПоследних
		|					ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеУдержания.Показатели КАК Показатели
		|					ПО (Показатели.НомерСтроки = 1)
		|						И (Показатели.Ссылка = ПлановыеУдержанияРаботниковСрезПоследних.ВидРасчета)
		|						И Показатели.Показатель.ВозможностьИзменения <> ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.НеИзменяется)
		|						И Показатели.Показатель.ВозможностьИзменения <> ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.ПустаяСсылка)
		|						И Показатели.Показатель.ТипПоказателя <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ОценочнаяШкалаЧисловая)
		|						И Показатели.Показатель.ТипПоказателя <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ОценочнаяШкалаПроцентная)
		|						И Показатели.Показатель.ТипПоказателя <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ТарифныйРазряд)
		
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ПлановыеУдержанияРаботниковСрезПоследних.ФизЛицо,
		|				Показатели.Показатель,
		|				ПлановыеУдержанияРаботниковСрезПоследних.Валюта1
		|			
		|			ОБЪЕДИНИТЬ ВСЕ
		|			
		|			ВЫБРАТЬ
		|				ПлановыеУдержанияРаботниковСрезПоследних.ФизЛицо КАК ФизЛицо,
		|				Показатели.Показатель КАК Показатель,
		|				СУММА(ПлановыеУдержанияРаботниковСрезПоследних.Показатель2) КАК Значение,
		|				ПлановыеУдержанияРаботниковСрезПоследних.Валюта2 КАК Валюта
		|			ИЗ
		|				РегистрСведений.ПлановыеУдержанияРаботников.СрезПоследних(&ПарамДата, ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ ВТСотрудники)) КАК ПлановыеУдержанияРаботниковСрезПоследних
		|					ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеУдержания.Показатели КАК Показатели
		|					ПО (Показатели.НомерСтроки = 2)
		|						И (Показатели.Ссылка = ПлановыеУдержанияРаботниковСрезПоследних.ВидРасчета)
		|						И Показатели.Показатель.ВозможностьИзменения <> ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.НеИзменяется)
		|						И Показатели.Показатель.ВозможностьИзменения <> ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.ПустаяСсылка)
		|						И Показатели.Показатель.ТипПоказателя <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ОценочнаяШкалаЧисловая)
		|						И Показатели.Показатель.ТипПоказателя <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ОценочнаяШкалаПроцентная)
		|						И Показатели.Показатель.ТипПоказателя <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ТарифныйРазряд)		
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ПлановыеУдержанияРаботниковСрезПоследних.ФизЛицо,
		|				Показатели.Показатель,
		|				ПлановыеУдержанияРаботниковСрезПоследних.Валюта2
		
		|			
		|			ОБЪЕДИНИТЬ ВСЕ
		|			
		|			ВЫБРАТЬ
		|				ПлановыеУдержанияРаботниковСрезПоследних.ФизЛицо КАК ФизЛицо,
		|				Показатели.Показатель КАК Показатель,
		|				СУММА(ПлановыеУдержанияРаботниковСрезПоследних.Показатель3) КАК Значение,
		|				ПлановыеУдержанияРаботниковСрезПоследних.Валюта3 КАК Валюта
		|			ИЗ
		|				РегистрСведений.ПлановыеУдержанияРаботников.СрезПоследних(&ПарамДата, ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ ВТСотрудники)) КАК ПлановыеУдержанияРаботниковСрезПоследних
		|					ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеУдержания.Показатели КАК Показатели
		|					ПО (Показатели.НомерСтроки = 3)
		|						И (Показатели.Ссылка = ПлановыеУдержанияРаботниковСрезПоследних.ВидРасчета)
		|						И Показатели.Показатель.ВозможностьИзменения <> ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.НеИзменяется)
		|						И Показатели.Показатель.ВозможностьИзменения <> ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.ПустаяСсылка)
		|						И Показатели.Показатель.ТипПоказателя <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ОценочнаяШкалаЧисловая)
		|						И Показатели.Показатель.ТипПоказателя <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ОценочнаяШкалаПроцентная)
		|						И Показатели.Показатель.ТипПоказателя <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ТарифныйРазряд)		
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ПлановыеУдержанияРаботниковСрезПоследних.ФизЛицо,
		|				Показатели.Показатель,
		|				ПлановыеУдержанияРаботниковСрезПоследних.Валюта3
		|			
		|			ОБЪЕДИНИТЬ ВСЕ
		|			
		|			ВЫБРАТЬ
		|				ПлановыеУдержанияРаботниковСрезПоследних.ФизЛицо КАК ФизЛицо,
		|				Показатели.Показатель КАК Показатель,
		|				СУММА(ПлановыеУдержанияРаботниковСрезПоследних.Показатель4) КАК Значение,
		|				ПлановыеУдержанияРаботниковСрезПоследних.Валюта4 КАК Валюта
		|			ИЗ
		|				РегистрСведений.ПлановыеУдержанияРаботников.СрезПоследних(&ПарамДата, ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ ВТСотрудники)) КАК ПлановыеУдержанияРаботниковСрезПоследних
		|					ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеУдержания.Показатели КАК Показатели
		|					ПО (Показатели.НомерСтроки = 4)
		|						И (Показатели.Ссылка = ПлановыеУдержанияРаботниковСрезПоследних.ВидРасчета)
		|						И Показатели.Показатель.ВозможностьИзменения <> ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.НеИзменяется)
		|						И Показатели.Показатель.ВозможностьИзменения <> ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.ПустаяСсылка)
		|						И Показатели.Показатель.ТипПоказателя <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ОценочнаяШкалаЧисловая)
		|						И Показатели.Показатель.ТипПоказателя <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ОценочнаяШкалаПроцентная)
		|						И Показатели.Показатель.ТипПоказателя <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ТарифныйРазряд)		
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ПлановыеУдержанияРаботниковСрезПоследних.ФизЛицо,
		|				Показатели.Показатель,
		|				ПлановыеУдержанияРаботниковСрезПоследних.Валюта4
		|			
		|			ОБЪЕДИНИТЬ ВСЕ
		|			
		|			ВЫБРАТЬ
		|				ПлановыеУдержанияРаботниковСрезПоследних.ФизЛицо КАК ФизЛицо,
		|				Показатели.Показатель КАК Показатель,
		|				СУММА(ПлановыеУдержанияРаботниковСрезПоследних.Показатель5) КАК Значение,
		|				ПлановыеУдержанияРаботниковСрезПоследних.Валюта5 КАК Валюта
		|			ИЗ
		|				РегистрСведений.ПлановыеУдержанияРаботников.СрезПоследних(&ПарамДата, ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ ВТСотрудники)) КАК ПлановыеУдержанияРаботниковСрезПоследних
		|					ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеУдержания.Показатели КАК Показатели
		|					ПО (Показатели.НомерСтроки = 3)
		|						И (Показатели.Ссылка = ПлановыеУдержанияРаботниковСрезПоследних.ВидРасчета)
		|						И Показатели.Показатель.ВозможностьИзменения <> ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.НеИзменяется)
		|						И Показатели.Показатель.ВозможностьИзменения <> ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.ПустаяСсылка)
		|						И Показатели.Показатель.ТипПоказателя <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ОценочнаяШкалаЧисловая)
		|						И Показатели.Показатель.ТипПоказателя <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ОценочнаяШкалаПроцентная)
		|						И Показатели.Показатель.ТипПоказателя <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ТарифныйРазряд)		
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ПлановыеУдержанияРаботниковСрезПоследних.ФизЛицо,
		|				Показатели.Показатель,
		|				ПлановыеУдержанияРаботниковСрезПоследних.Валюта5
		|			
		|			ОБЪЕДИНИТЬ ВСЕ
		|			
		|			ВЫБРАТЬ
		|				ПлановыеУдержанияРаботниковСрезПоследних.ФизЛицо КАК ФизЛицо,
		|				Показатели.Показатель КАК Показатель,
		|				СУММА(ПлановыеУдержанияРаботниковСрезПоследних.Показатель6) КАК Значение,
		|				ПлановыеУдержанияРаботниковСрезПоследних.Валюта6 КАК Валюта
		|			ИЗ
		|				РегистрСведений.ПлановыеУдержанияРаботников.СрезПоследних(&ПарамДата, ФизЛицо В (ВЫБРАТЬ ФизЛицо ИЗ ВТСотрудники)) КАК ПлановыеУдержанияРаботниковСрезПоследних
		|					ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеУдержания.Показатели КАК Показатели
		|					ПО (Показатели.НомерСтроки = 6)
		|						И (Показатели.Ссылка = ПлановыеУдержанияРаботниковСрезПоследних.ВидРасчета)
		|						И Показатели.Показатель.ВозможностьИзменения <> ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.НеИзменяется)
		|						И Показатели.Показатель.ВозможностьИзменения <> ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.ПустаяСсылка)
		|						И Показатели.Показатель.ТипПоказателя <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ОценочнаяШкалаЧисловая)
		|						И Показатели.Показатель.ТипПоказателя <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ОценочнаяШкалаПроцентная)
		|						И Показатели.Показатель.ТипПоказателя <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ТарифныйРазряд)		
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ПлановыеУдержанияРаботниковСрезПоследних.ФизЛицо,
		|				Показатели.Показатель,
		|				ПлановыеУдержанияРаботниковСрезПоследних.Валюта6) КАК Показатели
		|		ГДЕ
		|			Показатели.Показатель ЕСТЬ НЕ NULL 
		|			И (НЕ Показатели.Показатель.Предопределенный)";
		Если РежимВвода Тогда
			Запрос.Текст = Запрос.Текст + "
		|			И Показатели.Показатель = &Показатель";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|			И Показатели.Показатель.ВозможностьИзменения <> ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.НеИзменяется)
		|			И Показатели.Показатель.ВозможностьИзменения <> ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.ПустаяСсылка)
		|			И Показатели.Показатель.ТипПоказателя <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ОценочнаяШкалаЧисловая)
		|			И Показатели.Показатель.ТипПоказателя <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ОценочнаяШкалаПроцентная)
		|			И Показатели.Показатель.ТипПоказателя <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ТарифныйРазряд)		
		|		
		|		СГРУППИРОВАТЬ ПО
		|			Показатели.Показатель,
		|			Показатели.ФизЛицо,
		|			Показатели.Валюта) КАК ВложенныйЗапрос
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСотрудники КАК Сотрудники
		|		ПО Сотрудники.ФизЛицо = ВложенныйЗапрос.ФизЛицо
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Сотрудники.Подразделение,
		|		ВложенныйЗапрос.ФизЛицо,
		|		ВложенныйЗапрос.Показатель,
		|		ВложенныйЗапрос.Валюта
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Показатель,
		|	ФизЛицо,
		|	Подразделение";
		//|";
		
		Запрос.Выполнить();
	
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	Значение(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|	Показатели.Подразделение КАК Подразделение,
		|	Показатели.ПериодДействия КАК ПериодДействия,
		|	Показатели.Сотрудник КАК Сотрудник,
		|	Показатели.Показатель КАК Показатель,
		|	Показатели.Валюта,
		|	СУММА(Показатели.Значение) КАК Значение
		|ИЗ
		|	(ВЫБРАТЬ
		|		ПлановыеПоказатели.Подразделение КАК Подразделение,
		|		ПлановыеПоказатели.ПериодДействия КАК ПериодДействия,
		|		Сотрудники.Сотрудник КАК Сотрудник,
		|		ПлановыеПоказатели.Показатель КАК Показатель,
		|		ПлановыеПоказатели.Значение КАК Значение,
		|		ПлановыеПоказатели.Валюта КАК Валюта
		|	ИЗ
		|		ВТПлановыеПоказатели КАК ПлановыеПоказатели
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				СписокСотрудников.Сотрудник КАК Сотрудник,
		|				СписокСотрудников.Физлицо КАК Физлицо
		|			ИЗ
		|				(ВЫБРАТЬ
		|					МАКСИМУМ(РаботникиОсновноеМесто.Сотрудник) КАК Сотрудник,
		|					РаботникиОсновноеМесто.Сотрудник.Физлицо КАК Физлицо,
		|					1 КАК Приоритет
		|				ИЗ
		|					РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ПарамДата, Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)) КАК РаботникиОсновноеМесто
		|				ГДЕ
		|					РаботникиОсновноеМесто.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					РаботникиОсновноеМесто.Сотрудник.Физлицо
		|				
		|				ОБЪЕДИНИТЬ
		|				
		|				ВЫБРАТЬ
		|					МАКСИМУМ(РаботникиСовместительство.Сотрудник),
		|					РаботникиСовместительство.Сотрудник.Физлицо,
		|					2
		|				ИЗ
		|					РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ПарамДата, Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)) КАК РаботникиСовместительство
		|				ГДЕ
		|					РаботникиСовместительство.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					РаботникиСовместительство.Сотрудник.Физлицо
		|				
		|				ОБЪЕДИНИТЬ
		|				
		|				ВЫБРАТЬ
		|					МАКСИМУМ(СотрудникиДУ.Ссылка),
		|					СотрудникиДУ.Физлицо,
		|					ВЫБОР
		|						КОГДА СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ДоговорУправленческий)
		|							ТОГДА 3
		|						КОГДА СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
		|							ТОГДА 4
		|						ИНАЧЕ 5
		|					КОНЕЦ
		|				ИЗ
		|					Справочник.СотрудникиОрганизаций КАК СотрудникиДУ
		|				
		|				СГРУППИРОВАТЬ ПО
		|					СотрудникиДУ.Физлицо,
		|					ВЫБОР
		|						КОГДА СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ДоговорУправленческий)
		|							ТОГДА 3
		|						КОГДА СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
		|							ТОГДА 4
		|						ИНАЧЕ 5
		|					КОНЕЦ) КАК СписокСотрудников
		|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|						СписокФизическихЛиц.Физлицо КАК Физлицо,
		|						МИНИМУМ(СписокФизическихЛиц.Приоритет) КАК Приоритет
		|					ИЗ
		|						(ВЫБРАТЬ
		|							РаботникиОсновноеМесто.Сотрудник.Физлицо КАК Физлицо,
		|							1 КАК Приоритет
		|						ИЗ
		|							РегистрСведений.РаботникиОрганизаций.СрезПоследних(
		|									&ПарамДата,
		|									Сотрудник.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
		|										И Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)) КАК РаботникиОсновноеМесто
		|						ГДЕ
		|							РаботникиОсновноеМесто.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|						
		|						ОБЪЕДИНИТЬ
		|						
		|						ВЫБРАТЬ
		|							РаботникиСовместительство.Сотрудник.Физлицо,
		|							2
		|						ИЗ
		|							РегистрСведений.РаботникиОрганизаций.СрезПоследних(
		|									&ПарамДата,
		|									Сотрудник.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
		|										И Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)) КАК РаботникиСовместительство
		|						ГДЕ
		|							РаботникиСовместительство.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|						
		|						ОБЪЕДИНИТЬ
		|						
		|						ВЫБРАТЬ
		|							СотрудникиДУ.Физлицо,
		|							ВЫБОР
		|								КОГДА СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ДоговорУправленческий)
		|									ТОГДА 3
		|								КОГДА СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
		|									ТОГДА 4
		|								ИНАЧЕ 5
		|							КОНЕЦ
		|						ИЗ
		|							Справочник.СотрудникиОрганизаций КАК СотрудникиДУ) КАК СписокФизическихЛиц
		|					
		|					СГРУППИРОВАТЬ ПО
		|						СписокФизическихЛиц.Физлицо) КАК СписокФизическихЛиц
		|					ПО СписокСотрудников.Физлицо = СписокФизическихЛиц.Физлицо
		|						И СписокСотрудников.Приоритет = СписокФизическихЛиц.Приоритет) КАК Сотрудники
		|			ПО ПлановыеПоказатели.Физлицо = Сотрудники.Физлицо
		|	) КАК Показатели
		|
		|ГДЕ Показатели.Показатель.ВозможностьИзменения = ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.ВиденНоНеРедактируетсяПриРасчете)
		|    ИЛИ Показатели.Показатель.ВозможностьИзменения = ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.ИзменяетсяПриРасчете)
		|
		|СГРУППИРОВАТЬ ПО
		|	Показатели.Подразделение,
		|	Показатели.Сотрудник,
		|	Показатели.Показатель,
		|	Показатели.Валюта,
		|	Показатели.ПериодДействия
		|
		|УПОРЯДОЧИТЬ ПО
		|	Подразделение,
		|	Сотрудник,
		|	Показатель";

		
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Организация",		Выборка.Организация);
		ПараметрыОтбора.Вставить("Подразделение",	Выборка.Подразделение);
		ПараметрыОтбора.Вставить("Сотрудник",		Выборка.Сотрудник);
		ПараметрыОтбора.Вставить("Показатель",		Выборка.Показатель);
		
		НайденоСтрок = ЗаполненныеПоказатели.НайтиСтроки(ПараметрыОтбора);
		Если НайденоСтрок.Количество() = 0 Тогда
			
			Запись = РегистрыСведений.ЗначенияПоказателейСхемМотивации.СоздатьМенеджерЗаписи();
			
			Запись.Сотрудник		=	 Выборка.Сотрудник;
			Запись.Показатель		=	 Выборка.Показатель;
			Запись.Подразделение	=	 Выборка.Подразделение;
			Запись.Организация		=	 Выборка.Организация;
			Запись.ПериодДействия	=	 Выборка.ПериодДействия;
			Запись.Валюта			=	 Выборка.Валюта;
			Запись.Записать();
		КонецЕсли;
	КонецЦикла;


КонецПроцедуры //ДействияФормыЗаполнитьПоРегистру

// Выводит отчет "Динамика показателей"
//
Процедура ДействияФормыДинамикаПоказателей(Кнопка)
	
	ДинамикаПоказателей = Отчеты.АнализПоказателей.Создать();
	
	ТиповыеОтчеты.УстановитьПараметр(ДинамикаПоказателей.КомпоновщикНастроек,  "НачалоПериода", НачалоГода(ПериодДействия));
	ТиповыеОтчеты.УстановитьПараметр(ДинамикаПоказателей.КомпоновщикНастроек,  "КонецПериода", КонецМесяца(ПериодДействия));
	
	Если ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
		ТиповыеОтчеты.УстановитьПараметр(ДинамикаПоказателей.КомпоновщикНастроек,  "РеглУчет", Истина);
	Иначе
		ТиповыеОтчеты.УстановитьПараметр(ДинамикаПоказателей.КомпоновщикНастроек,  "УпрУчет", Истина);
	КонецЕсли;
	
	ФормаОтчёта = ДинамикаПоказателей.ПолучитьФорму();
	ФормаОтчёта.ОбновитьОтчет();
	ФормаОтчёта.Открыть();
	
КонецПроцедуры //ДействияФормыДинамикаПоказателей

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ КОМАНДНОЙ ПАНЕЛИ ОтборыЕжемесячныхПоказателей

// Устанавливает устанавливает порядок ежемесячных показателей ввода "По сотрудникам"
//
Процедура ОтборыЕжемесячныхПоказателейСотрудники()
	
	Если Не РежимВвода Тогда
		ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.ТекущаяСтраница = ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.Страницы.Сотрудники;
	КонецЕсли;
		
	ЭлементыФормы.ОтборыЕжемесячныхПоказателей.Кнопки["Сотрудники"].Пометка		= Истина;
	ЭлементыФормы.ОтборыЕжемесячныхПоказателей.Кнопки["Подразделения"].Пометка	= Ложь;
	
	ЭлементыФормы.ЕжемесячныеПоказатели.Колонки.Показатель.Видимость = Не РежимВвода;
	ЭлементыФормы.ЕжемесячныеПоказатели.Колонки.Сотрудник.Видимость = РежимВвода;
	ЭлементыФормы.ЕжемесячныеПоказатели.Колонки.Подразделение.Видимость = Ложь;
	
	УстановитьПустуюСсылкуНаПродразделение();
	
	ОтборПоСотрудникуЕжемесячно();
	
	ЭлементыФормы.РежимВвода.Формат = "БЛ='по сотрудникам'; БИ='по показателям'";
	УстановитьОтборПоказателей();
	
	Если РежимВвода Тогда
		ПоказателиПриАктивизацииСтроки();
	Иначе
		СотрудникиПриАктивизацииСтроки();
	КонецЕсли;
	
	УстановитьВидимостьОрганизацииИТН();
	
КонецПроцедуры //ОтборыЕжемесячныхПоказателейСотрудники

// Устанавливает устанавливает порядок ежемесячных показателей ввода "По подразделениям"
//
Процедура ОтборыЕжемесячныхПоказателейПодразделения()

	Если Не РежимВвода Тогда
		Если ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
			ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.ТекущаяСтраница = ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.Страницы.Подразделения;
		Иначе
			ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.ТекущаяСтраница = ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.Страницы.ЦФО;
		КонецЕсли;
	КонецЕсли;
	
	ЭлементыФормы.ЕжемесячныеПоказатели.Колонки.Показатель.Видимость = Не РежимВвода;
	ЭлементыФормы.ЕжемесячныеПоказатели.Колонки.Сотрудник.Видимость = Ложь;
	ЭлементыФормы.ЕжемесячныеПоказатели.Колонки.Подразделение.Видимость = РежимВвода;

	ЭлементыФормы.ОтборыЕжемесячныхПоказателей.Кнопки["Сотрудники"].Пометка		= Ложь;
	ЭлементыФормы.ОтборыЕжемесячныхПоказателей.Кнопки["Подразделения"].Пометка	= Истина;
	
	ЭлементыФормы.РежимВвода.Формат = "БЛ='по подразделениям'; БИ='по показателям'";
	УстановитьОтборПоказателей();
	
	УстановитьОтборПоПодразделениюИОрганизацииЕжемесячно(Ложь, НЕ РежимВвода,НЕ РежимВвода);
	
	УстановитьВидимостьОрганизацииИТН();
	
	Если РежимВвода Тогда
		ПоказателиПриАктивизацииСтроки();
	Иначе
	//	СотрудникиПриАктивизацииСтроки();
	КонецЕсли;
	
	
КонецПроцедуры //ОтборыЕжемесячныхПоказателейПодразделения


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ "ТабличноеПолеПодразделенияОрганизацийЕжемесячные" ФОРМЫ

// Процедура - обработчик события "ПриАктивизацииСтроки" табличного поля
//
Процедура ТабличноеПолеПодразделенияОрганизацийЕжемесячныеПриАктивизацииСтроки()
	
	ТекущаяСтрока = ЭлементыФормы.ТабличноеПолеПодразделенияОрганизацийЕжемесячные.ТекущаяСтрока;
	
	ТекущаяКолонка = ЭлементыФормы.ТабличноеПолеПодразделенияОрганизацийЕжемесячные.ТекущаяКолонка.Имя;
	
	ВыбраноПодразделениеЕжемесячное = ТекущаяКолонка = "Наименование";

	Если ТекущаяСтрока <>Неопределено  Тогда
		ОрганизацияЕжемесячные = ТекущаяСтрока.Владелец;
		Если Не ЗначениеЗаполнено(ОрганизацияЕжемесячные) Тогда
			мОрганизацияНеВыбранаЕжемесячно		= Истина;
			ВыбраноПодразделениеЕжемесячное		= Ложь;
		Иначе
			мОрганизацияНеВыбранаЕжемесячно		= Ложь;
		КонецЕсли;
		Если ОрганизацияЕжемесячные <> мПрежняяОрганизацияЕжемесячно Тогда
			ПриСменеОрганизации();
			мПрежняяОрганизацияЕжемесячно = ОрганизацияЕжемесячные;
		КонецЕсли;
	Иначе
		УстановитьПустуюСсылкуНаПродразделение();
	КонецЕсли;
	
	Если ВыбраноПодразделениеЕжемесячное Тогда
		ПодразделениеЕжемесячные = ТекущаяСтрока;
	Иначе
		УстановитьПустуюСсылкуНаПродразделение();
	КонецЕсли;
	
	УстановитьОтборПоПодразделениюИОрганизацииЕжемесячно();
	
	ИзменитьЗаголовокПоказателей("Ежемесячно");

КонецПроцедуры //ТабличноеПолеПодразделенияОрганизацийЕжемесячныеПриАктивизацииСтроки

// Процедура - обработчик события "ПриПолученииДанных" табличного поля
//
Процедура ТабличноеПолеПодразделенияОрганизацийПриПолученииДанных(Элемент, ОформленияСтрок)
	
	ОтображенныеОрганизации.Очистить();
	
	Для Каждого Оформление Из ОформленияСтрок Цикл
		Если Оформление.ДанныеСтроки = НеОпределено Тогда
			Оформление.Ячейки.Наименование.УстановитьТекст(НСтр("ru='Все организации';uk='Усі організації'"));
			Оформление.Ячейки.Наименование.ОтображатьКартинку	= Ложь;
			Оформление.Ячейки.Наименование.Шрифт				= мЖирныйШрифт;
			Оформление.Ячейки.Организация.Видимость				= Ложь;
			Продолжить;
		КонецЕсли;
		
		Представление		= "";
		НазваниеОрганизации	= "";
		
		Если ПервоеПодразделение(Оформление.ДанныеСтроки.Ссылка, Оформление.ДанныеСтроки.Владелец, НазваниеОрганизации) Тогда
			Оформление.Ячейки.Организация.УстановитьТекст("      " + НазваниеОрганизации);
			Оформление.Ячейки.Организация.Шрифт = мЖирныйШрифт;
		Иначе
			Оформление.Ячейки.Организация.Видимость = Ложь;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры //ТабличноеПолеПодразделенияОрганизацийПриПолученииДанных


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ "Сотрудники" ФОРМЫ

// Процедура - обработчик события "ПриАктивизацииСтроки" табличного поля
//
Процедура СотрудникиПриАктивизацииСтроки()
	
	ОтборПоСотрудникуЕжемесячно();
	ИзменитьЗаголовокПоказателей("Ежемесячно");
	УстановитьОтборПоПодразделениюИОрганизацииЕжемесячно(Истина, Ложь, Ложь);
	
КонецПроцедуры //СотрудникиПриАктивизацииСтроки

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ "ТабличноеПолеПодразделенияПоЦФОЕжемесячные" ФОРМЫ

// Процедура - обработчик события "ПриАктивизацииСтроки" табличного поля
//
Процедура ТабличноеПолеПодразделенияПоЦФОЕжемесячныеПриАктивизацииСтроки(Элемент)
	
	ПодразделениеЕжемесячные = ЭлементыФормы.ТабличноеПолеПодразделенияПоЦФОЕжемесячные.ТекущаяСтрока;
	ТекущаяКолонка = ЭлементыФормы.ТабличноеПолеПодразделенияПоЦФОЕжемесячные.ТекущаяКолонка;
	
	Если ПодразделениеЕжемесячные <> Неопределено Тогда
		ВыбраноПодразделениеЕжемесячное = (ПодразделениеЕжемесячные <> Справочники.Подразделения.ПустаяСсылка());
		
		УстановитьОтборПоПодразделениюИОрганизацииЕжемесячно();

	КонецЕсли;
	ОрганизацияЕжемесячные = Справочники.Организации.ПустаяСсылка();
	
	ИзменитьЗаголовокПоказателей("Ежемесячно");

КонецПроцедуры //ТабличноеПолеПодразделенияПоЦФОЕжемесячныеПриАктивизацииСтроки


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ "Показатели" ФОРМЫ

// Процедура - обработчик события "ПриАктивизацииСтроки" табличного поля
//
Процедура ПоказателиПриАктивизацииСтроки()
	
	Если ЭлементыФормы.Показатели.ТекущаяСтрока = Неопределено Тогда
		ЕжемесячныеПоказатели.Отбор.Показатель.Установить(Справочники.ПоказателиСхемМотивации.ПустаяСсылка());
	Иначе
		ЕжемесячныеПоказатели.Отбор.Показатель.Установить(ЭлементыФормы.Показатели.ТекущаяСтрока);
	КонецЕсли;
	ЕжемесячныеПоказатели.Отбор.Сотрудник.Использование = Ложь;
	ЕжемесячныеПоказатели.Отбор.Организация.Использование = Ложь;
	ЕжемесячныеПоказатели.Отбор.Подразделение.Использование = Ложь;

	
	ИзменитьЗаголовокПоказателей("Ежемесячно");
	
КонецПроцедуры //ПоказателиПриАктивизацииСтроки


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ "ЕжемесячныеПоказатели" ФОРМЫ

// Процедура - обработчик события "ПередНачаломДобавления" табличного поля
//
Процедура ЕжемесячныеПоказателиПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	ТекущаяСтраница = ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.ТекущаяСтраница;
	Если ТекущаяСтраница = ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.Страницы.Сотрудники Тогда
		
		ТекущиеДанные = ЭлементыФормы.Сотрудники.ТекущиеДанные;
		
		Если ТекущиеДанные = Неопределено Тогда
			
			ОбработкаКомментариев.УдалитьСообщения();
			ОбработкаКомментариев.ДобавитьСообщение(НСтр("ru='Не выбран сотрудник!';uk='Не обраний співробітник!'"), Перечисления.ВидыСообщений.Ошибка);
			ОбработкаКомментариев.ПоказатьСообщения();
			Отказ = Истина;
			
		КонецЕсли;
	ИначеЕсли ТекущаяСтраница = ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.Страницы.Подразделения Тогда
		
		ТекущиеДанные = ЭлементыФормы.ТабличноеПолеПодразделенияОрганизацийЕжемесячные.ТекущиеДанные;
		
		Если ТекущиеДанные = Неопределено Тогда
			
			ОбработкаКомментариев.УдалитьСообщения();
			ОбработкаКомментариев.ДобавитьСообщение(НСтр("ru='Не выбрано ни подразделение ни организация!';uk='Не вибраний ні підрозділ ні організація!'"), Перечисления.ВидыСообщений.Ошибка);
			ОбработкаКомментариев.ПоказатьСообщения();
			Отказ = Истина;
			
		КонецЕсли;
		
	ИначеЕсли ТекущаяСтраница = ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.Страницы.Показатели Тогда
		
		ТекущиеДанные = ЭлементыФормы.Показатели.ТекущиеДанные;
		
		Если ТекущиеДанные = Неопределено Тогда
			
			ОбработкаКомментариев.УдалитьСообщения();
			ОбработкаКомментариев.ДобавитьСообщение(НСтр("ru='Не выбран показатель!';uk='Не вибраний показник!'"), Перечисления.ВидыСообщений.Ошибка);
			ОбработкаКомментариев.ПоказатьСообщения();
			Отказ = Истина;
			
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры //ЕжемесячныеПоказателиПередНачаломДобавления

// Процедура - обработчик события "ПередОкончаниемРедактирования" табличного поля
//
Процедура ЕжемесячныеПоказателиПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	ТекущаяСтраница = ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.ТекущаяСтраница;
	Если ТекущаяСтраница = ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.Страницы.Показатели Тогда
		
		Если ЭлементыФормы.ОтборыЕжемесячныхПоказателей.Кнопки.Сотрудники.Пометка Тогда
			
			Если Не ЗначениеЗаполнено(Элемент.ТекущиеДанные.Сотрудник)  И Не ОтменаРедактирования Тогда
				
				ОбработкаКомментариев.УдалитьСообщения();
				ОбработкаКомментариев.ДобавитьСообщение(НСтр("ru='Не выбран сотрудник!';uk='Не обраний співробітник!'"), Перечисления.ВидыСообщений.Ошибка);
				ОбработкаКомментариев.ПоказатьСообщения();
				Отказ = Истина;
				
			КонецЕсли;
			
		Иначе
			
			Если ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
				Если Не ЗначениеЗаполнено(Элемент.ТекущиеДанные.Организация)  И Не ОтменаРедактирования Тогда
					
					ОбработкаКомментариев.УдалитьСообщения();
					ОбработкаКомментариев.ДобавитьСообщение(НСтр("ru='Не выбрана организация!';uk='Не обрана організація!'"), Перечисления.ВидыСообщений.Ошибка);
					ОбработкаКомментариев.ПоказатьСообщения();
					Отказ = Истина;
					
				КонецЕсли;
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(Элемент.ТекущиеДанные.Подразделение) И Не ОтменаРедактирования Тогда
				
				ОбработкаКомментариев.УдалитьСообщения();
				ОбработкаКомментариев.ДобавитьСообщение(НСтр("ru='Не выбрано подразделение!';uk='Не вибраний підрозділ!'"), Перечисления.ВидыСообщений.Ошибка);
				ОбработкаКомментариев.ПоказатьСообщения();
				Отказ = Истина;
				
			КонецЕсли;

		КонецЕсли;
	КонецЕсли;

КонецПроцедуры //ПередОкончаниемРедактирования


// Процедура - обработчик события "ПриПолученииДанных" табличного поля
//
Процедура ЕжемесячныеПоказателиПриПолученииДанных(Элемент, ОформленияСтрок)
	
	ВыводитьТН = РежимВвода И ЭлементыФормы.ОтборыЕжемесячныхПоказателей.Кнопки.Сотрудники.Пометка;
	Если ВыводитьТН Тогда
		Для Каждого Оформление Из ОформленияСтрок Цикл
			
			Если Оформление.ДанныеСтроки <> НеОпределено Тогда
				
				Оформление.Ячейки.ТабельныйНомер.УстановитьТекст("      " +  Оформление.Ячейки.сотрудник.Значение.Код);
				
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры //ЕжемесячныеПоказателиПриПолученииДанных

// Процедура - обработчик события "ПриНачалеРедактирования" табличного поля
//
Процедура ЕжемесячныеПоказателиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		ТекущаяСтраница = ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.ТекущаяСтраница;
		Если ТекущаяСтраница = ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.Страницы.Сотрудники Тогда
			
			ТекущиеДанные = ЭлементыФормы.Сотрудники.ТекущиеДанные;
			
			Если ТекущиеДанные <> Неопределено Тогда
				
				Сотрудник							= ТекущиеДанные.Ссылка;
				Элемент.ТекущиеДанные.Сотрудник		= Сотрудник;
				
				Если ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
					Элемент.ТекущиеДанные.Организация		= Сотрудник.Организация;
				Иначе
					Элемент.ТекущиеДанные.Организация		= Справочники.Организации.ПустаяСсылка();
				КонецЕсли;

			КонецЕсли;
			
		ИначеЕсли ТекущаяСтраница = ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.Страницы.Подразделения Тогда
			
			ТекущиеДанные = ЭлементыФормы.ТабличноеПолеПодразделенияОрганизацийЕжемесячные.ТекущиеДанные;
			
			Если ТекущиеДанные <> Неопределено Тогда
				Элемент.ТекущиеДанные.Организация = ТекущиеДанные.Владелец;
				Если ЭлементыФормы.ТабличноеПолеПодразделенияОрганизацийЕжемесячные.ТекущаяКолонка.Имя = "Наименование" Тогда
					Элемент.ТекущиеДанные.Подразделение	= ТекущиеДанные.Ссылка;
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ТекущаяСтраница = ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.Страницы.ЦФО Тогда
			
			ТекущиеДанные = ЭлементыФормы.ТабличноеПолеПодразделенияПоЦФОЕжемесячные.ТекущиеДанные;
			
			Если ТекущиеДанные <> Неопределено Тогда
				
				Элемент.ТекущиеДанные.Подразделение	= ТекущиеДанные.Ссылка;
				
			КонецЕсли;
			
		ИначеЕсли ТекущаяСтраница = ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.Страницы.Показатели Тогда
			
			ТекущиеДанные = ЭлементыФормы.Показатели.ТекущиеДанные;
			
			Если ТекущиеДанные <> Неопределено Тогда
				
				Элемент.ТекущиеДанные.Показатель	= ТекущиеДанные.Ссылка;
				
				Если ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
					
					Если ЭлементыФормы.ОтборыЕжемесячныхПоказателей.Кнопки.Подразделения.Пометка Тогда
						Элемент.ТекущиеДанные.Подразделение	= Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
					КонецЕсли;
				Иначе
					Если ЭлементыФормы.ОтборыЕжемесячныхПоказателей.Кнопки.Подразделения.Пометка Тогда
						Элемент.ТекущиеДанные.Подразделение	= Справочники.Подразделения.ПустаяСсылка();
					КонецЕсли;
				КонецЕсли;
				
				Элемент.ТекущиеДанные.Сотрудник	= Справочники.СотрудникиОрганизаций.ПустаяСсылка();
				
			КонецЕсли;
			
		КонецЕсли;
		Элемент.ТекущиеДанные.ПериодДействия	= ПериодДействия;
	КонецЕсли;
	
КонецПроцедуры //ЕжемесячныеПоказателиПриНачалеРедактирования

// Процедура - обработчик события "НачалоВыбора" реквезита "Показатель" табличного поля
//
Процедура ЕжемесячныеПоказателиПоказательНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ВыборПоказателья(Элемент, СтандартнаяОбработка, ВыбраноПодразделениеЕжемесячное, ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.ТекущаяСтраница = ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.Страницы.Сотрудники);
		
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" реквезита "Сотрудник" табличного поля
//
Процедура ЕжемесячныеПоказателиСотрудникПриИзменении(Элемент)
	
	Значение = Элемент.Значение;
	
	Если ЗначениеЗаполнено(Значение) Тогда
		Если ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
			ЭлементыФормы.ЕжемесячныеПоказатели.ТекущиеДанные.Организация = Значение.Организация;
		Иначе
			ЭлементыФормы.ЕжемесячныеПоказатели.ТекущиеДанные.Организация = Справочники.Организации.ПустаяСсылка();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" реквезита "Подразделение" табличного поля
//
Процедура ЕжемесячныеПоказателиПодразделениеПриИзменении(Элемент)
	
	Значение = Элемент.Значение;
	
	Если ЗначениеЗаполнено(Значение) Тогда
		Если ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
			ЭлементыФормы.ЕжемесячныеПоказатели.ТекущиеДанные.Организация = Значение.Владелец;
		Иначе
			ЭлементыФормы.ЕжемесячныеПоказатели.ТекущиеДанные.Организация = Справочники.Организации.ПустаяСсылка();
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ "ПлановыеЗначенияПоказателейСхемМотивации" ФОРМЫ

// Процедура - обработчик события "ПриНачалеРедактирования" табличного поля
//
Процедура ПлановыеЗначенияПоказателейСхемМотивацииПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда 
		Если ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
			Элемент.ТекущиеДанные.Организация	= ОрганизацияПереодически;
		Иначе
			Элемент.ТекущиеДанные.Организация	= Справочники.Организации.ПустаяСсылка();
		КонецЕсли;
		
		Элемент.ТекущиеДанные.Подразделение	= ПодразделениеПереодически;
	КонецЕсли;

КонецПроцедуры //ПлановыеЗначенияПоказателейСхемМотивацииПриНачалеРедактирования

// Процедура - обработчик события "НачалоВыбора" реквезита "Показатель" табличного поля
//
Процедура ПлановыеЗначенияПоказателейСхемМотивацииПоказательНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ВыборПоказателья(Элемент, СтандартнаяОбработка, ВыбраноПодразделениеПереодически,	Ложь,	"Периодически");
	
КонецПроцедуры //ПлановыеЗначенияПоказателейСхемМотивацииПоказательНачалоВыбора

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ "ТабличноеПолеПодразделенияОрганизаций" ФОРМЫ

// Процедура - обработчик события "ПриАктивизацииСтроки" табличного поля
//
Процедура ТабличноеПолеПодразделенияОрганизацийПриАктивизацииСтроки(Элемент)
	
	ТекущаяСтрока = ЭлементыФормы.ТабличноеПолеПодразделенияОрганизаций.ТекущаяСтрока;
	ТекущаяКолонка = ЭлементыФормы.ТабличноеПолеПодразделенияОрганизаций.ТекущаяКолонка.Имя;
	
	Если ТекущаяСтрока <> Неопределено Тогда
		ОрганизацияПереодически = ТекущаяСтрока.Владелец;
		Если ОрганизацияПереодически <> мПрежняяОрганизацияПериодически Тогда
			ПриСменеОрганизации();
		КонецЕсли;
	КонецЕсли;
		
	ВыбраноПодразделениеПереодически = ТекущаяКолонка = "Наименование";
	
	Если ВыбраноПодразделениеПереодически Тогда
		ПодразделениеПереодически = ТекущаяСтрока;
	Иначе
		Если ВидОрганизационнойСтруктурыПредприятия = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
			ПодразделениеПереодически = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
		Иначе
			ПодразделениеПереодически = Справочники.Подразделения.ПустаяСсылка();
		КонецЕсли;

	КонецЕсли;
	
	УстановитьОтборПоПодразделениюИОрганизацииПериодически();
	
	ИзменитьЗаголовокПоказателей("Периодически");

КонецПроцедуры //ТабличноеПолеПодразделенияОрганизацийПриАктивизацииСтроки

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ "ТабличноеПолеПодразделенияПоЦФО" ФОРМЫ

// Процедура - обработчик события "ПриАктивизацииСтроки" табличного поля
//
Процедура ТабличноеПолеПодразделенияПоЦФОПриАктивизацииСтроки(Элемент)
	
	ТекущаяСтрока = ЭлементыФормы.ТабличноеПолеПодразделенияПоЦФО.ТекущаяСтрока;
	
	ОрганизацияПереодически = Справочники.Организации.ПустаяСсылка();
	ПодразделениеПереодически = ТекущаяСтрока;
	
	ВыбраноПодразделениеПереодически = ЗначениеЗаполнено(ПодразделениеПереодически);
	
	УстановитьОтборПоПодразделениюИОрганизацииПериодически();
	
	ИзменитьЗаголовокПоказателей("Периодически");

КонецПроцедуры //ТабличноеПолеПодразделенияПоЦФОПриАктивизацииСтроки


Процедура НадписьУправлениеВидимостьюДолжностейНажатие(Элемент)
	
	ПоказыватьПериодическиеПоказатели = Не ПоказыватьПериодическиеПоказатели;

	УстановитьПривязкиПериодическихПоказателей();

КонецПроцедуры

Процедура ЕжемесячныеПоказателиПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Перем Показатель;
	
	Если ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.ТекущаяСтраница = ЭлементыФормы.ПанельОтборовПоЕжемесячнымПоказателям.Страницы.Показатели Тогда
		Если ЭлементыФормы.Показатели.ТекущаяСтрока <> Неопределено Тогда
			Показатель = ЭлементыФормы.Показатели.ТекущаяСтрока.Ссылка;
		КонецЕсли;
	Иначе
		Если ОформлениеСтроки.Ячейки.Показатель <> Неопределено Тогда
			Показатель = ОформлениеСтроки.Ячейки.Показатель.Значение;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Показатель) Тогда
		ОформлениеСтроки.Ячейки["Валюта"].ТолькоПросмотр = (Показатель.ТипПоказателя <> Перечисления.ТипыПоказателейСхемМотивации.Денежный);
	КонецЕсли;
	
КонецПроцедуры //ЕжемесячныеПоказателиПриВыводеСтроки

Процедура ПлановыеЗначенияПоказателейСхемМотивацииПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ОформлениеСтроки.Ячейки["Валюта"].ТолькоПросмотр = (ДанныеСтроки.Показатель.ТипПоказателя <> Перечисления.ТипыПоказателейСхемМотивации.Денежный);

КонецПроцедуры

Процедура КоманднаяПанельСотрудникиУпорядочитьПоКоду(Кнопка)
	Сотрудники.Порядок.Установить("Код");
КонецПроцедуры

Процедура КоманднаяПанельСотрудникиУпорядочитьПоНаименованию(Кнопка)
	
	Сотрудники.Порядок.Установить("Наименование");

КонецПроцедуры





////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

мЖирныйШрифт = Новый Шрифт(ШрифтыСтиля.ШрифтТекста,,, Истина);
ОтображенныеОрганизации = Новый Соответствие;
