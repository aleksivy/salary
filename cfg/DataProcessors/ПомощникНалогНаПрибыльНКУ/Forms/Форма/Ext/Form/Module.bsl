////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мЗадатьВопросПриЗакрытии;
Перем мСтруктураПараметрыДоОткрытияФормы Экспорт;
Перем мСтруктураТабличногоПоля Экспорт;
Перем мСтруктураСтраниц Экспорт;

Перем мНомерТекущейСтраницы Экспорт;
Перем мКоличествоСтраниц Экспорт;


///////////////////////////////////////////////////////////////////////////////
//ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Функция ПолучитьСтатьюДекларации(СтатьяЗатрат)
	
	Возврат 0;
	
КонецФункции	

Процедура ЗаполнитьОбъектыАналитики()
	
	Запрос = Новый Запрос();
	
	Если ТаблицаСтатьиЗатрат.Количество() = 0 Тогда
		
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	СтатьиЗатрат.Ссылка КАК СтатьяЗатрат,
        |	СтатьиЗатрат.ВидЗатрат,
        |	СтатьиЗатрат.ХарактерЗатрат,
        |	СтатьиЗатрат.СтатьяДекларацииПоНалогуНаПрибыль КАК СтатьяДекларации
        |ИЗ
        |	Справочник.СтатьиЗатрат КАК СтатьиЗатрат
		|ГДЕ СтатьиЗатрат.СтатьяДекларацииПоНалогуНаПрибыль = ЗНАЧЕНИЕ(Справочник.СтатьиНалоговыхДеклараций.ПустаяСсылка) ";
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			НС = ТаблицаСтатьиЗатрат.Добавить();
			ЗаполнитьЗначенияСвойств(НС, Выборка);
			
			НС.СтатьяДекларации = ПолучитьСтатьюДекларации(НС.СтатьяЗатрат);
			
		КонецЦикла;	
		
	КонецЕсли;
	
	Если ТаблицаНоменклатурныеГруппы.Количество() = 0 Тогда
		
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	НоменклатурныеГруппы.Ссылка КАК НоменклатурнаяГруппа,
        |	НоменклатурныеГруппы.НалоговоеНазначениеВПроизводстве КАК НалоговоеНазначение
        |ИЗ
        |	Справочник.НоменклатурныеГруппы КАК НоменклатурныеГруппы
		|ГДЕ НоменклатурныеГруппы.НалоговоеНазначениеВПроизводстве = ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) ";
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			НС = ТаблицаНоменклатурныеГруппы.Добавить();
			ЗаполнитьЗначенияСвойств(НС, Выборка);
			
		КонецЦикла;	
		
	КонецЕсли;
	
	Если ТаблицаОбъектыСтроительства.Количество() = 0 Тогда
		
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	ОбъектыСтроительства.Ссылка КАК ОбъектСтроительства,
        |	ОбъектыСтроительства.НалоговоеНазначение
        |ИЗ
        |	Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
		|ГДЕ ОбъектыСтроительства.НалоговоеНазначение = ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) ";
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			НС = ТаблицаОбъектыСтроительства.Добавить();
			ЗаполнитьЗначенияСвойств(НС, Выборка);
			
		КонецЦикла;	
		
	КонецЕсли;
	
КонецПроцедуры	

Процедура ЗаполнитьНастройкиОтражения()
	
	Если НастройкаОтражения.Количество() > 0 Тогда
		Возврат;
	КонецЕсли;	
	
	Запрос = Новый Запрос();
	
	Запрос.Текст = "
	|ВЫБРАТЬ
    |	СпособыОтраженияЗарплатыВРеглУчете.Ссылка КАК СпособОтражения,
	|	СпособыОтраженияЗарплатыВРеглУчете.СчетДТ КАК СчетДТ,
    |	СпособыОтраженияЗарплатыВРеглУчете.НалоговоеНазначениеДоНКУ КАК ТекНазначение,
	|	СпособыОтраженияЗарплатыВРеглУчете.НалоговоеНазначение КАК Назначение
    |ИЗ
	|	Справочник.СпособыОтраженияЗарплатыВРеглУчете КАК СпособыОтраженияЗарплатыВРеглУчете
	|ГДЕ
	|   НЕ СпособыОтраженияЗарплатыВРеглУчете.ЭтоГруппа
	|   И (НЕ СпособыОтраженияЗарплатыВРеглУчете.Предопределенный
	|	ИЛИ СпособыОтраженияЗарплатыВРеглУчете.Ссылка = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ОтражениеНачисленийПоУмолчанию))
	|   
	|";
	
	Выборка =  Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если ЗначениеЗаполнено(Выборка.Назначение) Тогда
			Продолжить;
		КонецЕсли;
		
		СчетЗатрат = ЗначениеЗаполнено(Выборка.СпособОтражения.СчетДт) И
					(Выборка.СпособОтражения.СчетДт.ПринадлежитЭлементу(Планысчетов.Хозрасчетный.ЗатратыПоЭлементам) 
		              ИЛИ Выборка.СпособОтражения.СчетДт.ПринадлежитЭлементу(Планысчетов.Хозрасчетный.ЗатратыДеятельности));
					  
		Если Не СчетЗатрат Тогда
			Продолжить;
		КонецЕсли;	
					  
		НоваяСтрока = НастройкаОтражения.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		Если НоваяСтрока.ТекНазначение.ГруппаНалоговогоНазначения = Перечисления.ГруппыНалоговыхНазначений.НалоговыеНазначенияДоходовИЗатрат Тогда
			НоваяСтрока.Назначение = НоваяСтрока.ТекНазначение;
		Иначе
			Если НоваяСтрока.ТекНазначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.БытУслуги 
				или НоваяСтрока.ТекНазначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.БытУслугиАморт
				или НоваяСтрока.ТекНазначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.БытУслугиАмортНеОблагНДС
				или НоваяСтрока.ТекНазначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.БытУслугиНеОблагНДС Тогда
				НоваяСтрока.Назначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.НКУ_БытУслуги;
			ИначеЕсли НоваяСтрока.ТекНазначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.ИгорБизнес 
				или НоваяСтрока.ТекНазначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.ИгорБизнесАморт
				или НоваяСтрока.ТекНазначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.ИгорБизнесАмортНеОблагНДС
				или НоваяСтрока.ТекНазначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.ИгорБизнесНеОблагНДС Тогда
				НоваяСтрока.Назначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.НКУ_ИгорБизнес;
			ИначеЕсли НоваяСтрока.ТекНазначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.НеХозДеятельность 
				или НоваяСтрока.ТекНазначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.НеХозДеятельностьАморт
				или НоваяСтрока.ТекНазначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.НеХозДеятельностьАмортНеОблагНДС
				или НоваяСтрока.ТекНазначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.НеХозДеятельностьНеОблагНДС Тогда
				НоваяСтрока.Назначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.НКУ_НеХозДеятельность;	
			ИначеЕсли НоваяСтрока.ТекНазначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.ОбмВалюты 
				или НоваяСтрока.ТекНазначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.ОбмВалютыАморт
				или НоваяСтрока.ТекНазначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.ОбмВалютыАмортНеОблагНДС
				или НоваяСтрока.ТекНазначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.ОбмВалютыНеОблагНДС Тогда
				НоваяСтрока.Назначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.НКУ_ОбмВалюты;
			ИначеЕсли НоваяСтрока.ТекНазначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.ТоргДеятельность 
				или НоваяСтрока.ТекНазначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.ТоргДеятельностьАморт
				или НоваяСтрока.ТекНазначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.ТоргДеятельностьАмортНеОблагНДС
				или НоваяСтрока.ТекНазначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.ТоргДеятельностьНеОблагНДС Тогда
				НоваяСтрока.Назначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.НКУ_ТоргДеятельность;	
			Иначе	
				НоваяСтрока.Назначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.НКУ_ХозДеятельность;
			КонецЕсли;	
		КонецЕсли;
		
	КонецЦикла;	

КонецПроцедуры

Процедура ЗаполнитьСтатьиЗатратВзносов()
	
	Если НаборЗаписейСтатьиЗатратВзносов.Количество() > 0 Тогда
		Возврат;
	КонецЕсли;
	
	НаборЗаписейСтатьиЗатратВзносов.Отбор.Период.Установить(ПроведениеРасчетов.ДатаВводаНПНК()); 
    НаборЗаписейСтатьиЗатратВзносов.Прочитать();
	
	
КонецПроцедуры

Процедура ЗаполнитьСписокДокументов(Переформировать=Ложь)
	
	Если НЕ Переформировать И СписокДокументов.Количество() > 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если Переформировать Тогда
		СписокДокументов.Очистить();
	КонецЕсли;	
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДатаВвода",ПроведениеРасчетов.ДатаВводаНПНК());
	Запрос.УстановитьПараметр("Организация",ОтборОрганизация);
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ИСТИНА КАК Отметка,
	|	ОтражениеЗарплатыВРеглУчете.Ссылка КАК Документ,
    |	ОтражениеЗарплатыВРеглУчете.Организация,
    |	ОтражениеЗарплатыВРеглУчете.ПериодРегистрации,
    |	ОтражениеЗарплатыВРеглУчете.КраткийСоставДокумента
    |ИЗ
    |	Документ.ОтражениеЗарплатыВРеглУчете КАК ОтражениеЗарплатыВРеглУчете
    |ГДЕ
	|	ОтражениеЗарплатыВРеглУчете.Проведен
	|	И ОтражениеЗарплатыВРеглУчете.Дата >= &ДатаВвода
	|	";
	
	Если ЗначениеЗаполнено(ОтборОрганизация) Тогда
		Запрос.Текст = Запрос.Текст + "И ОтражениеЗарплатыВРеглУчете.Организация = &Организация";
	КонецЕсли;	
		
	Выборка = Запрос.Выполнить().Выбрать();
		
	Пока Выборка.Следующий() Цикл
			
		НС = СписокДокументов.Добавить();
		ЗаполнитьЗначенияСвойств(НС, Выборка);
		
	КонецЦикла;
	
	СписокДокументов.Сортировать("ПериодРегистрации");
	
	
Конецпроцедуры	

Процедура ВыполнитьОбъектыАналитики()
	
	Для Каждого ТекЭлемент из ТаблицаСтатьиЗатрат Цикл
		Если ТекЭлемент.СтатьяЗатрат.СтатьяДекларацииПоНалогуНаПрибыль = ТекЭлемент.СтатьяДекларации Тогда
			Продолжить;
		КонецЕсли;
		ТекОбъект = ТекЭлемент.СтатьяЗатрат.ПолучитьОбъект();
		ТекОбъект.СтатьяДекларацииПоНалогуНаПрибыль = ТекЭлемент.СтатьяДекларации;
		ТекОбъект.Записать();
		Сообщить(НСтр("ru='Записана статья затрат ';uk='Записана стаття витрат '")+ ТекОбъект.Наименование);
		
	КонецЦикла;
	
	Для Каждого ТекЭлемент из ТаблицаНоменклатурныеГруппы Цикл
		Если ТекЭлемент.НоменклатурнаяГруппа.НалоговоеНазначениеВПроизводстве = ТекЭлемент.НалоговоеНазначение Тогда
			Продолжить;
		КонецЕсли;
		ТекОбъект = ТекЭлемент.НоменклатурнаяГруппа.ПолучитьОбъект();
		ТекОбъект.НалоговоеНазначениеВПроизводстве = ТекЭлемент.НалоговоеНазначение;
		ТекОбъект.Записать();
		Сообщить(НСтр("ru='Записана номенклатурная группа ';uk='Записана номенклатурна група '")+ ТекОбъект.Наименование);
		
	КонецЦикла;
	
	Для Каждого ТекЭлемент из ТаблицаОбъектыСтроительства Цикл
		Если ТекЭлемент.ОбъектСтроительства.НалоговоеНазначение = ТекЭлемент.НалоговоеНазначение Тогда
			Продолжить;
		КонецЕсли;
		ТекОбъект = ТекЭлемент.ОбъектСтроительства.ПолучитьОбъект();
		ТекОбъект.НалоговоеНазначение = ТекЭлемент.НалоговоеНазначение;
		ТекОбъект.Записать();
		Сообщить(НСтр("ru='Записан объект строительства ';uk=""Записаний об'єкт будівництва """)+ ТекОбъект.Наименование);
		
	КонецЦикла;
	
КонецПроцедуры	

Процедура ВыполнитьНастройкиОтражения()
	
	Для Каждого ТекЭлемент из НастройкаОтражения Цикл
		Если ТекЭлемент.СпособОтражения.НалоговоеНазначение = ТекЭлемент.Назначение Тогда
			Продолжить;
		КонецЕсли;
		ТекОбъект = ТекЭлемент.СпособОтражения.ПолучитьОбъект();
		ТекОбъект.НалоговоеНазначение = ТекЭлемент.Назначение;
		ТекОбъект.Записать();
		Сообщить(НСтр("ru='Записан способ отражения ';uk='Записаний спосіб відображення '")+ ТекОбъект.Наименование);
		
	КонецЦикла;
	
КонецПроцедуры	

Процедура ВыполнитьСтатьиЗатратВзносов()
	
    НаборЗаписейСтатьиЗатратВзносов.Записать();
	Сообщить(НСтр("ru='Записан регистр сведений ""Отражение Взносов на ФОТ в регл. учете""';uk='Записаний регістр відомостей ""Відображення Внесків на ФОП в регл. обліку""'"));

КонецПроцедуры

Процедура ВыполнитьСписокДокументов()
	
	Для Каждого ТекЭлемент из СписокДокументов Цикл
		
		Если НЕ ТекЭлемент.Отметка Тогда
			Продолжить;
		КонецЕсли;
		
		Док = ТекЭлемент.Документ.ПолучитьОбъект();
		Док.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		Док.Начисления.Очистить();
		Док.Взносы.Очистить();
		Док.ВзносыФОТ.Очистить();
		Док.НДФЛ.Очистить();
		Док.Удержания.Очистить();
		Док.ПогашениеЗаймов.Очистить();
		Док.Записать();
		
		Сотрудники = Док.РаботникиОрганизации.ВыгрузитьКолонку("Сотрудник");
		Док.РассчитатьНачисления( Сотрудники );
		Док.РассчитатьВзносы( Сотрудники );
		Док.РассчитатьНДФЛ( Сотрудники );
		Док.РассчитатьУдержания( Сотрудники );
		Док.РассчитатьПогашениеЗаймов( Сотрудники );
		Док.Записать();
		Док.РассчитатьВзносыФОТ( Сотрудники );
		
		Док.АвтозаполнениеПроводок();
		Док.Записать(РежимЗаписиДокумента.Проведение);
        Сообщить("Обработан документ "+ Строка(ТекЭлемент.Документ));
		
	КонецЦикла;

   	
Конецпроцедуры	

Процедура ВыполнитьОбработку()
	
	Если Не ПропуститьАналитика Тогда
		ВыполнитьОбъектыАналитики();
	КонецЕсли;
	
	Если Не ПропуститьСпособыОтражения Тогда
		ВыполнитьНастройкиОтражения();
	КонецЕсли;
	
	Если Не ПропуститьСтатьиЗатратВзносов Тогда
		ВыполнитьСтатьиЗатратВзносов();
	КонецЕсли;
	
	Если Не ПропуститьПерепроведение Тогда
		ВыполнитьСписокДокументов();
	КонецЕсли;
	
	Сообщить(НСтр("ru='Работа помощника завершена';uk='Робота помічника завершена'"));
	мЗадатьВопросПриЗакрытии = Ложь;                 
	ЭтаФорма.Закрыть();

КонецПроцедуры	

Функция ВыполнитьОбработкуПередПереходомНаНовуюСтраницу()
	
	
	Возврат Истина;
	
КонецФункции	

Процедура ВыполнитьОбработкуПереходаНаНовуюСтраницу()

	ТекущаяСтраница = Элементыформы.ПанельЭтапов.ТекущаяСтраница;

	Если ТекущаяСтраница = ЭлементыФормы.ПанельЭтапов.Страницы.Аналитика Тогда
		
		ЗаполнитьОбъектыАналитики();
		
		Если ТаблицаСтатьиЗатрат.Количество() = 0
			И ТаблицаНоменклатурныеГруппы.Количество() = 0
			И ТаблицаОбъектыСтроительства.Количество() = 0 Тогда
			КнопкаВпередНажатие(ЭлементыФормы.НадписьВперед);
		КонецЕсли;
				
	ИначеЕсли ТекущаяСтраница = ЭлементыФормы.ПанельЭтапов.Страницы.СпособыОтражения Тогда
		
		ЗаполнитьНастройкиОтражения();
		
		Если НастройкаОтражения.Количество() = 0 Тогда
			КнопкаВпередНажатие(ЭлементыФормы.НадписьВперед);
		КонецЕсли;
	
		
	ИначеЕсли ТекущаяСтраница = ЭлементыФормы.ПанельЭтапов.Страницы.СтатьиЗатратВзносов Тогда
		
       ЗаполнитьСтатьиЗатратВзносов();
		
		Если НаборЗаписейСтатьиЗатратВзносов.Количество() = 0 Тогда
			КнопкаВпередНажатие(ЭлементыФормы.НадписьВперед);
		КонецЕсли;
		
	ИначеЕсли ТекущаяСтраница = ЭлементыФормы.ПанельЭтапов.Страницы.Перепроведение Тогда
		
	    ЗаполнитьСписокДокументов();
		
		Если СписокДокументов.Количество() = 0 Тогда
			КнопкаВпередНажатие(ЭлементыФормы.НадписьВперед);
		КонецЕсли;
		
	КонецЕсли;		
	
	

КонецПроцедуры

Функция ПроверитьВозможностьПереходаНаСледующуюСтраницу()

	ТекущаяСтраница = Элементыформы.ПанельЭтапов.ТекущаяСтраница;
	
	Возврат Истина;

КонецФункции // ПроверитьВозможностьПереходаНаСледующуюСтраницу()

Процедура СоздатьСтруктуруПомощника()

	НомерШага = 1;
	НомерОбласти = 2;
	
	ОбластьТабличногоПоля = СоздатьОбластьТабличногоПоля(ЭлементыФормы.ПолеТабличногоДокумента, НомерОбласти, 1, 10, "Начало");
	НомерОбласти = НомерОбласти +1;
	мСтруктураСтраниц.Вставить("Страница" + НомерШага, ЭлементыФормы.ПанельЭтапов.Страницы.Начало);
	мСтруктураТабличногоПоля.Вставить("Страница" + НомерШага, ОбластьТабличногоПоля);
	НомерШага = НомерШага +1;
	
	ОбластьТабличногоПоля = СоздатьОбластьТабличногоПоля(ЭлементыФормы.ПолеТабличногоДокумента, НомерОбласти, 1, 10, "Объекты аналитики");
	НомерОбласти = НомерОбласти +1;
	мСтруктураТабличногоПоля.Вставить("Страница" + НомерШага, ОбластьТабличногоПоля);
	мСтруктураСтраниц.Вставить("Страница" + НомерШага, ЭлементыФормы.ПанельЭтапов.Страницы.Аналитика);
	НомерШага = НомерШага +1;
	
	ОбластьТабличногоПоля = СоздатьОбластьТабличногоПоля(ЭлементыФормы.ПолеТабличногоДокумента, НомерОбласти, 1, 10, "Настройка способов отражения");
	НомерОбласти = НомерОбласти +1;
	мСтруктураТабличногоПоля.Вставить("Страница" + НомерШага, ОбластьТабличногоПоля);
	мСтруктураСтраниц.Вставить("Страница" + НомерШага, ЭлементыФормы.ПанельЭтапов.Страницы.СпособыОтражения);
	НомерШага = НомерШага +1;
	
	ОбластьТабличногоПоля = СоздатьОбластьТабличногоПоля(ЭлементыФормы.ПолеТабличногоДокумента, НомерОбласти, 1, 10, "Статьи затрат для ЕСВ с ФОТ");
	НомерОбласти = НомерОбласти +1;
	мСтруктураТабличногоПоля.Вставить("Страница" + НомерШага, ОбластьТабличногоПоля);
	мСтруктураСтраниц.Вставить("Страница" + НомерШага, ЭлементыФормы.ПанельЭтапов.Страницы.СтатьиЗатратВзносов);
	НомерШага = НомерШага +1;
	
	ОбластьТабличногоПоля = СоздатьОбластьТабличногоПоля(ЭлементыФормы.ПолеТабличногоДокумента, НомерОбласти, 1, 10, "Документы отражения зарплаты");
	НомерОбласти = НомерОбласти +1;
	мСтруктураТабличногоПоля.Вставить("Страница" + НомерШага, ОбластьТабличногоПоля);
	мСтруктураСтраниц.Вставить("Страница" + НомерШага, ЭлементыФормы.ПанельЭтапов.Страницы.Перепроведение);
	НомерШага = НомерШага +1;
	
	ОбластьТабличногоПоля = СоздатьОбластьТабличногоПоля(ЭлементыФормы.ПолеТабличногоДокумента, НомерОбласти, 1,10, "Готово!");
	мСтруктураТабличногоПоля.Вставить("Страница" + НомерШага, ОбластьТабличногоПоля);
	мСтруктураСтраниц.Вставить("Страница" + НомерШага, ЭлементыФормы.ПанельЭтапов.Страницы.Готово);
	
	мКоличествоСтраниц = НомерШага;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////
//ОБРАБОТКА ОСНОВНЫХ ДЕЙСТВИЙ ФОРМЫ И НАВИГАЦИИ ПО СТРАНИЦАМ
////////////////////////////////////////////////////////////////////////////

Процедура КнопкаНазадНажатие(Элемент)

	Если мНомерТекущейСтраницы = 1 Тогда
		Возврат;
	КонецЕсли;	
	
	мНомерТекущейСтраницы = мНомерТекущейСтраницы - 1;
	
	// установим следующую страницу
	УстановитьСтраницуПомощника(ЭтаФорма, мНомерТекущейСтраницы, Ложь);

КонецПроцедуры

Процедура КнопкаВпередНажатие(Элемент)
	
	// проверим возможность перехода к следующему шагу
	Если Не ПроверитьВозможностьПереходаНаСледующуюСтраницу() Тогда
		// все сообщения выдаем в функции ПроверитьВозможностьПереходаНаСледующуюСтраницу()
		Возврат;
	КонецЕсли;
	
	Если Не ВыполнитьОбработкуПередПереходомНаНовуюСтраницу() Тогда
		Возврат;
	КонецЕсли;	
	
	мНомерТекущейСтраницы = мНомерТекущейСтраницы + 1;
	
	Если мНомерТекущейСтраницы > мКоличествоСтраниц Тогда
		// нажата кнопка Готово
		ВыполнитьОбработку();
	Иначе
		// установим следующую страницу
		УстановитьСтраницуПомощника(ЭтаФорма, мНомерТекущейСтраницы);
		
		// выполним необходимые действия на новой странице после ее установки
		ВыполнитьОбработкуПереходаНаНовуюСтраницу()	
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	мСтруктураПараметрыДоОткрытияФормы.Вставить("Организация", Организация);
	
	СоздатьСтруктуруПомощника();
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	мНомерТекущейСтраницы = 1;
	УстановитьСтраницуПомощника(ЭтаФорма, мНомерТекущейСтраницы);
	Организация = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"),"ОсновнаяОрганизация");
	
	ТаблицаСтатьиЗатрат.Очистить();
	ТаблицаНоменклатурныеГруппы.Очистить();
	ТаблицаОбъектыСтроительства.Очистить();
	НастройкаОтражения.Очистить();
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если мЗадатьВопросПриЗакрытии Тогда
		// стартовый помощник закрывается не по кнопке "Готово"
		Ответ  = Вопрос(НСтр("ru='Все данные, введенные в помощнике будут потеряны! Закрыть форму?';uk='Всі дані, введені в помічнику будуть втрачені! Закрити форму?'"), РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////
//ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
////////////////////////////////////////////////////////////////////////////

Процедура ПропуститьПриИзменении(Элемент)
	
	Если Элемент.Значение Тогда
		КнопкаВпередНажатие(ЭлементыФормы.НадписьВперед);
	КонецЕсли;	
	
КонецПроцедуры

Процедура ТаблицаНоменклатурныеГруппыНалоговоеНазначениеНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	РаботаСДиалогами.НачалоВыбораЗначенияНалоговоеНазначение(Элемент, СтандартнаяОбработка, Перечисления.ГруппыНалоговыхНазначений.НалоговыеНазначенияАктивовИВзаиморасчетовПоНДС);
	
КонецПроцедуры

Процедура ТаблицаНоменклатурныеГруппыНалоговоеНазначениеАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	РаботаСДиалогами.АвтоПодборТекстаНалоговоеНазначение(ЭтаФорма, Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка, Перечисления.ГруппыНалоговыхНазначений.НалоговыеНазначенияАктивовИВзаиморасчетовПоНДС);
	
КонецПроцедуры

Процедура ТаблицаНоменклатурныеГруппыНалоговоеНазначениеОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	РаботаСДиалогами.ОкончаниеВводаТекстаНалоговоеНазначение(Элемент, Текст, Значение, СтандартнаяОбработка, Перечисления.ГруппыНалоговыхНазначений.НалоговыеНазначенияАктивовИВзаиморасчетовПоНДС)
	
КонецПроцедуры

Процедура ТаблицаОбъектыСтроительстваНалоговоеНазначениеНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	РаботаСДиалогами.НачалоВыбораЗначенияНалоговоеНазначение(Элемент, СтандартнаяОбработка, Перечисления.ГруппыНалоговыхНазначений.НалоговыеНазначенияАктивовИВзаиморасчетовПоНДС);
	
КонецПроцедуры

Процедура ТаблицаОбъектыСтроительстваНалоговоеНазначениеАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	РаботаСДиалогами.АвтоПодборТекстаНалоговоеНазначение(ЭтаФорма, Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка, Перечисления.ГруппыНалоговыхНазначений.НалоговыеНазначенияАктивовИВзаиморасчетовПоНДС);
	
КонецПроцедуры

Процедура ТаблицаОбъектыСтроительстваНалоговоеНазначениеОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	РаботаСДиалогами.ОкончаниеВводаТекстаНалоговоеНазначение(Элемент, Текст, Значение, СтандартнаяОбработка, Перечисления.ГруппыНалоговыхНазначений.НалоговыеНазначенияАктивовИВзаиморасчетовПоНДС)
	
КонецПроцедуры

Процедура ТаблицаСтатьиЗатратСтатьяДекларацииНачалоВыбора(Элемент, СтандартнаяОбработка)
		
	НазваниеНалоговойДекларации 	= Перечисления.ВидыНалоговыхДеклараций.ДекларацияПоНалогуНаПрибыльНКУ;
	
	РаботаСДиалогами.НачалоВыбораСтатьяНалоговойДекларации(Элемент, СтандартнаяОбработка, НазваниеНалоговойДекларации);

КонецПроцедуры

Процедура ТаблицаСтатьиЗатратСтатьяДекларацииАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	НазваниеНалоговойДекларации 	= Перечисления.ВидыНалоговыхДеклараций.ДекларацияПоНалогуНаПрибыльНКУ;      

	РаботаСДиалогами.АвтоПодборТекстаСтатьяНалоговойДекларации(ЭтаФорма, Элемент, Текст, ТекстАвтоПодбора ,СтандартнаяОбработка, 
											  НазваниеНалоговойДекларации);

КонецПроцедуры

Процедура ТаблицаСтатьиЗатратСтатьяДекларацииОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	НазваниеНалоговойДекларации 	= Перечисления.ВидыНалоговыхДеклараций.ДекларацияПоНалогуНаПрибыльНКУ;      
	
	РаботаСДиалогами.ОкончаниеВводаТекстаСтатьяНалоговойДекларации(Элемент, Текст, Значение, СтандартнаяОбработка, 
												  НазваниеНалоговойДекларации);
												  
КонецПроцедуры

Процедура НастройкаОтраженияНазначениеНачалоВыбора(Элемент, СтандартнаяОбработка)
	РаботаСДиалогами.НачалоВыбораЗначенияНалоговоеНазначение(Элемент, СтандартнаяОбработка,Перечисления.ГруппыНалоговыхНазначений.НалоговыеНазначенияДоходовИЗатрат);
КонецПроцедуры

Процедура НастройкаОтраженияНазначениеАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	РаботаСДиалогами.АвтоПодборТекстаНалоговоеНазначение(ЭтаФорма, Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка, Перечисления.ГруппыНалоговыхНазначений.НалоговыеНазначенияДоходовИЗатрат);
КонецПроцедуры

Процедура НастройкаОтраженияНазначениеОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	РаботаСДиалогами.ОкончаниеВводаТекстаНалоговоеНазначение(Элемент, Текст, Значение, СтандартнаяОбработка, Перечисления.ГруппыНалоговыхНазначений.НалоговыеНазначенияДоходовИЗатрат)
КонецПроцедуры

Процедура ОтборОрганизацияПриИзменении(Элемент)
	
	ЗаполнитьСписокДокументов(Истина);	
	
КонецПроцедуры

Процедура ТаблицаСтатьиЗатратВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Если Колонка.ТолькоПросмотр Тогда
		ВыбраннаяСтрока.СтатьяЗатрат.ПолучитьФорму().Открыть();
	КонецЕсли;	
	
КонецПроцедуры

Процедура ТаблицаНоменклатурныеГруппыВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Если Колонка.ТолькоПросмотр Тогда
		ВыбраннаяСтрока.НоменклатурнаяГруппа.ПолучитьФорму().Открыть();
	КонецЕсли;	
	
КонецПроцедуры

Процедура ТаблицаОбъектыСтроительстваВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Если Колонка.ТолькоПросмотр Тогда
		ВыбраннаяСтрока.ОбъектСтроительства.ПолучитьФорму().Открыть();
	КонецЕсли;	
	
КонецПроцедуры

Процедура НастройкаОтраженияВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Если Колонка.ТолькоПросмотр Тогда
		ВыбраннаяСтрока.СпособОтражения.ПолучитьФорму().Открыть();
	КонецЕсли;	
	
КонецПроцедуры

Процедура СписокДокументовВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Если Колонка.ТолькоПросмотр Тогда
		ВыбраннаяСтрока.Документ.ПолучитьФорму().Открыть();
	КонецЕсли;	
	
КонецПроцедуры




////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
мСозданНовыйПользователь = Ложь;
мЗадатьВопросПриЗакрытии = Истина;

мСтруктураТабличногоПоля = Новый Структура();
мСтруктураСтраниц = Новый Структура();
мСтруктураПараметрыДоОткрытияФормы = Новый Структура();
