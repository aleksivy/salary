
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Обработчик события ПриОткрытии формы.
//
Процедура ПриОткрытии()
	
	ОткрытаДляВыбора = Истина;
	
	Объект_ПриОткрытии(ЭлементыФормы);
	
	Если ОткрытаДляВыбора И ОткрытиеПриВыборе Тогда
		Заголовок = "Адресная книга";
	КонецЕсли; 
	
	ИмяТекущейСтраницы = ВосстановитьЗначение("ИмяТекущейСтраницыВыбор");
	Если ТипЗнч(ИмяТекущейСтраницы) = Тип("Строка") Тогда
		Попытка
			ЭлементыФормы.ОбщаяПанель.ТекущаяСтраница = ЭлементыФормы.ОбщаяПанель.Страницы[ИмяТекущейСтраницы];
		Исключение
		КонецПопытки;
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик события ПриЗакрытии формы.
//
Процедура ПриЗакрытии()
	
	СохранитьЗначение("ВидОбщегоОбъекта"       , ВидОбщегоОбъекта);
	СохранитьЗначение("ИмяТекущейСтраницыВыбор", ЭлементыФормы.ОбщаяПанель.ТекущаяСтраница.Имя);
	
КонецПроцедуры

// Обработчик события ОбработкаЗаписиНовогоОбъекта формы.
//
Процедура ОбработкаЗаписиНовогоОбъекта(Объект, Источник)
	
	Объект_ОбработкаЗаписиНовогоОбъекта(Объект, Источник, ЭтаФорма);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ КОМАНДНЫХ ПАНЕЛИ ФОРМЫ

// Обработчик события Нажатие командной панели формы ОсновныеДействияФормы.Выполнить.
//
Процедура КнопкаВыполнитьНажатие(Элемент)
	
	Если ЭлементыФормы.ОбщаяПанель.ТекущаяСтраница = ЭлементыФормы.ОбщаяПанель.Страницы.Организации Тогда
		Если ЭлементыФормы.ОрганизацииСписок.ТекущиеДанные <> Неопределено Тогда
			ДобавитьЭлементы(ЭлементыФормы, СписокДанныхТекущейСтроки, ЭлементыФормы.ОрганизацииСписок, ЭлементыФормы.АдресОрганизации, Истина, "Организации");
		КонецЕсли; 
	ИначеЕсли ЭлементыФормы.ОбщаяПанель.ТекущаяСтраница = ЭлементыФормы.ОбщаяПанель.Страницы.ФизическиеЛица Тогда
		Если НЕ (ЭлементыФормы.ФизЛицаСписок.ТекущиеДанные <> Неопределено И ЭлементыФормы.ФизЛицаСписок.ТекущиеДанные.ЭтоГруппа) Тогда
			ДобавитьЭлементы(ЭлементыФормы, СписокДанныхТекущейСтроки, ЭлементыФормы.ФизЛицаСписок, ЭлементыФормы.АдресФизЛица, Истина, "ФизическиеЛица");
		КонецЕсли; 
	ИначеЕсли ЭлементыФормы.ОбщаяПанель.ТекущаяСтраница = ЭлементыФормы.ОбщаяПанель.Страницы.Личные Тогда
		Если ЭлементыФормы.ЛичныеКонтактыСписок.ТекущиеДанные <> Неопределено Тогда
			ДобавитьЭлементы(ЭлементыФормы, СписокДанныхТекущейСтроки, ЭлементыФормы.ЛичныеКонтактыСписок, ЭлементыФормы.АдресЛичныеКонтакты, Истина, "ЛичныеКонтакты");
		КонецЕсли; 
	ИначеЕсли ЭлементыФормы.ОбщаяПанель.ТекущаяСтраница = ЭлементыФормы.ОбщаяПанель.Страницы.Пользователи Тогда
		Если НЕ (ЭлементыФормы.ПользователиСписок.ТекущиеДанные <> Неопределено И ЭлементыФормы.ПользователиСписок.ТекущиеДанные.ЭтоГруппа) Тогда
			ДобавитьЭлементы(ЭлементыФормы, СписокДанныхТекущейСтроки, ЭлементыФормы.ПользователиСписок, ЭлементыФормы.АдресПользователи, Истина, "Пользователи");
		КонецЕсли; 
	ИначеЕсли ЭлементыФормы.ОбщаяПанель.ТекущаяСтраница = ЭлементыФормы.ОбщаяПанель.Страницы.Поиск Тогда
		Если НЕ (ЭлементыФормы.РезультатыПоиска.ТекущиеДанные <> Неопределено И ЭлементыФормы.РезультатыПоиска.ТекущиеДанные.Объект.ЭтоГруппа) Тогда
			ДобавитьЭлементыРезультатовПоиска(ЭлементыФормы, РезультатыПоиска);
		КонецЕсли; 
	КонецЕсли; 
	
	Объект_КнопкаВыполнитьНажатие(Элемент, ЭтаФорма);
	
КонецПроцедуры

// Обработчик события Нажатие командной панели формы КоманднаяПанельРезультатыПоиска.АдресЭлектроннойПочтыВОбъектТекущейСтроки.
//
Процедура КоманднаяПанельРезультатыПоискаАдресЭлектроннойПочтыВОбъектТекущейСтроки(Кнопка)
	
	Если ЭлементыФормы.РезультатыПоиска.ТекущиеДанные <> Неопределено И ЗначениеЗаполнено(ЭлементыФормы.РезультатыПоиска.ТекущиеДанные.Объект) Тогда
		ДобавитьАдресЭлектроннойПочтыВОбъект(СтрокаПоиска, ЭлементыФормы.РезультатыПоиска.ТекущиеДанные.Объект);
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик события Нажатие командной панели формы КоманднаяПанельРезультатыПоиска.АдресЭлектроннойПочтыВНовыйОбъект.
//
Процедура КоманднаяПанельРезультатыПоискаАдресЭлектроннойПочтыВНовыйОбъект(Кнопка)
	
	СоздатьНовыйОбъектСАдресомЭлектроннойПочты(СтрокаПоиска);
	
КонецПроцедуры

// Обработчик события Нажатие командной панели формы КоманднаяПанельГруппыОбъектов.Обновить.
//
Процедура КоманднаяПанельГруппыОбъектовОбновить(Кнопка)
	
	ЗаполнитьСписокГруппРассылки(ГруппыРассылкиСписок);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНЫХ ПОЛЕЙ ФОРМЫ

// Обработчик события ПриАктивизацииСтроки элемента формы ФизЛицаСписок.
//
Процедура ФизЛицаСписокПриАктивизацииСтроки(Элемент)
	
    ПодключитьОбработчикОжидания("ОбработчикОжиданияФизЛицаСписокПриАктивизацииСтроки", 0.1, Истина);	  	
 
КонецПроцедуры

// Процедура - обрабочик ожидания для события ПриАктивизацииСтроки
// табличного поля ФизЛицаСписок
//
Процедура ОбработчикОжиданияФизЛицаСписокПриАктивизацииСтроки()
    
	ПолучитьАдресЭлектроннойПочты(ЭлементыФормы.ФизЛицаСписок, ЭлементыФормы.АдресФизЛица, СписокДанныхТекущейСтроки);
    
КонецПроцедуры // ОбработчикОжиданияФизЛицаСписокПриАктивизацииСтроки

 

// Обработчик события ПриАктивизацииСтроки элемента формы ОрганизацииСписок.
//
Процедура ОрганизацииСписокПриАктивизацииСтроки(Элемент)
	
    ПодключитьОбработчикОжидания("ОбработчикОжиданияОрганизацииСписокПриАктивизацииСтроки", 0.1, Истина);	 	
 
КонецПроцедуры

// Процедура - обрабочик ожидания для события ПриАктивизацииСтроки
// табличного поля ОрганизацииСписок
//
Процедура ОбработчикОжиданияОрганизацииСписокПриАктивизацииСтроки()
    
	ПолучитьАдресЭлектроннойПочты(ЭлементыФормы.ОрганизацииСписок, ЭлементыФормы.АдресОрганизации, СписокДанныхТекущейСтроки);
    
КонецПроцедуры // ОбработчикОжиданияОрганизацииСписокПриАктивизацииСтроки

 

// Обработчик события ПриАктивизацииСтроки элемента формы ПользователиСписок.
//
Процедура ПользователиСписокПриАктивизацииСтроки(Элемент)
	
    ПодключитьОбработчикОжидания("ОбработчикОжиданияПользователиСписокПриАктивизацииСтроки", 0.1, Истина);	 
	
КонецПроцедуры

// Процедура - обрабочик ожидания для события ПриАктивизацииСтроки
// табличного поля ПользователиСписок
//
Процедура ОбработчикОжиданияПользователиСписокПриАктивизацииСтроки()
    
	ПолучитьАдресЭлектроннойПочты(ЭлементыФормы.ПользователиСписок, ЭлементыФормы.АдресПользователи, СписокДанныхТекущейСтроки);    
    
КонецПроцедуры // ОбработчикОжиданияПользователиСписокПриАктивизацииСтроки

    
// Обработчик события ПриАктивизацииСтроки элемента формы РезультатыПоиска.
//
Процедура РезультатыПоискаПриАктивизацииСтроки(Элемент)
    
    ПодключитьОбработчикОжидания("ОбработчикОжиданияРезультатыПоискаПриАктивизацииСтроки", 0.1, Истина);	 	
    
КонецПроцедуры

// Процедура - обрабочик ожидания для события ПриАктивизацииСтроки
// табличного поля РезультатыПоиска
//
Процедура ОбработчикОжиданияРезультатыПоискаПриАктивизацииСтроки()
    
    Объект_РезультатыПоискаПриАктивизацииСтроки(ЭлементыФормы.РезультатыПоиска, ЭлементыФормы);    
    
КонецПроцедуры // ОбработчикОжиданияРезультатыПоискаПриАктивизацииСтроки

 
// Обработчик события ПередНачаломИзменения элемента формы РезультатыПоиска.
//
Процедура РезультатыПоискаПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	
	Если Элемент.ТекущиеДанные <> Неопределено И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Объект) Тогда
		ОткрытьФормуОбъекта(Элемент.ТекущиеДанные.Объект);
	КонецЕсли; 
	
КонецПроцедуры


// Обработчик события Выбор элемента формы ФизЛицаСписок.
//
Процедура ФизЛицаСписокВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Если НЕ (Элемент.ТекущиеДанные <> Неопределено И Элемент.ТекущиеДанные.ЭтоГруппа) Тогда
		ДобавитьЭлементы(ЭлементыФормы, СписокДанныхТекущейСтроки, ЭлементыФормы.ФизЛицаСписок, ЭлементыФормы.АдресФизЛица, СтандартнаяОбработка, "ФизическиеЛица");
		ОбработкаВыбораТабличныхПолей(ЭтаФорма, СтандартнаяОбработка);
	КонецЕсли; 
	
КонецПроцедуры


// Обработчик события Выбор элемента формы ОрганизацииСписок.
//
Процедура ОрганизацииСписокВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		ДобавитьЭлементы(ЭлементыФормы, СписокДанныхТекущейСтроки, ЭлементыФормы.ОрганизацииСписок, ЭлементыФормы.АдресОрганизации, СтандартнаяОбработка, "Организации");
		ОбработкаВыбораТабличныхПолей(ЭтаФорма, СтандартнаяОбработка);
	КонецЕсли; 
	
КонецПроцедуры


// Обработчик события Выбор элемента формы ПользователиСписок.
//
Процедура ПользователиСписокВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Если НЕ (Элемент.ТекущиеДанные <> Неопределено И Элемент.ТекущиеДанные.ЭтоГруппа) Тогда
		ДобавитьЭлементы(ЭлементыФормы, СписокДанныхТекущейСтроки, ЭлементыФормы.ПользователиСписок, ЭлементыФормы.АдресПользователи, СтандартнаяОбработка, "Пользователи");
		ОбработкаВыбораТабличныхПолей(ЭтаФорма, СтандартнаяОбработка);
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик события Выбор элемента формы РезультатыПоиска.
//
Процедура РезультатыПоискаВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Если НЕ (Элемент.ТекущиеДанные <> Неопределено И Элемент.ТекущиеДанные.Объект.ЭтоГруппа) Тогда
		СтандартнаяОбработка = Ложь;
		Если ОткрытаДляВыбора И ОткрытиеПриВыборе Тогда
			Если Элемент.ТекущиеДанные <> Неопределено И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Объект) Тогда
				ОткрытьФормуОбъекта(Элемент.ТекущиеДанные.Объект);
			КонецЕсли; 
		Иначе
			ДобавитьЭлементыРезультатовПоиска(ЭлементыФормы, РезультатыПоиска);
			ОбработкаВыбораТабличныхПолей(ЭтаФорма);
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик события Выбор элемента формы ГруппыРассылкиСписок.
//
Процедура ГруппыРассылкиСписокВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		Если НЕ (ОткрытаДляВыбора И ОткрытиеПриВыборе) Тогда
			СтандартнаяОбработка = Ложь;
			ДобавитьЭлементыГруппРассылки(ЭлементыФормы, ГруппыРассылкиСписок);
			ОбработкаВыбораТабличныхПолей(ЭтаФорма);
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры


// Обработчик события ПередУдалением элемента формы РезультатыПоиска.
//
Процедура РезультатыПоискаПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

// Обработчик события ПередНачаломДобавления элемента формы РезультатыПоиска.
//
Процедура РезультатыПоискаПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Отказ = Истина;
	
КонецПроцедуры


// Обработчик события ПриВыводеСтроки элемента формы ГруппыРассылкиСписок.
//
Процедура ГруппыРассылкиСписокПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Объект_ГруппыРассылкиСписокПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки);
	
КонецПроцедуры

// Обработчик события ПередНачаломДобавления элемента формы ГруппыРассылкиСписок.
//
Процедура ГруппыРассылкиСписокПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Объект_ГруппыРассылкиСписокПередНачаломДобавления(Элемент, Отказ, Копирование, ЭтаФорма);
	
КонецПроцедуры

// Обработчик события ПередНачаломИзменения элемента формы ГруппыРассылкиСписок.
//
Процедура ГруппыРассылкиСписокПередНачаломИзменения(Элемент, Отказ)
	
	Объект_ГруппыРассылкиСписокПередНачаломИзменения(Элемент, Отказ, ЭтаФорма);
	
КонецПроцедуры

// Обработчик события ПередУдалением элемента формы ГруппыРассылкиСписок.
//
Процедура ГруппыРассылкиСписокПередУдалением(Элемент, Отказ)
	
	Объект_ГруппыРассылкиСписокПередУдалением(Элемент, Отказ);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ КНОПОК ФОРМЫ

// Обработчик события ПриИзменении элемента формы СтрокаПоиска.
//
Процедура СтрокаПоискаПриИзменении(Элемент)
	
	Объект_НайтиНажатие(Элемент, РезультатыПоиска, Элемент.Значение);
	
КонецПроцедуры

// Обработчик события ПриАктивизацииСтроки элемента формы ГруппыРассылкиСписок.
//
Процедура ГруппыРассылкиСписокПриАктивизацииСтроки(Элемент)
	
	Объект_ГруппыРассылкиСписокПриАктивизацииСтроки(Элемент, СоставГруппыРассылки);
	
КонецПроцедуры

// Обработчик события Выбор элемента формы СоставГруппыРассылки.
//
Процедура СоставГруппыРассылкиВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Если НЕ (Элемент.ТекущиеДанные <> Неопределено И Элемент.ТекущиеДанные.ОбъектРассылки.ЭтоГруппа) Тогда
		СтандартнаяОбработка = Ложь;
		ДобавитьЭлементыГруппыРассылки(ЭлементыФормы, Элемент, СписокДанныхТекущейСтрокиДополнительно, ЭлементыФормы.АдресЭлементГруппыРассылки);
		ОбработкаВыбораТабличныхПолей(ЭтаФорма);
	КонецЕсли; 
	
КонецПроцедуры

// Обработчик события ПриАктивизацииСтроки элемента формы СоставГруппыРассылки.
//
Процедура СоставГруппыРассылкиПриАктивизацииСтроки(Элемент)
    
    ПодключитьОбработчикОжидания("ОбработчикОжиданияСоставГруппыРассылкиПриАктивизацииСтроки", 0.1, Истина);	 	
    
КонецПроцедуры

// Процедура - обрабочик ожидания для события ПриАктивизацииСтроки
// табличного поля СоставГруппыРассылки
//
Процедура ОбработчикОжиданияСоставГруппыРассылкиПриАктивизацииСтроки()
    
    ПолучитьАдресЭлектроннойПочты(ЭлементыФормы.СоставГруппыРассылки, ЭлементыФормы.АдресЭлементГруппыРассылки, СписокДанныхТекущейСтрокиДополнительно, "ОбъектРассылки");
    
КонецПроцедуры // ОбработчикОжиданияСоставГруппыРассылкиПриАктивизацииСтроки

 
// Обработчик события ПередНачаломИзменения элемента формы СоставГруппыРассылки.
//
Процедура СоставГруппыРассылкиПередНачаломИзменения(Элемент, Отказ)
	
	Объект_СоставГруппыРассылкиПередНачаломИзменения(Элемент, Отказ);
	
КонецПроцедуры

Процедура КнопкаНайтиНажатие(Элемент)
	
	Объект_НайтиНажатие(Элемент, РезультатыПоиска, СтрокаПоиска);
	
КонецПроцедуры

Процедура ОсновныеДействияФормыЭкспортИмпорт(Кнопка)
	
	Обработки.ЭкспортИмпортКонтактныхДанныхОбъектов.ПолучитьФорму().Открыть();
	
КонецПроцедуры

