
Перем СписокВидовОбъектов;

Перем мОбработкаТайпинга;
Перем мТекстТайпинга;
Перем мПоследнееЗначениеЭлементаТайпинга;

////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Процедура записывает в ИБ новый зарегистрированный объект.
//
// Паарметры
//  ОткрытьФормуОбъекта - булево, открывать форму зарегистрированного объекта или нет
//
Процедура ЗарегистрироватьОбъект(ОткрытьФормуОбъекта = Ложь)

	Отказ = Ложь;
	
	Если ПустаяСтрока(НаименованиеОбъекта) Тогда
		Отказ = Истина;
		Сообщить(НСтр("ru='Не указано наименование объекта.';uk=""Не зазначене найменування об'єкта."""));
	КонецЕсли;
	
	Если ПустаяСтрока(АдресЭлектроннойПочты) Тогда
		Отказ = Истина;
		Сообщить(НСтр("ru='Не указан адрес электронной почты.';uk='Не зазначена адреса електронної пошти.'"));
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(ВидКонтактнойИнформации) Тогда
		Отказ = Истина;
		Сообщить(НСтр("ru='Не указан вид адреса электронной почты.';uk='Не зазначений вид адреси електронної пошти.'"));
	КонецЕсли;

	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	НачатьТранзакцию();
	ФиксироватьТранзакцию = Истина;
	
	Если Справочники.ТипВсеСсылки().СодержитТип(ТипЗнч(НаименованиеОбъекта)) Тогда
		
		НовыйОбъект = НаименованиеОбъекта.ПолучитьОбъект();
		ФормаОбъекта = НовыйОбъект.ПолучитьФорму();
		
	Иначе
	
		НоваяСсылка = Новый(ВидОбъекта);
		НовыйОбъект = Справочники[НоваяСсылка.Метаданные().Имя].СоздатьЭлемент();
		
		НовыйОбъект.Наименование = НаименованиеОбъекта;
		
		ФормаОбъекта = НовыйОбъект.ПолучитьФорму();
		
		Попытка
			ФормаОбъекта.ЗаписатьВФорме();
		Исключение
			Сообщить(ОписаниеОшибки());
			ФиксироватьТранзакцию = Ложь;
		КонецПопытки;
	
	КонецЕсли; 
	
	НаборЗаписей = РегистрыСведений.КонтактнаяИнформация.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Тип.Значение         = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;
	НаборЗаписей.Отбор.Тип.Использование    = Истина;
	НаборЗаписей.Отбор.Вид.Значение         = ВидКонтактнойИнформации;
	НаборЗаписей.Отбор.Вид.Использование    = Истина;
	НаборЗаписей.Отбор.Объект.Значение      = НовыйОбъект.Ссылка;
	НаборЗаписей.Отбор.Объект.Использование = Истина;
	
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество() > 0 Тогда
		ОтветНаВопрос = Вопрос(НСтр("ru='Адрес электронной почты указанного вида для выбранного объекта уже зарегистрирован. Переписать?';uk=""Адреса електронної пошти зазначеного виду для вибраного об'єкта вже зареєстрована. Переписати?"""), РежимДиалогаВопрос.ОКОтмена);
		Если ОтветНаВопрос <> КодВозвратаДиалога.ОК Тогда
			Возврат;
		КонецЕсли; 
	КонецЕсли; 
	
	НаборЗаписей.Очистить();
	ЗаписьКонтактнойИнформации = НаборЗаписей.Добавить();
	ЗаписьКонтактнойИнформации.Тип           = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;
	ЗаписьКонтактнойИнформации.Вид           = ВидКонтактнойИнформации;
	ЗаписьКонтактнойИнформации.Объект        = НовыйОбъект.Ссылка;
	ЗаписьКонтактнойИнформации.Представление = АдресЭлектроннойПочты;
	
	Попытка
		НаборЗаписей.Записать(Истина);
	Исключение
		Сообщить(ОписаниеОшибки());
		ФиксироватьТранзакцию = Ложь;
	КонецПопытки;
	
	Если ФиксироватьТранзакцию = Ложь Тогда
		ОтменитьТранзакцию();
		Возврат;
	Иначе
		ЗафиксироватьТранзакцию();
		СтруктураНовогоОбъекта = Новый Структура("Объект, АдресЭлектроннойПочты", НовыйОбъект.Ссылка, АдресЭлектроннойПочты);
	КонецЕсли; 
	
	ЭтаФорма.Закрыть(СтруктураНовогоОбъекта);
	
	Если ОткрытьФормуОбъекта Тогда
		ФормаОбъекта.Открыть();
	КонецЕсли; 
	
	
КонецПроцедуры

// Процедура устанавливает вид КИ по умолчанию.
//
// Паарметры
//  НЕТ
//
Процедура УстановитьВидКИ()

	Если ВидКонтактнойИнформации = Неопределено ИЛИ (ТипЗнч(ВидКонтактнойИнформации) = Тип("СправочникСсылка.ВидыКонтактнойИнформации") И ВидКонтактнойИнформации.ВидОбъектаКонтактнойИнформации <> УправлениеКонтактнойИнформацией.ВидОбъектаКИ(Новый(ВидОбъекта))) Тогда
		
		Запрос = Новый Запрос;
		
		Запрос.УстановитьПараметр("Тип"       , Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
		Запрос.УстановитьПараметр("ВидОбъекта", УправлениеКонтактнойИнформацией.ВидОбъектаКИ(Новый(ВидОбъекта)));
		
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	ВидыКонтактнойИнформации.Ссылка КАК ВидКИ
		|ИЗ
		|	Справочник.ВидыКонтактнойИнформации КАК ВидыКонтактнойИнформации
		|ГДЕ
		|	ВидыКонтактнойИнформации.Тип = &Тип
		|	И
		|	ВидыКонтактнойИнформации.ВидОбъектаКонтактнойИнформации = &ВидОбъекта
		|";
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если НЕ РезультатЗапроса.Пустой() Тогда
			Выборка = РезультатЗапроса.Выбрать();
			Выборка.Следующий();
			ВидКонтактнойИнформации = Выборка.ВидКИ;
		Иначе
			ВидКонтактнойИнформации = Справочники.ВидыКонтактнойИнформации.ПустаяСсылка();
		КонецЕсли;
		мПоследнееЗначениеЭлементаТайпинга = ВидКонтактнойИнформации;
		
	КонецЕсли; 

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриЗакрытии()
	
	СохранитьЗначение("ОбъектРегистрации", ВидОбъекта);
	
КонецПроцедуры

// Обработчик события ПриОткрытии формы.
//
Процедура ПриОткрытии()
	
	ЭлементыФормы.ВидОбъекта.СписокВыбора = СписокВидовОбъектов.Скопировать();
	
	СохраненныйОбъект = ВосстановитьЗначение("ОбъектРегистрации");
	Если ТипЗнч(СохраненныйОбъект) = Тип("Тип") Тогда
		Для каждого ЭлементСписка Из СписокВидовОбъектов Цикл
			Если ЭлементСписка.Значение = СохраненныйОбъект Тогда
				ВидОбъекта = ЭлементСписка.Значение;
			КонецЕсли; 
		КонецЦикла; 
	КонецЕсли; 
	
	Если ВидОбъекта = Неопределено Тогда
		ВидОбъекта = СписокВидовОбъектов[0].Значение;
	КонецЕсли; 
	
	УстановитьВидКИ();
	
	мПоследнееЗначениеЭлементаТайпинга = ВидКонтактнойИнформации;
	
	Если НаименованиеОбъекта = Неопределено Тогда
		НаименованиеОбъекта = "";
	КонецЕсли; 
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Обработчик события Нажатие элемента формы ОсновныеДействияФормы.ЗарегистрироватьИОткрыть.
//
Процедура ОсновныеДействияФормыЗарегистрироватьИОткрыть(Кнопка)
	
	ЗарегистрироватьОбъект(Истина);
	
КонецПроцедуры

// Обработчик события Нажатие элемента формы ОсновныеДействияФормы.Зарегистрировать.
//
Процедура ОсновныеДействияФормыЗарегистрировать(Элемент)
	
	ЗарегистрироватьОбъект();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Обработчик события Очистка элемента формы ВидКонтактнойИнформации.
//
Процедура ВидКонтактнойИнформацииОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВидКонтактнойИнформации = Справочники.ВидыКонтактнойИнформации.ПустаяСсылка();
	мПоследнееЗначениеЭлементаТайпинга = ВидКонтактнойИнформации;
	
КонецПроцедуры

// Обработчик события НачалоВыбора элемента формы ВидКонтактнойИнформации.
//
Процедура ВидКонтактнойИнформацииНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	УправлениеКонтактнойИнформацией.ОткрытьФормуВыбораВидаКИ(Истина, Элемент, Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты, УправлениеКонтактнойИнформацией.ВидОбъектаКИ(Новый (ВидОбъекта)));
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы ВидОбъекта.
//
Процедура ВидОбъектаПриИзменении(Элемент)
	
	УстановитьВидКИ();
	
КонецПроцедуры

// Обработчик события АвтоПодборТекста элемента формы ВидКонтактнойИнформации.
//
Процедура ВидКонтактнойИнформацииАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	ПроцедурыПоискаПоСтроке.АвтоПодборТекстаВЭлементеУправления(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка, Новый Структура("Тип, ВидОбъектаКонтактнойИнформации", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты, УправлениеКонтактнойИнформацией.ВидОбъектаКИ(Новый(ВидОбъекта))), Тип("СправочникСсылка.ВидыКонтактнойИнформации"));
	
КонецПроцедуры

// Обработчик события ОкончаниеВводаТекста элемента формы ВидКонтактнойИнформации.
//
Процедура ВидКонтактнойИнформацииОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	ПроцедурыПоискаПоСтроке.ОкончаниеВводаТекстаВЭлементеУправления(Элемент, Текст, Значение, СтандартнаяОбработка, Новый Структура("Тип, ВидОбъектаКонтактнойИнформации", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты, УправлениеКонтактнойИнформацией.ВидОбъектаКИ(Новый(ВидОбъекта))), ЭтаФорма, Тип("СправочникСсылка.ВидыКонтактнойИнформации"), мОбработкаТайпинга, мТекстТайпинга, мПоследнееЗначениеЭлементаТайпинга)
	
КонецПроцедуры

// Обработчик события Очистка элемента формы ВидОбъекта.
//
Процедура ВидОбъектаОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

// Обработчик события ПриИзменении элемента формы ВидКонтактнойИнформации.
//
Процедура ВидКонтактнойИнформацииПриИзменении(Элемент)
	
	мПоследнееЗначениеЭлементаТайпинга = ВидКонтактнойИнформации;
	
КонецПроцедуры

Процедура НаименованиеОбъектаПриИзменении(Элемент)
	
	Если Элемент.Значение = Неопределено Тогда
		Элемент.Значение = "";
	КонецЕсли; 
	
КонецПроцедуры

Процедура НаименованиеОбъектаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СправочникСсылка = Новый(ВидОбъекта);
	ФормаВыбора = Справочники[СправочникСсылка.Метаданные().Имя].ПолучитьФормуВыбора();
	Если СправочникСсылка.Метаданные().Иерархический Тогда
		ФормаВыбора.ПараметрВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.Элементы;
	КонецЕсли;
	ЗначениеВыбора = ФормаВыбора.ОткрытьМодально();
	
	Если ТипЗнч(ЗначениеВыбора) = ВидОбъекта И ЗначениеЗаполнено(ЗначениеВыбора) Тогда
		Элемент.Значение = ЗначениеВыбора;
	КонецЕсли; 
	
КонецПроцедуры

СписокВидовОбъектов = Новый СписокЗначений;
СписокВидовОбъектов.Добавить(Тип("СправочникСсылка.ФизическиеЛица"), "Физические лица");
СписокВидовОбъектов.Добавить(Тип("СправочникСсылка.Пользователи")  , "Пользователи");
СписокВидовОбъектов.Добавить(Тип("СправочникСсылка.Контрагенты")   , "Контрагенты");
СписокВидовОбъектов.Добавить(Тип("СправочникСсылка.Организации")   , "Организации");

мОбработкаТайпинга                 = Ложь;
мТекстТайпинга                     = "";
мПоследнееЗначениеЭлементаТайпинга = Неопределено;
