// хранит курсы и кратности валют до загрузки с finance.ua
// для возможности заполнения вычисляемых полей табличного поля
// при подборе валют
Перем ТаблицаКонСреза;

// хранит настройки обработки:
// -список валют по которым необходимо загружать курсы
// -код доступа к платным сервисам
// -режим работы
Перем Настройки;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

  // Обновляет поля табличного поля "ДатаКурса", 
 //	 "Курс", "Кратность"
 //
 // Параметры:
 //  Нет.
 //
 Процедура ОбновитьСписокВалют()

	ТаблицаКонСреза = Новый ТаблицаЗначений;
	РегВалют = РегистрыСведений.КурсыВалют;
	ТаблицаКонСреза = РегВалют.СрезПоследних();

	ЭтаФорма.Обновить();

КонецПроцедуры // ОбновитьСписокВалют()

 
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()

	ТаблицаКонСреза = Новый ТаблицаЗначений;
	РегВалют = РегистрыСведений.КурсыВалют;
	ТаблицаКонСреза = РегВалют.СрезПоследних();
	
	НачДата = НачалоМесяца(ТекущаяДата());
	КонДата = КонецМесяца(ТекущаяДата());
	
	ЭлементыФормы.НадписьДата.Заголовок = Формат(ТекущаяДата(), "ДЛФ=ДД");
	
	КоманднаяПанельФормыДействиеЗаполнить(ЭлементыФормы.КоманднаяПанель1.Кнопки.ДействиеЗаполнить);
	
	ВосстановитьНастройки();
	
	КодНеУказан = ПустаяСтрока(КодДоступа);
	ЭлементыФормы.НадписьПояснение.Видимость = КодНеУказан;
	ЭлементыФормы.НадписьПолучитьКод.Видимость = КодНеУказан;
	
	
КонецПроцедуры // ПриОткрытии()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ, ВЫЗЫВАЕМЫЕ ИЗ ЭЛЕМЕНТОВ ФОРМЫ

// Обработчик события "Нажатие" кнопки "ВыбПериод"
Процедура ВыбПериодНажатие(Элемент)
	
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(НачДата, КонецДня(КонДата));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.Редактировать();
	НачДата = НастройкаПериода.ПолучитьДатуНачала();
	КонДата = НастройкаПериода.ПолучитьДатуОкончания();
	
КонецПроцедуры // ВыбПериодНажатие()

// Обработчик события выбора элемента в справочнике "Валюты"
Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	
	СтрокаСпВалют = СписокВалют.Добавить();
	СтрокаСпВалют.Валюта = ЗначениеВыбора;
	
КонецПроцедуры // ОбработкаВыбора(ЗначениеВыбора, Источник)

// Обработчик события "ПриВыводеСтроки" поля "Валюта" списка валют
Процедура СписокВалютПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
   	ВыбраннаяВалюта = ДанныеСтроки.Валюта;
	
	Если Элемент.Колонки.КодВалюты.Видимость Тогда
		ОформлениеСтроки.Ячейки.КодВалюты.Текст = СокрЛП(ВыбраннаяВалюта.Код);
		ОформлениеСтроки.Ячейки.КодВалюты.ОтображатьТекст = Истина;
	КонецЕсли;	

	Если ТаблицаКонСреза.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	НайденСтрока = ТаблицаКонСреза.Найти(ВыбраннаяВалюта,"Валюта");
	Если НайденСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;	

	Если Элемент.Колонки.ДатаКурса.Видимость Тогда
		ОформлениеСтроки.Ячейки.ДатаКурса.Текст = Формат(НайденСтрока.Период,"ДФ = 'дд.ММ.гггг'");
		ОформлениеСтроки.Ячейки.ДатаКурса.ОтображатьТекст = Истина;
	КонецЕсли;	

	Если Элемент.Колонки.Курс.Видимость Тогда
		ОформлениеСтроки.Ячейки.Курс.Текст      = НайденСтрока.Курс;
		ОформлениеСтроки.Ячейки.Курс.ОтображатьТекст      = Истина;
	КонецЕсли;	

	Если Элемент.Колонки.Кратность.Видимость Тогда
		ОформлениеСтроки.Ячейки.Кратность.ОтображатьТекст = Истина;
		ОформлениеСтроки.Ячейки.Кратность.Текст = НайденСтрока.Кратность;
	КонецЕсли;	
	
КонецПроцедуры // СписокВалютПриВыводеСтроки()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Обработчик действия командной панели "ДействиеЗагрузить"
Процедура КоманднаяПанельФормыДействиеЗагрузить(Элемент)
	
	Если СписокВалют.Количество() = 0 Тогда
		Предупреждение(НСтр("ru='Заполните список валют';uk='Заповніть список валют'"));
		Возврат;
	КонецЕсли;	

	ЕстьЗагружаемыеКурсы = Ложь;
	Для каждого ТекВалюта Из СписокВалют Цикл
		Если ТекВалюта.Пометка = Истина Тогда
			ЕстьЗагружаемыеКурсы = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если НЕ ЕстьЗагружаемыеКурсы = Истина Тогда
		Предупреждение(НСтр("ru='Не выбрана ни одна валюта для загрузки курсов. Установите пометку в списке хотя бы для одной валюты!';uk='Не обрана жодна валюта для завантаження курсів. Встановіть позначку в списку хоча б для однієї валюти!'"));
		Возврат;
	КонецЕсли;
	
	ФормаИндикации = ПолучитьОбщуюФорму("ХодВыполненияОбработкиДанных");
	ФормаИндикации.НаименованиеОбработкиДанных = НСтр("ru='Загрузка курсов валют с сайта finance.ua';uk='Завантаження курсів валют із сайту finance.ua'");
	ФормаИндикации.КомментарийЗначения         = НСтр("ru='Загружено:';uk='Завантажено:'");
	ФормаИндикации.МаксимальноеЗначение         = 100;
	ФормаИндикации.Открыть();
	
	ЭлементыФормы.ТекстЗавершения.Видимость   = Ложь;

	Если Интернет = 0 Тогда
		ЗагрузитьКурсы(ФормаИндикации.Значение,ФормаИндикации.КомментарийОбработкиДанных);
	Иначе
		ЗагрузитьКурсыСИТС(ФормаИндикации.Значение,ФормаИндикации.КомментарийОбработкиДанных);
	КонецЕсли;
	
	ОбновитьСписокВалют();
	ФормаИндикации.Закрыть();
	
	ЭлементыФормы.ТекстЗавершения.Видимость   = Истина;
	
	ОшибкаКодаСервера = Ложь;
	
КонецПроцедуры // КнопкаЗаполнитьНажатие()

// Обработчик действия командной панели "ДействиеЗаполнить"
Процедура КоманднаяПанельФормыДействиеЗаполнить(Элемент)

	СписокВалют.Очистить();
	СправочникВалюты = Справочники.Валюты;
	ВыборкаВалют = СправочникВалюты.Выбрать();
	МакетОКВ = Справочники.Валюты.ПолучитьМакет("КлассификаторВалют");
	ОбластьКоды = МакетОКВ.Область("КодЧисловой");


	Пока ВыборкаВалют.Следующий() Цикл
		ТекущаяВалюта = ВыборкаВалют.Ссылка;
		КодТекущейВалюты = СокрЛП(ТекущаяВалюта.Код);
		НайденнаяОбласть = МакетОКВ.НайтиТекст(КодТекущейВалюты,,ОбластьКоды);
		Если НайденнаяОбласть = Неопределено ИЛИ НайденнаяОбласть.Верх=2 Тогда
			Продолжить;
		КонецЕсли;	

		СтрокаСпискаВалют = СписокВалют.Добавить();
		СтрокаСпискаВалют.Валюта = ТекущаяВалюта;
	КонецЦикла;	

КонецПроцедуры // КоманднаяПанельФормыДействиеЗаполнить()

// Обработчик действия командной панели "ДействиеОчистить"
Процедура КоманднаяПанельФормыДействиеОчистить(Элемент)
	СписокВалют.Очистить();
КонецПроцедуры

// Обработчик события "ДействиеПодбор" командной панели
Процедура КоманднаяПанельФормыДействиеПодбор(Элемент)
	
	СпрВалюты = Справочники["Валюты"];
	СпрВалютыВыбор = СпрВалюты.ПолучитьФормуВыбора(,ЭтаФорма);
	СпрВалютыВыбор.РежимВыбора = Истина;
	СпрВалютыВыбор.ЗакрыватьПриВыборе = Ложь;
	СпрВалютыВыбор.Открыть();
	
КонецПроцедуры // КоманднаяПанельФормыДействиеПодбор()
 
// Обработчик события "Получить полный код" командной панели
Процедура ПолучитьКодНажатие(Элемент)
	ОткрытьСайтФинансУа();
КонецПроцедуры

Процедура ПолеКартинкиФинансУаНажатие(Элемент)
	ОткрытьСайтФинансУа();
КонецПроцедуры

Процедура ПолеВводаКодДоступаПриИзменении(Элемент)
	
	КодНекорректен = Ложь;
	
	Если НЕ ПустаяСтрока(КодДоступа) Тогда
	
		Если НЕ (СтрДлина(СокрЛП(КодДоступа)) = 32) Тогда
			КодНекорректен = Истина;
		Иначе
			Для ном=0 По СтрДлина(КодДоступа)-1 Цикл
				Символ = Сред(КодДоступа,ном,1);
				Если  Символ <> "a" И Символ <> "b" И Символ <> "c" И Символ <> "d" И Символ <> "e" И Символ <> "f"
					И Символ <> "0" И Символ <> "1" И Символ <> "2" И Символ <> "3" И Символ <> "4" И Символ <> "5"
					И Символ <> "6" И Символ <> "7" И Символ <> "8" И Символ <> "9" Тогда
						КодНекорректен = Истина;	
						Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	
	КонецЕсли; 
	
	Если КодНекорректен Тогда
		Сообщить(НСтр("ru='Введен некорректный код доступа!';uk='Введено некоректний код доступу!'"));
		Сообщить(НСтр("ru='Попробуйте ввести код еще раз.';uk='Спробуйте ввести код ще раз.'"));
		ЭлементыФормы.ПанельДата.ТекущаяСтраница = ЭлементыФормы.ПанельДата.Страницы.ЗаДень;
	Иначе
		ЭлементыФормы.ПанельДата.ТекущаяСтраница = ЭлементыФормы.ПанельДата.Страницы.ЗаПериод;
		НачДата = НачалоДня(ТекущаяДата());
		КонДата = НачалоДня(ТекущаяДата());
	КонецЕсли; 
	ЭлементыФормы.НадписьПояснение.Видимость = КодНекорректен;
	ЭлементыФормы.НадписьПолучитьКод.Видимость = КодНекорректен;
КонецПроцедуры

Процедура ИнтернетПриИзменении(Элемент)
	Если ((Интернет = 0) И (СокрЛП(КодДоступа) <> "")) ИЛИ (Интернет = 1) Тогда
		ЭлементыФормы.ПанельДата.ТекущаяСтраница = ЭлементыФормы.ПанельДата.Страницы.ЗаПериод;
	ИначеЕсли (Интернет = 0) Тогда
		ЭлементыФормы.ПанельДата.ТекущаяСтраница = ЭлементыФормы.ПанельДата.Страницы.ЗаДень;
	КонецЕсли;
	
	Если (Интернет = 1) Тогда
		ЭлементыФормы.НадписьПредупреждение.Видимость = Истина;
		ЭлементыФормы.Надпись1.Видимость = Истина;
		ЭлементыФормы.НадписьПредупреждение1.Видимость = Истина;
		ЭлементыФормы.Надпись2.Видимость = Истина;
		ЭлементыФормы.НадписьПредупреждение.Заголовок = НСтр("ru='Доступны курсы с ';uk='Доступні курси з '");
		ЭлементыФормы.Надпись1.Заголовок = Формат(НачалоГода(ДобавитьМесяц(ТекущаяДата(),-12)), "ДЛФ=Д");
		ЭлементыФормы.Надпись2.Заголовок = Формат(КонецМесяца(ДобавитьМесяц(ТекущаяДата(),-1)), "ДЛФ=Д");
	Иначе	
		ЭлементыФормы.НадписьПредупреждение.Видимость = Ложь;
		ЭлементыФормы.Надпись1.Видимость = Ложь;
		ЭлементыФормы.НадписьПредупреждение1.Видимость = Ложь;
		ЭлементыФормы.Надпись2.Видимость = Ложь;	
	КонецЕсли;
КонецПроцедуры

Процедура ВосстановитьНастройки()
	Попытка
		ЗначениеКонстанты = Константы.НастройкиЗагрузкиКурсовВалют.Получить();
		Если ТипЗнч(ЗначениеКонстанты.Получить()) = Тип("Структура") Тогда
			Настройки = ЗначениеКонстанты.Получить();
		КонецЕсли;
		
		ЗагружатьЕжедневно 	= Настройки.ЗагружатьЕжедневно;
		Интернет			= Настройки.ИсточникДанных;
		КодДоступа			= Настройки.КодДоступа;
		БукваДиска			= Настройки.БукваДиска;
		
		ЗапомнитьИмяИПароль = Настройки.ЗапомнитьИмяИПароль;
		
		Если ЗапомнитьИмяИПароль Тогда
			ИмяПользователя 	= Настройки.ИмяПользователя;
			ПарольПользователя 	= Настройки.ПарольПользователя;
		КонецЕсли;	
		
		Валюты = Настройки.СписокВалют;
		СписокВалют.Очистить();
		Для сч=0 По Валюты.Количество()-1 Цикл
			СтрокаСпискаВалют = СписокВалют.Добавить();
			СтрокаСпискаВалют.Валюта = Валюты[сч];
			СтрокаСпискаВалют.Пометка = Истина;
		КонецЦикла;
		
		Если ((Интернет = 0) И (СокрЛП(КодДоступа) <> "")) ИЛИ (Интернет = 1) Тогда
			ЭлементыФормы.ПанельДата.ТекущаяСтраница = ЭлементыФормы.ПанельДата.Страницы.ЗаПериод;
		ИначеЕсли (Интернет = 0) Тогда
			ЭлементыФормы.ПанельДата.ТекущаяСтраница = ЭлементыФормы.ПанельДата.Страницы.ЗаДень;
		КонецЕсли;
	Исключение
	КонецПопытки;
	
КонецПроцедуры

Процедура СохранитьНастройки()
	Если Настройки = Неопределено Тогда
		Настройки = Новый Структура("ЗагружатьЕжедневно, ИсточникДанных, КодДоступа, БукваДиска, СписокВалют, ЗапомнитьИмяИПароль, ИмяПользователя, ПарольПользователя");	
	КонецЕсли;
	Настройки.Вставить("ЗагружатьЕжедневно", ЗагружатьЕжедневно);
	Настройки.Вставить("ИсточникДанных", Интернет);
	Настройки.Вставить("КодДоступа", КодДоступа);
	Настройки.Вставить("БукваДиска", БукваДиска);
	
	Настройки.Вставить("ЗапомнитьИмяИПароль", ЗапомнитьИмяИПароль);
	
	Если ЗапомнитьИмяИПароль Тогда
		Настройки.Вставить("ИмяПользователя", ИмяПользователя);
		Настройки.Вставить("ПарольПользователя", ПарольПользователя);
	КонецЕсли;	
	
	Валюты = Новый Массив;
	Для Каждого Строка Из СписокВалют Цикл
		Если Строка.Пометка Тогда
			Валюты.Добавить(Строка.Валюта);	
		КонецЕсли;
	КонецЦикла;
	Настройки.Вставить("СписокВалют", Валюты);
	
	ХранилищеНастроек = Новый ХранилищеЗначения(Настройки);
	Попытка
		Константы.НастройкиЗагрузкиКурсовВалют.Установить(ХранилищеНастроек);
	Исключение
	КонецПопытки;
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	ТекущиеНастройки = Константы.НастройкиЗагрузкиКурсовВалют.Получить();
	Если ТипЗнч(ТекущиеНастройки.Получить()) = Тип("Структура") Тогда
		ТекущиеНастройки = ТекущиеНастройки.Получить();
	КонецЕсли;
	
	ЕстьРазличия = Истина;
	Пока Истина Цикл
		
		Если НЕ ТипЗнч(ТекущиеНастройки) = Тип("Структура") Тогда
			Прервать;
		КонецЕсли;
		
		Если НЕ ТекущиеНастройки.Свойство("ЗагружатьЕжедневно") Тогда
			Прервать;
		КонецЕсли;
		
		Если НЕ ЗагружатьЕжедневно 	= ТекущиеНастройки.ЗагружатьЕжедневно Тогда
			Прервать;
		КонецЕсли;
		Если НЕ Интернет 	= ТекущиеНастройки.ИсточникДанных Тогда
			Прервать;
		КонецЕсли;
		Если НЕ КодДоступа 	= ТекущиеНастройки.КодДоступа Тогда
			Прервать;
		КонецЕсли;
		Если НЕ БукваДиска 	= ТекущиеНастройки.БукваДиска Тогда
			Прервать;
		КонецЕсли;
		Если НЕ ЗапомнитьИмяИПароль 	= ТекущиеНастройки.ЗапомнитьИмяИПароль Тогда
			Прервать;
		КонецЕсли;
		Если ЗапомнитьИмяИПароль Тогда
			Если НЕ ИмяПользователя 	= ТекущиеНастройки.ИмяПользователя Тогда
				Прервать;
			КонецЕсли;
			Если НЕ ПарольПользователя 	= ТекущиеНастройки.ПарольПользователя Тогда
				Прервать;
			КонецЕсли;
		КонецЕсли;
		
		ЕстьРазличияВСпискахВалют = Ложь;
		ТекущиеВалюты = ТекущиеНастройки.СписокВалют;
		СписокВалютКопия = СписокВалют.Выгрузить();
		
		НеЗагружаемыеКурсы = СписокВалютКопия.НайтиСтроки(Новый Структура("Пометка", Ложь));
		Для каждого НеЗагружаемыйКурсы Из НеЗагружаемыеКурсы Цикл
			СписокВалютКопия.Удалить(НеЗагружаемыйКурсы);
		КонецЦикла;
		
		Для Каждого ТекВалюта Из ТекущиеВалюты Цикл
			
			СтрокаВалют = СписокВалютКопия.Найти(ТекВалюта);
			Если СтрокаВалют = Неопределено Тогда
			    ЕстьРазличияВСпискахВалют = Истина;
			Иначе
				СписокВалютКопия.Удалить(СтрокаВалют);
			КонецЕсли;
				
		КонецЦикла;
		Если СписокВалютКопия.Количество() > 0 Тогда
			ЕстьРазличияВСпискахВалют = Истина;
		КонецЕсли;
		
		Если ЕстьРазличияВСпискахВалют Тогда
			Прервать;
		КонецЕсли;
		
		ЕстьРазличия = Ложь;
		Прервать;
	КонецЦикла; 
	
	Если ЕстьРазличия Тогда
		
		Ответ = Вопрос(НСтр("ru='Изменились настройки загрузки (параметры, список валют и т.п.). Сохранить измененные настройки?';uk='Змінилися настройки завантаження (параметри, список валют і інше). Зберегти змінені настройки?'"), РежимДиалогаВопрос.ДаНетОтмена);
		
		Если Ответ = КодВозвратаДиалога.Отмена Тогда
			Отказ = Истина;
		ИначеЕсли  Ответ = КодВозвратаДиалога.Да Тогда
		    СохранитьНастройки();
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ 


// Структура хранит настройки обработки:
// - ЗагружатьЕжедневно	: истина - при загрузке системы будет производиться загрузка курсов, ложь - нет
// - ИсточникДанных 	: 0 - Из интернета, 1 - С диска ИТС
// - КодДоступа			: 32 значный код доступа к платным сервисам
// - БукваДиска			: Буква привода CD-ROM для дисков ИТС
// - СписокВалют		: Массив содержащий коды валют, для которых необходимо загружать курсы
Настройки = Новый Структура("ЗагружатьЕжедневно, ИсточникДанных, КодДоступа, БукваДиска, СписокВалют, ЗапомнитьИмяИПароль, ИмяПользователя, ПарольПользователя");

