// Показывает веб-страницы в обработке Обозреватель  
//
// Параметры
//  АдресСтраницы  – Строка – адрес просматриваемой страницы
//  ЗаголовокОкна  – Строка – заголовок окна обработки
//
// Если передается пустая строка АдресСтраницы, то в обработке Обозреватель 
// просматривается веб-страница конфигурации
// 
Процедура ПоказатьВебСтраницу(АдресСтраницы, ЗаголовокОкна = Неопределено) Экспорт 
	
	Попытка
	
		Обозреватель = Обработки.Обозреватель.Создать();
		
		Форма = Обозреватель.ПолучитьФорму();
		Если ЗначениеЗаполнено(ЗаголовокОкна) Тогда
			Форма.Заголовок = ЗаголовокОкна;
		КонецЕсли;
		Форма.СтартоваяСтраница = АдресСтраницы;
		
		Форма.Открыть();
		
	Исключение
		
		ОбработкаИсключения(ИнформацияОбОшибке());
		
	КонецПопытки;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ НАЖАТИЯ НА ЗНАЧКИ (ОБЩИЕ)


Процедура ОткрытьДокумент(Элемент)

	ОбработатьОткрытиеФормы(Элемент, Документы);
	
КонецПроцедуры // ОткрытьДокумент()

Процедура ОткрытьЖурналДокументов(Элемент)
	
	ОбработатьОткрытиеФормы(Элемент, ЖурналыДокументов, Ложь);
	
КонецПроцедуры // ОткрытьЖурналДокументов()

Процедура ОткрытьОбработку(Элемент)
	
	ОбработатьОткрытиеФормы(Элемент, Обработки, Ложь);
	
КонецПроцедуры // ОткрытьОбработку()

Процедура ОткрытьСправочник(Элемент)
	
	ОбработатьОткрытиеФормы(Элемент, Справочники);
		
КонецПроцедуры // ОткрытьСправочник()

Процедура ОткрытьЗадачи(Элемент)
	
	ОбработатьОткрытиеФормы(Элемент, Задачи);
	
КонецПроцедуры

Процедура ОткрытьРегистрСведений(Элемент)
	
	ОбработатьОткрытиеФормы(Элемент, РегистрыСведений);
	
КонецПроцедуры // ОткрытьРегистрСведений()

Процедура ОткрытьПланВидовРасчета(Элемент)
	
	ОбработатьОткрытиеФормы(Элемент, ПланыВидовРасчета);
	
КонецПроцедуры // ОткрытьПланВидовРасчета()

Процедура ОткрытьОтчет(Элемент)
	
	ОбработатьОткрытиеФормы(Элемент, Отчеты, Ложь);
	
КонецПроцедуры // ОткрытьОтчет()

Процедура ОткрытьПланВидовХарактеристик(Элемент)
	
	ОбработатьОткрытиеФормы(Элемент, ПланыВидовХарактеристик);
	
КонецПроцедуры // ОткрытьОтчет()

Процедура ОткрытьОбщуюФорму(Элемент)
	
	ОбработатьОткрытиеФормы(Элемент);
	
КонецПроцедуры // ОткрытьОбщуюФорму()


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ НАЖАТИЯ НА ЗНАЧКИ (СПЕЦИАЛЬНЫЕ)

Процедура ПисьмоВТехподдержку(Элемент)
	
	ФормаОбработкиПисьмоВТехподдержку(Элемент, ЭтаФорма);
	
КонецПроцедуры


Процедура ПоказатьСтраницуКонфигурации(Элемент)
	
	ФормаОбработкиПоказатьСтраницуКонфигурации(Элемент, ЭтаФорма);
	
КонецПроцедуры

Процедура НовыйСотрудник(Элемент)
	
	ВидДоговораСотрудника = Перечисления.ВидыДоговоровСФизЛицами.ПустаяСсылка();

	// проверим какую форму надо использовать
	ИспользоватьПомощника = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ИспользоватьПомощникаПриемаНаРаботу");
	Если ИспользоватьПомощника Тогда
		Форма = Справочники.СотрудникиОрганизаций.ПолучитьФормуНовогоЭлемента("ФормаПомощник", Элемент);
	Иначе
		Форма = Справочники.СотрудникиОрганизаций.ПолучитьФормуНовогоЭлемента(, Элемент);
	КонецЕсли;
	
	Если Форма.Открыта() Тогда
		// просто активизируем уже открытую форму
		Форма.Активизировать();
		Возврат;
	КонецЕсли;
	
	Если ИспользоватьПомощника Тогда
		Форма.СоздатьДокумент = Истина;
	КонецЕсли;
	
	Форма.Организация = ОсновнаяОрганизация;
	Форма.ВидДоговора = ВидДоговораСотрудника;
	Форма.Открыть();

КонецПроцедуры

Процедура ОткрытьТрудовыеДоговора(Элемент)
	Форма = Справочники.СотрудникиОрганизаций.ПолучитьФормуСписка("ФормаСпискаТрудовыхДоговоров");
	Форма.Открыть();
КонецПроцедуры

Процедура ФормаНастройкиПользователя(Элемент)
	ОткрытьФормуНастройкиПользователя();
КонецПроцедуры

Процедура ОсновнаяОрганизацияНажатие(Элемент)
	Если ОсновнаяОрганизация <> Справочники.Организации.ПустаяСсылка() Тогда
		ОсновнаяОрганизация.ПолучитьФорму().Открыть();
	КонецЕсли;
КонецПроцедуры

Процедура УправлениеРегламентированнойОтчетностью(Элемент)
	
	ОбработатьОткрытиеФормы(Элемент, Обработки, Ложь, "УправлениеОтчетностью");

КонецПроцедуры



Процедура НовоеПисьмо(Элемент)
	
	УправлениеЭлектроннойПочтой.ОткрытьФормуНовогоПисьма();
	
КонецПроцедуры

Процедура ОткрытьФормуОстатковОтпусков(Элемент)
	
	ОбработатьОткрытиеФормы(Элемент, Обработки, Ложь);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ ФОРМЫ

Процедура ЗакладкаНажатие(Элемент)
	
	ТекущийЭлемент = УстановитьЗакладку(Элемент.Имя, ЭлементыФормы);
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ТекущийЭлемент = УстановитьЗакладку("Главная", ЭлементыФормы);
	ТекущийПользователь = глЗначениеПеременной("глТекущийПользователь");
	УстановитьИмяТекущегоПользователя(ЭлементыФормы.ИмяПользователя.Заголовок);
	УстановитьОсновнуюОрганизацию(ЭлементыФормы.ОсновнаяОрганизация.Заголовок);
	
КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ЗаписьПользователя" И Параметр = ТекущийПользователь Тогда
		УстановитьИмяТекущегоПользователя(ЭлементыФормы.ИмяПользователя.Заголовок);
		// могли изменится параметры пользователя (основная организация или учетная запись)
		УстановитьОсновнуюОрганизацию(ЭлементыФормы.ОсновнаяОрганизация.Заголовок);
		УстановитьВидимостьНаписатьПисьмо();
		// или настройка режима рабочего стола
		ОбработатьЭлементыУправленияПоРежиму();
	ИначеЕсли ИмяСобытия = "ЗаписьОрганизации" И Параметр = ОсновнаяОрганизация Тогда
		УстановитьОсновнуюОрганизацию(ЭлементыФормы.ОсновнаяОрганизация.Заголовок);
	КонецЕсли;
		
КонецПроцедуры

Процедура ОбработатьЭлементыУправленияПоРежиму()
	
	Управленческий = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ИспользоватьУправленческийРежимРабочегоСтола");
	
	ИмяАктивнойСтраницы = ?(Управленческий, "Упр", "Регл");
	ПанелиСоСменнымиСтраницами = Новый Массив;
	
	ПанелиСоСменнымиСтраницами.Добавить("ГлавнаяОтчеты");
	ПанелиСоСменнымиСтраницами.Добавить("ПанельНачисленияЗарплаты");
	ПанелиСоСменнымиСтраницами.Добавить("ПанельВыплатыЗарплаты");
	ПанелиСоСменнымиСтраницами.Добавить("РасчетЗарплатыОтчеты");
	ПанелиСоСменнымиСтраницами.Добавить("НачисленияУдержания");
	ПанелиСоСменнымиСтраницами.Добавить("ПанельКадровыеДокументы");
	ПанелиСоСменнымиСтраницами.Добавить("ПанельОтклонения");
	ПанелиСоСменнымиСтраницами.Добавить("КадровыйУчетОтчеты");
	ПанелиСоСменнымиСтраницами.Добавить("ПанельПодразделенияГлавная");
	ПанелиСоСменнымиСтраницами.Добавить("ПанельПодразделенияПерсонал");
	ПанелиСоСменнымиСтраницами.Добавить("ПанельУчетБухучетЗарплаты");
	ПанелиСоСменнымиСтраницами.Добавить("ПанельОсновнаяШтатноеРасписание");
	ПанелиСоСменнымиСтраницами.Добавить("ПанельОсновнаяОрганизация");
	ПанелиСоСменнымиСтраницами.Добавить("КадровыйУчетШтатноеРасписание");
	ПанелиСоСменнымиСтраницами.Добавить("РасчетЗарплатыОплатаНеявок");
	ПанелиСоСменнымиСтраницами.Добавить("РасчетЗарплатыСмотритеТакже");
	
	Для Каждого ПанельСоСменнымиСтраницами Из ПанелиСоСменнымиСтраницами Цикл
		ЭлементыФормы[ПанельСоСменнымиСтраницами].ТекущаяСтраница 		= ЭлементыФормы[ПанельСоСменнымиСтраницами].Страницы[ИмяАктивнойСтраницы];
	КонецЦикла;
	
КонецПроцедуры

          	
Процедура УстановитьВидимостьНаписатьПисьмо()
	УчетнаяЗаписьПоУмолчанию = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ТекущийПользователь, "ОсновнаяУчетнаяЗапись");
	ЭлементыФормы.НовоеПисьмо.Видимость = ( УчетнаяЗаписьПоУмолчанию <> Справочники.УчетныеЗаписиЭлектроннойПочты.ПустаяСсылка());
КонецПроцедуры

Процедура ПриОткрытии()
	ОбработатьЭлементыУправленияПоРежиму();
	УстановитьВидимостьНаписатьПисьмо();
	
	Если Локализация.КодЯзыкаИнтерфейса() = "uk" Тогда
		Элементыформы.ГлавнаяАктивная.Картинка = БиблиотекаКартинок.ГлавнаяАктивнаяУкр;
		Элементыформы.Главная.Картинка = БиблиотекаКартинок.ГлавнаяНеАктивнаяУкр;
		Элементыформы.КадровыйУчетАктивная.Картинка = БиблиотекаКартинок.КадровыйУчетАктивнаяУкр;
		Элементыформы.КадровыйУчет.Картинка = БиблиотекаКартинок.КадровыйУчетНеАктивнаяУкр;
		Элементыформы.РасчетЗарплатыАктивная.Картинка = БиблиотекаКартинок.РасчетЗарплатыАктивнаяУкр;
		Элементыформы.РасчетЗарплаты.Картинка = БиблиотекаКартинок.РасчетЗарплатыНеАктивнаяУкр;
		Элементыформы.НалогиАктивная.Картинка = БиблиотекаКартинок.НалогиАктивнаяУкр;
		Элементыформы.Налоги.Картинка = БиблиотекаКартинок.НалогиНеАктивнаяУкр;
		Элементыформы.БухучетАктивная.Картинка = БиблиотекаКартинок.БухучетАктивнаяУкр;
		Элементыформы.Бухучет.Картинка = БиблиотекаКартинок.БухучетНеАктивнаяУкр;
		Элементыформы.ПерсоналАктивная.Картинка = БиблиотекаКартинок.ПерсоналАктивнаяУкр;
		Элементыформы.Персонал.Картинка = БиблиотекаКартинок.ПерсоналНеАктивнаяУкр;
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПланСчетовНажатие(Элемент)
	
	ПланыСчетов.Хозрасчетный.ПолучитьФормуСписка().Открыть();
	
КонецПроцедуры
