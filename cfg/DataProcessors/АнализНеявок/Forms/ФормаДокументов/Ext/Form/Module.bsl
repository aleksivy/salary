
////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мОбработкаТайпинга;
Перем мТекстТайпинга;
Перем мПоследнееЗначениеЭлементаТайпинга;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Функция формирует структуру параметров для для ввода головной организации по подстроке
//
// Параметры
//  НЕТ
//
// Возвращаемое значение:
//   Структура имен и значений параметров
//
Функция ПолучитьСтруктуруПараметровТайпинга(ЭлементУправления)

	Если ЭлементУправления = "ВидРасчетаДополнительногоОтпуска" Тогда
	 	МассивСпособовРасчета = Новый Массив;
	  //МассивСпособовРасчета.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоКалендарнымДням);
	  //МассивСпособовРасчета.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоШестидневке);
	    МассивСпособовРасчета.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпуска);
	  СтруктураПараметров = Новый Структура("СпособРасчета, Предопределенный",МассивСпособовРасчета,Ложь);
	ИначеЕсли ЭлементУправления = "ВидРасчетаУчебногоОтпуска" Тогда
		МассивСпособовРасчета = Новый Массив;
	  //МассивСпособовРасчета.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоКалендарнымДням);
	  //МассивСпособовРасчета.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоШестидневке);
	    МассивСпособовРасчета.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпуска);
		ВидыУчетаВремениУчебногоОтпуска = Новый СписокЗначений;
		ВидыУчетаВремениУчебногоОтпуска.Добавить(Справочники.КлассификаторИспользованияРабочегоВремени.ОтпускНаОбучение);
		СтруктураПараметров = Новый Структура("СпособРасчета, ОбозначениеВТабелеУчетаРабочегоВремени",МассивСпособовРасчета,ВидыУчетаВремениУчебногоОтпуска);
	ИначеЕсли ЭлементУправления = "ВидРасчетаОплатыПоСреднемуЗаработку" Тогда
	 	МассивСпособовРасчета = Новый Массив;
		МассивСпособовРасчета.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработку);
		МассивСпособовРасчета.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ДоплатаДоСреднегоЗаработка);
		СтруктураПараметров = Новый Структура("СпособРасчета, Предопределенный",МассивСпособовРасчета,Ложь);
	ИначеЕсли ЭлементУправления = "ВидНевыхода" Тогда
	 	СписокПричинНевыхода = Новый СписокЗначений;
		СписокПричинНевыхода.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.Прогул);
		СписокПричинНевыхода.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускЗаСвойСчет);
		СписокПричинНевыхода.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускБезОплатыУчебный);
		//СписокПричинНевыхода.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускБезОплатыПоТКРФ);
		СписокПричинНевыхода.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.НевыходРегл);
		СтруктураПараметров = Новый Структура("Ссылка",СписокПричинНевыхода);
	Иначе
		СтруктураПараметров = Новый Структура();
	КонецЕсли;

	Возврат СтруктураПараметров;

КонецФункции // ПолучитьСтруктуруПараметровТайпинга()()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()
	
	ТипДокумента = ТипЗнч(РасчетныйДокумент);
	Если ТипДокумента = Тип("ДокументСсылка.НачислениеПоБольничномуЛисту") Тогда
		ЭлементыФормы.ПанельРеквизитов.ТекущаяСтраница = ЭлементыФормы.ПанельРеквизитов.Страницы.Больничный;
		// заполнение поля "процент оплаты" для больничных листов
		Если РасчетныйДокумент.Пустая() Тогда
			СтруктураПоиска = Новый Структура("Сотрудник,ПричинаОтсутствия", Сотрудник, Перечисления.СостоянияРаботникаОрганизации.Заболевание);
			СтрокаТЧ = КадровыйДокумент.РаботникиОрганизации.НайтиСтроки(СтруктураПоиска);
			Если СтрокаТЧ.Количество() > 0 Тогда
				ДатаНачала = СтрокаТЧ[0].ДатаНачала
			Иначе
				ДатаНачала = КадровыйДокумент.Дата
			КонецЕсли;
		Иначе
			ПроцентОплаты = РасчетныйДокумент.ПроцентОплаты
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЭлементыФормы.ПричинаНетрудоспособности.Значение) Тогда
			ЭлементыФормы.ПричинаНетрудоспособности.Значение = Справочники.ПричиныНетрудоспособности.ОбщееЗаболевание;
		КонецЕсли;
			
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ОплатаПоСреднемуЗаработку") Тогда
		ЭлементыФормы.ПанельРеквизитов.ТекущаяСтраница = ЭлементыФормы.ПанельРеквизитов.Страницы.Средний
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.НачислениеОтпускаРаботникамОрганизаций") Тогда
		Если ЗначениеЗаполнено(РасчетныйДокумент) И НЕ ЗначениеЗаполнено(КадровыйДокумент) Тогда
			ЗаполнитьОтпуска();
			ЭлементыФормы.ПанельРеквизитов.ТекущаяСтраница = ЭлементыФормы.ПанельРеквизитов.Страницы.РасчетОтпуска;
		ИначеЕсли ЗначениеЗаполнено(КадровыйДокумент) И НЕ ЗначениеЗаполнено(РасчетныйДокумент) Тогда
			ЭлементыФормы.ПанельРеквизитов.ТекущаяСтраница = ЭлементыФормы.ПанельРеквизитов.Страницы.Отпуск;
		Иначе
			ЗаполнитьОтпуска();
			ЭлементыФормы.ПанельРеквизитов.Страницы.Больничный.Видимость = Ложь;
			ЭлементыФормы.ПанельРеквизитов.Страницы.Простой.Видимость = Ложь;
			ЭлементыФормы.ПанельРеквизитов.Страницы.Невыход.Видимость = Ложь;
			ЭлементыФормы.ПанельРеквизитов.Страницы.Средний.Видимость = Ложь;
			ЭлементыФормы.ПанельРеквизитов.Страницы.УчебныйОтпуск.Видимость = Ложь;
			ЭлементыФормы.ПанельРеквизитов.ТекущаяСтраница = ЭлементыФормы.ПанельРеквизитов.Страницы.Отпуск;
			ЭлементыФормы.ПанельРеквизитов.ОтображениеЗакладок = ОтображениеЗакладок.СправаВертикально;
		КонецЕсли;
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.РегистрацияПростоевВОрганизациях") Тогда
		ЭлементыФормы.ПанельРеквизитов.ТекущаяСтраница = ЭлементыФормы.ПанельРеквизитов.Страницы.Простой
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.НевыходыВОрганизациях") Тогда
		ЭлементыФормы.ПанельРеквизитов.ТекущаяСтраница = ЭлементыФормы.ПанельРеквизитов.Страницы.Невыход
	Иначе // отпуск по уходу
		ЭлементыФормы.ПанельРеквизитов.Видимость = Ложь
	КонецЕсли;	  
	
	ТолькоПросмотр = Не РасчетныйДокумент.Пустая();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ

Процедура КнопкаВыполнитьНажатие(Кнопка)
	Если Модифицированность Тогда
		ЗаполнитьЗначенияСвойств(КлючУникальности,ЭтаФорма);
	КонецЕсли;
	Закрыть();
КонецПроцедуры

// страница Отпуск

Процедура ВидРасчетаДополнительногоОтпускаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	
	//Предложим для выбора список расчетов, имеющих способ расчета, соответствующий указанной форме оплаты
	ФормаВыбораВидаРасчета = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПолучитьФормуВыбора("ФормаВыбора", Элемент, "дляДокументаОтпускаОрганизаций");
	
	ФормаВыбораВидаРасчета.НачальноеЗначениеВыбора = Элемент.Значение;
	
 	МассивСпособовРасчета = Новый СписокЗначений;
	//МассивСпособовРасчета.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоКалендарнымДням);
	//МассивСпособовРасчета.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоШестидневке);
	МассивСпособовРасчета.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпуска);	
	ФормаВыбораВидаРасчета.Отбор.СпособРасчета.ВидСравнения = ВидСравнения.ВСписке;
	ФормаВыбораВидаРасчета.Отбор.СпособРасчета.Значение = МассивСпособовРасчета;
	ФормаВыбораВидаРасчета.Отбор.СпособРасчета.Использование = Истина;

 	ВидыРасчетаОтпускОсновной = Новый СписокЗначений;
	 //ВидыРасчетаОтпускОсновной.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПоСреднемуОтпКалендарныеДни);
	 //ВидыРасчетаОтпускОсновной.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПоСреднемуОтпШестидневка);
	ВидыРасчетаОтпускОсновной.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПоСреднемуОтп);
	ФормаВыбораВидаРасчета.Отбор.Ссылка.ВидСравнения = ВидСравнения.НеВСписке;
	ФормаВыбораВидаРасчета.Отбор.Ссылка.Значение = ВидыРасчетаОтпускОсновной;
	ФормаВыбораВидаРасчета.Отбор.Ссылка.Использование = Истина;
	
	ФормаВыбораВидаРасчета.Открыть();
	
КонецПроцедуры

Процедура ВидРасчетаДополнительногоОтпускаАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	ПроцедурыПоискаПоСтроке.АвтоПодборТекстаВЭлементеУправления(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка, ПолучитьСтруктуруПараметровТайпинга("ВидРасчетаДополнительногоОтпуска"), Тип("ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций"));
	
КонецПроцедуры

Процедура ВидРасчетаДополнительногоОтпускаОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	ПроцедурыПоискаПоСтроке.ОкончаниеВводаТекстаВЭлементеУправления(Элемент, Текст, Значение, СтандартнаяОбработка, ПолучитьСтруктуруПараметровТайпинга("ВидРасчетаДополнительногоОтпуска"), ЭтаФорма, Тип("ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций"), мОбработкаТайпинга, мТекстТайпинга, мПоследнееЗначениеЭлементаТайпинга, Ложь);
	
КонецПроцедуры

Процедура ПроцентОплатыРегулирование(Элемент, Направление, СтандартнаяОбработка)
	Если Направление = 1 Тогда // увеличиваем значение
		Элемент.Значение = Элемент.Значение + 50;
	Иначе // = -1 - уменьшаем значение
		Элемент.Значение = Элемент.Значение - 50;
	КонецЕсли;
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

// страница Больничный

Процедура ПервичныйБольничныйЛистНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	мФормаВыбораПервичногоБольничногоЛиста = Документы.НачислениеПоБольничномуЛисту.ПолучитьФормуВыбора("ФормаВыбора", Элемент, "ВыборПервичногоБЛДляНачисленияПоБЛ № " );
	мФормаВыбораПервичногоБольничногоЛиста.Отбор.Сотрудник.Установить(Сотрудник);
	мФормаВыбораПервичногоБольничногоЛиста.Отбор.Организация.Установить(Организация);
	мФормаВыбораПервичногоБольничногоЛиста.Отбор.ПервичныйБольничныйЛист.Установить(Документы.НачислениеПоБольничномуЛисту.ПустаяСсылка());
	мФормаВыбораПервичногоБольничногоЛиста.НачальноеЗначениеВыбора = ПервичныйБольничныйЛист;
	мФормаВыбораПервичногоБольничногоЛиста.Порядок.Установить("Дата Убыв");
	мФормаВыбораПервичногоБольничногоЛиста.Открыть();
	
КонецПроцедуры

Процедура ПервичныйБольничныйЛистПриИзменении(Элемент)
	
	// Скопируем данные из первичного-листа 
	Если ЗначениеЗаполнено(ПервичныйБольничныйЛист) Тогда
		ПричинаНетрудоспособности	= ПервичныйБольничныйЛист.ПричинаНетрудоспособности;		   		
		ПроцентОплаты = ПервичныйБольничныйЛист.ПроцентОплаты;
	КонецЕсли; 

КонецПроцедуры

Процедура ПроцентОплатыБольничногоРегулирование(Элемент, Направление, СтандартнаяОбработка)
	ТекущееЗначение = Элемент.Значение;
	Если Направление = 1 Тогда // увеличиваем значение
		Если ТекущееЗначение = 0 Тогда
			Элемент.Значение = 60;
		ИначеЕсли ТекущееЗначение = 60 Тогда
			Элемент.Значение = 80;
		ИначеЕсли ТекущееЗначение = 80 Тогда
			Элемент.Значение = 100;
		Иначе
			// далее увеличивать не будем 
		КонецЕсли;
	Иначе // = -1 - уменьшаем значение
		Если ТекущееЗначение = 100 Тогда
			Элемент.Значение = 80;
		ИначеЕсли ТекущееЗначение = 80 Тогда
			Элемент.Значение = 60;
		Иначе
			// далее уменьшать не будем 
		КонецЕсли;
	КонецЕсли;
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

// страница Средний

Процедура ВидРасчетаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	
	//Предложим для выбора список расчетов, имеющих способ расчета, соответствующий указанной форме оплаты
	ФормаВыбораВидаРасчета = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПолучитьФормуВыбора("ФормаВыбора", Элемент, "дляДокументаОтпускаОрганизаций");
	
	ФормаВыбораВидаРасчета.НачальноеЗначениеВыбора = Элемент.Значение;
	
 	МассивСпособовРасчета = Новый СписокЗначений;
	МассивСпособовРасчета.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработку);
	МассивСпособовРасчета.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ДоплатаДоСреднегоЗаработка);
	ФормаВыбораВидаРасчета.Отбор.СпособРасчета.ВидСравнения = ВидСравнения.ВСписке;
	ФормаВыбораВидаРасчета.Отбор.СпособРасчета.Значение = МассивСпособовРасчета;
	ФормаВыбораВидаРасчета.Отбор.СпособРасчета.Использование = Истина;

	ФормаВыбораВидаРасчета.Отбор.Ссылка.ВидСравнения = ВидСравнения.НеРавно;
	ФормаВыбораВидаРасчета.Отбор.Ссылка.Значение = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПростойПоСредней;
	ФормаВыбораВидаРасчета.Отбор.Ссылка.Использование = Истина;
	
	ФормаВыбораВидаРасчета.Открыть();
	
КонецПроцедуры

Процедура ВидРасчетаАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	ПроцедурыПоискаПоСтроке.АвтоПодборТекстаВЭлементеУправления(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка, ПолучитьСтруктуруПараметровТайпинга("ВидРасчетаОплатыПоСреднемуЗаработку"), Тип("ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций"));
	
КонецПроцедуры

Процедура ВидРасчетаОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	ПроцедурыПоискаПоСтроке.ОкончаниеВводаТекстаВЭлементеУправления(Элемент, Текст, Значение, СтандартнаяОбработка, ПолучитьСтруктуруПараметровТайпинга("ВидРасчетаОплатыПоСреднемуЗаработку"), ЭтаФорма, Тип("ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций"), мОбработкаТайпинга, мТекстТайпинга, мПоследнееЗначениеЭлементаТайпинга, Ложь);
	
КонецПроцедуры

Процедура ПроцентОплатыПоСреднемуРегулирование(Элемент, Направление, СтандартнаяОбработка)
	Если Направление = 1 Тогда // увеличиваем значение
		Элемент.Значение = Элемент.Значение + 50;
	Иначе // = -1 - уменьшаем значение
		Элемент.Значение = Элемент.Значение - 50;
	КонецЕсли;
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

// страница Невыход

Процедура ВидНевыходаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	
 	СписокПричинНевыхода = Новый СписокЗначений;
	СписокПричинНевыхода.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.Прогул);
	СписокПричинНевыхода.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускЗаСвойСчет);
	СписокПричинНевыхода.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускБезОплатыУчебный);
	//СписокПричинНевыхода.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускБезОплатыПоТКРФ);
	СписокПричинНевыхода.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.НевыходРегл);
	СписокВыбора = СписокПричинНевыхода;
	ЭлементСписка = ВыбратьИзСписка(СписокВыбора,Элемент,СписокВыбора.НайтиПоЗначению(Элемент.Значение));
	Если ЭлементСписка <> Неопределено Тогда
		Элемент.Значение = ЭлементСписка.Значение;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВидНевыходаАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	ПроцедурыПоискаПоСтроке.АвтоПодборТекстаВЭлементеУправления(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка, ПолучитьСтруктуруПараметровТайпинга("ВидНевыхода"), Тип("ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций"));
	
КонецПроцедуры

Процедура ВидНевыходаОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	ПроцедурыПоискаПоСтроке.ОкончаниеВводаТекстаВЭлементеУправления(Элемент, Текст, Значение, СтандартнаяОбработка, ПолучитьСтруктуруПараметровТайпинга("ВидНевыхода"), ЭтаФорма, Тип("ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций"), мОбработкаТайпинга, мТекстТайпинга, мПоследнееЗначениеЭлементаТайпинга, Ложь);
	
КонецПроцедуры

Процедура ВидРасчетаУчебногоОтпускаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	
	//Предложим для выбора список расчетов, имеющих способ расчета, соответствующий указанной форме оплаты
	ФормаВыбораВидаРасчета = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПолучитьФормуВыбора("ФормаВыбора", Элемент, "дляДокументаОтпускаОрганизаций");
	
	ФормаВыбораВидаРасчета.НачальноеЗначениеВыбора = Элемент.Значение;
	
 	МассивСпособовРасчета = Новый СписокЗначений;
	 //МассивСпособовРасчета.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоКалендарнымДням);
	 //МассивСпособовРасчета.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоШестидневке);
	МассивСпособовРасчета.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпуска);
	ФормаВыбораВидаРасчета.Отбор.СпособРасчета.ВидСравнения = ВидСравнения.ВСписке;
	ФормаВыбораВидаРасчета.Отбор.СпособРасчета.Значение = МассивСпособовРасчета;
	ФормаВыбораВидаРасчета.Отбор.СпособРасчета.Использование = Истина;

 	ВидыУчетаВремениУчебногоОтпуска = Новый СписокЗначений;
 	ВидыУчетаВремениУчебногоОтпуска.Добавить(Справочники.КлассификаторИспользованияРабочегоВремени.ОтпускНаОбучение);
	ФормаВыбораВидаРасчета.Отбор.ОбозначениеВТабелеУчетаРабочегоВремени.ВидСравнения = ВидСравнения.ВСписке;
	ФормаВыбораВидаРасчета.Отбор.ОбозначениеВТабелеУчетаРабочегоВремени.Значение = ВидыУчетаВремениУчебногоОтпуска;
	ФормаВыбораВидаРасчета.Отбор.ОбозначениеВТабелеУчетаРабочегоВремени.Использование = Истина;
	
	ФормаВыбораВидаРасчета.Открыть();
	
КонецПроцедуры

Процедура ВидРасчетаУчебногоОтпускаАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	ПроцедурыПоискаПоСтроке.АвтоПодборТекстаВЭлементеУправления(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка, ПолучитьСтруктуруПараметровТайпинга("ВидРасчетаУчебногоОтпуска"), Тип("ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций"));
КонецПроцедуры

Процедура ВидРасчетаУчебногоОтпускаОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	ПроцедурыПоискаПоСтроке.ОкончаниеВводаТекстаВЭлементеУправления(Элемент, Текст, Значение, СтандартнаяОбработка, ПолучитьСтруктуруПараметровТайпинга("ВидРасчетаУчебногоОтпуска"), ЭтаФорма, Тип("ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций"), мОбработкаТайпинга, мТекстТайпинга, мПоследнееЗначениеЭлементаТайпинга, Ложь);
КонецПроцедуры

//страница РасчетОтпуска
Процедура ЗаполнитьОтпуска()
	Если Не ЗначениеЗаполнено(РасчетныйДокумент) Тогда
		Возврат;
	КонецЕсли;
	
	 Отпуска = РасчетныйДокумент.Отпуска.Выгрузить();
	 ЭлементыФормы.Отпуска.СоздатьКолонки();
КонецПроцедуры

