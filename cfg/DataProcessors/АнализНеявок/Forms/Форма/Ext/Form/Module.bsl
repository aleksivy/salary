
////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мОрганизация;
Перем мСоответствиеТиповДокументов;

// Диалог настройки периода
Перем мНастройкаПериода;

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	СписокТипов = Новый СписокЗначений;
	СписокТипов.Добавить(НСтр("ru='Отпуска организации';uk='Відпустки організації'"));
	СписокТипов.Добавить(НСтр("ru='Командировки организации';uk='Відрядження організації'"));
	СписокТипов.Добавить(НСтр("ru='Отсутствие на работе организации';uk='Відсутність на роботі організації'"));
	мСоответствиеТиповДокументов.Вставить(НСтр("ru='Отпуска организации';uk='Відпустки організації'"),Новый ОписаниеТипов("ДокументСсылка.ОтпускаОрганизаций"));
	мСоответствиеТиповДокументов.Вставить(НСтр("ru='Командировки организации';uk='Відрядження організації'"),Новый ОписаниеТипов("ДокументСсылка.КомандировкиОрганизаций"));
	мСоответствиеТиповДокументов.Вставить(НСтр("ru='Отсутствие на работе организации';uk='Відсутність на роботі організації'"),Новый ОписаниеТипов("ДокументСсылка.ОтсутствиеНаРаботеОрганизаций"));
	
	ЭлементыФормы.ТипДокумента.СписокВыбора = СписокТипов;
	
КонецПроцедуры

// Процедура - обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()
	
	Если Не ОтбиратьСобытияПоДокументу Тогда
		
		Если Не ЗначениеЗаполнено(ДатаНачала) Тогда
			ДатаНачала		= НачалоМесяца(ОбщегоНазначения.ПолучитьРабочуюДату());
		КонецЕсли;	
		Если Не ЗначениеЗаполнено(ДатаОкончания) Тогда
			ДатаОкончания	= КонецМесяца(ОбщегоНазначения.ПолучитьРабочуюДату());
		КонецЕсли;	
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(КадровыйДокумент) Тогда
		КадровыйДокумент = Документы.ОтпускаОрганизаций.ПустаяСсылка()
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ТипДокумента) Тогда
		ТипДокумента = НСтр("ru='Отпуска организации';uk='Відпустки організації'")
	КонецЕсли;
	
	Если Организация.Пустая() Тогда
		Организация   = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");
	КонецЕсли;
	
	Если Не (Организация.Пустая() Или ОтбиратьСобытияПоДокументу И КадровыйДокумент.Пустая()) Тогда
		Автозаполнение();
	КонецЕсли;
	
	Если Неявки.Количество() > 0 Тогда
		ЭлементыФормы.Неявки.ТекущаяСтрока = Неявки[0];
	КонецЕсли;
	
	// определяем значения для дальнейшего использования
	
	мОрганизация	= Организация;
	// Установить настройку периода по умолчанию 
	мНастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период; 
	
КонецПроцедуры

Процедура ПриПовторномОткрытии(СтандартнаяОбработка)
	Если Не (Организация.Пустая() Или ОтбиратьСобытияПоДокументу И КадровыйДокумент.Пустая()) Тогда
		Автозаполнение();
	КонецЕсли;
	Если Неявки.Количество() > 0 Тогда
		ЭлементыФормы.Неявки.ТекущаяСтрока = Неявки[0];
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

Процедура КоманднаяПанельНеявкиОбновить(Кнопка)
	
	Автозаполнение();
	
КонецПроцедуры

// Процедура устанавливает пометку у всех строк таблицы.
//
Процедура КоманднаяПанельНеявкиУстановитьФлаги(Кнопка)
	
	Для Каждого СтрокаТЧ Из Неявки Цикл
    	СтрокаТЧ.Отметка = Истина
	КонецЦикла;	
	
КонецПроцедуры

// Процедура снимает пометку у всех строк таблицы.
//
Процедура КоманднаяПанельНеявкиСнятьфлаги(Кнопка)
	
	Для Каждого СтрокаТЧ Из Неявки Цикл
    	СтрокаТЧ.Отметка = Ложь
	КонецЦикла;	
	
КонецПроцедуры

// Инвертирует флаги в табличной части 
//
Процедура КоманднаяПанельНеявкиИнвертировать(Кнопка)
	
	Для Каждого СтрокаТаблицы Из Неявки Цикл		
		СтрокаТаблицы.Отметка = Не СтрокаТаблицы.Отметка;
	КонецЦикла;
	
КонецПроцедуры

Процедура КоманднаяПанельНеявкиКадровыйДокумент(Кнопка)
	ТекущаяСтрока = ЭлементыФормы.Неявки.ТекущаяСтрока;
	Если ТекущаяСтрока <> Неопределено И ЗначениеЗаполнено(ТекущаяСтрока.КадровыйДокумент) Тогда
		ТекущаяСтрока.КадровыйДокумент.ПолучитьФорму().Открыть()
	КонецЕсли;
КонецПроцедуры

Процедура КоманднаяПанельНеявкиРасчетныйДокумент(Кнопка)
	ТекущаяСтрока = ЭлементыФормы.Неявки.ТекущаяСтрока;
	Если ТекущаяСтрока <> Неопределено И ЗначениеЗаполнено(ТекущаяСтрока.РасчетныйДокумент)  Тогда
		ТекущаяСтрока.РасчетныйДокумент.ПолучитьФорму().Открыть()
	КонецЕсли;
КонецПроцедуры

// Процедура создает документы по пустым строкам табличной части
//
Процедура ДействияФормыСоздать(Кнопка)
	
	СоздатьДокументы();	
	
КонецПроцедуры

// Процедура рассчитывает отмеченные документы
//
Процедура ДействияФормыРассчитать(Кнопка)
	
	РассчитатьДокументы();

КонецПроцедуры

// Процедура проводит отмеченные документы
//
Процедура ДействияФормыПровести(Кнопка)

	ПровестиДокументы();	
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ

// Процедура - обработчик события "ПриИзменении" поля ввода "Организация".
//
Процедура ОрганизацияПриИзменении(Элемент)
	
	Если мОрганизация <> Организация Тогда
		Неявки.Очистить();
	КонецЕсли;
	мОрганизация = Организация;
	
	ЗаполнениеДокументов.ПриИзмененииЗначенияОрганизации(ЭтотОбъект);

	Если Не (Организация.Пустая() Или ОтбиратьСобытияПоДокументу И КадровыйДокумент.Пустая()) Тогда
		Автозаполнение();
		Если Неявки.Количество() > 0 Тогда
			ЭлементыФормы.Неявки.ТекущаяСтрока = Неявки[0]
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик нажатия кнопки настройки периода.
//
Процедура ВыбПериодНажатие(Элемент)
	
	мНастройкаПериода.УстановитьПериод(ДатаНачала, КонецДня(ДатаОкончания));
	
	Если мНастройкаПериода.Редактировать() Тогда
		ДатаНачала		= мНастройкаПериода.ПолучитьДатуНачала();
		ДатаОкончания	= мНастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
	
КонецПроцедуры // ВыбПериодНажатие()

Процедура ТипДокументаПриИзменении(Элемент)
	ЗначениеВыбрано = мСоответствиеТиповДокументов[Элемент.Значение] <> Неопределено;
	ЭлементыФормы.КадровыйДокумент.ТолькоПросмотр = Не ЗначениеВыбрано;
	Если ЗначениеВыбрано Тогда
		КадровыйДокумент = мСоответствиеТиповДокументов[Элемент.Значение].ПривестиЗначение(КадровыйДокумент);
	Иначе 
		КадровыйДокумент = ""
	КонецЕсли;
КонецПроцедуры

Процедура КадровыйДокументПриИзменении(Элемент)
	Если ОтбиратьСобытияПоДокументу И Не (Организация.Пустая() Или КадровыйДокумент.Пустая()) Тогда
		Автозаполнение();
		Если Неявки.Количество() > 0 Тогда
			ЭлементыФормы.Неявки.ТекущаяСтрока = Неявки[0]
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОЙ ЧАСТИ Неявки и ее РЕКВИЗИТОВ 

// Процедура - обработчик события "Выбор" ТЧ
//
Процедура НеявкиВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	ФормаРедактированияСтроки = ПолучитьФорму("ФормаДокументов",ЭтаФорма,ВыбраннаяСтрока);
	ЗаполнитьЗначенияСвойств(ФормаРедактированияСтроки,ВыбраннаяСтрока);
	ФормаРедактированияСтроки.Организация = Организация;
	ФормаРедактированияСтроки.ОткрытьМодально();
	СтандартнаяОбработка = Ложь;

КонецПроцедуры

// Процедура - обработчик события "ПриВыводеСтроки" ТЧ
//
Процедура НеявкиПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	// Выделим синим цветом дублирующиеся строки.
	Если ДанныеСтроки.ДублирующаясяСтрока Тогда
		ОформлениеСтроки.ЦветТекста  = Новый Цвет(0, 0, 255);
	КонецЕсли;
	
	// При наличии обоих документов покажем стандартный значок для отображения состояния расчетного документа
	ЯчейкаСКартинкой = ОформлениеСтроки.Ячейки.Картинка;
	Если ЗначениеЗаполнено(ДанныеСтроки.РасчетныйДокумент)
		И ЗначениеЗаполнено(ДанныеСтроки.КадровыйДокумент) Тогда
		ЯчейкаСКартинкой.ОтображатьКартинку = Истина;
		ЯчейкаСКартинкой.ИндексКартинки = ?(ДанныеСтроки.РасчетныйДокумент.Проведен, 0, 2);
	Иначе
		ЯчейкаСКартинкой.ОтображатьКартинку = Ложь;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ИНИЦИАЛИЗАЦИЯ ОБЪЕКТА 

мНастройкаПериода = Новый НастройкаПериода;
мСоответствиеТиповДокументов = Новый Соответствие;
