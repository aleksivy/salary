
Процедура КнопкаВыполнитьНажатие(Кнопка)
	
	ДокументИсправление = Документы.КорректировкаЗаписейРегистров.СоздатьДокумент();
	ДокументИсправление.Дата = ОбщегоНазначения.ПолучитьРабочуюДату();
	РегистрНакопления = ДокументИсправление.ТаблицаРегистровНакопления.Добавить();
	РегистрНакопления.Имя = Метаданные.РегистрыНакопления.ВзаиморасчетыПоВзносамВФонды.Имя;
	РегистрНакопления.Представление = Метаданные.РегистрыНакопления.ВзаиморасчетыПоВзносамВФонды.Синоним;
	РегистрРасчета = ДокументИсправление.ТаблицаРегистровРасчета.Добавить();
	РегистрРасчета.Имя = Метаданные.РегистрыРасчета.ВзносыВФонды.Имя;
	РегистрРасчета.Представление = Метаданные.РегистрыРасчета.ВзносыВФонды.Синоним;
	РегистрРасчета = ДокументИсправление.ТаблицаРегистровРасчета.Добавить();
	РегистрРасчета.Имя = Метаданные.РегистрыРасчета.ОтражениеЗарплатыОрганизацийВРеглУчете.Имя;
	РегистрРасчета.Представление = Метаданные.РегистрыРасчета.ОтражениеЗарплатыОрганизацийВРеглУчете.Синоним;
	
	Для Каждого Исправление из ТаблицаИсправлений Цикл
		
		Если Исправление.РезультатНовый = 0  Тогда
			Продолжить;
		КонецЕсли;
		
		ДвижениеРР = ДокументИсправление.Движения.ВзносыВФонды.Добавить();
		ЗаполнитьЗначенияСвойств(ДвижениеРР,Исправление);
		ДвижениеРР.ПериодРегистрации = Дата(2011,12,1);
		ДвижениеРР.Организация = Организация;
		ДвижениеРР.ТипНачисления = 3;
		ДвижениеРР.Сторно = истина;
		ДвижениеРР.Активность = истина;
		ДвижениеРР.База = -1*ДвижениеРР.База;
		ДвижениеРР.БазаВзноса = -1*ДвижениеРР.БазаВзноса;
		ДвижениеРР.Результат = -1*ДвижениеРР.Результат;
		
		ДвижениеРР = ДокументИсправление.Движения.ВзносыВФонды.Добавить();
		ЗаполнитьЗначенияСвойств(ДвижениеРР,Исправление);
		ДвижениеРР.ПериодРегистрации = Дата(2011,12,1);
		ДвижениеРР.Организация = Организация;
		ДвижениеРР.ТипНачисления = 2;
		ДвижениеРР.Активность = истина;
		ДвижениеРР.Налог = Справочники.Налоги.ЕСВФОТБольничныеИнвалиды;
		ДвижениеРР.СтатьяНалоговойДекларации = Справочники.СтатьиНалоговыхДеклараций.ЕСВ_ФОТБольничныеИнвалиды;
		ДвижениеРР.Результат = Исправление.РезультатНовый;
		
		Если ВариантЗаполненияРазница Тогда
			ДвижениеРН = ДокументИсправление.Движения.ВзаиморасчетыПоВзносамВФонды.Добавить();
			ДвижениеРН.Период = Дата(2011,12,1);
			ДвижениеРН.Активность = истина;
			ДвижениеРН.ВидДвижения = ВидДвижениянакопления.Приход;
			ДвижениеРН.Организация = Организация;
			ДвижениеРН.ПериодВзаиморасчетов = Дата(2011,12,1);
			ДвижениеРН.СтатьяНалоговойДекларации = Исправление.СтатьяНалоговойДекларации;
			ДвижениеРН.Налог = Исправление.Налог;
			ДвижениеРН.Результат = Окр(Исправление.РезультатНовый - Исправление.Результат,2);
			ДвижениеРН.Сотрудник = Исправление.Сотрудник;
		Иначе
			ДвижениеРН = ДокументИсправление.Движения.ВзаиморасчетыПоВзносамВФонды.Добавить();
			ДвижениеРН.Период = Дата(2011,12,1);
			ДвижениеРН.Активность = истина;
			ДвижениеРН.ВидДвижения = ВидДвижениянакопления.Приход;
			ДвижениеРН.Организация = Организация;
			ДвижениеРН.ПериодВзаиморасчетов = Дата(2011,12,1);
			ДвижениеРН.СтатьяНалоговойДекларации = Исправление.СтатьяНалоговойДекларации;
			ДвижениеРН.Налог = Исправление.Налог;
			ДвижениеРН.Результат = -1*Исправление.Результат;
			ДвижениеРН.Сотрудник = Исправление.Сотрудник;
			
			ДвижениеРН = ДокументИсправление.Движения.ВзаиморасчетыПоВзносамВФонды.Добавить();
			ДвижениеРН.Период = Дата(2011,12,1);
			ДвижениеРН.Активность = истина;
			ДвижениеРН.ВидДвижения = ВидДвижениянакопления.Приход;
			ДвижениеРН.Организация = Организация;
			ДвижениеРН.ПериодВзаиморасчетов = Дата(2011,12,1);
			ДвижениеРН.СтатьяНалоговойДекларации = Справочники.СтатьиНалоговыхДеклараций.ЕСВ_ФОТБольничныеИнвалиды;
			ДвижениеРН.Налог = Справочники.Налоги.ЕСВФОТБольничныеИнвалиды;
			ДвижениеРН.Результат = Исправление.РезультатНовый;
			ДвижениеРН.Сотрудник = Исправление.Сотрудник;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого Исправление из ТаблицаИсправленийПроводки Цикл
		
		Если Исправление.Корректировка = 0  Тогда
			Продолжить;
		КонецЕсли;
		
		Если ВариантЗаполненияРазница Тогда
			ДвижениеРР = ДокументИсправление.Движения.ОтражениеЗарплатыОрганизацийВРеглУчете.Добавить();
			ЗаполнитьЗначенияСвойств(ДвижениеРР,Исправление);
			ДвижениеРР.ПериодРегистрации = Дата(2011,12,1);
			ДвижениеРР.Организация = Организация;
			ДвижениеРР.Налог = Справочники.Налоги.ЕСВФОТБольничные;
			ДвижениеРР.ВидРасчета = ПланыВидовРасчета.ОтражениеЗарплатыОрганизаций.ВзносыФОТ;
           	ДвижениеРР.Активность = истина;
			ДвижениеРР.Результат = Исправление.Корректировка;
		Иначе
			ДвижениеРР = ДокументИсправление.Движения.ОтражениеЗарплатыОрганизацийВРеглУчете.Добавить();
			ЗаполнитьЗначенияСвойств(ДвижениеРР,Исправление);
			ДвижениеРР.ПериодРегистрации = Дата(2011,12,1);
			ДвижениеРР.Организация = Организация;
			ДвижениеРР.Налог = Справочники.Налоги.ЕСВФОТБольничные;
			ДвижениеРР.ВидРасчета = ПланыВидовРасчета.ОтражениеЗарплатыОрганизаций.ВзносыФОТ;
           	ДвижениеРР.Активность = истина;
			ДвижениеРР.Результат = -1*ДвижениеРР.Результат;
			
			ДвижениеРР = ДокументИсправление.Движения.ОтражениеЗарплатыОрганизацийВРеглУчете.Добавить();
			ЗаполнитьЗначенияСвойств(ДвижениеРР,Исправление);
			ДвижениеРР.ПериодРегистрации = Дата(2011,12,1);
			ДвижениеРР.Организация = Организация;
			ДвижениеРР.Налог = Справочники.Налоги.ЕСВФОТБольничныеИнвалиды;
			Если ДвижениеРР.СубконтоКт1 = Справочники.Налоги.ЕСВФОТБольничные Тогда
				ДвижениеРР.СубконтоКт1 = Справочники.Налоги.ЕСВФОТБольничныеИнвалиды;
			ИначеЕсли ДвижениеРР.СубконтоКт2 = Справочники.Налоги.ЕСВФОТБольничные Тогда
				ДвижениеРР.СубконтоКт2 = Справочники.Налоги.ЕСВФОТБольничныеИнвалиды;
			ИначеЕсли ДвижениеРР.СубконтоКт3 = Справочники.Налоги.ЕСВФОТБольничные Тогда
				ДвижениеРР.СубконтоКт3 = Справочники.Налоги.ЕСВФОТБольничныеИнвалиды;
			КонецЕсли;
			Если ДвижениеРР.СубконтоКт1 = Справочники.СтатьиНалоговыхДеклараций.ЕСВ_ФОТБольничные Тогда
				ДвижениеРР.СубконтоКт1 = Справочники.СтатьиНалоговыхДеклараций.ЕСВ_ФОТБольничныеИнвалиды;
			ИначеЕсли ДвижениеРР.СубконтоКт2 = Справочники.СтатьиНалоговыхДеклараций.ЕСВ_ФОТБольничные Тогда
				ДвижениеРР.СубконтоКт2 = Справочники.СтатьиНалоговыхДеклараций.ЕСВ_ФОТБольничныеИнвалиды;
			ИначеЕсли ДвижениеРР.СубконтоКт3 = Справочники.СтатьиНалоговыхДеклараций.ЕСВ_ФОТБольничные Тогда
				ДвижениеРР.СубконтоКт3 = Справочники.СтатьиНалоговыхДеклараций.ЕСВ_ФОТБольничныеИнвалиды;
			КонецЕсли;
			ДвижениеРР.ВидРасчета = ПланыВидовРасчета.ОтражениеЗарплатыОрганизаций.ВзносыФОТ;
           	ДвижениеРР.Активность = истина;
			ДвижениеРР.Результат = Исправление.Корректировка;
		КонецЕсли;	
		
	КонецЦикла;	

	ДокументИсправление.Записать();
	
	Сообщить("Создан документ "+Строка(ДокументИсправление)+НСтр("ru=', обработка завершена';uk=', обробка завершена'"), СтатусСообщения.Информация);
	ТаблицаИсправлений.Очистить();
	ТаблицаИсправленийПроводки.Очистить();
	
	
	
КонецПроцедуры

Процедура ЗаполнитьНажатие(Элемент)

	Если Не ЗначениеЗаполнено(Организация) Тогда
		Сообщить(НСтр("ru='Не указана организация!';uk='Не зазначена організація!'"), СтатусСообщения.Важное);
		Возврат		
	КонецЕсли;	
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	Запрос.УстановитьПараметр("ПериодРегистрации", Дата(2011,12,1));
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	               |	ВзносыВФонды.ПериодРегистрации,
	               |	ВзносыВФонды.Сотрудник
				   |ПОМЕСТИТЬ ВТИнвалиды
				   |ИЗ
	               |	РегистрРасчета.ВзносыВФонды КАК ВзносыВФонды
				   |ГДЕ
				   |	ВзносыВФонды.Налог = ЗНАЧЕНИЕ(Справочник.Налоги.ЕСВФОТИнвалиды)
				   |	И ВзносыВФонды.Организация = &Организация
				   |	И ВзносыВФонды.ПериодРегистрации >= НАЧАЛОПЕРИОДА(&ПериодРегистрации, ГОД)
				   |	И ВзносыВФонды.ПериодРегистрации < &ПериодРегистрации
				   |ИНДЕКСИРОВАТЬ ПО
				   |	Сотрудник,ПериодРегистрации";
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ВзносыВФонды.ПериодРегистрации,
	               |	ВзносыВФонды.Сотрудник,
	               |	ВзносыВФонды.ВидРасчета,
	               |	ВзносыВФонды.БазовыйПериодНачало,
	               |	ВзносыВФонды.БазовыйПериодКонец,
	               |	ВзносыВФонды.База,
	               |	ВзносыВФонды.БазаВзноса,
	               |	ВзносыВФонды.Результат,
				   |	ВзносыВФонды.БазаВзноса*0.0841 КАК РезультатНовый,
	               |	ВзносыВФонды.Налог,
	               |	ВзносыВФонды.НомерПорога,
	               |	ВзносыВФонды.ДатаНачала,
	               |	ВзносыВФонды.ДатаОкончания,
	               |	ВзносыВФонды.Предел,
	               |	ВзносыВФонды.СтатьяНалоговойДекларации,
	               |	ВзносыВФонды.Ставка,
	               |	ВзносыВФонды.ПодразделениеОрганизации,
	               |	ВзносыВФонды.БазаВычет
				   |ИЗ
	               |	РегистрРасчета.ВзносыВФонды КАК ВзносыВФонды
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТИнвалиды КАК Инвалиды
	               |		ПО ВзносыВФонды.Сотрудник = Инвалиды.Сотрудник
	               |			И ВзносыВФонды.ПериодРегистрации = Инвалиды.ПериодРегистрации
	               |ГДЕ
	               |	ВзносыВФонды.Налог = ЗНАЧЕНИЕ(Справочник.Налоги.ЕСВФОТБольничные)
	               |	И ВзносыВФонды.Организация = &Организация
	               |	И ВзносыВФонды.ПериодРегистрации >= НАЧАЛОПЕРИОДА(&ПериодРегистрации, ГОД)
	               |	И ВзносыВФонды.ПериодРегистрации < &ПериодРегистрации
	               |	И (ВзносыВФонды.База <> 0
	               |			ИЛИ ВзносыВФонды.БазаВзноса <> 0
	               |			ИЛИ ВзносыВФонды.Результат <> 0)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ВзносыВФонды.Сотрудник.Наименование,
	               |	ВзносыВФонды.ПериодРегистрации,
	               |	ВзносыВФонды.БазовыйПериодНачало";
	ТаблицаИсправлений = Запрос.Выполнить().Выгрузить();
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	Отражение.Сотрудник,
				   |	Отражение.ПериодРегистрации,
				   |	Отражение.СчетДт,
	               |	Отражение.СубконтоДт1,
	               |	Отражение.СубконтоДт2,
	               |	Отражение.СубконтоДт3,
				   |	Отражение.СчетКт,
	               |	Отражение.СубконтоКт1,
	               |	Отражение.СубконтоКт2,
	               |	Отражение.СубконтоКт3,
				   |	Отражение.НалоговоеНазначение,
	               |	Отражение.НалоговоеНазначениеНДС,
				   |	СУММА(Отражение.Результат) КАК Результат,
				   |	СУММА(0) КАК Корректировка
				   |ИЗ
	               |	РегистрРасчета.ОтражениеЗарплатыОрганизацийВРеглУчете КАК Отражение
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТИнвалиды КАК Инвалиды
	               |		ПО Отражение.Сотрудник = Инвалиды.Сотрудник
	               |			И Отражение.ПериодРегистрации = Инвалиды.ПериодРегистрации
	               |ГДЕ
	               |	Отражение.Налог = ЗНАЧЕНИЕ(Справочник.Налоги.ЕСВФОТБольничные)
	               |	И Отражение.Организация = &Организация
	               |	И Отражение.ПериодРегистрации >= НАЧАЛОПЕРИОДА(&ПериодРегистрации, ГОД)
	               |	И Отражение.ПериодРегистрации < &ПериодРегистрации
	               |	И Отражение.Результат <> 0
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Отражение.Сотрудник,Отражение.ПериодРегистрации,СчетДт,СубконтоДт1,Отражение.СубконтоДт2,Отражение.СубконтоДт3,СчетКт,СубконтоКт1,Отражение.СубконтоКт2,Отражение.СубконтоКт3,НалоговоеНазначение,НалоговоеНазначениеНДС
	               |";
			   
	ТаблицаИсправленийПроводки = Запрос.Выполнить().Выгрузить();

	Если ВариантЗаполненияРазница Тогда
		//Корректируем разницу	
		Для Каждого Исправление из ТаблицаИсправлений Цикл
			
			Если Исправление.РезультатНовый = 0  Тогда
				Продолжить;
			КонецЕсли;
			
			Корректировка = Исправление.РезультатНовый - Исправление.Результат;
			
			СтруктураПоиска = Новый Структура("Сотрудник, ПериодРегистрации", Исправление.Сотрудник,Исправление.ПериодРегистрации); 
	        МассивНайденныхСтрок = ТаблицаИсправленийПроводки.НайтиСтроки(СтруктураПоиска);
			
			Для Каждого СтрокаИсправлений из МассивНайденныхСтрок Цикл
				
				СтрокаИсправлений.Корректировка = СтрокаИсправлений.Корректировка-Мин(-1*Корректировка,СтрокаИсправлений.Результат+СтрокаИсправлений.Корректировка);
				Корректировка = Корректировка - СтрокаИсправлений.Корректировка; 
				
			КонецЦикла;	
			

		КонецЦикла;
	Иначе
		//Корректируем полностью
		Для Каждого Исправление из ТаблицаИсправленийПроводки Цикл
			
			Исправление.Корректировка = Исправление.Результат/0.332 * 0.0841;
			
		КонецЦикла;
	КонецЕсли;	

КонецПроцедуры

Процедура ПриОткрытии()
	
	Организация = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"),"ОсновнаяОрганизация");
	ВариантЗаполненияРазница = Истина;
	
КонецПроцедуры

Процедура Переключатель1ПриИзменении(Элемент)
	
	ТаблицаИсправлений.Очистить();
	ТаблицаИсправленийПроводки.Очистить();
	
КонецПроцедуры

Процедура ОрганизацияПриИзменении(Элемент)
	
	ТаблицаИсправлений.Очистить();
	ТаблицаИсправленийПроводки.Очистить();
	
КонецПроцедуры
