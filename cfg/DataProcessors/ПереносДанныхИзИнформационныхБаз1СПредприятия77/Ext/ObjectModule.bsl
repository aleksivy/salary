////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Функция получает список ИБ 1С:Предприятия 7.7 из системного реестра
//
Функция ПолучитьСписокИБ77() Экспорт
	
	Попытка
		ScrptCtrl=Новый COMObject("MSScriptControl.ScriptControl");
		ScrptCtrl.Language="vbscript";
		ScrptCtrl.AddCode("
		|Function Get1CV77Titles()
		|	const HKEY_CURRENT_USER = &H80000001
		|	Set oReg=GetObject(""winmgmts:{impersonationLevel=impersonate}!\\.\root\default:StdRegProv"")
		|	strKeyPath = ""Software\1C\1Cv7\7.7\Titles""
		|	oReg.EnumValues HKEY_CURRENT_USER, strKeyPath, arrValues
		|	strInfo=vbNullString
		|	if isArray(arrValues) then
		|		For i = LBound(arrValues) To UBound(arrValues)
		|			call oReg.GetStringValue(HKEY_CURRENT_USER,strKeyPath,arrValues(i),Value)
		|			strInfo=strInfo & arrValues(i) & vbTab & Value & vbCrLf
		|		Next
		|	end if
		|	Get1CV77Titles = strInfo
		|End Function
		|");
		Текст=СокрЛП(ScrptCtrl.Run("Get1CV77Titles"));
		
	Исключение
		Возврат ОписаниеОшибки();
		
	КонецПопытки;
	
	ТаблицаИБ = Новый ТаблицаЗначений;
	ТаблицаИБ.Колонки.Добавить("Имя");
	ТаблицаИБ.Колонки.Добавить("Путь");
	
	Если ПустаяСтрока(Текст) Тогда
		Возврат ТаблицаИБ;
	КонецЕсли;
	
	Для Номер = 1 По СтрЧислоСтрок(Текст) Цикл
		СтрБазы		= СтрПолучитьСтроку(Текст, Номер);
		Разд		= Найти(СтрБазы, Символы.Таб);
		Путь		= Лев(СтрБазы, Разд-1);
		Название	= Прав(СтрБазы, СтрДлина(СтрБазы) - Разд);
		
		НоваяСтрока = ТаблицаИБ.Добавить();
		НоваяСтрока.Имя		= Название;
		НоваяСтрока.Путь	= Путь;
	КонецЦикла;
	
	ТаблицаИБ.Сортировать("Имя");
	
	Возврат ТаблицаИБ;
	
КонецФункции

// Процедура записывает файлы конвертации на диск
//
Процедура ЗаписатьФайлыДляПереносаНаДиск(Конвертация, ПутьДляСохранения, ЗаписыватьСПомощником = Истина) Экспорт
	Перем КонвертацияПомощник, КонвертацияОписаниеПомощника, КонвертацияОбработка, КонвертацияПравила;
	
	Попытка
		КаталогНаДиске = Новый Файл(ПутьДляСохранения);
		Если Не КаталогНаДиске.Существует() Тогда
			СоздатьКаталог(ПутьДляСохранения);
		КонецЕсли;
		                                                   
		Если ТипЗнч(Конвертация) <> Тип("СправочникВыборка.КонвертацииИзИнформационныхБаз1СПредприятия77") Тогда
			КонвертацияОбработка			= Конвертация.ПолучитьМакет("V77Exp_ert");
			КонвертацияПравила				= Конвертация.ПолучитьМакет("PrB_xml");
			КонвертацияОбработка.Записать(ПутьДляСохранения + "V77Exp.ert");
			КонвертацияПравила.Записать(ПутьДляСохранения + "PrB.xml");
			
			Если ЗаписыватьСПомощником Тогда
				КонвертацияПомощник				= Конвертация.ПолучитьМакет("PrB_Wiz_ert");
				КонвертацияОписаниеПомощника	= Конвертация.ПолучитьМакет("PrB_Wiz_efd");
				КонвертацияПомощник.Записать(ПутьДляСохранения + "PrB_Wiz.ert");
				КонвертацияОписаниеПомощника.Записать(ПутьДляСохранения + "PrB_Wiz.efd");
			КонецЕсли;
			
		Иначе
			КонвертацияОбработка			= Конвертация.ХранилищеОбработка.Получить();
			КонвертацияПравила				= Конвертация.ХранилищеПравила.Получить();
			
			Если	КонвертацияОбработка = Неопределено
				ИЛИ	КонвертацияПравила = Неопределено Тогда
				КонвертацияОбработка			= Справочники.КонвертацииИзИнформационныхБаз1СПредприятия77.ПолучитьМакет(Конвертация.КонвертацияОбработка + "_ert");
				КонвертацияПравила				= Справочники.КонвертацииИзИнформационныхБаз1СПредприятия77.ПолучитьМакет(Конвертация.КонвертацияПравила + "_xml");
			КонецЕсли;
			КонвертацияОбработка.Записать(ПутьДляСохранения + Конвертация.КонвертацияОбработка + ".ert");
			КонвертацияПравила.Записать(ПутьДляСохранения + Конвертация.КонвертацияПравила + ".xml");
			
			Если ЗаписыватьСПомощником Тогда
				КонвертацияПомощник				= Конвертация.ХранилищеПомощник.Получить();
				КонвертацияОписаниеПомощника	= Конвертация.ХранилищеОписаниеПомощника.Получить();
				
				Если	КонвертацияПомощник = Неопределено
					ИЛИ	КонвертацияОписаниеПомощника = Неопределено Тогда
					КонвертацияПомощник				= Справочники.КонвертацииИзИнформационныхБаз1СПредприятия77.ПолучитьМакет(Конвертация.КонвертацияПомощник + "_ert");
					КонвертацияОписаниеПомощника	= Справочники.КонвертацииИзИнформационныхБаз1СПредприятия77.ПолучитьМакет(Конвертация.КонвертацияПомощник + "_efd");
				КонецЕсли;
				
				КонвертацияПомощник.Записать(ПутьДляСохранения + Конвертация.КонвертацияПомощник + ".ert");
				КонвертацияОписаниеПомощника.Записать(ПутьДляСохранения + Конвертация.КонвертацияПомощник + ".efd");
			КонецЕсли;
			
		КонецЕсли;
		#Если Клиент Тогда
		Если ЗаписыватьСПомощником Тогда
			Предупреждение(НСтр("ru='Файлы конвертации записаны в каталог: ';uk='Файли конвертації записані в каталог: '")+ ПутьДляСохранения);
		КонецЕсли;
		#КонецЕсли
	Исключение
		#Если Клиент Тогда
		Если ЗаписыватьСПомощником Тогда
			Предупреждение(НСтр("ru='Файлы конвертации записать не удалось';uk='Файли конвертації записати не вдалося'"));
		КонецЕсли;
		#КонецЕсли
	КонецПопытки;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

Функция ПолучитьТаблицуЭтаповВыгрузки() Экспорт
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("ИспользуемыеПравила");
	ТЗ.Колонки.Добавить("Представление");
	//ТЗ.НоваяКолонка("ДатаНачалаВыгрузки");
	//ТЗ.НоваяКолонка("ДатаОкончанияВыгрузки");
	Если ПереноситьОбщиеДанные Тогда
		Строка = ТЗ.Добавить();
		Строка.ИспользуемыеПравила = "Организация";
		Строка.Представление = НСтр("ru='Сведения об организации';uk='Відомості про організацію'");
		
		Строка = ТЗ.Добавить();
		Строка.ИспользуемыеПравила = "ШтатноеРасписание";
		Строка.Представление = НСтр("ru='Штатное расписание организации';uk='Штатний розклад організації'");
		
		Строка = ТЗ.Добавить();
		Строка.ИспользуемыеПравила = "ГрафикиРаботы";
		Строка.Представление = НСтр("ru='Графики работы';uk='Графіки роботи'");
	КонецЕсли;
	
	Если ПереноситьКадровыеДанные Тогда
		Строка = ТЗ.Добавить();
		Строка.ИспользуемыеПравила = "ПриемыНаРаботу"; 
		Строка.Представление = НСтр("ru='Приемы на работу';uk='Прийоми на роботу'");
		
	    Строка = ТЗ.Добавить();
		Строка.ИспользуемыеПравила = "ДоговораГПХ" ;
		Строка.Представление = НСтр("ru='Договора гражданко-правового характера (ГПХ)';uk='Договори цивільно-правового характеру (ЦПХ)'");
		
	    Строка = ТЗ.Добавить();
		Строка.ИспользуемыеПравила = "КадровыеПеремещения" ;
		Строка.Представление = НСтр("ru='Кадровые перемещения';uk='Кадрові переміщення'");
		
		Строка = ТЗ.Добавить();
		Строка.ИспользуемыеПравила = "Увольнения" ;
		Строка.Представление = НСтр("ru='Увольнения';uk='Звільнення'");
		
		Строка = ТЗ.Добавить();
		Строка.ИспользуемыеПравила = "Отпуска";
		Строка.Представление = НСтр("ru='Отпуск';uk='Відпустка'");
		
		Строка = ТЗ.Добавить();
		Строка.ИспользуемыеПравила = "ПоощренияВзыскания" ;
		Строка.Представление = НСтр("ru='Поощрения и взыскания';uk='Заохочення і стягнення'");
	КонецЕсли;
	
 	Если ПереноситьРасчетныеДанные Тогда
		Строка = ТЗ.Добавить();
		Строка.ИспользуемыеПравила = "ПереносНачисления"; 
		Строка.Представление = НСтр("ru='Начисления';uk='Нарахування'");
		
	    Строка = ТЗ.Добавить();
		Строка.ИспользуемыеПравила = "ПереносУдержания" ;
		Строка.Представление = НСтр("ru='Удержания';uk='Утримання'");
		
	    Строка = ТЗ.Добавить();
		Строка.ИспользуемыеПравила = "ПереносВзносы" ;
		Строка.Представление = НСтр("ru='Взносы';uk='Внески'");
		
		Строка = ТЗ.добавить();
		Строка.ИспользуемыеПравила = "ПереносНДФЛ";
		Строка.Представление = НСтр("ru='НДФЛ';uk='ПДФО'");
		
		Строка = ТЗ.Добавить();
		Строка.ИспользуемыеПравила = "ПереносОстаткиВзаиморасчетов" ;
		Строка.Представление = НСтр("ru='Остатки взаиморасчетов';uk='Залишки взаєморозрахунків'");
		
		Строка = ТЗ.Добавить();
		Строка.ИспользуемыеПравила = "ОстаткиДепонентов" ;
		Строка.Представление = НСтр("ru='Остатки депонентов';uk='Залишки депонентів'");
		
		Строка = ТЗ.Добавить();
		Строка.ИспользуемыеПравила = "ПереносСсудСВыплатойВКонцеСрока" ;
		Строка.Представление = НСтр("ru='Ссуды с выплатой в конце срока';uk='Позики з виплатою в кінці строку'");
		
		Строка = ТЗ.Добавить();
		Строка.ИспользуемыеПравила = "ПереносСсудСВыплатойИзЗП" ;
		Строка.Представление = НСтр("ru='Ссуды с выплатой из заработной платы';uk='Позики з виплатою із заробітної плати'");
	КонецЕсли;
	
	Если ПереноситьПлановыеДанные Тогда
		Строка = ТЗ.Добавить();
		Строка.ИспользуемыеПравила = "ПлановыеНачисленияОклады";
		Строка.Представление = НСтр("ru='Плановые начисления окладов';uk='Планові нарахування окладів'");
		
		Строка = ТЗ.Добавить();
		Строка.ИспользуемыеПравила = "ПлановыеНачисленияПрочие" ;
		Строка.Представление = НСтр("ru='Прочие плановые начисления (не оклады)';uk='Інші планові нарахування (не оклади)'");
		
		Строка = ТЗ.Добавить();
		Строка.ИспользуемыеПравила = "ПлановыеУдержания" ;
		Строка.Представление = НСтр("ru='Плановые удержания';uk='Планові утримання'");
		
		Строка = ТЗ.Добавить();
		Строка.ИспользуемыеПравила = "ИсполнительныеЛисты" ;
		Строка.Представление = НСтр("ru='Исполнительные листы';uk='Виконавчі листи'");
		
		Строка = ТЗ.Добавить();
		Строка.ИспользуемыеПравила = "ВзносыСотрудников" ;
		Строка.Представление = НСтр("ru='Взносы сотрудников';uk='Внески співробітників'");		
		
		Строка = ТЗ.Добавить();
		Строка.ИспользуемыеПравила = "ЛьготыСотрудников" ;
		Строка.Представление = НСтр("ru='Льготы сотрудников';uk='Пільги співробітників'");
	КонецЕсли;
		
	Если ПереноситьНастройкиОтражения Тогда
		Строка = ТЗ.Добавить();
		Строка.ИспользуемыеПравила = "ВРНачисления";
		Строка.Представление = НСтр("ru='Отражения видов расчета ""Начисления"" ';uk='Відображення видів розрахунку ""Нарахування"" '");
		
		Строка = ТЗ.Добавить();
		Строка.ИспользуемыеПравила = "ВРНачисления" ;
		Строка.Представление = НСтр("ru='Отражения видов расчета ""Удержания"" ';uk='Відображення видів розрахунку ""Утримання"" '");
		
		Строка = ТЗ.Добавить();
		Строка.ИспользуемыеПравила = "ОтражениеОсновнойЗаработок" ;
		Строка.Представление = НСтр("ru='Отражение основного заработка';uk='Відображення основного заробітку'");
		
		Строка = ТЗ.Добавить();
		Строка.ИспользуемыеПравила = "ОтражениеПлановыеНачисления" ;
		Строка.Представление = НСтр("ru='Отражение плановых начислений';uk='Відображення планових нарахувань'");
	КонецЕсли;
	
	Если ПереноситьПрочиеДанные ТОгда
		Строка = ТЗ.Добавить();
		Строка.ИспользуемыеПравила = "БазовыеПериодыИндексации";
		Строка.Представление = НСтр("ru='Базовые периоды индексации ';uk='Базові періоди індексації '");
		
		Строка = ТЗ.Добавить();
		Строка.ИспользуемыеПравила = "КоэффициентыПовышенияОкладов";
		Строка.Представление = НСтр("ru='Коэффициенты повышения окладов';uk='Коефіцієнти підвищення окладів'");
	КонецЕсли;
	
	Возврат ТЗ;
	
КонецФункции
