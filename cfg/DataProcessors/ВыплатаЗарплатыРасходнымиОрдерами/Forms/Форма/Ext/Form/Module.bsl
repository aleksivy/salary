Перем мОрганизация;

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()	
	
	Если Организация.Пустая() Тогда
		Организация   = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь")
		, "ОсновнаяОрганизация");
	КонецЕсли;
	мОрганизация = Организация;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

Процедура КоманднаяПанельРКООбновить(Кнопка)
	Автозаполнение();
КонецПроцедуры

Процедура КоманднаяПанельРКОУстановитьФлаги(Кнопка)
	
	Для Каждого СтрокаТаблицы Из РКО Цикл
		СтрокаТаблицы.Отметка = Истина
	КонецЦикла;
	
КонецПроцедуры

Процедура КоманднаяПанельРКОСнятьфлаги(Кнопка)
	
	Для Каждого СтрокаТаблицы Из РКО Цикл
		СтрокаТаблицы.Отметка = Ложь
	КонецЦикла;
	
КонецПроцедуры

Процедура КоманднаяПанельРКОИнвертировать(Кнопка)
	
	Для Каждого СтрокаТаблицы Из РКО Цикл		
		СтрокаТаблицы.Отметка = Не СтрокаТаблицы.Отметка;
	КонецЦикла;
	
КонецПроцедуры

// Процедура - создает документы РКО по табличной части РКО
//
Процедура ОсновныеДействияФормыСоздать(Кнопка)
	
	Валюта = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Для Каждого СтрокаТаблицы Из РКО Цикл
		
		Если СтрокаТаблицы.Отметка И Не ЗначениеЗаполнено(СтрокаТаблицы.РКО) Тогда
			
			ДокументРКО = Документы.РасходныйКассовыйОрдер.СоздатьДокумент();
			Если ЗначениеЗаполнено(СтрокаТаблицы.ДатаДокумента) Тогда
				ДокументРКО.Дата = СтрокаТаблицы.ДатаДокумента;
			Иначе
				СтрокаТаблицы.ДатаДокумента = РабочаяДата;
				ДокументРКО.Дата = РабочаяДата;
			КонецЕсли;
			ДокументРКО.ВидОперации			= Перечисления.ВидыОперацийРКО.ВыплатаЗаработнойПлатыРаботнику;
			ДокументРКО.СуммаДокумента		= СтрокаТаблицы.Сумма;
			ДокументРКО.Контрагент			= СтрокаТаблицы.Сотрудник;
			ДокументРКО.ВалютаДокумента		= Валюта;
			ДокументРКО.ДокументОснование	= ПлатежнаяВедомость;
			ДокументРКО.Организация			= Организация;
			ДокументРКО.СчетУчета			= СтрокаТаблицы.СчетУчета;
			ДокументРКО.СтатьяДвиженияДенежныхСредств = СтатьяДвиженияДенежныхСредств;
			
			ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ДокументРКО);
			ДокументРКО.ОтражатьВУправленческомУчете = Истина;
			ДокументРКО.ОтражатьВБухгалтерскомУчете = Истина;
					
			ДокументРКО.ПолучитьФорму("ФормаДокумента").ФизЛицоПриИзменении(ДокументРКО.Контрагент.ФизЛицо);
			
			ДокументРКО.Записать();
			
			СтрокаТаблицы.РКО	= ДокументРКО.Ссылка;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Процедура - проводит документы РКО по табличной части РКО
//
Процедура ОсновныеДействияФормыПровести(Кнопка)
	
	Для Каждого СтрокаТаблицы Из РКО Цикл
		Если СтрокаТаблицы.Отметка и ЗначениеЗаполнено(СтрокаТаблицы.РКО) Тогда
			ДокументРКО = СтрокаТаблицы.РКО.ПолучитьОбъект();
			Если ДокументРКО.ПометкаУдаления Тогда
				ДокументРКО.УстановитьПометкуУдаления(Ложь);
			КонецЕсли;
			Попытка
				ДокументРКО.Записать(РежимЗаписиДокумента.Проведение);
			Исключение
				Предупреждение(НСтр("ru='Операция не выполнена!';uk='Операція не виконана!'"));
			КонецПопытки;
			СтрокаТаблицы.Отметка = Не СтрокаТаблицы.Отметка;
		КонецЕсли;
	КонецЦикла;
	
	Оповестить("ОбновитьФорму", ,ПлатежнаяВедомость);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

// Процедура - обработчик события "ПриИзменении" поля ввода "Организация".
//
Процедура ОрганизацияПриИзменении(Элемент)
	
	Если мОрганизация <> Организация Тогда
		ПлатежнаяВедомость = Документы.ЗарплатаКВыплатеОрганизаций.ПустаяСсылка();
		РКО.Очистить();
	КонецЕсли;
	мОрганизация = Организация;
	
КонецПроцедуры

// Процедура - обработчик события "НачалоВыбора" поля ввода "ПлатежнаяВедомость".
//
Процедура ПлатежнаяВедомостьНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	Если Не Организация.Пустая() Тогда
		
		ПроцедурыУправленияПерсоналом.ОткрытьФормуВыбораПлатежныхВедомостейОрганизации(Элемент, СтандартнаяОбработка, Организация, Перечисления.СпособыВыплатыЗарплаты.ЧерезКассу ) 
		
	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода "ПлатежнаяВедомость".
//
Процедура ПлатежнаяВедомостьПриИзменении(Элемент)
	
	Автозаполнение();	
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОЙ ЧАСТИ и ее РЕКВИЗИТОВ 

// Процедура - обработчик события "ПриПолученииДанных" таблицы "РКО".
//
Процедура ТабличноеПолеРКОПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасходныйКассовыйОрдер.Проведен,
	|	РасходныйКассовыйОрдер.ПометкаУдаления
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК РасходныйКассовыйОрдер
	|ГДЕ
	|	РасходныйКассовыйОрдер.Ссылка = &Ссылка";
	
    // получим данные для отрисовки в ячейках
    Для Каждого Строка Из ОформленияСтрок Цикл
        ДанныеСтроки = Строка.ДанныеСтроки;
        Строка.Ячейки.Картинка.ОтображатьКартинку = Истина;
		Если ДанныеСтроки.РКО.Пустая() Тогда
    		Строка.Ячейки.Картинка.ИндексКартинки = 3;
		Иначе
			Запрос.УстановитьПараметр("Ссылка",ДанныеСтроки.РКО);
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				Если Выборка.Проведен Тогда
	    			Строка.Ячейки.Картинка.ИндексКартинки = 0;
				ИначеЕсли Выборка.ПометкаУдаления Тогда
					Строка.Ячейки.Картинка.ИндексКартинки = 1;
				Иначе
					Строка.Ячейки.Картинка.ИндексКартинки = 2;	
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;			
	КонецЦикла;
	
КонецПроцедуры



