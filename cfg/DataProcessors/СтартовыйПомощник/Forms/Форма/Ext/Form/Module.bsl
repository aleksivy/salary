////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мСозданНовыйПользователь;
Перем мЗадатьВопросПриЗакрытии;
Перем мСтруктураПараметрыДоОткрытияФормы Экспорт;
Перем мСтруктураТабличногоПоля Экспорт;
Перем мСтруктураСтраниц Экспорт;

Перем мНомерТекущейСтраницы Экспорт;
Перем мКоличествоСтраниц Экспорт;

Перем ОбработкаКомментариев;
Перем мНаборЗаписейФИО;


///////////////////////////////////////////////////////////////////////////////
//ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Процедура УстановитьВидимостьЭУЮрФизЛицо()

	Если ОрганизацияОбъект.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо Тогда
		ЭлементыФормы.ПанельЮрФилзицо.ТекущаяСтраница = ЭлементыФормы.ПанельЮрФилзицо.Страницы.Юрлицо;
		Элементыформы.НадписьЕДРПОУ.Заголовок = НСтр("ru='ЕДРПОУ:';uk='ЄДРПОУ:'");
	Иначе
		ЭлементыФормы.ПанельЮрФилзицо.ТекущаяСтраница = ЭлементыФормы.ПанельЮрФилзицо.Страницы.Физлицо;
		ПолучитьФИО();
		Элементыформы.НадписьЕДРПОУ.Заголовок = НСтр("ru='Код по ДРФО:';uk='Код за ДРФО:'");
	КонецЕсли;
	
КонецПроцедуры

Процедура ПолучитьФИО()

	ТаблицаФИО = РегистрыСведений.ФИОФизЛиц.СрезПоследних(,Новый Структура("ФизЛицо",Организация));
	Если ТаблицаФИО.Количество()>0 Тогда 
		ПериодЗаписи = ТаблицаФИО[0].Период;
	Иначе
		ПериодЗаписи = НачалоГода(РабочаяДата);
	КонецЕсли;
	ФИО.ФизЛицо = Организация;
	ФИО.Период 		= ПериодЗаписи;
	ФИО.Прочитать();


КонецПроцедуры

Процедура ЗаписатьФИО() Экспорт

	ФИО.ФизЛицо = Организация;
	Если НЕ ЗначениеЗаполнено(ФИО.Период) Тогда
		ФИО.Период = Дата(1980,1,1);
	КонецЕсли;
	ФИО.Записать(Истина);

КонецПроцедуры

Процедура ОбработатьИзменениеОрганизацииДополнительно()

	Если Не ВводНовойОрганизации Тогда
		
		ПолучитьФИО();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПрочитатьКоды(Организация)
	
	ТаблицаКоды = РегистрыСведений.КодыОрганизации.СрезПоследних(,Новый Структура("Организация",Организация));
	Если ТаблицаКоды.Количество()>0 Тогда 
		ПериодЗаписи = ТаблицаКоды[0].Период;
	Иначе
		ПериодЗаписи = НачалоГода(РабочаяДата);
	КонецЕсли;
	КодыОрганизаций.Организация = Организация;
	КодыОрганизаций.Период 		= ПериодЗаписи;
	КодыОрганизаций.Прочитать();
	
КонецПроцедуры	

Процедура ЗаписатьКоды(Организация) Экспорт
	
	КодыОрганизаций.Организация = Организация;
	Если НЕ ЗначениеЗаполнено(КодыОрганизаций.Период) Тогда
		КодыОрганизаций.Период = НачалоГода(РабочаяДата);
	КонецЕсли;
	КодыОрганизаций.Записать(Истина);    
КонецПроцедуры

Процедура ПрочитатьОтветственных(Организация)
	
	ТаблицаОтветсвенных = РегистрыСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(,Новый Структура("СтруктурнаяЕдиница,ОтветственноеЛицо",Организация,Перечисления.ОтветственныеЛицаОрганизаций.Руководитель));
	Если ТаблицаОтветсвенных.Количество()>0 Тогда 
		ПериодЗаписи = ТаблицаОтветсвенных[0].Период;
	Иначе
		ПериодЗаписи = НачалоГода(РабочаяДата);
	КонецЕсли;
	Руководитель.СтруктурнаяЕдиница = Организация;
	Руководитель.ОтветственноеЛицо = Перечисления.ОтветственныеЛицаОрганизаций.Руководитель;
	Руководитель.Период 	 = ПериодЗаписи;
	Руководитель.Прочитать();
	
	ТаблицаОтветсвенных = РегистрыСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(,Новый Структура("СтруктурнаяЕдиница,ОтветственноеЛицо",Организация,Перечисления.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер));
	Если ТаблицаОтветсвенных.Количество()>0 Тогда 
		ПериодЗаписи = ТаблицаОтветсвенных[0].Период;
	Иначе
		ПериодЗаписи = НачалоГода(РабочаяДата);
	КонецЕсли;
	ГлавныйБухгалтер.СтруктурнаяЕдиница = Организация;
	ГлавныйБухгалтер.ОтветственноеЛицо = Перечисления.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер;
	ГлавныйБухгалтер.Период 	 = ПериодЗаписи;
	ГлавныйБухгалтер.Прочитать();
	
	ТаблицаОтветсвенных = РегистрыСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(,Новый Структура("СтруктурнаяЕдиница,ОтветственноеЛицо",Организация,Перечисления.ОтветственныеЛицаОрганизаций.РуководительКадровойСлужбы));
	Если ТаблицаОтветсвенных.Количество()>0 Тогда 
		ПериодЗаписи = ТаблицаОтветсвенных[0].Период;
	Иначе
		ПериодЗаписи = НачалоГода(РабочаяДата);
	КонецЕсли;
	Кадровик.СтруктурнаяЕдиница = Организация;
	Кадровик.ОтветственноеЛицо = Перечисления.ОтветственныеЛицаОрганизаций.РуководительКадровойСлужбы;
	Кадровик.Период 	 = ПериодЗаписи;
	Кадровик.Прочитать();

	
КонецПроцедуры	

Процедура ЗаписатьОтветственных() Экспорт
	Если НЕ ЗначениеЗаполнено(Руководитель.Период) Тогда
		Руководитель.Период = НачалоГода(РабочаяДата);
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ГлавныйБухгалтер.Период) Тогда
		ГлавныйБухгалтер.Период = НачалоГода(РабочаяДата);
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Кадровик.Период) Тогда
		Кадровик.Период = НачалоГода(РабочаяДата);
	КонецЕсли;
	Если ЗначениеЗаполнено(Руководитель.Должность) или ЗначениеЗаполнено(Руководитель.ФизическоеЛицо) Тогда
		Руководитель.СтруктурнаяЕдиница = Организация;
		Руководитель.ОтветственноеЛицо = Перечисления.ОтветственныеЛицаОрганизаций.Руководитель;
		Руководитель.Записать(Истина);
	КонецЕсли;	
	Если ЗначениеЗаполнено(ГлавныйБухгалтер.Должность) или ЗначениеЗаполнено(ГлавныйБухгалтер.ФизическоеЛицо) Тогда
		ГлавныйБухгалтер.СтруктурнаяЕдиница = Организация;
		ГлавныйБухгалтер.ОтветственноеЛицо = Перечисления.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер;
		ГлавныйБухгалтер.Записать(Истина);
	КонецЕсли;	
	Если ЗначениеЗаполнено(Кадровик.Должность) или ЗначениеЗаполнено(Кадровик.ФизическоеЛицо) Тогда
		Кадровик.СтруктурнаяЕдиница = Организация;
		Кадровик.ОтветственноеЛицо = Перечисления.ОтветственныеЛицаОрганизаций.РуководительКадровойСлужбы;
		Кадровик.Записать(Истина);
	КонецЕсли;	
	
КонецПроцедуры

Функция ВыполнитьОбработкуПередПереходомНаНовуюСтраницу()
	
	Если ЭлементыФормы.ПанельЭтапов.ТекущаяСтраница = ЭлементыФормы.ПанельЭтапов.Страницы.ПереносДанных Тогда
		
		Если ВыполнитьЗагрузкуИз77 Тогда
			// прекращаем работу стартового помощника и запускаем
			// обработку переноса данных
			
			// проверим необходимость создания пользователя
			Если СоздаватьПользователя Тогда
				// надо создать пользователя
				ОбработкаКомментариев.УдалитьСообщения();
				мСозданНовыйПользователь = СоздатьПользователяИБ(ЭтаФорма);
				Если Не мСозданНовыйПользователь Тогда
					ОбработкаКомментариев.ПоказатьСообщения();
					Возврат Ложь;
				КонецЕсли;	
				
			КонецЕсли;
			
			мЗадатьВопросПриЗакрытии = Ложь;
			Закрыть();
			Возврат Ложь;
		КонецЕсли;
		
	ИначеЕсли ЭлементыФормы.ПанельЭтапов.ТекущаяСтраница = ЭлементыФормы.ПанельЭтапов.Страницы.Готово Тогда
		
		// завершаем работу
		Если ЗаписатьДанные() Тогда 
			мЗадатьВопросПриЗакрытии = Ложь;
			Закрыть();
		Иначе
			ОбработкаКомментариев.ПоказатьСообщения();
		КонецЕсли;
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции	

Процедура ВыполнитьОбработкуПереходаНаНовуюСтраницу()

	ТекущаяСтраница = ЭлементыФормы.ПанельЭтапов.ТекущаяСтраница;
	Если ТекущаяСтраница = ЭлементыФормы.ПанельЭтапов.Страницы.ОсновныеДанные Тогда
		
		ОбработатьПереходНаНовуюСтраницу(ЭтаФорма);
		
		Если Не ЗначениеЗаполнено(ОрганизацияОбъект.ЮрФизЛицо) Тогда
			ОрганизацияОбъект.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо;
		КонецЕсли;
		ОбработатьИзменениеОрганизацииДополнительно();
		
		УстановитьВидимостьЭУЮрФизЛицо();
	ИначеЕсли ТекущаяСтраница = ЭлементыФормы.ПанельЭтапов.Страницы.КодыИНомера Тогда
		Если ЗначениеЗаполнено(Организация.ОсновнойБанковскийСчет) Тогда
			Если ОсновнойБанковскийСчет.Владелец <> Организация Тогда
				ОсновнойБанковскийСчет = Организация.ОсновнойБанковскийСчет.ПолучитьОбъект();
			КонецЕсли;
		Иначе
			ОсновнойБанковскийСчет = Справочники.БанковскиеСчета.СоздатьЭлемент();
			ОсновнойБанковскийСчет.Владелец = Организация;
			ОсновнойБанковскийСчет.ВалютаДенежныхСредств = Константы.ВалютаРегламентированногоУчета.Получить();
		КонецЕсли;	
		ОбработатьПереходНаНовуюСтраницу(ЭтаФорма);
		ПрочитатьКоды(Организация);
	ИначеЕсли ТекущаяСтраница = ЭлементыФормы.ПанельЭтапов.Страницы.ОтветственныеЛица Тогда
		ПрочитатьОтветственных(Организация);	
	ИначеЕсли ТекущаяСтраница = ЭлементыФормы.ПанельЭтапов.Страницы.ПереносДанных Тогда
		
		ОбработатьПереходНаНовуюСтраницу(ЭтаФорма);	
		ЭлементыФормы.НадписьВыполнитьЗагрузкуИз77.Заголовок = ЭлементыФормы.НадписьВыполнитьЗагрузкуИз77.Заголовок+Справочники.КонвертацииИзИнформационныхБаз1СПредприятия77.ЗарплатаКадры.НомерРелиза+".";
		
	Иначе
		
		ОбработатьПереходНаНовуюСтраницу(ЭтаФорма);
		
	КонецЕсли;
	

КонецПроцедуры

Функция ПроверитьВозможностьПереходаНаСледующуюСтраницу()

	СтрокаСообщенияОбОшибке = ПроверитьЗаполнениеДанныхНаСтранице(ЭтаФорма);
	ТекущаяСтраница = ЭлементыФормы.ПанельЭтапов.ТекущаяСтраница;
	
	Если ТекущаяСтраница = ЭлементыФормы.ПанельЭтапов.Страницы.ОсновныеДанные
		и ОрганизацияОбъект.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо Тогда
		
		Если ПервыйЗапуск Тогда
			
			Если ПустаяСтрока(ФИО.Фамилия) Тогда
				Если ЗначениеЗаполнено(СтрокаСообщенияОбОшибке) Тогда
					СтрокаСообщенияОбОшибке = СтрокаСообщенияОбОшибке + Символы.ПС;
				КонецЕсли;
				СтрокаСообщенияОбОшибке = СтрокаСообщенияОбОшибке + НСтр("ru='Не указана фамилия физлица!';uk='Не вказано прізвище фізособи!'");
			КонецЕсли;
			Если ПустаяСтрока(ФИО.Имя) Тогда
				Если ЗначениеЗаполнено(СтрокаСообщенияОбОшибке) Тогда
					СтрокаСообщенияОбОшибке = СтрокаСообщенияОбОшибке + Символы.ПС;
				КонецЕсли;
				СтрокаСообщенияОбОшибке = СтрокаСообщенияОбОшибке + НСтр("ru='Не указано имя физлица!';uk=""Не вказано ім'я фізособи!""");
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(СтрокаСообщенияОбОшибке) Тогда
		Предупреждение(СокрЛП(СтрокаСообщенияОбОшибке));
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;

КонецФункции // ПроверитьВозможностьПереходаНаСледующуюСтраницу()

Процедура СоздатьСтруктуруПомощника()

	НомерШага = 1;
	НомерОбласти = 2;
	
	ОбластьТабличногоПоля = СоздатьОбластьТабличногоПоля(ЭлементыФормы.ПолеТабличногоДокумента, НомерОбласти, 1, 10, НСтр("ru='Старт';uk='Старт'"));
	НомерОбласти = НомерОбласти +1;
	мСтруктураСтраниц.Вставить("Страница" + НомерШага, ЭлементыФормы.ПанельЭтапов.Страницы.Старт);

	мСтруктураТабличногоПоля.Вставить("Страница" + НомерШага, ОбластьТабличногоПоля);
	НомерШага = НомерШага +1;
	
	Если ПервыйЗапуск Тогда
		// при первом запуске добавляем страницу создания пользователя
		ОбластьТабличногоПоля = СоздатьОбластьТабличногоПоля(ЭлементыФормы.ПолеТабличногоДокумента, НомерОбласти, 2, 8, НСтр("ru='Создание пользователя';uk='Створення користувача'"));
		НомерОбласти = НомерОбласти +1;
		мСтруктураТабличногоПоля.Вставить("Страница" + НомерШага, ОбластьТабличногоПоля);
		мСтруктураСтраниц.Вставить("Страница" + НомерШага, ЭлементыФормы.ПанельЭтапов.Страницы.СозданиеПользователя);
		НомерШага = НомерШага +1;
		
		// при первом запуске добавляем страницу переноса данных
		ОбластьТабличногоПоля = СоздатьОбластьТабличногоПоля(ЭлементыФормы.ПолеТабличногоДокумента, НомерОбласти, 1, 8, НСтр("ru='Перенос данных';uk='Перенесення даних'"));
		НомерОбласти = НомерОбласти +1;
		мСтруктураТабличногоПоля.Вставить("Страница" + НомерШага, ОбластьТабличногоПоля);
		мСтруктураСтраниц.Вставить("Страница" + НомерШага, ЭлементыФормы.ПанельЭтапов.Страницы.ПереносДанных);
		НомерШага = НомерШага +1;
	КонецЕсли;
	
	ОбластьТабличногоПоля = СоздатьОбластьТабличногоПоля(ЭлементыФормы.ПолеТабличногоДокумента, НомерОбласти, 1, 10, НСтр("ru='Сведения об организации';uk='Відомості про організацію'"));
	НомерОбласти = НомерОбласти +1;

	Если Не ПервыйЗапуск Тогда
		// Для повторного открытия стартового помощника добавляем страницу
		// на которой производится выбор работы с организацией
		мСтруктураТабличногоПоля.Вставить("Страница" + НомерШага, ОбластьТабличногоПоля);
		мСтруктураСтраниц.Вставить("Страница" + НомерШага, ЭлементыФормы.ПанельЭтапов.Страницы.НоваяОрганизация);
		НомерШага = НомерШага +1;
	КонецЕсли;
	
	ОбластьТабличногоПоля = СоздатьОбластьТабличногоПоля(ЭлементыФормы.ПолеТабличногоДокумента, НомерОбласти, 2, 8, НСтр("ru='Основные данные';uk='Основні дані'"));
	НомерОбласти = НомерОбласти +1;
	мСтруктураТабличногоПоля.Вставить("Страница" + НомерШага, ОбластьТабличногоПоля);
	мСтруктураСтраниц.Вставить("Страница" + НомерШага, ЭлементыФормы.ПанельЭтапов.Страницы.ОсновныеДанные);
	НомерШага = НомерШага +1;
	
	ОбластьТабличногоПоля = СоздатьОбластьТабличногоПоля(ЭлементыФормы.ПолеТабличногоДокумента, НомерОбласти, 2, 8, НСтр("ru='Коды и реквизиты';uk='Коди і реквізити'"));
	НомерОбласти = НомерОбласти +1;
	мСтруктураТабличногоПоля.Вставить("Страница" + НомерШага, ОбластьТабличногоПоля);
	мСтруктураСтраниц.Вставить("Страница" + НомерШага, ЭлементыФормы.ПанельЭтапов.Страницы.КодыИНомера);
	НомерШага = НомерШага +1;
	
	ОбластьТабличногоПоля = СоздатьОбластьТабличногоПоля(ЭлементыФормы.ПолеТабличногоДокумента, НомерОбласти, 2, 8, НСтр("ru='Ответственные лица';uk='Відповідальні особи'"));
	НомерОбласти = НомерОбласти +1;
	мСтруктураТабличногоПоля.Вставить("Страница" + НомерШага, ОбластьТабличногоПоля);
	мСтруктураСтраниц.Вставить("Страница" + НомерШага, ЭлементыФормы.ПанельЭтапов.Страницы.ОтветственныеЛица);
	НомерШага = НомерШага +1;
	
	ОбластьТабличногоПоля = СоздатьОбластьТабличногоПоля(ЭлементыФормы.ПолеТабличногоДокумента, НомерОбласти, 1, 10, НСтр("ru='Производственный календарь';uk='Виробничий календар'"));
	НомерОбласти = НомерОбласти +1;
	мСтруктураТабличногоПоля.Вставить("Страница" + НомерШага, ОбластьТабличногоПоля);
	мСтруктураСтраниц.Вставить("Страница" + НомерШага, ЭлементыФормы.ПанельЭтапов.Страницы.ПроизводственныйКалендарь);
	НомерШага = НомерШага +1;
	
	ОбластьТабличногоПоля = СоздатьОбластьТабличногоПоля(ЭлементыФормы.ПолеТабличногоДокумента, НомерОбласти, 1,10, НСтр("ru='Готово!';uk='Готово!'"));
	мСтруктураТабличногоПоля.Вставить("Страница" + НомерШага, ОбластьТабличногоПоля);
	мСтруктураСтраниц.Вставить("Страница" + НомерШага, ЭлементыФормы.ПанельЭтапов.Страницы.Готово);
	
	мКоличествоСтраниц = НомерШага;

КонецПроцедуры



////////////////////////////////////////////////////////////////////////////
//ОБРАБОТКА ОСНОВНЫХ ДЕЙСТВИЙ ФОРМЫ И НАВИГАЦИИ ПО СТРАНИЦАМ
////////////////////////////////////////////////////////////////////////////

Процедура КнопкаНазадНажатие(Элемент)

	Если мНомерТекущейСтраницы = 1 Тогда
		Возврат;
	КонецЕсли;	
	
	мНомерТекущейСтраницы = мНомерТекущейСтраницы - 1;
	
	// установим следующую страницу
	УстановитьСтраницуПомощника(ЭтаФорма, мНомерТекущейСтраницы, Ложь);

КонецПроцедуры

Процедура КнопкаВпередНажатие(Элемент)
	
	// проверим возможность перехода к следующему шагу
	Если Не ПроверитьВозможностьПереходаНаСледующуюСтраницу() Тогда
		// все сообщения выдаем в функции ПроверитьВозможностьПереходаНаСледующуюСтраницу()
		Возврат;
	КонецЕсли;
	
	Если Не ВыполнитьОбработкуПередПереходомНаНовуюСтраницу() Тогда
		Возврат;
	КонецЕсли;	
	
	мНомерТекущейСтраницы = мНомерТекущейСтраницы + 1;
	
	Если мНомерТекущейСтраницы > мКоличествоСтраниц Тогда
		// нажата кнопка Готово
	Иначе
		// установим следующую страницу
		УстановитьСтраницуПомощника(ЭтаФорма, мНомерТекущейСтраницы);
		
		// выполним необходимые действия на новой странице после ее установки
		ВыполнитьОбработкуПереходаНаНовуюСтраницу()	
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////
//ОСНОВНАЯ ОБРАБОТКА ВВЕДЕННЫХ ДАННЫХ
////////////////////////////////////////////////////////////////////////////

Функция ЗаписатьДанные()

	ОбработкаКомментариев.УдалитьСообщения();
	
	НачатьТранзакцию();
	
	Если Не ЗаписатьОрганизацию(ЭтаФорма) Тогда
		ОбработкаКомментариев.ПоказатьСообщения();
		Возврат Ложь;
	КонецЕсли;

	Если СоздаватьПользователя Тогда
		мСозданНовыйПользователь = СоздатьПользователяИБ(ЭтаФорма);
		Если Не мСозданНовыйПользователь Тогда
			ОбработкаКомментариев.ПоказатьСообщения();
			Возврат Ложь;
		КонецЕсли;	
	КонецЕсли;
	
	ЗафиксироватьТранзакцию();
	
	СоздатьПрочиеДанные(ЭтаФорма);
	
	Возврат Истина;

КонецФункции


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	мСтруктураПараметрыДоОткрытияФормы.Вставить("Организация", Организация);
	
	СоздатьСтруктуруПомощника();
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ФормаОбработкиПриОткрытии(ЭтаФорма);
	ФизлицоОбъект = Справочники.ФизическиеЛица.СоздатьЭлемент();
	
	мНомерТекущейСтраницы = 1;
	УстановитьСтраницуПомощника(ЭтаФорма, мНомерТекущейСтраницы);
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если мЗадатьВопросПриЗакрытии Тогда
		// стартовый помощник закрывается не по кнопке "Готово"
		
		Если Модифицированность Тогда
			// что-то ввели в стартовом помощнике, надо предупредить
			// что ввсе данные будут потеряны
			Ответ  = Вопрос(НСтр("ru='Все данные, введенные в Стартовом помощнике будут потеряны! Закрыть форму?';uk='Всі дані, введені в Стартовому помічнику будуть втрачені! Закрити форму?'"), РежимДиалогаВопрос.ДаНет);
			Если Ответ = КодВозвратаДиалога.Нет Тогда
				Отказ = Истина;
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
		Если ПервыйЗапуск Тогда
			// необходимо дозаполнить данные
			
			// Создадим в помощь пользователям одну организацию 
			Организация = Справочники.Организации.НайтиПоНаименованию("Наша организация");
			Если Организация.Пустая() Тогда
				
				ОрганизацияОбъект = Справочники.Организации.СоздатьЭлемент();
				ОрганизацияОбъект.Наименование	 = НСтр("ru='Наша организация';uk='Наша організація'",Локализация.КодЯзыкаИнформационнойБазы());
				ОрганизацияОбъект.Записать();
				Организация = ОрганизацияОбъект.Ссылка;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Возврат;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗакрытии()

	Если ВыполнитьЗагрузкуИз77 Тогда
		
		// покажем рабочий стол
		Обработки.РабочийСтол.ПолучитьФорму().Открыть();
		
		// Запустим обработку переноса данных
		ОбработкаПереноса = Обработки.ПереносДанныхИзИнформационныхБаз1СПредприятия77.Создать();
		СписокИБ = ОбработкаПереноса.ПолучитьСписокИБ77();
		Форма = ОбработкаПереноса.ПолучитьФорму();
		Форма.Открыть();
		
	ИначеЕсли мСозданНовыйПользователь Тогда
		
		Предупреждение(НСтр("ru='Был создан новый пользователь ';uk='Був створений новий користувач '") + ПользовательОбъект.Наименование + НСтр("ru='."
"Программа будет автоматически перезапущена.';uk='."
"Програма буде автоматично перезапущена.'"));
		
		ИмяПользователя = """" + СОКРЛП(ПользовательОбъект.Код) + """";
		
		ЗавершитьРаботуСистемы(Ложь, Истина, "/n" + ИмяПользователя + " /p" + ПарольПользователяИБ);
		
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ЗаполнениеПроизводственногоКалендаря" Тогда
		ПроверитьКалендарьИЗаполнитьЗаголовки(ЭтаФорма);	
	КонецЕсли;	
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////
//ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
////////////////////////////////////////////////////////////////////////////

Процедура ВводНовойОрганизацииПриИзменении(Элемент)

	ОбработатьИзменениеОрганизации(ЭтаФорма);
	ОбработатьИзменениеОрганизацииДополнительно();
	
КонецПроцедуры

Процедура ОрганизацияПриИзменении(Элемент)
	
	ОбработатьИзменениеОрганизации(ЭтаФорма);
	ОбработатьИзменениеОрганизацииДополнительно();
	
КонецПроцедуры

Процедура НаименованиеОрганизацииПриИзменении(Элемент)
	
	ФормаОбработкиНаименованиеОрганизацииПриИзменении(Элемент, ЭтаФорма);
		
КонецПроцедуры

Процедура НадписьПроизводственныйКалендарьОткрытьНажатие(Элемент)
	
	ФормаОбработкиНадписьПроизводственныйКалендарьОткрытьНажатие(Элемент, ЭтаФорма);
	
КонецПроцедуры

Процедура НеВыполнятьЗагрузкуПриИзменении(Элемент)
	
	ФормаОбработкиНеВыполнятьЗагрузкуПриИзменении(Элемент, ЭтаФорма);
	
КонецПроцедуры

Процедура ЕдинственныйПользовательПриИзменении(Элемент)

	ФормаОбработкиЕдинственныйПользовательПриИзменении(Элемент, ЭтаФорма);

КонецПроцедуры

Процедура ИмяПользователяПриИзменении(Элемент)

	ФормаОбработкиИмяПользователяПриИзменении(Элемент, ЭтаФорма);
	
КонецПроцедуры

Процедура ЮрФизЛицоПриИзменении(Элемент)
	
	УстановитьВидимостьЭУЮрФизЛицо();
	
КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
мСозданНовыйПользователь = Ложь;
мЗадатьВопросПриЗакрытии = Истина;

мСтруктураТабличногоПоля = Новый Структура();
мСтруктураСтраниц = Новый Структура();
мСтруктураПараметрыДоОткрытияФормы = Новый Структура();

мНаборЗаписейФИО = РегистрыСведений.ФИОФизЛиц.СоздатьНаборЗаписей();

СписокВидСчета = ЭлементыФормы.ВидСчета.СписокВыбора;
СписокВидСчета.Добавить(НСтр("ru='Текущий';uk='Поточний'"));
СписокВидСчета.Добавить(НСтр("ru='Расчетный';uk='Розрахунковий'"));
СписокВидСчета.Добавить(НСтр("ru='Депозитный';uk='Депозитний'"));
СписокВидСчета.Добавить(НСтр("ru='Ссудный';uk='Позичковий'"));
СписокВидСчета.Добавить(НСтр("ru='Иной';uk='Інший'"));
