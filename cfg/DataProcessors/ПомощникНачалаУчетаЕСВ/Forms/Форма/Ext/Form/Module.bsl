////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мЗадатьВопросПриЗакрытии;
Перем мСтруктураПараметрыДоОткрытияФормы Экспорт;
Перем мСтруктураТабличногоПоля Экспорт;
Перем мСтруктураСтраниц Экспорт;

Перем мНомерТекущейСтраницы Экспорт;
Перем мКоличествоСтраниц Экспорт;

Перем мНаборСтавок;


///////////////////////////////////////////////////////////////////////////////
//ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Функция УдалитьИзБазыВзноса(ЕСВ, ВидРасчета)
	
	СтрокаВР = ЕСВ.БазовыеВидыРасчета.Найти(ВидРасчета,"ВидРасчета");
	Если СтрокаВР = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ЕСВ.БазовыеВидыРасчета.Удалить(СтрокаВР);
	СтрокаВР = ЕСВ.ВедущиеВидыРасчета.Найти(ВидРасчета,"ВидРасчета");
	Если СтрокаВР <> Неопределено Тогда
		ЕСВ.ВедущиеВидыРасчета.Удалить(СтрокаВР);
	КонецЕсли;

	Возврат Истина;
	
КонецФункции

Функция ДобавитьВБазуВзноса(ЕСВ, ВидРасчета)
	
	Если ЕСВ.БазовыеВидыРасчета.Найти(ВидРасчета,"ВидРасчета") = Неопределено Тогда
		ВР =  ЕСВ.БазовыеВидыРасчета.Добавить();
		ВР.ВидРасчета = ВидРасчета;
		Если ЕСВ.ВедущиеВидыРасчета.Найти(ВидРасчета,"ВидРасчета") = Неопределено Тогда
			ВР =  ЕСВ.ВедущиеВидыРасчета.Добавить();
			ВР.ВидРасчета = ВидРасчета;
		КонецЕсли;
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции
	
Процедура ВыполнитьОбработку()
	
	//Ставка ЕСВ
	Если НЕ ПропуститьСтавка Тогда
		НаборЗаписейСтавки = РегистрыСведений.ШкалаСтавокНалогов.СоздатьНаборЗаписей();
		НаборЗаписейСтавки.Отбор.Период.Установить(Дата(2011,1,1));
		НаборЗаписейСтавки.Отбор.Налог.Установить(Справочники.Налоги.ЕСВФОТРаботники);
		НаборЗаписейСтавки.Отбор.Организация.Установить(Организация);
		НаборЗаписейСтавки.Прочитать();
		НаборЗаписейСтавки.Очистить();
		
		Если НЕ СтавкаЕСВ и ЗначениеЗаполнено(СтавкаЕСВЗначение) Тогда
			
			НоваяЗапись = НаборЗаписейСтавки.Добавить();
			НоваяЗапись.Период = Дата(2011,1,1);
			НоваяЗапись.Организация = Организация;
			НоваяЗапись.Налог = Справочники.Налоги.ЕСВФОТРаботники;
			НоваяЗапись.НомерПорога = Перечисления.ПорогиШкалыСтавокНалогов.Порог1;
			НоваяЗапись.СтатьяНалоговойДекларации = Справочники.СтатьиНалоговыхДеклараций.ЕСВ_ФОТ;
			НоваяЗапись.Ставка = СтавкаЕСВЗначение/100;
			НоваяЗапись.Порог = 9999999999.99;
			Сообщить(НСтр("ru='Установлена ставка ЕСВ с ФОТ для организации';uk='Установлено ставку ЄСВ із ФОП для організації'"));
			
		КонецЕсли;	
		НаборЗаписейСтавки.Записать();
	КонецЕсли;
	
	//Взносы сотрудников
	Если НЕ ПропуститьНабор И ГруппыВзносовСотрудников.Количество() > 0 Тогда
		
		//Отменим существующие взносы
		НовыйДокумент = Документы.ВводСведенийОПлановыхНачисленияхРаботниковОрганизаций.СоздатьДокумент();
		НовыйДокумент.Организация = Организация;
		НовыйДокумент.Дата = ОбщегоНазначения.ПолучитьРабочуюДату();
		НовыйДокумент.Комментарий = НСтр("ru='Сформировано помощником начала учета ЕСВ';uk='Сформовано помічником початку обліку ЄСВ'");
			
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		Запрос.УстановитьПараметр("Дата", Дата(2011,1,1));
		Запрос.УстановитьПараметр("ДатаДействия", Дата(2010,12,31));
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("СписокСотрудников", ГруппыВзносовСотрудников.ВыгрузитьКолонку("Сотрудник"));
		Запрос.УстановитьПараметр("СписокВзносов", ГруппыВзносовСотрудников);
		
		 Запрос.Текст = "
		   |ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
		   |	ВзносыВФондыРаботниковОрганизацийСрезПоследних.Сотрудник КАК Сотрудник,
		   |	ВзносыВФондыРаботниковОрганизацийСрезПоследних.Налог КАК Налог,
		   |	ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить) КАК Действие,
		   |	&ДатаДействия КАК ДатаДействия
		   |ИЗ
		   |	РегистрСведений.ВзносыВФондыРаботниковОрганизаций.СрезПоследних(&Дата,Сотрудник В (&СписокСотрудников)) КАК ВзносыВФондыРаботниковОрганизацийСрезПоследних
		   |ГДЕ
		   |    ВзносыВФондыРаботниковОрганизацийСрезПоследних.Актуальность
		   |    И НЕ ВзносыВФондыРаботниковОрганизацийСрезПоследних.Налог.Актуальность
		   |    И ВзносыВФондыРаботниковОрганизацийСрезПоследних.Налог.Родитель = ЗНАЧЕНИЕ(Справочник.Налоги.Взносы)
		   |УПОРЯДОЧИТЬ ПО Сотрудник.Наименование
		   |";
		 Запрос.Выполнить();

		 НовыйДокумент.Взносы.Загрузить(Запрос.Выполнить().Выгрузить());
		 
		  Запрос.Текст = "
		   |ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
		   |	ВзносыВФондыРаботниковОрганизацийСрезПоследних.Сотрудник КАК Сотрудник,
		   |	ВзносыВФондыРаботниковОрганизацийСрезПоследних.Налог КАК Налог,
		   |	ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить) КАК Действие,
		   |	&ДатаДействия КАК ДатаДействия
		   |ИЗ
		   |	РегистрСведений.ВзносыВФондыРаботниковОрганизаций.СрезПоследних(&Дата,Сотрудник В (&СписокСотрудников)) КАК ВзносыВФондыРаботниковОрганизацийСрезПоследних
		   |ГДЕ
		   |    ВзносыВФондыРаботниковОрганизацийСрезПоследних.Актуальность
		   |    И НЕ ВзносыВФондыРаботниковОрганизацийСрезПоследних.Налог.Актуальность
		   |    И ВзносыВФондыРаботниковОрганизацийСрезПоследних.Налог.Родитель = ЗНАЧЕНИЕ(Справочник.Налоги.ВзносыФОТ)
		   |УПОРЯДОЧИТЬ ПО Сотрудник.Наименование
		   |";
		Запрос.Выполнить();

		НовыйДокумент.ВзносыФОТ.Загрузить(Запрос.Выполнить().Выгрузить());

		Если НовыйДокумент.Взносы.Количество() > 0 Или
			 НовыйДокумент.Взносы.Количество() > 0 Тогда
			НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение); 
			Сообщить("Прекращены взносы сотрудников документом " + Строка(НовыйДокумент));
		КонецЕсли;
		
		//Активизируем новые взносы
		НовыйДокумент = Документы.ВводСведенийОПлановыхНачисленияхРаботниковОрганизаций.СоздатьДокумент();
		НовыйДокумент.Организация = Организация;
		НовыйДокумент.Дата = ОбщегоНазначения.ПолучитьРабочуюДату();
		НовыйДокумент.Комментарий = НСтр("ru='Сформировано помощником начала учета ЕСВ';uk='Сформовано помічником початку обліку ЄСВ'");
		
		Запрос.Текст = "
		   |ВЫБРАТЬ
		   |   СписокВзносов.Сотрудник КАК Сотрудник,
		   |   СписокВзносов.ГруппаВзносов КАК ГруппаВзносов
		   |ПОМЕСТИТЬ ВТСписокВзносов
		   |ИЗ
		   |	&СписокВзносов КАК СписокВзносов
		   |;
		   |ВЫБРАТЬ 
		   |	СписокВзносов.Сотрудник КАК Сотрудник,
		   |	ГруппыВзносов.Налог КАК Налог,
		   |	ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Начать) КАК Действие,
		   |	&Дата КАК ДатаДействия
		   |ИЗ
		   |	ВТСписокВзносов КАК СписокВзносов
		   |	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВзносыВФондыПоГруппам.СрезПоследних(&Дата) КАК ГруппыВзносов
		   |	ПО  СписокВзносов.ГруппаВзносов = ГруппыВзносов.ГруппаВзносов
		   |	  И ГруппыВзносов.Действует
		   |	  И ГруппыВзносов.Налог.Родитель = ЗНАЧЕНИЕ(Справочник.Налоги.Взносы)
		   |";
		 НовыйДокумент.Взносы.Загрузить(Запрос.Выполнить().Выгрузить());
		 
		 Запрос.Текст = "
   		   |ВЫБРАТЬ
		   |   СписокВзносов.Сотрудник КАК Сотрудник,
		   |   СписокВзносов.ГруппаВзносов КАК ГруппаВзносов
		   |ПОМЕСТИТЬ ВТСписокВзносовФОТ
		   |ИЗ
		   |	&СписокВзносов КАК СписокВзносов
		   |;
		   |ВЫБРАТЬ
		   |	СписокВзносов.Сотрудник КАК Сотрудник,
		   |	ГруппыВзносов.Налог КАК Налог,
		   |	ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Начать) КАК Действие,
		   |	&Дата КАК ДатаДействия
		   |ИЗ
		   |	ВТСписокВзносовФОТ КАК СписокВзносов
		   |	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВзносыВФондыПоГруппам.СрезПоследних(&Дата) КАК ГруппыВзносов
		   |	ПО  СписокВзносов.ГруппаВзносов = ГруппыВзносов.ГруппаВзносов
		   |	  И ГруппыВзносов.Действует
		   |	  И ГруппыВзносов.Налог.Родитель = ЗНАЧЕНИЕ(Справочник.Налоги.ВзносыФОТ)
		   |";
		НовыйДокумент.ВзносыФОТ.Загрузить(Запрос.Выполнить().Выгрузить());
		
		Если НовыйДокумент.Взносы.Количество() > 0 Или
			 НовыйДокумент.Взносы.Количество() > 0 Тогда
			НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение); 
			Сообщить("Активизирован ЕСВ сотрудников документом " + Строка(НовыйДокумент));
		КонецЕсли;	
		
	КонецЕсли;	
	
	//Взносы ГПХ
	Если НЕ ПропуститьГПХ И СписокДоговорников.Количество() > 0 Тогда
		
		//Отменим существующие взносы
		НовыйДокумент = Документы.ВводСведенийОПлановыхНачисленияхРаботниковОрганизаций.СоздатьДокумент();
		НовыйДокумент.Организация = Организация;
		НовыйДокумент.Дата = ОбщегоНазначения.ПолучитьРабочуюДату();
		НовыйДокумент.Комментарий = НСтр("ru='Сформировано помощником начала учета ЕСВ';uk='Сформовано помічником початку обліку ЄСВ'");
			
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		Запрос.УстановитьПараметр("Дата", Дата(2011,1,1));
		Запрос.УстановитьПараметр("ДатаДействия", Дата(2010,12,31));
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("СписокСотрудников", СписокДоговорников.ВыгрузитьКолонку("Сотрудник"));
		Запрос.УстановитьПараметр("СписокВзносов", СписокДоговорников);
		
		 Запрос.Текст = "
		   |ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
		   |	ВзносыВФондыРаботниковОрганизацийСрезПоследних.Сотрудник КАК Сотрудник,
		   |	ВзносыВФондыРаботниковОрганизацийСрезПоследних.Налог КАК Налог,
		   |	ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить) КАК Действие,
		   |	&ДатаДействия КАК ДатаДействия
		   |ИЗ
		   |	РегистрСведений.ВзносыВФондыРаботниковОрганизаций.СрезПоследних(&Дата,Сотрудник В (&СписокСотрудников)) КАК ВзносыВФондыРаботниковОрганизацийСрезПоследних
		   |ГДЕ
		   |    ВзносыВФондыРаботниковОрганизацийСрезПоследних.Актуальность
		   |    И НЕ ВзносыВФондыРаботниковОрганизацийСрезПоследних.Налог.Актуальность
		   |    И ВзносыВФондыРаботниковОрганизацийСрезПоследних.Налог.Родитель = ЗНАЧЕНИЕ(Справочник.Налоги.Взносы)
		   |УПОРЯДОЧИТЬ ПО Сотрудник.Наименование
		   |";
		 Запрос.Выполнить();

		 НовыйДокумент.Взносы.Загрузить(Запрос.Выполнить().Выгрузить());
		 
		  Запрос.Текст = "
		   |ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
		   |	ВзносыВФондыРаботниковОрганизацийСрезПоследних.Сотрудник КАК Сотрудник,
		   |	ВзносыВФондыРаботниковОрганизацийСрезПоследних.Налог КАК Налог,
		   |	ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить) КАК Действие,
		   |	&ДатаДействия КАК ДатаДействия
		   |ИЗ
		   |	РегистрСведений.ВзносыВФондыРаботниковОрганизаций.СрезПоследних(&Дата,Сотрудник В (&СписокСотрудников)) КАК ВзносыВФондыРаботниковОрганизацийСрезПоследних
		   |ГДЕ
		   |    ВзносыВФондыРаботниковОрганизацийСрезПоследних.Актуальность
		   |    И НЕ ВзносыВФондыРаботниковОрганизацийСрезПоследних.Налог.Актуальность
		   |    И ВзносыВФондыРаботниковОрганизацийСрезПоследних.Налог.Родитель = ЗНАЧЕНИЕ(Справочник.Налоги.ВзносыФОТ)
		   |УПОРЯДОЧИТЬ ПО Сотрудник.Наименование
		   |";
		Запрос.Выполнить();

		НовыйДокумент.ВзносыФОТ.Загрузить(Запрос.Выполнить().Выгрузить());

		Если НовыйДокумент.Взносы.Количество() > 0 Или
			 НовыйДокумент.Взносы.Количество() > 0 Тогда
			НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение); 
			Сообщить("Прекращены взносы по договорам ГПХ документом " + Строка(НовыйДокумент));
		КонецЕсли;	
		
		//Активизируем новые взносы
		НовыйДокумент = Документы.ВводСведенийОПлановыхНачисленияхРаботниковОрганизаций.СоздатьДокумент();
		НовыйДокумент.Организация = Организация;
		НовыйДокумент.Дата = ОбщегоНазначения.ПолучитьРабочуюДату();
		НовыйДокумент.Комментарий = НСтр("ru='Сформировано помощником начала учета ЕСВ';uk='Сформовано помічником початку обліку ЄСВ'");
		
		  Запрос.Текст = "
		   |ВЫБРАТЬ
		   |   СписокВзносов.ОсновноеНазначение КАК Сотрудник
		   |ПОМЕСТИТЬ ВТСписокВзносовГПХ
		   |ИЗ
		   |	&СписокВзносов КАК СписокВзносов
		   |ГДЕ СписокВзносов.Флаг
		   |;
		   |ВЫБРАТЬ 
		   |	СписокВзносов.Сотрудник КАК Сотрудник,
		   |	ГруппыВзносов.Налог КАК Налог,
		   |	ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Начать) КАК Действие,
		   |	&Дата КАК ДатаДействия
		   |ИЗ
		   |	ВТСписокВзносовГПХ КАК СписокВзносов
		   |	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВзносыВФондыПоГруппам.СрезПоследних(&Дата, ГруппаВзносов = ЗНАЧЕНИЕ(Справочник.ГруппыВзносовВФонды.Договорники)) КАК ГруппыВзносов
		   |	ПО  ГруппыВзносов.Действует
		   |	  И ГруппыВзносов.Налог.Родитель = ЗНАЧЕНИЕ(Справочник.Налоги.Взносы)
		   |";
		 НовыйДокумент.Взносы.Загрузить(Запрос.Выполнить().Выгрузить());
		 
		 Запрос.Текст = "
		   |ВЫБРАТЬ
		   |   СписокВзносов.ОсновноеНазначение КАК Сотрудник
		   |ПОМЕСТИТЬ ВТСписокВзносовГПХФОТ
		   |ИЗ
		   |	&СписокВзносов КАК СписокВзносов
		   |ГДЕ СписокВзносов.Флаг
		   |;
		   |ВЫБРАТЬ 
		   |	СписокВзносов.Сотрудник КАК Сотрудник,
		   |	ГруппыВзносов.Налог КАК Налог,
		   |	ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Начать) КАК Действие,
		   |	&Дата КАК ДатаДействия
		   |ИЗ
		   |	ВТСписокВзносовГПХ КАК СписокВзносов
		   |	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВзносыВФондыПоГруппам.СрезПоследних(&Дата, ГруппаВзносов = ЗНАЧЕНИЕ(Справочник.ГруппыВзносовВФонды.Договорники)) КАК ГруппыВзносов
		   |	ПО  ГруппыВзносов.Действует
		   |	  И ГруппыВзносов.Налог.Родитель = ЗНАЧЕНИЕ(Справочник.Налоги.ВзносыФОТ)
		   |";
		   
		  НовыйДокумент.ВзносыФОТ.Загрузить(Запрос.Выполнить().Выгрузить());
		
		Если НовыйДокумент.Взносы.Количество() > 0 Или
			 НовыйДокумент.Взносы.Количество() > 0 Тогда
			НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение); 
			Сообщить("Активизирован ЕСВ по договорам ГПХ документом " + Строка(НовыйДокумент));
		КонецЕсли;	
		
	КонецЕсли;	
	
	//Настройка начислений
	Если НЕ ПропуститьНачисления И СписокВидовРасчета.Количество() > 0 Тогда
		
		ЕСВ = ПланыВидовРасчета.ВзносыВФонды.ЕСВ.ПолучитьОбъект();
		ЕСВГПХ = ПланыВидовРасчета.ВзносыВФонды.ЕСВГПХ.ПолучитьОбъект();
		ЕСВБольничные = ПланыВидовРасчета.ВзносыВФонды.ЕСВБольничные.ПолучитьОбъект();
		
		фНужнаЗапись1 = Ложь;
		фНужнаЗапись2 = Ложь;
		фНужнаЗапись3 = Ложь;
		Для Каждого ВР из СписокВидовРасчета Цикл
			Если ВР.ЕСВ = "Облагается ЕСВ" Тогда
				фНужнаЗапись1 = ДобавитьВБазуВзноса(ЕСВ, ВР.ВидРасчета) ИЛИ фНужнаЗапись1;
				фНужнаЗапись2 = УдалитьИзБазыВзноса(ЕСВГПХ, ВР.ВидРасчета) ИЛИ фНужнаЗапись2;
				фНужнаЗапись3 = УдалитьИзБазыВзноса(ЕСВБольничные, ВР.ВидРасчета) ИЛИ фНужнаЗапись3;
			КонецЕсли;
			Если ВР.ЕСВ = "Не облагается ЕСВ" Тогда
				фНужнаЗапись1 = УдалитьИзБазыВзноса(ЕСВ, ВР.ВидРасчета) ИЛИ фНужнаЗапись1;
				фНужнаЗапись2 = УдалитьИзБазыВзноса(ЕСВГПХ, ВР.ВидРасчета) ИЛИ фНужнаЗапись2;
				фНужнаЗапись3 = УдалитьИзБазыВзноса(ЕСВБольничные, ВР.ВидРасчета) ИЛИ фНужнаЗапись3;
			КонецЕсли;
			Если ВР.ЕСВ = "Оплата по договорам ГПХ" Тогда
				фНужнаЗапись1 = УдалитьИзБазыВзноса(ЕСВ, ВР.ВидРасчета) ИЛИ фНужнаЗапись1;
				фНужнаЗапись2 = ДобавитьВБазуВзноса(ЕСВГПХ, ВР.ВидРасчета) ИЛИ фНужнаЗапись2;
				фНужнаЗапись3 = УдалитьИзБазыВзноса(ЕСВБольничные, ВР.ВидРасчета) ИЛИ фНужнаЗапись3;
			КонецЕсли;
			Если ВР.ЕСВ = "Больничные" Тогда
				фНужнаЗапись1 = УдалитьИзБазыВзноса(ЕСВ, ВР.ВидРасчета) ИЛИ фНужнаЗапись1;
				фНужнаЗапись2 = УдалитьИзБазыВзноса(ЕСВГПХ, ВР.ВидРасчета) ИЛИ фНужнаЗапись2;
				фНужнаЗапись3 = ДобавитьВБазуВзноса(ЕСВБольничные, ВР.ВидРасчета) ИЛИ фНужнаЗапись3;
				Если НЕ ВР.ВидРасчета.ЭтоБольничные Тогда
					ВРОбъект = ВР.ВидРасчета.ПолучитьОбъект();
					ВРОбъект.ЭтоБольничные = Истина;
					ВРОбъект.Записать();
					Сообщить("Установлен признак больничного для вида расчета " + Строка(ВР.ВидРасчета));
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		
		Если фНужнаЗапись1 Тогда
			Базовые = ЕСВ.БазовыеВидыРасчета.Выгрузить();
			Ведущие = ЕСВ.ВедущиеВидыРасчета.Выгрузить();
			ЕСВ.Записать();
			Сообщить("Установлена база вида расчета " + Строка(ЕСВ));
			ЕСВФОТ = ПланыВидовРасчета.ВзносыВФонды.ЕСВФОТ.ПолучитьОбъект();
			ЕСВФОТ.БазовыеВидыРасчета.Загрузить(Базовые);
			ЕСВФОТ.ВедущиеВидыРасчета.Загрузить(Ведущие);
			ЕСВФОТ.Записать();
			Сообщить("Установлена база вида расчета " + Строка(ЕСВФОТ));
		КонецЕсли;
		
		Если фНужнаЗапись2 Тогда
			Базовые = ЕСВГПХ.БазовыеВидыРасчета.Выгрузить();
			Ведущие = ЕСВГПХ.ВедущиеВидыРасчета.Выгрузить();
			ЕСВГПХ.Записать();
			Сообщить("Установлена база вида расчета " + Строка(ЕСВГПХ));
			ЕСВФОТ = ПланыВидовРасчета.ВзносыВФонды.ЕСВФОТГПХ.ПолучитьОбъект();
			ЕСВФОТ.БазовыеВидыРасчета.Загрузить(Базовые);
			ЕСВФОТ.ВедущиеВидыРасчета.Загрузить(Ведущие);
			ЕСВФОТ.Записать();
			Сообщить("Установлена база вида расчета " + Строка(ЕСВФОТ));
		КонецЕсли;
		
		Если фНужнаЗапись3 Тогда
			Базовые = ЕСВБольничные.БазовыеВидыРасчета.Выгрузить();
			Ведущие = ЕСВБольничные.ВедущиеВидыРасчета.Выгрузить();
			ЕСВБольничные.Записать();
			Сообщить("Установлена база вида расчета " + Строка(ЕСВБольничные));
			ЕСВФОТ = ПланыВидовРасчета.ВзносыВФонды.ЕСВФОТБольничные.ПолучитьОбъект();
			ЕСВФОТ.БазовыеВидыРасчета.Загрузить(Базовые);
			ЕСВФОТ.ВедущиеВидыРасчета.Загрузить(Ведущие);
			ЕСВФОТ.Записать();
			Сообщить("Установлена база вида расчета " + Строка(ЕСВФОТ));
		КонецЕсли;

		
	КонецЕсли;	
	
	//Настройка отражений
	Если НЕ ПропуститьОтражение Тогда
		//Удалим пустые строки
		Индекс = 0;
		Пока Индекс <= (НастройкаОтражений.Количество()-1) Цикл
			
			Если Не ЗначениеЗаполнено(НастройкаОтражений[Индекс].СтатьяЗатрат) Тогда
				НастройкаОтражений.Удалить(Индекс);
				Продолжить;
			КонецЕсли;
			
			Индекс = Индекс + 1;
			
		КонецЦикла;
		НастройкаОтражений.Записать();
		Сообщить("Записаны данные регистра " + Строка(НастройкаОтражений.Метаданные().Синоним));
	КонецЕсли;	
		
	//Настройка перечисления
	Если НЕ ПропуститьПеречисление Тогда
		//Удалим пустые строки
		Индекс = 0;
		Пока Индекс <= (НастройкаПеречисления.Количество()-1) Цикл
			
			Если Не ЗначениеЗаполнено(НастройкаПеречисления[Индекс].Контрагент) Тогда
				НастройкаПеречисления.Удалить(Индекс);
				Продолжить;
			КонецЕсли;
			
			Индекс = Индекс + 1;
			
		КонецЦикла;
		
		//дополним существующими записями по НДФЛ и другим взносам
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.Текст = "
		   |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		   |	*
		   |ИЗ
		   |	РегистрСведений.ПараметрыПлатежныхДокументовПоВзносамВФонды КАК Настройки 
		   |ГДЕ
		   |    Настройки.Организация = &Организация
		   |    И (Настройки.СтатьяНалоговойДекларации.Родитель <> ЗНАЧЕНИЕ(Справочник.СтатьиНалоговыхДеклараций.ЕСВ_)
		   |       ИЛИ Настройки.СтатьяНалоговойДекларации = ЗНАЧЕНИЕ(Справочник.СтатьиНалоговыхДеклараций.ПустаяСсылка))
		   |";
	    Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяЗапись = НастройкаПеречисления.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись,Выборка);
		КонецЦикла;
		НастройкаПеречисления.Записать();
		Сообщить("Записаны данные регистра " + Строка(НастройкаПеречисления.Метаданные().Синоним));
    КонецЕсли;
	
	Сообщить(НСтр("ru='Работа помощника завершена';uk='Робота помічника завершена'"));
	мЗадатьВопросПриЗакрытии = Ложь;                 
	ЭтаФорма.Закрыть();

КонецПроцедуры	

Процедура ЗаполнитьСтавкаЕСВ()
	
	Срез = РегистрыСведений.ШкалаСтавокНалогов.СрезПоследних(Дата(2011,1,1),Новый Структура("Налог,Организация",Справочники.Налоги.ЕСВФОТРаботники,Организация));
	Если Срез.Количество() > 0 Тогда
		СтавкаЕСВЗначение = Срез[0].Ставка*100;
	Иначе
		СтавкаЕСВЗначение = 0;
	КонецЕсли;
	Срез = РегистрыСведений.ШкалаСтавокНалогов.СрезПоследних(Дата(2011,1,1),Новый Структура("Налог,Организация",Справочники.Налоги.ЕСВФОТРаботники,Справочники.Организации.ПустаяСсылка()));
	Если Срез.Количество() > 0 Тогда
		ЗначениеПоУмлочанию = Срез[0].Ставка;
	Иначе
		ЗначениеПоУмлочанию = 0;
	КонецЕсли;
	
	ЭлементыФормы.СтавкаЕСВ.Заголовок = СтрЗаменить(ЭлементыФормы.СтавкаЕСВ.Заголовок,"...",Формат(ЗначениеПоУмлочанию*100,"ЧЦ=10; ЧДЦ=2"));
	Если СтавкаЕСВЗначение > 0 Тогда
		СтавкаЕСВ = Ложь;
	Иначе
		СтавкаЕСВ = Истина;
	КонецЕсли;
	ЭлементыФормы.СтавкаЕСВЗначение.Доступность = НЕ СтавкаЕСВ;
	
КонецПроцедуры

Процедура ЗаполнитьГруппыВзносовСотрудников()
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Дата", Дата(2011,1,1));
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Запрос.Текст = "
	   |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	   |	ВзносыВФондыРаботниковОрганизацийСрезПоследних.Сотрудник,
	   |	ВзносыВФондыРаботниковОрганизацийСрезПоследних.Организация,
	   |	ВзносыВФондыРаботниковОрганизацийСрезПоследних.Налог,
	   |	ВзносыВФондыРаботниковОрганизацийСрезПоследних.Актуальность
	   |ПОМЕСТИТЬ ВТИвалиды
	   |ИЗ
	   |	РегистрСведений.ВзносыВФондыРаботниковОрганизаций.СрезПоследних(&Дата,Организация = &Организация) КАК ВзносыВФондыРаботниковОрганизацийСрезПоследних
	   |ГДЕ
	   |    ВзносыВФондыРаботниковОрганизацийСрезПоследних.Актуальность
	   |	И ВзносыВФондыРаботниковОрганизацийСрезПоследних.Налог = ЗНАЧЕНИЕ(Справочник.Налоги.ПенсионныйФОТИнв)";
     Запрос.Выполнить();
	 
	 Запрос.Текст = "
	   |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	   |	ВзносыВФондыРаботниковОрганизацийСрезПоследних.Сотрудник,
	   |	ВзносыВФондыРаботниковОрганизацийСрезПоследних.Организация,
	   |	ВзносыВФондыРаботниковОрганизацийСрезПоследних.Налог,
	   |	ВзносыВФондыРаботниковОрганизацийСрезПоследних.Актуальность
	   |ПОМЕСТИТЬ ВТЛетчики
	   |ИЗ
	   |	РегистрСведений.ВзносыВФондыРаботниковОрганизаций.СрезПоследних(&Дата,Организация = &Организация) КАК ВзносыВФондыРаботниковОрганизацийСрезПоследних
	   |ГДЕ
	   |    ВзносыВФондыРаботниковОрганизацийСрезПоследних.Актуальность
	   |	И ВзносыВФондыРаботниковОрганизацийСрезПоследних.Налог = ЗНАЧЕНИЕ(Справочник.Налоги.ПенсионныйФОТЛет)";
     Запрос.Выполнить();
	 
	 Запрос.Текст = "
	   |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	   |	ВзносыВФондыРаботниковОрганизацийСрезПоследних.Сотрудник,
	   |	ВзносыВФондыРаботниковОрганизацийСрезПоследних.Организация,
	   |	ВзносыВФондыРаботниковОрганизацийСрезПоследних.Налог,
	   |	ВзносыВФондыРаботниковОрганизацийСрезПоследних.Актуальность
	   |ПОМЕСТИТЬ ВТБюджетники
	   |ИЗ
	   |	РегистрСведений.ВзносыВФондыРаботниковОрганизаций.СрезПоследних(&Дата,Организация = &Организация) КАК ВзносыВФондыРаботниковОрганизацийСрезПоследних
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |    ВТЛетчики КАК СписокЛетчиков
	   |    ПО ВзносыВФондыРаботниковОрганизацийСрезПоследних.Сотрудник = СписокЛетчиков.Сотрудник
	   |ГДЕ
	   |    ВзносыВФондыРаботниковОрганизацийСрезПоследних.Актуальность
	   |    И НЕ ЕСТЬNULL(СписокЛетчиков.Актуальность,Ложь) 
	   |	И ВзносыВФондыРаботниковОрганизацийСрезПоследних.Налог = ЗНАЧЕНИЕ(Справочник.Налоги.Пенсионный1_5)";
     Запрос.Выполнить();
	 
 	 Запрос.Текст = "
	   |ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	   |	ВзносыВФондыРаботниковОрганизацийСрезПоследних.Сотрудник
	   |ПОМЕСТИТЬ ВТВсеСотрудники
	   |ИЗ
	   |	РегистрСведений.ВзносыВФондыРаботниковОрганизаций.СрезПоследних(&Дата,Организация = &Организация) КАК ВзносыВФондыРаботниковОрганизацийСрезПоследних
	   |ГДЕ
	   |    ВзносыВФондыРаботниковОрганизацийСрезПоследних.Актуальность
	   |  И ВзносыВФондыРаботниковОрганизацийСрезПоследних.Сотрудник.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
	   |  И НЕ ВзносыВФондыРаботниковОрганизацийСрезПоследних.Налог.Актуальность
	   |";
     Запрос.Выполнить();

	 Запрос.Текст = "
	   |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	   |	Сотрудники.Сотрудник КАК Сотрудник,
	   |	Сотрудники.Сотрудник.Наименование КАК Наименование,
	   |    ВЫБОР 
	   |		КОГДА ЕСТЬNULL(Инвалиды.Актуальность,Ложь) ТОГДА ЗНАЧЕНИЕ(Справочник.ГруппыВзносовВФонды.Инвалиды)
	   |		КОГДА ЕСТЬNULL(Летчики.Актуальность,Ложь) ТОГДА ЗНАЧЕНИЕ(Справочник.ГруппыВзносовВФонды.Летчики)
	   |		КОГДА ЕСТЬNULL(Бюджетники.Актуальность,Ложь) ТОГДА ЗНАЧЕНИЕ(Справочник.ГруппыВзносовВФонды.Бюджет)
	   |		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ГруппыВзносовВФонды.ОсновнойСостав)
	   |    КОНЕЦ КАК ГруппаВзносов
	   |ИЗ
	   |	ВТВсеСотрудники КАК Сотрудники
   	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |    ВТИвалиды КАК Инвалиды
	   |    ПО Сотрудники.Сотрудник = Инвалиды.Сотрудник
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |    ВТЛетчики КАК Летчики
	   |    ПО Сотрудники.Сотрудник = Летчики.Сотрудник
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |    ВТБюджетники КАК Бюджетники
	   |    ПО Сотрудники.Сотрудник = Бюджетники.Сотрудник
	   |УПОРЯДОЧИТЬ ПО Наименование";
     ГруппыВзносовСотрудников = Запрос.Выполнить().Выгрузить();
	 
	
	
КонецПроцедуры

Процедура ЗаполнитьСписокДоговорников()
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Дата", Дата(2011,1,1));
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Запрос.Текст = "
	   |ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	   |	ВзносыВФондыРаботниковОрганизацийСрезПоследних.Сотрудник
	   |ПОМЕСТИТЬ ВТВзносыГПХ
	   |ИЗ
	   |	РегистрСведений.ВзносыВФондыРаботниковОрганизаций.СрезПоследних(&Дата,Организация = &Организация) КАК ВзносыВФондыРаботниковОрганизацийСрезПоследних
	   |ГДЕ
	   |    ВзносыВФондыРаботниковОрганизацийСрезПоследних.Актуальность
	   |	И ВзносыВФондыРаботниковОрганизацийСрезПоследних.Налог = ЗНАЧЕНИЕ(Справочник.Налоги.ЕСВГПХ)";
    Запрос.Выполнить();
	 
	 
 	 Запрос.Текст = "
	   |ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	   |	Договора.Сотрудник
	   |ПОМЕСТИТЬ ВТВсеСотрудники
	   |ИЗ
	   |	Документ.ДоговорНаВыполнениеРаботСФизЛицом КАК Договора
	   |ГДЕ
	   |    Договора.Проведен
	   |  И Договора.Организация = &Организация
	   |  И Договора.ДатаОкончания > &Дата 
	   |";
     Запрос.Выполнить();

	 Запрос.Текст = "
	   |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	   |	ИСТИНА КАК Флаг,
	   |	Сотрудники.Сотрудник КАК Сотрудник,
	   |	ВЫБОР
	   |	 КОГДА Сотрудники.Сотрудник.ОсновноеНазначение = ЗНАЧЕНИЕ(Справочник.СотрудникиОрганизаций.ПустаяСсылка)
	   |	 ТОГДА Сотрудники.Сотрудник
	   |	 ИНАЧЕ Сотрудники.Сотрудник.ОсновноеНазначение
	   |	КОНЕЦ КАК ОсновноеНазначение
	   |ИЗ
	   |	ВТВсеСотрудники КАК Сотрудники
   	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |    ВТВзносыГПХ КАК ВзносыГПХ
	   |    ПО Сотрудники.Сотрудник = ВзносыГПХ.Сотрудник
	   |    ИЛИ Сотрудники.Сотрудник.ОсновноеНазначение = ВзносыГПХ.Сотрудник
	   |ГДЕ
	   |    ВзносыГПХ.Сотрудник ЕСТЬ NULL
	   |УПОРЯДОЧИТЬ ПО Сотрудники.Сотрудник.Наименование";
     СписокДоговорников = Запрос.Выполнить().Выгрузить();
	 
	
	
КонецПроцедуры

Процедура ЗаполнитьСписокВидовРасчета()
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Дата", Дата(2011,1,1));
	
	Запрос.Текст = "
	   |ВЫБРАТЬ РАЗЛИЧНЫЕ
	   |	Взносы.ВидРасчета
	   |ПОМЕСТИТЬ ВТБазаЕСВ
	   |ИЗ
	   |	ПланВидовРасчета.ВзносыВФонды.БазовыеВидыРасчета КАК Взносы 
	   |ГДЕ
	   |    Взносы.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.ВзносыВФонды.ЕСВ)
	   |";
    Запрос.Выполнить();
	
	Запрос.Текст = "
	   |ВЫБРАТЬ РАЗЛИЧНЫЕ
	   |	Взносы.ВидРасчета
	   |ПОМЕСТИТЬ ВТБазаЕСВГПХ
	   |ИЗ
	   |	ПланВидовРасчета.ВзносыВФонды.БазовыеВидыРасчета КАК Взносы 
	   |ГДЕ
	   |    Взносы.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.ВзносыВФонды.ЕСВГПХ)
	   |";
    Запрос.Выполнить();
	
	Запрос.Текст = "
	   |ВЫБРАТЬ РАЗЛИЧНЫЕ
	   |	Взносы.ВидРасчета
	   |ПОМЕСТИТЬ ВТБазаЕСВБольничные
	   |ИЗ
	   |	ПланВидовРасчета.ВзносыВФонды.БазовыеВидыРасчета КАК Взносы 
	   |ГДЕ
	   |    Взносы.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.ВзносыВФонды.ЕСВБольничные)
	   |";
    Запрос.Выполнить();
	
	Запрос.Текст = "
	   |ВЫБРАТЬ РАЗЛИЧНЫЕ
	   |	Взносы.ВидРасчета
	   |ПОМЕСТИТЬ ВТБазаПенсионный
	   |ИЗ
	   |	ПланВидовРасчета.ВзносыВФонды.БазовыеВидыРасчета КАК Взносы 
	   |ГДЕ
	   |    Взносы.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.ВзносыВФонды.Пенсионный20050101)
	   |";
    Запрос.Выполнить();

	Запрос.Текст = "
	   |ВЫБРАТЬ РАЗЛИЧНЫЕ
	   |	Начисления.Ссылка КАК ВидРасчета,
	   |    ВЫБОР 
	   |     КОГДА НЕ БазаЕСВ.ВидРасчета ЕСТЬ NULL ТОГДА ""Облагается ЕСВ""
	   |     КОГДА НЕ БазаЕСВГПХ.ВидРасчета ЕСТЬ NULL ТОГДА ""Оплата по договорам ГПХ""
	   |     КОГДА НЕ БазаЕСВБольничные.ВидРасчета ЕСТЬ NULL ТОГДА ""Больничные""
	   |     КОГДА НЕ БазаПенсионный.ВидРасчета ЕСТЬ NULL ТОГДА ""Облагается ЕСВ""
	   |     ИНАЧЕ ""Не облагается ЕСВ""
	   |    КОНЕЦ КАК ЕСВ
	   |ИЗ
	   |	ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК Начисления
   	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |    ВТБазаЕСВ КАК БазаЕСВ
	   |    ПО БазаЕСВ.ВидРасчета = Начисления.Ссылка
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |    ВТБазаЕСВГПХ КАК БазаЕСВГПХ
	   |    ПО БазаЕСВГПХ.ВидРасчета = Начисления.Ссылка
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |    ВТБазаЕСВБольничные КАК БазаЕСВБольничные
	   |    ПО БазаЕСВБольничные.ВидРасчета = Начисления.Ссылка
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |    ВТБазаПенсионный КАК БазаПенсионный
	   |    ПО БазаПенсионный.ВидРасчета = Начисления.Ссылка
	   |ГДЕ
	   |    НЕ Начисления.Предопределенный
	   |    И НЕ Начисления.ПометкаУдаления
	   |    И Начисления.СпособРасчета <> ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.НулеваяСумма)
	   |УПОРЯДОЧИТЬ ПО Начисления.Наименование";
     СписокВидовРасчета = Запрос.Выполнить().Выгрузить();
	                                                
	
	
КонецПроцедуры

Процедура ЗаполнитьНастройкаОтражений()
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Дата", Дата(2011,1,1));
	
	Запрос.Текст = "
	   |ВЫБРАТЬ РАЗЛИЧНЫЕ
	   |	Налоги.Ссылка КАК Налог 
	   |ПОМЕСТИТЬ ВТВсеНалоги
	   |ИЗ
	   |	Справочник.Налоги КАК Налоги 
	   |ГДЕ
	   |    Налоги.Родитель = ЗНАЧЕНИЕ(Справочник.Налоги.ВзносыФот)
	   |    И Налоги.Актуальность
	   |";
    Запрос.Выполнить();
	
	Запрос.Текст = "
	   |ВЫБРАТЬ РАЗЛИЧНЫЕ
	   |	Настройки.Налог,
	   |	Настройки.ХарактерЗатрат,
	   |	Настройки.СтатьяЗатрат,
	   |	Настройки.СтатьяВаловыхРасходов
	   |ПОМЕСТИТЬ ВТТекущиеНастройки
	   |ИЗ
	   |	РегистрСведений.ОтражениеВзносовФОТВРеглУчете.СрезПоследних(&Дата) КАК Настройки 
	   |ГДЕ
	   |    Настройки.Налог.Родитель = ЗНАЧЕНИЕ(Справочник.Налоги.ВзносыФот)
	   |    И Настройки.Налог.Актуальность
	   |";
    Запрос.Выполнить();
	
	Запрос.Текст = "
	   |ВЫБРАТЬ РАЗЛИЧНЫЕ
	   |	Настройки.ХарактерЗатрат
	   |ПОМЕСТИТЬ ВТВсеХарактерыЗатрат
	   |ИЗ
	   |	РегистрСведений.ОтражениеВзносовФОТВРеглУчете.СрезПоследних(&Дата) КАК Настройки 
	   |";
    Запрос.Выполнить();
	
	Запрос.Текст = "
	   |ВЫБРАТЬ
	   |	&Дата КАК Период,
	   |	Налоги.Налог КАК Налог,
	   |    ХарактерыЗатрат.ХарактерЗатрат КАК ХарактерЗатрат,
	   |    ВЫБОР 
	   |     КОГДА НЕ ТекущиеНастройки.СтатьяЗатрат ЕСТЬ NULL ТОГДА ТекущиеНастройки.СтатьяЗатрат
	   |     ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка)
	   |    КОНЕЦ КАК СтатьяЗатрат,
	   |    ВЫБОР 
	   |     КОГДА НЕ ТекущиеНастройки.СтатьяВаловыхРасходов ЕСТЬ NULL ТОГДА ТекущиеНастройки.СтатьяВаловыхРасходов
	   |     ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиНалоговыхДеклараций.НП_СборыФСС)
	   |    КОНЕЦ КАК СтатьяВаловыхРасходов
	   |ИЗ
	   |	ВТВсеНалоги КАК Налоги
   	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |    ВТВсеХарактерыЗатрат КАК ХарактерыЗатрат
	   |    ПО ИСТИНА
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |    ВТТекущиеНастройки КАК ТекущиеНастройки
	   |    ПО Налоги.Налог = ТекущиеНастройки.Налог
	   |      И ХарактерыЗатрат.ХарактерЗатрат = ТекущиеНастройки.ХарактерЗатрат
	   |УПОРЯДОЧИТЬ ПО Налоги.Налог.Наименование";
	   
	   
	НастройкаОтражений = РегистрыСведений.ОтражениеВзносовФОТВРеглУчете.СоздатьНаборЗаписей(); 
	НастройкаОтражений.Отбор.Период.Установить(Дата(2011,1,1)); 
	НастройкаОтражений.Прочитать();   
	НастройкаОтражений.Загрузить(Запрос.Выполнить().Выгрузить());
	 
КонецПроцедуры

Процедура ЗаполнитьНастройкаПеречисления()
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Дата", Дата(2011,1,1));
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Запрос.Текст = "
	   |ВЫБРАТЬ РАЗЛИЧНЫЕ
	   |	Шкала.СтатьяНалоговойДекларации КАК Статья
	   |ПОМЕСТИТЬ ВТВсеСтатьи
	   |ИЗ
	   |	РегистрСведений.ШкалаСтавокНалогов.СрезПоследних(&Дата) КАК Шкала 
	   |ГДЕ
	   |    (Шкала.Налог.Родитель = ЗНАЧЕНИЕ(Справочник.Налоги.ВзносыФот)
	   |     ИЛИ Шкала.Налог.Родитель = ЗНАЧЕНИЕ(Справочник.Налоги.Взносы))
	   |    И Шкала.Налог.Актуальность
	   |";
    Запрос.Выполнить();
	
	Запрос.Текст = "
	   |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	   |	Настройки.СтатьяНалоговойДекларации,
	   |	Настройки.СчетУчета,
	   |	Настройки.Контрагент,
	   |	Настройки.СчетКонтрагента
	   |ПОМЕСТИТЬ ВТТекущиеНастройки
	   |ИЗ
	   |	РегистрСведений.ПараметрыПлатежныхДокументовПоВзносамВФонды КАК Настройки 
	   |ГДЕ
	   |    Настройки.Организация = &Организация
	   |";
    Запрос.Выполнить();
	
	
	Запрос.Текст = "
	   |ВЫБРАТЬ
	   |	&Организация КАК Организация,
	   |	Статьи.Статья КАК СтатьяНалоговойДекларации,
	   |    ВЫБОР 
	   |     КОГДА НЕ ТекущиеНастройки.СчетУчета ЕСТЬ NULL ТОГДА ТекущиеНастройки.СчетУчета
	   |     ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоПенсионномуОбеспечению)
	   |    КОНЕЦ КАК СчетУчета,
	   |    ВЫБОР 
	   |     КОГДА НЕ ТекущиеНастройки.Контрагент ЕСТЬ NULL ТОГДА ТекущиеНастройки.Контрагент
	   |     ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	   |    КОНЕЦ КАК Контрагент,
       |    ВЫБОР 
	   |     КОГДА НЕ ТекущиеНастройки.СчетКонтрагента ЕСТЬ NULL ТОГДА ТекущиеНастройки.СчетКонтрагента
	   |     ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Банковскиесчета.ПустаяСсылка)
	   |    КОНЕЦ КАК СчетКонтрагента
	   |ИЗ
	   |	ВТВсеСтатьи КАК Статьи
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |    ВТТекущиеНастройки КАК ТекущиеНастройки
	   |    ПО Статьи.Статья = ТекущиеНастройки.СтатьяНалоговойДекларации
	   |УПОРЯДОЧИТЬ ПО Статьи.Статья.Наименование";
	   
	НастройкаПеречисления = РегистрыСведений.ПараметрыПлатежныхДокументовПоВзносамВФонды.СоздатьНаборЗаписей(); 
	НастройкаПеречисления.Отбор.Организация.Установить(Организация); 
	НастройкаПеречисления.Прочитать();
	НастройкаПеречисления.Очистить();
	НастройкаПеречисления.Загрузить(Запрос.Выполнить().Выгрузить());
	 
КонецПроцедуры

Функция ВыполнитьОбработкуПередПереходомНаНовуюСтраницу()
	
	
	Возврат Истина;
	
КонецФункции	

Процедура ВыполнитьОбработкуПереходаНаНовуюСтраницу()

	ТекущаяСтраница = Элементыформы.ПанельЭтапов.ТекущаяСтраница;

	Если ТекущаяСтраница = ЭлементыФормы.ПанельЭтапов.Страницы.СтавкаЕСВ Тогда
		
		Если СтавкаЕСВЗначение = 0 Тогда
			
			ЗаполнитьСтавкаЕСВ();
			
		КонецЕсли;
		
	ИначеЕсли ТекущаяСтраница = ЭлементыФормы.ПанельЭтапов.Страницы.НаборВзносов Тогда
		
		Если ГруппыВзносовСотрудников.Количество() = 0 Тогда
			
			ЗаполнитьГруппыВзносовСотрудников();
			
		КонецЕсли;
		
		Если ГруппыВзносовСотрудников.Количество() = 0 Тогда
			КнопкаВпередНажатие(ЭлементыФормы.НадписьВперед);
		КонецЕсли;	
		
	ИначеЕсли ТекущаяСтраница = ЭлементыФормы.ПанельЭтапов.Страницы.ДоговораГПХ Тогда
		
		Если СписокДоговорников.Количество() = 0 Тогда
			
			ЗаполнитьСписокДоговорников();
			
		КонецЕсли;
		
		Если СписокДоговорников.Количество() = 0 Тогда
			КнопкаВпередНажатие(ЭлементыФормы.НадписьВперед);
		КонецЕсли;
		
	ИначеЕсли ТекущаяСтраница = ЭлементыФормы.ПанельЭтапов.Страницы.ПеречислениеНалогов Тогда
		
		Если НастройкаПеречисления.Количество() = 0 Тогда
			
			ЗаполнитьНастройкаПеречисления();
			
		КонецЕсли;
	
		
	КонецЕсли;		
	
	

КонецПроцедуры

Функция ПроверитьВозможностьПереходаНаСледующуюСтраницу()

	ТекущаяСтраница = Элементыформы.ПанельЭтапов.ТекущаяСтраница;
	
	Если ТекущаяСтраница = ЭлементыФормы.ПанельЭтапов.Страницы.Организация Тогда
		Если ЗначениеЗаполнено(Организация) Тогда
			Возврат Истина;
		Иначе
			Предупреждение(НСтр("ru='Необходимо выбрать организацию!';uk='Необхідно вибрати організацію!'"));
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;	
	
	Возврат Истина;

КонецФункции // ПроверитьВозможностьПереходаНаСледующуюСтраницу()

Процедура СоздатьСтруктуруПомощника()

	НомерШага = 1;
	НомерОбласти = 2;
	
	ОбластьТабличногоПоля = СоздатьОбластьТабличногоПоля(ЭлементыФормы.ПолеТабличногоДокумента, НомерОбласти, 1, 10, "Организация");
	НомерОбласти = НомерОбласти +1;
	мСтруктураСтраниц.Вставить("Страница" + НомерШага, ЭлементыФормы.ПанельЭтапов.Страницы.Организация);
	мСтруктураТабличногоПоля.Вставить("Страница" + НомерШага, ОбластьТабличногоПоля);
	НомерШага = НомерШага +1;
	
	ОбластьТабличногоПоля = СоздатьОбластьТабличногоПоля(ЭлементыФормы.ПолеТабличногоДокумента, НомерОбласти, 1, 10, "Ставка ЕСВ с ФОТ");
	НомерОбласти = НомерОбласти +1;
	мСтруктураТабличногоПоля.Вставить("Страница" + НомерШага, ОбластьТабличногоПоля);
	мСтруктураСтраниц.Вставить("Страница" + НомерШага, ЭлементыФормы.ПанельЭтапов.Страницы.СтавкаЕСВ);
	НомерШага = НомерШага +1;
	
	ОбластьТабличногоПоля = СоздатьОбластьТабличногоПоля(ЭлементыФормы.ПолеТабличногоДокумента, НомерОбласти, 1, 10, "ЕСВ сотрудников");
	НомерОбласти = НомерОбласти +1;
	мСтруктураТабличногоПоля.Вставить("Страница" + НомерШага, ОбластьТабличногоПоля);
	мСтруктураСтраниц.Вставить("Страница" + НомерШага, ЭлементыФормы.ПанельЭтапов.Страницы.НаборВзносов);
	НомерШага = НомерШага +1;
	
	ОбластьТабличногоПоля = СоздатьОбластьТабличногоПоля(ЭлементыФормы.ПолеТабличногоДокумента, НомерОбласти, 1, 10, "ЕСВ по договорам ГПХ");
	НомерОбласти = НомерОбласти +1;
	мСтруктураТабличногоПоля.Вставить("Страница" + НомерШага, ОбластьТабличногоПоля);
	мСтруктураСтраниц.Вставить("Страница" + НомерШага, ЭлементыФормы.ПанельЭтапов.Страницы.ДоговораГПХ);
	НомерШага = НомерШага +1;
	
	ОбластьТабличногоПоля = СоздатьОбластьТабличногоПоля(ЭлементыФормы.ПолеТабличногоДокумента, НомерОбласти, 1, 10, "Начисления");
	НомерОбласти = НомерОбласти +1;
	мСтруктураТабличногоПоля.Вставить("Страница" + НомерШага, ОбластьТабличногоПоля);
	мСтруктураСтраниц.Вставить("Страница" + НомерШага, ЭлементыФормы.ПанельЭтапов.Страницы.Начисления);
	НомерШага = НомерШага +1;
	
	ОбластьТабличногоПоля = СоздатьОбластьТабличногоПоля(ЭлементыФормы.ПолеТабличногоДокумента, НомерОбласти, 1, 10, "Отражение ЕСВ с ФОТ");
	НомерОбласти = НомерОбласти +1;
	мСтруктураТабличногоПоля.Вставить("Страница" + НомерШага, ОбластьТабличногоПоля);
	мСтруктураСтраниц.Вставить("Страница" + НомерШага, ЭлементыФормы.ПанельЭтапов.Страницы.Отражение);
	НомерШага = НомерШага +1;
	
	ОбластьТабличногоПоля = СоздатьОбластьТабличногоПоля(ЭлементыФормы.ПолеТабличногоДокумента, НомерОбласти, 1, 10, "Параметры уплаты ЕСВ");
	НомерОбласти = НомерОбласти +1;
	мСтруктураТабличногоПоля.Вставить("Страница" + НомерШага, ОбластьТабличногоПоля);
	мСтруктураСтраниц.Вставить("Страница" + НомерШага, ЭлементыФормы.ПанельЭтапов.Страницы.ПеречислениеНалогов);
	НомерШага = НомерШага +1;
	
	ОбластьТабличногоПоля = СоздатьОбластьТабличногоПоля(ЭлементыФормы.ПолеТабличногоДокумента, НомерОбласти, 1,10, "Готово!");
	мСтруктураТабличногоПоля.Вставить("Страница" + НомерШага, ОбластьТабличногоПоля);
	мСтруктураСтраниц.Вставить("Страница" + НомерШага, ЭлементыФормы.ПанельЭтапов.Страницы.Готово);
	
	мКоличествоСтраниц = НомерШага;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////
//ОБРАБОТКА ОСНОВНЫХ ДЕЙСТВИЙ ФОРМЫ И НАВИГАЦИИ ПО СТРАНИЦАМ
////////////////////////////////////////////////////////////////////////////

Процедура КнопкаНазадНажатие(Элемент)

	Если мНомерТекущейСтраницы = 1 Тогда
		Возврат;
	КонецЕсли;	
	
	мНомерТекущейСтраницы = мНомерТекущейСтраницы - 1;
	
	// установим следующую страницу
	УстановитьСтраницуПомощника(ЭтаФорма, мНомерТекущейСтраницы, Ложь);

КонецПроцедуры

Процедура КнопкаВпередНажатие(Элемент)
	
	// проверим возможность перехода к следующему шагу
	Если Не ПроверитьВозможностьПереходаНаСледующуюСтраницу() Тогда
		// все сообщения выдаем в функции ПроверитьВозможностьПереходаНаСледующуюСтраницу()
		Возврат;
	КонецЕсли;
	
	Если Не ВыполнитьОбработкуПередПереходомНаНовуюСтраницу() Тогда
		Возврат;
	КонецЕсли;	
	
	мНомерТекущейСтраницы = мНомерТекущейСтраницы + 1;
	
	Если мНомерТекущейСтраницы > мКоличествоСтраниц Тогда
		// нажата кнопка Готово
		ВыполнитьОбработку();
	Иначе
		// установим следующую страницу
		УстановитьСтраницуПомощника(ЭтаФорма, мНомерТекущейСтраницы);
		
		// выполним необходимые действия на новой странице после ее установки
		ВыполнитьОбработкуПереходаНаНовуюСтраницу()	
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	мСтруктураПараметрыДоОткрытияФормы.Вставить("Организация", Организация);
	
	СоздатьСтруктуруПомощника();
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	мНомерТекущейСтраницы = 1;
	УстановитьСтраницуПомощника(ЭтаФорма, мНомерТекущейСтраницы);
	Организация = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"),"ОсновнаяОрганизация");
	ЗаполнитьСписокВидовРасчета();
	ЗаполнитьНастройкаОтражений();
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если мЗадатьВопросПриЗакрытии Тогда
		// стартовый помощник закрывается не по кнопке "Готово"
		Ответ  = Вопрос(НСтр("ru='Все данные, введенные в помощнике будут потеряны! Закрыть форму?';uk='Всі дані, введені в помічнику будуть втрачені! Закрити форму?'"), РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////
//ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
////////////////////////////////////////////////////////////////////////////

Процедура ОрганизацияПриИзменении(Элемент)
	
	ГруппыВзносовСотрудников.Очистить();
	СписокДоговорников.Очистить();
	
КонецПроцедуры

Процедура СтавкаЕСВПриИзменении(Элемент)
	
	ЭлементыФормы.СтавкаЕСВЗначение.Доступность = НЕ СтавкаЕСВ;
	
КонецПроцедуры

Процедура СтавкаЕСВЗначениеНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)

	Элемент.СписокВыбора = мНаборСтавок;
	
КонецПроцедуры

Процедура СтавкаЕСВЗначениеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Элемент.Значение = ВыбранноеЗначение;
	
КонецПроцедуры

Процедура ПропуститьСтавкаПриИзменении(Элемент)
	
	Если Элемент.Значение Тогда
		КнопкаВпередНажатие(ЭлементыФормы.НадписьВперед);
	КонецЕсли;	
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
мСозданНовыйПользователь = Ложь;
мЗадатьВопросПриЗакрытии = Истина;

мСтруктураТабличногоПоля = Новый Структура();
мСтруктураСтраниц = Новый Структура();
мСтруктураПараметрыДоОткрытияФормы = Новый Структура();

мНаборСтавок = Новый СписокЗначений;
мНаборСтавок.Добавить(36.76);
мНаборСтавок.Добавить(36.77);
мНаборСтавок.Добавить(36.78);
мНаборСтавок.Добавить(36.79);
мНаборСтавок.Добавить(36.8);
мНаборСтавок.Добавить(36.82);
мНаборСтавок.Добавить(36.83);
мНаборСтавок.Добавить(36.85);
мНаборСтавок.Добавить(36.86);
мНаборСтавок.Добавить(36.88);
мНаборСтавок.Добавить(36.9);
мНаборСтавок.Добавить(36.92);
мНаборСтавок.Добавить(36.93);
мНаборСтавок.Добавить(36.95);
мНаборСтавок.Добавить(37);
мНаборСтавок.Добавить(37.04);
мНаборСтавок.Добавить(37.06);
мНаборСтавок.Добавить(37.13);
мНаборСтавок.Добавить(37.16);
мНаборСтавок.Добавить(37.17);
мНаборСтавок.Добавить(37.18);
мНаборСтавок.Добавить(37.19);
мНаборСтавок.Добавить(37.26);
мНаборСтавок.Добавить(37.3);
мНаборСтавок.Добавить(37.33);
мНаборСтавок.Добавить(37.39);
мНаборСтавок.Добавить(37.45);
мНаборСтавок.Добавить(37.51);
мНаборСтавок.Добавить(37.58);
мНаборСтавок.Добавить(37.6);
мНаборСтавок.Добавить(37.61);
мНаборСтавок.Добавить(37.65);
мНаборСтавок.Добавить(37.66);
мНаборСтавок.Добавить(37.77);
мНаборСтавок.Добавить(37.78);
мНаборСтавок.Добавить(37.86);
мНаборСтавок.Добавить(37.87);
мНаборСтавок.Добавить(37.96);
мНаборСтавок.Добавить(37.97);
мНаборСтавок.Добавить(37.99);
мНаборСтавок.Добавить(38);
мНаборСтавок.Добавить(38.03);
мНаборСтавок.Добавить(38.05);
мНаборСтавок.Добавить(38.1);
мНаборСтавок.Добавить(38.11);
мНаборСтавок.Добавить(38.19);
мНаборСтавок.Добавить(38.24);
мНаборСтавок.Добавить(38.26);
мНаборСтавок.Добавить(38.28);
мНаборСтавок.Добавить(38.45);
мНаборСтавок.Добавить(38.47);
мНаборСтавок.Добавить(38.52);
мНаборСтавок.Добавить(38.54);
мНаборСтавок.Добавить(38.57);
мНаборСтавок.Добавить(38.66);
мНаборСтавок.Добавить(38.74);
мНаборСтавок.Добавить(39.01);
мНаборСтавок.Добавить(39.02);
мНаборСтавок.Добавить(39.1);
мНаборСтавок.Добавить(39.48);
мНаборСтавок.Добавить(39.76);
мНаборСтавок.Добавить(39.9);
мНаборСтавок.Добавить(40.19);
мНаборСтавок.Добавить(40.4);
мНаборСтавок.Добавить(42.61);
мНаборСтавок.Добавить(42.72);
мНаборСтавок.Добавить(49.7);
