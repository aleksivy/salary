
// Процедура - обработчик события ПередОткрытием формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	КлючевыеСловаПериодов = Новый СписокЗначений;
	КлючевыеСловаПериодов.Добавить("Месяц", НСтр("ru='ежемесячно';uk='щомісяця'"));
	КлючевыеСловаПериодов.Добавить("Квартал", НСтр("ru='ежеквартально';uk='щокварталу'"));
	КлючевыеСловаПериодов.Добавить("Полугодие", НСтр("ru='по полугодиям';uk='по півріччях'"));
	КлючевыеСловаПериодов.Добавить("Год", НСтр("ru='ежегодно';uk='щорічно'"));
	
	КромеМесяца = Новый СписокЗначений;
	КромеМесяца.Добавить(1, НСтр("ru='января';uk='січня'"));
	КромеМесяца.Добавить(2, НСтр("ru='февраля';uk='лютого'"));
	КромеМесяца.Добавить(3, НСтр("ru='марта';uk='березня'"));
	КромеМесяца.Добавить(4, НСтр("ru='апреля';uk='квітня'"));
	КромеМесяца.Добавить(5, НСтр("ru='мая';uk='травня'"));
	КромеМесяца.Добавить(6, НСтр("ru='июня';uk='червня'"));
	КромеМесяца.Добавить(7, НСтр("ru='июля';uk='липня'"));
	КромеМесяца.Добавить(8, НСтр("ru='августа';uk='серпня'"));
	КромеМесяца.Добавить(9, НСтр("ru='сентября';uk='вересня'"));
	КромеМесяца.Добавить(10, НСтр("ru='октября';uk='жовтня'"));
	КромеМесяца.Добавить(11, НСтр("ru='ноября';uk='листопада'"));
	КромеМесяца.Добавить(12, НСтр("ru='декабря';uk='грудня'"));
	
	КромеКвартала = Новый СписокЗначений;
	КромеКвартала.Добавить(1, НСтр("ru='1-го квартала';uk='1-го кварталу'"));
	КромеКвартала.Добавить(2, НСтр("ru='2-го квартала';uk='2-го кварталу'"));
	КромеКвартала.Добавить(3, НСтр("ru='3-го квартала';uk='3-го кварталу'"));
	КромеКвартала.Добавить(4, НСтр("ru='4-го квартала';uk='4-го кварталу'"));
	
	КромеПолугодия = Новый СписокЗначений;
	КромеПолугодия.Добавить(1, НСтр("ru='1-го полугодия';uk='1-го півріччя'"));
	КромеПолугодия.Добавить(2, НСтр("ru='2-го полугодия';uk='2-го півріччя'"));
	
	Кроме = Новый Структура("Месяц, Квартал, Полугодие, Год", КромеМесяца, КромеКвартала, КромеПолугодия, Новый СписокЗначений);
	
	ОшибкаПолученияСпискаФорм = Ложь;
	Попытка
		РеглОтчет = РегламентированнаяОтчетность.РеглОтчеты(НачальноеЗначениеВыбора.ИсточникОтчета);
		Попытка
			ФормыОтчета = РеглОтчет.Создать().мТаблицаФормОтчета.Скопировать();
		Исключение
			Попытка
				ФормыОтчета = РеглОтчет.мТаблицаФормОтчета.Скопировать();
			Исключение
				ОшибкаПолученияСпискаФорм = Истина;
			КонецПопытки;
			Если ОшибкаПолученияСпискаФорм Тогда
				ВызватьИсключение Неопределено;
			КонецЕсли;
		КонецПопытки;
		ФормыОтчета.Сортировать("ДатаНачалоДействия");
		ЭлементыФормы.ПанельИнформацияОФормахДоступна.ТекущаяСтраница = ЭлементыФормы.ПанельИнформацияОФормахДоступна.Страницы.СтраницаИнформацияОФормахДоступна;
	Исключение
		ЭлементыФормы.ФормыОтчета.Доступность = Ложь;
		ЭлементыФормы.ПанельИнформацияОФормахДоступна.ТекущаяСтраница = ЭлементыФормы.ПанельИнформацияОФормахДоступна.Страницы.СтраницаИнформацияОФормахНеДоступна;
	КонецПопытки;
	
	Периоды = НачальноеЗначениеВыбора.Периоды.Получить();
	Если Периоды <> Неопределено Тогда
		
		МассивСтрокиПериоды = Новый Массив;
		ИтоговаяСтрока = "";
		Для Каждого Стр Из Периоды Цикл
			Ключ = Стр.Ключ;
			КлючевоеСлово = Неопределено;
			Для Каждого Эл Из КлючевыеСловаПериодов Цикл
				Если Лев(Ключ, СтрДлина(Эл.Значение)) = Эл.Значение И Эл.Пометка <> Истина Тогда
					КлючевоеСлово = Эл.Значение;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если КлючевоеСлово = Неопределено Тогда
				Продолжить;
			Конецесли;
			Эл.Пометка = Истина;
			Значение = Стр.Значение;
			Если Значение.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			СтрокаПериоды = КлючевыеСловаПериодов.НайтиПоЗначению(КлючевоеСлово).Представление;
			ПервыйПериодИсключение = Истина;
			РазрешенныеПериоды = Новый СписокЗначений;
			РазрешенныеПериоды.ЗагрузитьЗначения(Значение);
			Для Каждого Эл Из Кроме[КлючевоеСлово] Цикл
				Если РазрешенныеПериоды.НайтиПоЗначению(Эл.Значение) = Неопределено Тогда
					СтрокаПериоды = СтрокаПериоды + ?(ПервыйПериодИсключение, НСтр("ru=', кроме ';uk=', крім '"), ", ") + Эл.Представление;
					ПервыйПериодИсключение = Ложь;
				КонецЕсли;
			КонецЦикла;
			
			ИтоговаяСтрока = ИтоговаяСтрока + СтрокаПериоды + "; ";
			
		КонецЦикла;
		
		Если ПустаяСтрока(ИтоговаяСтрока) Тогда
			ИтоговаяСтрока = НСтр("ru='Для выбранного вида отчета сведения о возможных периодах представления не определены.';uk='Для обраного виду звіту відомості про можливі періоди подання не визначені.'");
		Иначе
			ИтоговаяСтрока = Лев(ИтоговаяСтрока, СтрДлина(ИтоговаяСтрока) - 2);
			ИтоговаяСтрока = ВРег(Лев(ИтоговаяСтрока, 1)) + Сред(ИтоговаяСтрока, 2) + ".";
		КонецЕсли;
		
	Иначе
		
		ИтоговаяСтрока = НСтр("ru='Для выбранного вида отчета сведения о возможных периодах представления не определены.';uk='Для обраного виду звіту відомості про можливі періоди подання не визначені.'");
		
	КонецЕсли;
	НадписьВозможныеПериоды = ИтоговаяСтрока;
	
КонецПроцедуры

// Процедура - обработчик события ПриПолученииДанных табличного поля ФормыОтчета.
//
Процедура ФормыОтчетаПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		
		Если РегламентированнаяОтчетность.ПустоеЗначение(ОформлениеСтроки.ДанныеСтроки.ДатаКонецДействия) Тогда
			ОформлениеСтроки.Ячейки.ДатаКонецДействия.УстановитьТекст(НСтр("ru='По наст. время';uk='По теп. час'"));
		КонецЕсли;
		
		Если (РабочаяДата > ОформлениеСтроки.ДанныеСтроки.ДатаНачалоДействия ИЛИ РегламентированнаяОтчетность.ПустоеЗначение(ОформлениеСтроки.ДанныеСтроки.ДатаНачалоДействия)) 
			И (РабочаяДата < ОформлениеСтроки.ДанныеСтроки.ДатаКонецДействия ИЛИ РегламентированнаяОтчетность.ПустоеЗначение(ОформлениеСтроки.ДанныеСтроки.ДатаКонецДействия)) Тогда
			
			ОформлениеСтроки.Шрифт = Новый Шрифт(ОформлениеСтроки.Шрифт, , , Истина);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры
