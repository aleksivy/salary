
Процедура КнопкаСформироватьНажатие(Кнопка)
	Для каждого СтрокаТабл Из ТаблицаСотрудников Цикл
		Если СтрокаТабл.Пометка и СтрокаТабл.Письмо.Пустая() Тогда
			ОбластьРЛ = ВладелецФормы.ЭлементыФормы.Результат.ПолучитьОбласть(СтрокаТабл.НачальнаяСтрока, , СтрокаТабл.КонечнаяСтрока, );
			ТабДок = Новый ТабличныйДокумент();
			ТабДок.Вывести(ОбластьРЛ);
			Письмо=СоздатьПисьмо(СтрокаТабл,ТабДок);
			СтрокаТабл.Письмо=Письмо;
		КонецЕсли; 
	КонецЦикла; 
КонецПроцедуры

Процедура ТаблицаСотрудниковВыборЗначения(Элемент, СтандартнаяОбработка, Значение)
КонецПроцедуры

Процедура ПриОткрытии()
	
КонецПроцедуры

Процедура ТаблицаСотрудниковНачальнаяСтрокаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
КонецПроцедуры

Процедура ТаблицаСотрудниковНачальнаяСтрокаНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
КонецПроцедуры

Процедура ТаблицаСотрудниковМесяцГодНачалоВыбора(Элемент, СтандартнаяОбработка)
КонецПроцедуры

Процедура ТаблицаСотрудниковПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если не ДанныеСтроки.Письмо.Пустая() и ДанныеСтроки.Письмо.СтатусПисьма = Перечисления.СтатусыПисем.Отправленное Тогда
		ОформлениеСтроки.ЦветТекста=WebЦвета.ТемноЗеленый;
	ИНачеЕсли не ДанныеСтроки.Письмо.Пустая() и ДанныеСтроки.Письмо.СтатусПисьма <> Перечисления.СтатусыПисем.Отправленное Тогда
		ОформлениеСтроки.ЦветФона=WebЦвета.Бежевый;
	КонецЕсли;
КонецПроцедуры

Процедура ТаблицаСотрудниковПередНачаломДобавления(Элемент, Отказ, Копирование)
	Отказ=Истина;
КонецПроцедуры

Процедура ТаблицаСотрудниковСотрудникПриИзменении(Элемент)
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура ТаблицаСотрудниковСотрудникНачалоВыбора(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура ТаблицаСотрудниковПередНачаломИзменения(Элемент, Отказ)
	ТекСтрока=ЭлементыФормы.ТаблицаСотрудников.ТекущиеДанные;
	Если Элемент.ТекущаяКолонка.Данные="Пометка" 
		или Элемент.ТекущаяКолонка.Данные="Адрес" 
		//и Элемент.ТекущаяКолонка.Данные<>"МесяцГод" 
		или Элемент.ТекущаяКолонка.Данные="Письмо" Тогда
		Отказ=Ложь;
	//КонецЕсли; 
	ИначеЕсли Элемент.ТекущаяКолонка.Данные="МесяцГод" Тогда
		Отказ=Истина;
		ОбластьРЛ = ВладелецФормы.ЭлементыФормы.Результат.ПолучитьОбласть(ТекСтрока.НачальнаяСтрока, , ТекСтрока.КонечнаяСтрока, );
		НовыйТабДок = Новый ТабличныйДокумент();
		НовыйТабДок.Вывести(ОбластьРЛ);
		НовыйТабДок.Показать(ТекСтрока.Сотрудник.Наименование);
	//ИначеЕсли Элемент.ТекущаяКолонка.Данные="Сотрудник" Тогда
	//	Отказ=Истина;
	//	ТекСтрока.Сотрудник.ПолучитьФорму().Открыть();	
	КонецЕсли; 

КонецПроцедуры

Процедура ТаблицаСотрудниковПередУдалением(Элемент, Отказ)
	//Отказ=Истина;
КонецПроцедуры

Процедура ТаблицаСотрудниковАдресНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ТекСтрока=ЭлементыФормы.ТаблицаСотрудников.ТекущиеДанные;
	РегистрСведенийСписок=РегистрыСведений.КонтактнаяИнформация.ПолучитьФормуСписка();
	//РегистрСведенийСписок.Отбор.Объект.ТипЗначения=ТипЗнч("СправочникСсылка.ФизическиеЛица");
	РегистрСведенийСписок.Отбор.Объект.Установить(ТекСтрока.Сотрудник.ФизЛицо);
	РегистрСведенийСписок.Отбор.Тип.Установить(Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	РегистрСведенийСписок.Открыть();
	//Если ПустаяСтрока(ТекСтрока.Адрес) Тогда
	//КонецЕсли; 
	
КонецПроцедуры

Процедура ТаблицаСотрудниковАдресОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ТекСтрока=ЭлементыФормы.ТаблицаСотрудников.ТекущиеДанные;
	ТекСтрока.Адрес=ПолучитьАдресЭлектроннойПочтыИзКонтактнойИнформации(ТекСтрока.Сотрудник.ФизЛицо);
КонецПроцедуры

Процедура КоманднаяПанель1УстановитьФлажки(Кнопка)
	Для каждого СтрокаТабл Из ТаблицаСотрудников Цикл
		СтрокаТабл.Пометка=Истина;
	КонецЦикла;
КонецПроцедуры

Процедура КоманднаяПанель1СнятьФлажки(Кнопка)
	Для каждого СтрокаТабл Из ТаблицаСотрудников Цикл
		СтрокаТабл.Пометка=Ложь;
	КонецЦикла;
КонецПроцедуры

Процедура КоманднаяПанель1ИнвертироватьФлажки(Кнопка)
	Для каждого СтрокаТабл Из ТаблицаСотрудников Цикл
		СтрокаТабл.Пометка=не СтрокаТабл.Пометка;
	КонецЦикла;
КонецПроцедуры

Процедура ОсновныеДействияФормыСформироватьСписокСотрудников(Кнопка)
	ИсточникДоступныхНастроек = Новый ИсточникДоступныхНастроекКомпоновкиДанных(ВладелецФормы.СхемаКомпоновкиДанных);
	Если ВладелецФормы.ДанныеРасшифровки = Неопределено Тогда
		Сообщить("Сначал необходимо сформировать расчетные листки!");
		Возврат;
	Иначе	
		ОбработкаРасшифровки = Новый ОбработкаРасшифровкиКомпоновкиДанных(ВладелецФормы.ДанныеРасшифровки, Новый ИсточникДоступныхНастроекКомпоновкиДанных(ВладелецФормы.СхемаКомпоновкиДанных)); 
	КонецЕсли;	
	СформироватьТаблицуСотрудников(ТабличныйДокумент,ВладелецФормы.ДанныеРасшифровки);
	//ВладелецФормы.ДанныеРасшифровки.Элементы[11].ПолучитьПоля()[0].Значение.Физлицо
КонецПроцедуры


Процедура ОсновныеДействияФормыЧерезSMTP(Кнопка)
	Режим = РежимДиалогаВопрос.ДаНет;
	Ответ = Вопрос("Отправить помеченные письма?", Режим, 0);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
	    Возврат;
	КонецЕсли;
	ЕстьПисьмаДляОтправки=Ложь;
	Письма = Новый Соответствие;
	МассивСтрок = Новый Массив;
	Для каждого СтрокаТабл Из ТаблицаСотрудников Цикл
		Если СтрокаТабл.Пометка и не СтрокаТабл.Письмо.Пустая() и СтрокаТабл.Письмо.СтатусПисьма <> Перечисления.СтатусыПисем.Отправленное Тогда
			//СтрокаТабл.Письмо.ПолучитьОбъект().ОтправитьПисьмо();
			Письма.Вставить(СтрокаТабл.Письмо, СтрокаТабл.Письмо.ПолучитьОбъект());
			МассивСтрок.Добавить(СтрокаТабл);
			Если не ЕстьПисьмаДляОтправки Тогда
				ЕстьПисьмаДляОтправки=Истина;
				УчетныеЗаписи = Новый Массив;
				УчетныеЗаписи.Добавить(СтрокаТабл.Письмо.УчетнаяЗапись);
			КонецЕсли; 
		КонецЕсли; 
	КонецЦикла; 
	Если ЕстьПисьмаДляОтправки Тогда
		УправлениеЭлектроннойПочтой.ПолучениеОтправкаПисем(глЗначениеПеременной("глСоответствиеТекстовЭлектронныхПисем"), глЗначениеПеременной("глТекущийПользователь"), УчетныеЗаписи, Письма, Истина);
		Для каждого СтрокаТабл Из МассивСтрок Цикл
			Если СтрокаТабл.Письмо.СтатусПисьма = Перечисления.СтатусыПисем.Отправленное Тогда
				СтрокаТабл.Пометка=Ложь;
			КонецЕсли; 
		КонецЦикла; 	
	Иначе
		Предупреждение("Нет писем для отправки!");
	КонецЕсли; 
КонецПроцедуры

Функция ПолучитьВложения(Письмо)
	ЗапросПоВложениям = Новый Запрос(
	"ВЫБРАТЬ
	|	ВложенияЭлектронныхПисем.Ссылка,
	|	ВложенияЭлектронныхПисем.ВерсияДанных,
	|	ВложенияЭлектронныхПисем.ПометкаУдаления,
	|	ВложенияЭлектронныхПисем.Предопределенный,
	|	ВложенияЭлектронныхПисем.Наименование,
	|	ВложенияЭлектронныхПисем.Объект,
	|	ВложенияЭлектронныхПисем.ИмяФайла,
	|	ВложенияЭлектронныхПисем.Хранилище,
	|	ВложенияЭлектронныхПисем.ИДФайлаПочтовогоПисьма,
	|	ВложенияЭлектронныхПисем.Предмет,
	|	ВложенияЭлектронныхПисем.ТекстФайла,
	|	ВложенияЭлектронныхПисем.Представление
	|ИЗ
	|	Справочник.ВложенияЭлектронныхПисем КАК ВложенияЭлектронныхПисем
	|ГДЕ
	|	ВложенияЭлектронныхПисем.Объект = &Письмо");
	ЗапросПоВложениям.УстановитьПараметр("Письмо", Письмо);
    Возврат ЗапросПоВложениям.Выполнить().Выбрать();
КонецФункции	

Процедура ОсновныеДействияФормыЧерезLotus(Кнопка)
	Режим = РежимДиалогаВопрос.ДаНет;
	Ответ = Вопрос("Отправить помеченные письма?", Режим, 0);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
	    Возврат;
	КонецЕсли;
	ЕстьПисьмаДляОтправки=Ложь;
	Письма = Новый Соответствие;
	МассивСтрок = Новый Массив;
	
	ИмяВременногоФайлаОбработки = КаталогВременныхФайлов() + "LotusNotes.epf";
	ДвоичныеДанные = ПолучитьМакет("LotusNotes");
	ДвоичныеДанные.Записать(ИмяВременногоФайлаОбработки);
	ПочтаLotus = ВнешниеОбработки.Создать(ИмяВременногоФайлаОбработки);
	ОсновнаяФормаLotus = ПочтаLotus.ПолучитьФорму();
	
	//ПочтаLotus = Обработки.LotusNotes.Создать();
	//ОсновнаяФормаLotus = ПочтаLotus.ПолучитьФорму();
	
	Для каждого СтрокаТабл Из ТаблицаСотрудников Цикл
		Если СтрокаТабл.Пометка и не СтрокаТабл.Письмо.Пустая() и СтрокаТабл.Письмо.СтатусПисьма <> Перечисления.СтатусыПисем.Отправленное Тогда
			//СтрокаТабл.Письмо.ПолучитьОбъект().ОтправитьПисьмо();
			Письма.Вставить(СтрокаТабл.Письмо, СтрокаТабл.Письмо.ПолучитьОбъект());
			МассивСтрок.Добавить(СтрокаТабл);
			Если не ЕстьПисьмаДляОтправки Тогда
				ЕстьПисьмаДляОтправки=Истина;
				УчетныеЗаписи = Новый Массив;
				УчетныеЗаписи.Добавить(СтрокаТабл.Письмо.УчетнаяЗапись);
			КонецЕсли; 
		КонецЕсли; 
	КонецЦикла; 
	Если ЕстьПисьмаДляОтправки Тогда
		//УправлениеЭлектроннойПочтой.ПолучениеОтправкаПисем(глЗначениеПеременной("глСоответствиеТекстовЭлектронныхПисем"), глЗначениеПеременной("глТекущийПользователь"), УчетныеЗаписи, Письма, Истина);
		Для каждого СтрокаТабл Из МассивСтрок Цикл
			
			ПочтаLotus.Subject = СтрокаТабл.Письмо.Тема;
			ПочтаLotus.Text = СтрокаТабл.Письмо.ТекстПисьма;
			ПочтаLotus.Too = СтрокаТабл.Адрес;
			
			Попытка
				Вложения = ПолучитьВложения(СтрокаТабл.Письмо);
				Если Вложения.Следующий() Тогда
  		  	 		ИмяВременногоФайла = КаталогВременныхФайлов() + Вложения.ИмяФайла;
					ДвоичныеДанные = Вложения.Хранилище.Получить();
					ДвоичныеДанные.Записать(ИмяВременногоФайла);
					ПочтаLotus.File = ИмяВременногоФайла;
				КонецЕсли;
			ОсновнаяФормаLotus.Отправить(Неопределено);
			УдалитьФайлы(ИмяВременногоФайла);
			УдалитьФайлы(ИмяВременногоФайлаОбработки);
			Исключение
				УдалитьФайлы(ИмяВременногоФайла);
				УдалитьФайлы(ИмяВременногоФайлаОбработки);
				Сообщить("При попытке отправить письмо произошла ошибка! " + ОписаниеОшибки());
				Продолжить;
			КонецПопытки;	
					
			//СтрокаТабл.Письмо.СтатусПисьма = Перечисления.СтатусыПисем.Отправленное;
			СамоПисьмо = СтрокаТабл.Письмо.ПолучитьОбъект();
			СамоПисьмо.СтатусПисьма = Перечисления.СтатусыПисем.Отправленное; 
			СамоПисьмо.Комментарий = "Отправлено через Lotus";
			СамоПисьмо.ДатаОтправления = ТекущаяДата();
			СамоПисьмо.ДатаТранспорта = ТекущаяДата();
			СамоПисьмо.Записать();
			СтрокаТабл.Пометка=Ложь;
		КонецЦикла; 	
	Иначе
		Предупреждение("Нет писем для отправки!");
	КонецЕсли; 
КонецПроцедуры

