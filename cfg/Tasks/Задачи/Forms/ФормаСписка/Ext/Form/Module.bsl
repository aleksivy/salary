////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем Исполнитель;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Процедура ОбновитьНадписьАктуальности()
	
	ДатаАктуальности = Константы.ДатаАктуальностиЗадач.Получить();
	
	Сегодня				= ТекущаяДата();
	Вчера				= КонецДня(ОбщегоНазначения.ДобавитьИнтервал(Сегодня, Перечисления.Периодичность.День, -1));
	Позавчера			= КонецДня(ОбщегоНазначения.ДобавитьИнтервал(Сегодня, Перечисления.Периодичность.День, -2));
	ДнейНазад3			= КонецДня(ОбщегоНазначения.ДобавитьИнтервал(Сегодня, Перечисления.Периодичность.День, -3));
	ДнейНазад4			= КонецДня(ОбщегоНазначения.ДобавитьИнтервал(Сегодня, Перечисления.Периодичность.День, -4));
	ДнейНазад5			= КонецДня(ОбщегоНазначения.ДобавитьИнтервал(Сегодня, Перечисления.Периодичность.День, -5));
	ДнейНазад6			= КонецДня(ОбщегоНазначения.ДобавитьИнтервал(Сегодня, Перечисления.Периодичность.День, -6));
	НедельНазад1		= КонецДня(ОбщегоНазначения.ДобавитьИнтервал(Сегодня, Перечисления.Периодичность.Неделя, -1));
	НедельНазад2		= КонецДня(ОбщегоНазначения.ДобавитьИнтервал(Сегодня, Перечисления.Периодичность.Неделя, -2));
	НедельНазад3		= КонецДня(ОбщегоНазначения.ДобавитьИнтервал(Сегодня, Перечисления.Периодичность.Неделя, -3));
	МесяцНазад1			= КонецДня(ДобавитьМесяц(Сегодня, -1));
	МесяцНазад2			= КонецДня(ДобавитьМесяц(Сегодня, -2));
	
	Если Не ЗначениеЗаполнено(ДатаАктуальности) Тогда
		Текст = "Задачи не обновлялись";
		
	ИначеЕсли МесяцНазад1 >= ДатаАктуальности И ДатаАктуальности > МесяцНазад2 Тогда
		Текст = "Месяц назад";
		
	ИначеЕсли НедельНазад3 >= ДатаАктуальности И ДатаАктуальности > МесяцНазад1 Тогда
		Текст = "3 недели назад";
		
	ИначеЕсли НедельНазад2 >= ДатаАктуальности И ДатаАктуальности > НедельНазад3 Тогда
		Текст = "2 недели назад";
		
	ИначеЕсли НедельНазад1 >= ДатаАктуальности И ДатаАктуальности > НедельНазад2 Тогда
		Текст = "Неделю назад";
		
	ИначеЕсли ДатаАктуальности <= ДнейНазад6 Тогда
		Текст = ""+Перечисления.ДниНедели[ДеньНедели(ДатаАктуальности)-1]+", " + Формат(ДатаАктуальности, "ДФ='д ММММ'");
		
	ИначеЕсли ДатаАктуальности <= ДнейНазад5 Тогда
		Текст = ""+Перечисления.ДниНедели[ДеньНедели(ДатаАктуальности)-1]+", " + Формат(ДатаАктуальности, "ДФ='д ММММ'");
		
	ИначеЕсли ДатаАктуальности <= ДнейНазад4 Тогда
		Текст = ""+Перечисления.ДниНедели[ДеньНедели(ДатаАктуальности)-1]+", " + Формат(ДатаАктуальности, "ДФ='д ММММ'");
		
	ИначеЕсли ДатаАктуальности <= ДнейНазад3 Тогда
		Текст = ""+Перечисления.ДниНедели[ДеньНедели(ДатаАктуальности)-1]+", " + Формат(ДатаАктуальности, "ДФ='д ММММ'");
		
	ИначеЕсли ДатаАктуальности <= Позавчера Тогда
		Текст = "Позавчера, " + Формат(ДатаАктуальности, "ДФ='д ММММ'");
		
	ИначеЕсли ДатаАктуальности <= Вчера Тогда
		Текст = "Вчера, " + Формат(ДатаАктуальности, "ДФ='д ММММ'");
		
	ИначеЕсли ДатаАктуальности <= Сегодня Тогда
		Текст = "Сегодня,";
		
		РазностьДат = Дата(1, 1, 1) + (Сегодня - ДатаАктуальности);
		Часов	= Час(РазностьДат);
		Минут	= Минута(РазностьДат);
		
		Если РазностьДат < Дата(1, 1, 1, 0, 1, 0) Тогда
			Текст = Текст + " меньше минуты";
			
		Иначе
			Если Часов > 0 Тогда
				Текст = Текст + " " + Часов + ОбщегоНазначения.ФормаМножественногоЧисла(" час", " часа", " часов", Часов);
			КонецЕсли;
			Если Минут > 0 Тогда
				Текст = Текст + " " + Минут + ОбщегоНазначения.ФормаМножественногоЧисла(" минуту", " минуты", " минут", Минут);
			КонецЕсли;
			
		КонецЕсли;
		
		Текст = Текст + " назад";
		
	ИначеЕсли ДатаАктуальности > Сегодня Тогда
		Текст = "В будущем";
		
	Иначе
		Текст = "Совсем давно";
		
	КонецЕсли;
	
	ЭлементыФормы.НадписьДатаВремяАктуальности.Значение = Текст;
	
КонецПроцедуры

Процедура ОбработчикОбновления()
	
	ОбновитьНадписьАктуальности();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()
	
	ЭлементыФормы.ЗадачаСписок.Исполнитель			= Исполнитель;
	ЭлементыФормы.НастройкаСпискаЗадач.Видимость	= ПравоДоступа("Просмотр", Метаданные.РегистрыСведений.РолиИИсполнители);
	
	Если СокрЛП(Исполнитель.Код) = "<Не указан>" Тогда
		ЭлементыФормы.НадписьТекущийПользователь.Заголовок = НСтр("ru='Мои задачи';uk='Мої задачі'");
	Иначе
		ЭлементыФормы.НадписьТекущийПользователь.Заголовок = "Мои задачи (" + Строка(Исполнитель) + ")";
	КонецЕсли;
	
	// Установка отбора по умолчанию
	ЗадачаСписок.Отбор.Выполнена.Использование = Истина;
	ЗадачаСписок.Отбор.Выполнена.ВидСравнения  = ВидСравнения.Равно;
	ЗадачаСписок.Отбор.Выполнена.Значение      = Ложь;
	
	ОбновитьНадписьАктуальности();
	ЭтаФорма.ПодключитьОбработчикОжидания("ОбработчикОбновления", 60);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

Процедура ВыполнитьЗадачу(Кнопка)
	
	ДанныеСтроки = ЭлементыФормы.ЗадачаСписок.ТекущиеДанные;
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УправлениеЗадачами.ВыполнитьВыбраннуюЗадачу(ДанныеСтроки.Ссылка);
	
КонецПроцедуры

Процедура ОткрытьЗадачу(Кнопка)
	
	ДанныеСтроки = ЭлементыФормы.ЗадачаСписок.ТекущиеДанные;
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеСтроки.Ссылка.ПолучитьФорму().Открыть();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура НастройкаСпискаЗадачНажатие(Элемент)
	
	Регистрысведений.РолиИИсполнители.ПолучитьФормуСписка().Открыть();
	
КонецПроцедуры

Процедура НастройкаСпискаЗадач1Нажатие(Элемент)
	
	Справочники.ВидыЗадачПользователей.ПолучитьФормуСписка().Открыть();
	
КонецПроцедуры

Процедура ОбновитьНажатие(Элемент)
	
	УправлениеЗадачами.СформироватьСписокЗадач();
	ЗадачаСписок.Обновить();
	ОбновитьНадписьАктуальности();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ ЗадачаСписок

Процедура ЗадачаСписокВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	УправлениеЗадачами.ВыполнитьВыбраннуюЗадачу(ВыбраннаяСтрока);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

Исполнитель = глЗначениеПеременной("глТекущийПользователь");
