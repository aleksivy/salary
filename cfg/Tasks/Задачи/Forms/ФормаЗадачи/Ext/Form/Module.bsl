////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

// В переменной хранится текст сообщения об ошибке, который показывается,
// если реквизит "объект задачи" не заполнен
Перем мТекстОшибкиНезаполненногоОбъектаЗадачи;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура устанавливает тип реквизита ОбъектЗадачи в зависимости от вида задачи
//
Процедура УстановитьТипОбъектаЗадачи(ПриводитьЗначение)
	
	Если Не ВидЗадачи.Пустая() Тогда
		Если ВидЗадачи = Справочники.ВидыЗадачПользователей.ВозвратНаРаботу Тогда
			ТипОбъектаЗадачи = Новый ОписаниеТипов("СправочникСсылка.СотрудникиОрганизаций");
			
		ИначеЕсли ВидЗадачи = Справочники.ВидыЗадачПользователей.ДеньРождения Тогда
			ТипОбъектаЗадачи = Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица");
			
		ИначеЕсли ВидЗадачи = Справочники.ВидыЗадачПользователей.КадровоеПеремещение Тогда
			ТипОбъектаЗадачи = Новый ОписаниеТипов("СправочникСсылка.СотрудникиОрганизаций");
			
		ИначеЕсли ВидЗадачи = Справочники.ВидыЗадачПользователей.НачислениеПоКадровомуДокументу Тогда
			ТипОбъектаЗадачи = Новый ОписаниеТипов(
				"ДокументСсылка.КомандировкиОрганизаций,
				|ДокументСсылка.ОтсутствиеНаРаботеОрганизаций,
				|ДокументСсылка.ОтпускаОрганизаций");
			
		ИначеЕсли ВидЗадачи = Справочники.ВидыЗадачПользователей.ОценкаИспытательногоСрока Тогда
			ТипОбъектаЗадачи = Новый ОписаниеТипов("СправочникСсылка.СотрудникиОрганизаций");
			
		ИначеЕсли ВидЗадачи = Справочники.ВидыЗадачПользователей.Перезаполнение Тогда
			ТипОбъектаЗадачи = Новый ОписаниеТипов("ДокументСсылка.НачислениеЗарплатыРаботникамОрганизаций");
			
		ИначеЕсли ВидЗадачи = Справочники.ВидыЗадачПользователей.Перерасчет Тогда
			ТипОбъектаЗадачи = Новый ОписаниеТипов(
				ЭлементыФормы.ОбъектЗадачи.ТипЗначения,
				,
				"СправочникСсылка.Организации,
				|СправочникСсылка.СотрудникиОрганизаций,
				|СправочникСсылка.ФизическиеЛица,
				|ДокументСсылка.КомандировкиОрганизаций,
				|ДокументСсылка.ОтсутствиеНаРаботеОрганизаций,
				|ДокументСсылка.ОтпускаОрганизаций");
			
		ИначеЕсли ВидЗадачи = Справочники.ВидыЗадачПользователей.ПриемНаРаботу Тогда
			ТипОбъектаЗадачи = Новый ОписаниеТипов("СправочникСсылка.СотрудникиОрганизаций");
			
		ИначеЕсли ВидЗадачи = Справочники.ВидыЗадачПользователей.ПроизводственныйКалендарь Тогда
			ТипОбъектаЗадачи = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(4, 0, ДопустимыйЗнак.Неотрицательный));
			
		ИначеЕсли ВидЗадачи = Справочники.ВидыЗадачПользователей.РасчетЗарплаты Тогда
			ТипОбъектаЗадачи = Новый ОписаниеТипов("СправочникСсылка.Организации");
			
		ИначеЕсли ВидЗадачи = Справочники.ВидыЗадачПользователей.ОтражениеЗарплатыВУчете Тогда
			ТипОбъектаЗадачи = Новый ОписаниеТипов("СправочникСсылка.Организации");
			
		ИначеЕсли ВидЗадачи = Справочники.ВидыЗадачПользователей.ОшибкиПриемаПоОсновномуМестуРаботы Тогда
			ТипОбъектаЗадачи = Новый ОписаниеТипов("СправочникСсылка.СотрудникиОрганизаций");
			
		ИначеЕсли ВидЗадачи = Справочники.ВидыЗадачПользователей.ОшибкиПриемаПоСовместительству Тогда
			ТипОбъектаЗадачи = Новый ОписаниеТипов("СправочникСсылка.СотрудникиОрганизаций");
			
		Иначе
			   ТипОбъектаЗадачи = Неопределено;
		КонецЕсли;
	Иначе
		ТипОбъектаЗадачи = Неопределено;
		
	КонецЕсли;
	
	Если ТипОбъектаЗадачи <> Неопределено Тогда
		ЭлементыФормы.ОбъектЗадачи.ОграничениеТипа	= ТипОбъектаЗадачи;
		Если ПриводитьЗначение Тогда
			ОбъектЗадачи = ТипОбъектаЗадачи.ПривестиЗначение(ОбъектЗадачи);
		КонецЕсли;
	Иначе
		ЭлементыФормы.ОбъектЗадачи.ОграничениеТипа	= Новый ОписаниеТипов();
		Если ПриводитьЗначение Тогда
			ОбъектЗадачи = Неопределено;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Процедура изменяет параметры элемента управления ОбъектЗадачи в зависимости
// от вида задачи
//
Процедура УточнитьОбъектЗадачиПоВидуЗадачи()
	
	ЭлементыФормы.НадписьОбъектЗадачи.Видимость	= НЕ ВидЗадачи.Пустая();
	ЭлементыФормы.ОбъектЗадачи.Видимость		= НЕ ВидЗадачи.Пустая();
	ЭлементыФормы.ОбъектЗадачи.Доступность		= НЕ ВидЗадачи.Пустая();
	
	ОграничениеТипа = ЭлементыФормы.ОбъектЗадачи.ОграничениеТипа;
	
	Если ОграничениеТипа.Типы().Количество() > 0 Тогда
		Если ТипЗнч(ОбъектЗадачи) = Тип("СправочникСсылка.Организации") Тогда
			ЭлементыФормы.НадписьОбъектЗадачи.Заголовок	= ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Организация:");
			мТекстОшибкиНезаполненногоОбъектаЗадачи = ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Не указана организация!");
			
		ИначеЕсли ТипЗнч(ОбъектЗадачи) = Тип("СправочникСсылка.СотрудникиОрганизаций") Тогда
			ЭлементыФормы.НадписьОбъектЗадачи.Заголовок	= "Сотрудник:";
			мТекстОшибкиНезаполненногоОбъектаЗадачи = "Не указан сотрудник!";
			
		ИначеЕсли ТипЗнч(ОбъектЗадачи) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
			ЭлементыФормы.НадписьОбъектЗадачи.Заголовок	= "Физическое лицо:";
			мТекстОшибкиНезаполненногоОбъектаЗадачи = "Не указано физическое лицо!";
			
		ИначеЕсли ТипЗнч(ОбъектЗадачи) = Тип("Число") Тогда
			ЭлементыФормы.НадписьОбъектЗадачи.Заголовок	= "Год:";
			мТекстОшибкиНезаполненногоОбъектаЗадачи = "Не указан год!";
			
		Иначе
			ЭлементыФормы.НадписьОбъектЗадачи.Заголовок	= "Документ:";
			мТекстОшибкиНезаполненногоОбъектаЗадачи = "Не указан документ!";
			
		КонецЕсли;
		
	Иначе
		ЭлементыФормы.НадписьОбъектЗадачи.Заголовок	= "Объект задачи:";
		мТекстОшибкиНезаполненногоОбъектаЗадачи = "Не указан объект задачи!";
		
	КонецЕсли;
	
КонецПроцедуры

// Определяет флажки-описатели состояния документа, формирует и показывает строку-описание
//
Процедура ОбновитьОписаниеСостоянияДокумента()

	ОписаниеСостоянияОбъекта = ПолучитьОписаниеОбъекта(Исполнитель, Роль, Организация, Выполнена);
	РаботаСДиалогами.ПоказатьИнформациюОДокументе(ЭлементыФормы.НадписьПредупреждение,ЭлементыФормы.ПолеКартинкиПредупреждение, ОписаниеСостоянияОбъекта.ТекстСообщения, ОписаниеСостоянияОбъекта.ВажностьСообщения);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события ПриОткрытии формы
//
Процедура ПриОткрытии()
	
	УстановитьТипОбъектаЗадачи(Ложь);
	УточнитьОбъектЗадачиПоВидуЗадачи();
	
	Если ЭтоНовый() Тогда
		Исполнитель = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"),"ОсновнойОтветственный");
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события ПередЗаписью формы
//
Процедура ПередЗаписью(Отказ)
	
	Если ЗначениеЗаполнено(ВидЗадачи) И Не ЗначениеЗаполнено(ОбъектЗадачи) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(мТекстОшибкиНезаполненногоОбъектаЗадачи);
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события "ОбновлениеОтображения" формы
//
Процедура ОбновлениеОтображения()
	
	ОбновитьОписаниеСостоянияДокумента();
	
КонецПроцедуры // ОбновлениеОтображения()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Событие ПриИзменении у элемента ВидЗадачи
//
Процедура ВидЗадачиПриИзменении(Элемент)
	
	УстановитьТипОбъектаЗадачи(Истина);
	УточнитьОбъектЗадачиПоВидуЗадачи();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
