// Возвращает код языка интерфейса в формате ru/uk
Функция КодЯзыкаИнтерфейса() Экспорт
	
	Возврат ТекущийЯзык().КодЯзыка;
	
КонецФункции // КодЯзыкаИнтерфейса()

//По коду языка возвращает строку параметров прописи из справочника Валюты 
//(ПараметрыПрописиНаРусском или ПараметрыПрописиНаУкраинском).
Функция ПараметрыПрописи(Валюта, КодЯзыка) Экспорт
	
	Рез = ?(КодЯзыка = "uk",Валюта.ПараметрыПрописиНаУкраинском,Валюта.ПараметрыПрописиНаРусском);
	Если Рез = "" Тогда
		ОбщегоНазначения.СообщитьСлужебнуюИнформацию("Для валюты " + Валюта + " не установлены параметры прописи для кода языка " + КодЯзыка);
	КонецЕсли;
	
	Возврат Рез;
	
КонецФункции // ПараметрыПрописи()

// Возвращает код языка информационной базы, который указан 
// в региональных настройках (в конфигураторе)
Функция КодЯзыкаИнформационнойБазы() Экспорт
	
	// любой язык кроме украинского будем считать русским
	КодЛокализацииИБ = КодЛокализации();
	Возврат ?((КодЛокализацииИБ = "uk_UA") или (КодЛокализацииИБ = "uk"),"uk","ru");
	
КонецФункции // КодЯзыкаИнформационнойБазы()

// Функция возвращает имя языка для формирования нерегламентых печатных форм
// документов и некоторых справочников с учетом установленного режима в настройках
// пользователя. По умолчанию это язык информционной базы.
//
// Параметры
//     	РежимПользователя - Установленное значение в настройках пользователя
//
// Возвращаемое значение:
//		Строка   – код языка
//
Функция ПолучитьЯзыкФормированияПечатныхФорм(РежимПользователя = Неопределено) Экспорт

	
	Если РежимПользователя = Перечисления.РежимФормированияПечатныхФорм.НаРусскомЯзыке Тогда
		
		КодЯзыкаПечать = "ru";
		
	ИначеЕсли РежимПользователя = Перечисления.РежимФормированияПечатныхФорм.НаУкраинскомЯзыке Тогда
		
		КодЯзыкаПечать = "uk";
		
	ИначеЕсли РежимПользователя = Перечисления.РежимФормированияПечатныхФорм.НаЯзыкеИнтерфейсаПользователя Тогда		
		
		КодЯзыкаПечать = ЛокализацияПовтИсп.КодЯзыкаИнтерфейса();
		
	Иначе// РежимПользователя = Перечисления.РежимФормированияПечатныхФорм.НаЯзыкеИнформационнойБазы 
		 // или по - умолчанию
		 
		КодЯзыкаПечать = ЛокализацияПовтИсп.КодЯзыкаИнформационнойБазы();
		
	КонецЕсли;

	Возврат КодЯзыкаПечать;
	
КонецФункции // ПолучитьЯзыкФормированияПечатныхФорм()

// Функция возвращает имя языка для формирования печатных форм документов
// с учетом установленного режима в настройках текущего пользователя. 
// По умолчанию - это язык информационной базы.
//
// Возвращаемое значение:
//		Строка   – код языка
//
Функция ПолучитьЯзыкФормированияПечатныхФормДокументов() Экспорт

	РежимФормированияПечатныхФормДокументов = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "РежимФормированияПечатныхФорм");
	
	Если РежимФормированияПечатныхФормДокументов = Перечисления.РежимФормированияПечатныхФорм.НаРусскомЯзыке Тогда
		
		КодЯзыкаПечать = "ru";
		
	ИначеЕсли РежимФормированияПечатныхФормДокументов = Перечисления.РежимФормированияПечатныхФорм.НаУкраинскомЯзыке Тогда
		
		КодЯзыкаПечать = "uk";
		
	ИначеЕсли РежимФормированияПечатныхФормДокументов = Перечисления.РежимФормированияПечатныхФорм.НаЯзыкеИнтерфейсаПользователя Тогда		
		
		КодЯзыкаПечать = ЛокализацияПовтИсп.КодЯзыкаИнтерфейса();
		
	Иначе // РежимПользователя = Перечисления.РежимФормированияПечатныхФорм.НаЯзыкеИнформационнойБазы 
		  // или по умолчанию
		 
		КодЯзыкаПечать = ЛокализацияПовтИсп.КодЯзыкаИнформационнойБазы();
		
	КонецЕсли;

	Возврат КодЯзыкаПечать;
	
КонецФункции // ПолучитьЯзыкФормированияПечатныхФормДокументов()

// Функция возвращает имя языка для формирования печатных форм отчетов
// с учетом установленного режима в настройках текущего пользователя. 
// По умолчанию - это язык информационной базы.
//
// Возвращаемое значение:
//		Строка   – код языка
//
Функция ПолучитьЯзыкФормированияПечатныхФормОтчетов() Экспорт

	РежимФормированияПечатныхФормОтчетов = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "РежимФормированияПечатныхФорм");
	
	Если РежимФормированияПечатныхФормОтчетов = Перечисления.РежимФормированияПечатныхФорм.НаРусскомЯзыке Тогда
		
		КодЯзыкаПечать = "ru";
		
	ИначеЕсли РежимФормированияПечатныхФормОтчетов = Перечисления.РежимФормированияПечатныхФорм.НаУкраинскомЯзыке Тогда
		
		КодЯзыкаПечать = "uk";
		
	ИначеЕсли РежимФормированияПечатныхФормОтчетов = Перечисления.РежимФормированияПечатныхФорм.НаЯзыкеИнтерфейсаПользователя Тогда		
		
		КодЯзыкаПечать = ЛокализацияПовтИсп.КодЯзыкаИнтерфейса();
		
	Иначе // РежимПользователя = Перечисления.РежимФормированияПечатныхФорм.НаЯзыкеИнформационнойБазы 
		  // или по умолчанию
		 
		КодЯзыкаПечать = ЛокализацияПовтИсп.КодЯзыкаИнформационнойБазы();
		
	КонецЕсли;

	Возврат КодЯзыкаПечать;
	
КонецФункции // ПолучитьЯзыкФормированияПечатныхФормОтчетов()

//Преобразует код языка в формат понятный системной фунции Формат()
// Параметры
//  КодЯзыка  	 – Строка – код языка в формате uk/ru
//
// Возвращаемое значение:
//   Строка   	 – код языка в формате ru_RU/uk_UA
//
Функция ОпределитьКодЯзыкаДляФормат(КодЯзыка) Экспорт
	
	Возврат ?(КодЯзыка = "uk","uk_UA","ru_RU");
	
КонецФункции // ОпределитьКодЯзыкаДляФормат()

Функция ОбработатьПереводы(ПолноеИмяОбъектаМетаданных, ИмяДляПеревода, КодЯзыка) Экспорт
	
		Если ПолноеИмяОбъектаМетаданных = "Документ.ПлатежноеПоручениеВходящее" Тогда 
			Возврат НСтр("ru='Платежное поручение входящее';uk='Платіжне доручення вхідне'" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.ПлатежноеПоручениеИсходящее" Тогда 
			Возврат НСтр("ru='Платежное поручение исходящее';uk='Платіжне доручення вихідне'" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.ПлатежныйОрдерПоступлениеДенежныхСредств" Тогда 
			Возврат НСтр("ru='Платежный ордер, поступление денежных средств';uk='Платіжний ордер, надходження коштів'" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.ПлатежныйОрдерСписаниеДенежныхСредств" Тогда 
			Возврат НСтр("ru='Платежный ордер, списание денежных средств';uk='Платіжний ордер, списання коштів'" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.ПриходныйКассовыйОрдер" Тогда 
			Возврат НСтр("ru='Приходный кассовый ордер';uk='Прибутковий касовий ордер'" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.РасходныйКассовыйОрдер" Тогда 
			Возврат НСтр("ru='Расходный кассовый ордер';uk='Видатковий касовий ордер'" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.ПриемНаРаботуВОрганизацию" Тогда 
			Возврат НСтр("ru='Прием на работу в организацию';uk='Прийом на роботу в організацію '" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.КадровоеПеремещениеОрганизаций" Тогда 
			Возврат НСтр("ru='Кадровое перемещение организаций';uk='Кадрове переміщення організацій'" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.КомандировкиОрганизаций" Тогда 
			Возврат НСтр("ru='Командировки организаций';uk='Відрядження організацій'" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.УвольнениеИзОрганизаций" Тогда 
			Возврат НСтр("ru='Увольнение из организации';uk='Звільнення з організації'" ,КодЯзыка);
		КонецЕсли;	

		Если ПолноеИмяОбъектаМетаданных = "Перечисление.ПолФизическихЛиц" Тогда 
			Если ИмяДляПеревода = "Женский" Тогда 
				Возврат НСтр("ru='Женский';uk='Жіноча'" ,КодЯзыка);			
			ИначеЕсли ИмяДляПеревода = "Мужской" Тогда 
				Возврат НСтр("ru='Мужской';uk='Чоловіча'" ,КодЯзыка);			
			КонецЕсли;
			
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Перечисление.ХарактерВыплатыПоДоговору" Тогда 
			Если ИмяДляПеревода = "ОднократноВКонцеСрока" Тогда 
				Возврат НСтр("ru='Однократно в конце срока';uk='Однократно наприкінці  строку'" ,КодЯзыка);			
			ИначеЕсли ИмяДляПеревода = "Ежемесячно" Тогда 
				Возврат НСтр("ru='Ежемесячно';uk='Щомісяця'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "ПоСдельномуНаряду" Тогда 
				Возврат НСтр("ru='По сдельному наряду';uk='По відрядному наряду'" ,КодЯзыка);	
			КонецЕсли;
			
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Перечисление.ГруппыВоинскогоУчета" Тогда 
			Если ИмяДляПеревода = "НВО" Тогда 
				Возврат НСтр("ru='НВО';uk='НПО'" ,КодЯзыка);			
			ИначеЕсли ИмяДляПеревода = "ВМС" Тогда 
				Возврат НСтр("ru='ВМС';uk='ВМС'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "МВД" Тогда 
				Возврат НСтр("ru='МВД';uk='МВС'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "СБУ" Тогда 
				Возврат НСтр("ru='СБУ';uk='СБУ'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "ГПС" Тогда 
				Возврат НСтр("ru='ГПС';uk='ГПС'" ,КодЯзыка);			
			КонецЕсли;		
			
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Перечисление.ГодностьКВоеннойСлужбе" Тогда 
			Если ИмяДляПеревода = "Годен" Тогда 
				Возврат НСтр("ru='Годен к военной службе';uk='Придатний до військової служби'" ,КодЯзыка);			
			ИначеЕсли ИмяДляПеревода = "НеГоден" Тогда 
				Возврат НСтр("ru='Не годен к военной службе';uk='Не придатний до військової служби'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "ГоденКНестроевой" Тогда 
				Возврат НСтр("ru='Негоден в мирное время, ограниченно годен в военное время';uk='Непридатний у мирний час, обмежено придатний у воєнний час'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "ВременноНегоден" Тогда 
				Возврат НСтр("ru='Временно негоден';uk='Тимчасово непридатний'" ,КодЯзыка);
			КонецЕсли;
			
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Перечисление.КатегорииВоинскогоУчета" Тогда 
			Если ИмяДляПеревода = "Первая" Тогда 
				Возврат НСтр("ru='Первая(ый)';uk='Перша(ий)'" ,КодЯзыка);			
			ИначеЕсли ИмяДляПеревода = "Вторая" Тогда 
				Возврат НСтр("ru='Вторая(ой)';uk='Друга(ий)'" ,КодЯзыка);
			КонецЕсли;
			
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Перечисление.СоставыВоеннослужащих" Тогда 
			Если ИмяДляПеревода = "Рядовой" Тогда 
				Возврат НСтр("ru='Рядовой';uk='Рядовий'" ,КодЯзыка);			
			ИначеЕсли ИмяДляПеревода = "СержантскийИСтаршинский" Тогда 
				Возврат НСтр("ru='Сержантский и старшинский';uk='Сержантський і старшинський'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "ПрапорщиковИМичманов" Тогда 
				Возврат НСтр("ru='Прапорщиков и мичманов';uk='Прапорщиків та мічманів'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "МладшиеОфицеры" Тогда 
				Возврат НСтр("ru='Младшие офицеры';uk='Молодші офіцери'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "СтаршиеОфицеры" Тогда 
				Возврат НСтр("ru='Старшие офицеры';uk='Старші офіцери'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "ВысшиеОфицеры" Тогда 
				Возврат НСтр("ru='Высшие офицеры';uk='Вищі офіцери'" ,КодЯзыка);		
			КонецЕсли;
			
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Перечисление.ПрофилиОфицеров" Тогда 
			Если ИмяДляПеревода = "Командный" Тогда 
				Возврат НСтр("ru='Командный';uk='Командний'" ,КодЯзыка);			
			ИначеЕсли ИмяДляПеревода = "Инженерный" Тогда 
				Возврат НСтр("ru='Инженерный';uk='Інженерний'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "Технический" Тогда 
				Возврат НСтр("ru='Технический';uk='Технічний'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "Юридический" Тогда 
				Возврат НСтр("ru='Юридический';uk='Юридичний'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "Медицинский" Тогда 
				Возврат НСтр("ru='Медицинский';uk='Медичний'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "Ветеринарный" Тогда 
				Возврат НСтр("ru='Ветеринарный';uk='Ветеринарний'" ,КодЯзыка);		
			КонецЕсли;		
			
 		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Перечисление.СпособыРасчетаОплатыТруда" Тогда 
			Если ИмяДляПеревода = "АлиментыПроцентом" Тогда 
				Возврат НСтр("ru='Алименты процентом';uk='Аліменти відсотком'" ,КодЯзыка);			
			ИначеЕсли ИмяДляПеревода = "АлиментыПроцентомДоПредела" Тогда 
				Возврат НСтр("ru='Алименты процентом до предела';uk='Аліменти відсотком до межі'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "АлиментыФиксСуммой" Тогда 
				Возврат НСтр("ru='Алименты фиксированной суммой';uk='Аліменти фіксованою сумою'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "АлиментыФиксСуммойДоПредела" Тогда 
				Возврат НСтр("ru='Алименты фиксированной суммой до предела';uk='Аліменти фіксованою сумою до межі'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "Взносы" Тогда 
				Возврат НСтр("ru='Взносы';uk='Внески'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "Взносы" Тогда 
				Возврат НСтр("ru='Взносы';uk='Внески'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "ВзносыФОТ" Тогда 
				Возврат НСтр("ru='Взносы ФОТ';uk='Внески ФОП'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "ВыслугаЛет" Тогда 
				Возврат НСтр("ru='Выслуга лет';uk='Вислуга років'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "ГосударственноеПособие" Тогда 
				Возврат НСтр("ru='Государственное пособие';uk='Державна допомога'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "ДоплатаДоСреднегоЗаработка" Тогда 
				Возврат НСтр("ru='Доплата до среднего заработка';uk='Доплата до середнього заробітку'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "ДоплатаЗаВечерниеЧасы" Тогда 
				Возврат НСтр("ru='Доплата за вечерние часы';uk='Доплата за вечірні години'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "ДоплатаЗаНочныеЧасы" Тогда 
				Возврат НСтр("ru='Доплата за ночные часы';uk='Доплата за нічні години'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "Замена" Тогда 
				Возврат НСтр("ru='Замена';uk='Заміна'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "ИндексацияЗарплаты" Тогда 
				Возврат НСтр("ru='Индексация зарплаты';uk='Індексація зарплати'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "ИндексацияСоциальныхНачислений" Тогда 
				Возврат НСтр("ru='Индексация социальных начислений';uk='Індексація соціальних нарахувань'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "ИсполнителныйЛистСУчетомОграничения" Тогда 
				Возврат НСтр("ru='Исполнителный лист с учетом ограничения';uk='Виконавчий аркуш із урахуванням обмеження'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "ИсполнительныйЛистПроцентом" Тогда 
				Возврат НСтр("ru='Исполнительный лист процентом';uk='Виконавчий лист відсотком'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "ИсполнительныйЛистПроцентомДоПредела" Тогда 
				Возврат НСтр("ru='Исполнительный лист процентом до предела';uk='Виконавчий лист відсотком до межі'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "ИсполнительныйЛистФиксСуммой" Тогда 
				Возврат НСтр("ru='Исполнительный лист фиксированной суммой';uk='Виконавчий лист фіксованою сумою'" ,КодЯзыка);	
			ИначеЕсли ИмяДляПеревода = "ИсполнительныйЛистФиксСуммойДоПредела" Тогда 
				Возврат НСтр("ru='Исполнительный лист фиксированной суммой до предела';uk='Виконавчий лист фіксованою сумою до межі'" ,КодЯзыка);		
			ИначеЕсли ИмяДляПеревода = "КомпенсацияНевыплаченнойЗарплаты" Тогда 
				Возврат НСтр("ru='Компенсация невыплаченной зарплаты';uk='Компенсація невиплаченої зарплати'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "НулеваяСумма" Тогда 
				Возврат НСтр("ru='Нулевая сумма';uk='Нульова сума'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "ПоДневнойТарифнойСтавке" Тогда 
				Возврат НСтр("ru='По дневной тарифной ставке';uk='По денній тарифній ставці'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "ПоМесячнойТарифнойСтавкеПоДням" Тогда 
				Возврат НСтр("ru='По месячной тарифной ставке';uk='По місячній тарифній ставці'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "ПоМесячнойТарифнойСтавкеПоЧасам" Тогда 
				Возврат НСтр("ru='По месячной тарифной ставке по часам';uk='По місячній тарифній ставці по годинах'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "ПоСреднемуЗаработку" Тогда 
				Возврат НСтр("ru='По среднему заработку';uk='По середньому заробіткові'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "ПоСреднемуЗаработкуДляОтпуска" Тогда 
				Возврат НСтр("ru='По среднему заработку для отпуска';uk='По середньому заробіткові для відпустки'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "ПоСреднемуЗаработкуФСС" Тогда 
				Возврат НСтр("ru='По среднему заработку ФСС';uk='По середньому заробіткові ФСС'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "ПоЧасовойТарифнойСтавке" Тогда 
				Возврат НСтр("ru='По часовой тарифной ставке';uk='По годинній тарифній ставці'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "ПоЧасовойТарифнойСтавкеУмножитьНаПроцент" Тогда 
				Возврат НСтр("ru='По часовой тарифной ставке умножить на процент';uk='По годинній тарифній ставці помножити на відсоток'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "ПочтовыйСбор" Тогда 
				Возврат НСтр("ru='Почтовый сбор';uk='Поштовий збір'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "Процентом" Тогда 
				Возврат НСтр("ru='Процентом';uk='Відсотком'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "СдельныйЗаработок" Тогда 
				Возврат НСтр("ru='Сдельный заработок';uk='Відрядний заробіток'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "ФиксированнойСуммой" Тогда 
				Возврат НСтр("ru='Фиксированной суммой';uk='Фіксованою сумою'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "ВыходноеПособие" Тогда 
				Возврат НСтр("ru='Выходное пособие';uk='Вихідна допомога'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "ПоСреднемуЗаработкуКомпенсацияОтпуска" Тогда 
				Возврат НСтр("ru='По среднему заработку (компенсация отпуска)';uk='За середнім заробітком (компенсація відпустки)'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "ПоСреднемуЗаработкуВозвратОтпуска" Тогда 
				Возврат НСтр("ru='По среднему заработку (возврат отпуска)';uk='За середнім заробітком (повернення відпустки)'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "ПоДоговоруФиксированнойСуммой" Тогда 
				Возврат НСтр("ru='По договору фиксированной суммой';uk='За договором  фіксованою сумою'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "ПроизвольнаяФормула" Тогда 
				Возврат НСтр("ru='Произвольная формула';uk='Довільна формула'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "ДоначислениеОтОбратного" Тогда 
				Возврат НСтр("ru='Доначисление от обратного';uk='Донарахування від зворотного'" ,КодЯзыка);
			КонецЕсли;			
			
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Перечисление.СостоянияРаботникаОрганизации" Тогда 
			Если ИмяДляПеревода = "Работает" Тогда 	
			    Возврат НСтр("ru='Работает';uk='Працює'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "НеРаботает" Тогда 	
			    Возврат НСтр("ru='Уволен';uk='Звільнений'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "Заболевание" Тогда 	
			    Возврат НСтр("ru='Болеет';uk='Хворіє'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "Командировка" Тогда 	
			    Возврат НСтр("ru='В командировке';uk='У відрядженні'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "ОтпускЕжегодный" Тогда 	
			    Возврат НСтр("ru='В ежегодном отпуске';uk='У щорічній відпустці'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "ОтпускУчебный" Тогда 	
			    Возврат НСтр("ru='Отпуск учебный';uk='Відпустка навчальна'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "ОтпускБезСохраненияЗарплаты" Тогда 	
			    Возврат НСтр("ru='Отпуск без сохранения зарплаты';uk='Відпустка без збереження зарплати'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "ОтпускПоУходуЗаРебенком" Тогда 	
			    Возврат НСтр("ru='Отпуск по уходу за ребенком';uk='Відпустка по догляду за дитиною'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "ОтсутствуетПоНевыясненнойПричине" Тогда 	
			    Возврат НСтр("ru='Отсутствует по невыясненной причине';uk=""Відсутній по нез'ясованій причині""" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "ОтпускУчебныйНеоплачиваемый" Тогда 	
			    Возврат НСтр("ru='Отпуск учебный неоплачиваемый';uk='Відпустка навчальна неоплачувану'" ,КодЯзыка);	
			ИначеЕсли ИмяДляПеревода = "ВынужденныйПрогул" Тогда 	
			    Возврат НСтр("ru='Время вынужденного прогула';uk='Час вимушеного прогулу'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "ГосударственныеОбязанности" Тогда 	
			    Возврат НСтр("ru='Время исполнения государственных или общественных обязанностей';uk=""Час виконання державних або громадських обов'язків""" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "Прогулы" Тогда 	
			    Возврат НСтр("ru='Прогулы';uk='Прогули'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "ДополнительныеВыходныеДниОплачиваемые" Тогда 	
			    Возврат НСтр("ru='Дополнительные выходные дни (оплачиваемые)';uk='Додаткові вихідні дні (що оплачуються)'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "Простой" Тогда 	
			    Возврат НСтр("ru='Простой';uk='Простий'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "ОтпускПоБеременностиИРодам" Тогда 	
			    Возврат НСтр("ru='Отпуск по беременности и родам';uk=""Відпустка у зв'язку з вагітністю та пологами""" ,КодЯзыка);	
			КонецЕсли;
			
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Перечисление.СостоянияРаботника" Тогда 
			Если ИмяДляПеревода = "Работает" Тогда 	
			    Возврат НСтр("ru='Работает';uk='Працює'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "НеРаботает" Тогда 	
			    Возврат НСтр("ru='Уволен';uk='Звільнений'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "Заболевание" Тогда 	
			    Возврат НСтр("ru='Болеет';uk='Хворіє'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "Командировка" Тогда 	
			    Возврат НСтр("ru='В командировке';uk='У відрядженні'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "ОтпускПрочий" Тогда 	
			    Возврат НСтр("ru='Отпуск прочий';uk='Відпустка інша'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "ОтпускУчебный" Тогда 	
			    Возврат НСтр("ru='Отпуск учебный';uk='Відпустка навчальна'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "ОтсутствуетПоНевыясненнойПричине" Тогда 	
			    Возврат НСтр("ru='Отсутствует по невыясненной причине';uk=""Відсутній по нез'ясованій причині""" ,КодЯзыка);
			КонецЕсли;
			
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Перечисление.ВидыЗанятостиВОрганизации" Тогда 
			Если ИмяДляПеревода = "ОсновноеМестоРаботы" Тогда 	
			    Возврат НСтр("ru='Основное место работы';uk='Основне місце роботи'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "Совместительство" Тогда 	
			    Возврат НСтр("ru='Внешнее совместительство';uk='Зовнішнє сумісництво'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "ВнутреннееСовместительство" Тогда 	
			    Возврат НСтр("ru='Внутреннее совместительство';uk='Внутрішнє сумісництво'" ,КодЯзыка);
			КонецЕсли;	
			
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Перечисление.ВидыТарифныхСтавок" Тогда 
			Если ИмяДляПеревода = "Месячная" Тогда 
				Возврат НСтр("ru='Месячная';uk='Місячна'" ,КодЯзыка);			
			ИначеЕсли ИмяДляПеревода = "Дневная" Тогда 
				Возврат НСтр("ru='Дневная';uk='Денна'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "Часовая" Тогда 
				Возврат НСтр("ru='Часовая';uk='Годинна'" ,КодЯзыка);	
			КонецЕсли;
			
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Перечисление.ГруппыИнвалидности" Тогда 
			Если ИмяДляПеревода = "ПерваяГруппа" Тогда 
				Возврат НСтр("ru='Первая (I)';uk='Перша (І)'" ,КодЯзыка);			
			ИначеЕсли ИмяДляПеревода = "ВтораяГруппа" Тогда 
				Возврат НСтр("ru='Вторая (II)';uk='Друга (ІІ)'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "ТретьяГруппа" Тогда 
				Возврат НСтр("ru='Третья (III)';uk='Третя (ІІІ)'" ,КодЯзыка);	
			КонецЕсли;
			
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Перечисление.ИспытательныйСрок" Тогда 
			Если ИмяДляПеревода = "СИспытательнымСроком" Тогда 
				Возврат НСтр("ru='С испытательным сроком (I)';uk='З випробувальним строком (I)'" ,КодЯзыка);			
			ИначеЕсли ИмяДляПеревода = "БезИспытательногоСрока" Тогда 
				Возврат НСтр("ru='Без испытательного срока';uk='Без випробувального строку'" ,КодЯзыка);
			КонецЕсли;			
			
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Перечисление.РезультатыИспытательногоСрока" Тогда 
			Если ИмяДляПеревода = "Положительный" Тогда 
				Возврат НСтр("ru='Положительный';uk='Позитивний'" ,КодЯзыка);			
			ИначеЕсли ИмяДляПеревода = "Отрицательный" Тогда 
				Возврат НСтр("ru='Отрицательный';uk='Негативний'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "Продлен" Тогда 
				Возврат НСтр("ru='Продлен';uk='Продовжено'" ,КодЯзыка);	
			КонецЕсли;
			
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Перечисление.ФормыОбучения" Тогда 
			Если ИмяДляПеревода = "Очная" Тогда 
				Возврат НСтр("ru='Очная';uk='Очна'" ,КодЯзыка);			
			ИначеЕсли ИмяДляПеревода = "Заочная" Тогда 
				Возврат НСтр("ru='Заочная';uk='Заочна'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "Вечерняя" Тогда 
				Возврат НСтр("ru='Вечерняя';uk='Вечірня'" ,КодЯзыка);	
			ИначеЕсли ИмяДляПеревода = "Экстернат" Тогда 
				Возврат НСтр("ru='Экстернат';uk='Екстернат'" ,КодЯзыка);		
			ИначеЕсли ИмяДляПеревода = "Прочее" Тогда 
				Возврат НСтр("ru='Прочее';uk='Інше'" ,КодЯзыка);			
			КонецЕсли;	
			
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Перечисление.ВидыОперацийОтпускаОрганизаций" Тогда 
			Если ИмяДляПеревода = "Отпуск" Тогда 
				Возврат НСтр("ru='Отпуск';uk='Відпустка'" ,КодЯзыка);			
			ИначеЕсли ИмяДляПеревода = "КомпенсацияОтпуска" Тогда 
				Возврат НСтр("ru='Компенсация отпуска';uk='Компенсація відпустки'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "КорректировкаОтпуска" Тогда 
				Возврат НСтр("ru='Корректировка отпуска';uk='Коригування відпустки'" ,КодЯзыка);	
			КонецЕсли;		
			
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Перечисление.ВидыОперацийПКО" Тогда 
			Если ИмяДляПеревода = "РасчетыПоКредитамИЗаймамСРаботниками" Тогда 
				Возврат НСтр("ru='Расчеты по кредитам и займам с работниками';uk='Розрахунки за кредитами і позиками з працівниками'" ,КодЯзыка);			
			ИначеЕсли ИмяДляПеревода = "ВозвратДенежныхСредствРаботником" Тогда 
				Возврат НСтр("ru='Возврат денежных средств работником';uk='Повернення грошових коштів працівником'" ,КодЯзыка);
			КонецЕсли;
			
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Перечисление.ВидыОперацийПлатежныйОрдерСписание" Тогда 
			Если ИмяДляПеревода = "ПеречислениеНалога" Тогда 
				Возврат НСтр("ru='Перечисление налога';uk='Перерахування податку'" ,КодЯзыка);			
			ИначеЕсли ИмяДляПеревода = "ПеречислениеЗаработнойПлаты" Тогда 
				Возврат НСтр("ru='Перечисление заработной платы';uk='Перерахування заробітної плати'" ,КодЯзыка);
			КонецЕсли;
			
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Перечисление.ВидыОперацийППВходящее" Тогда 
			Если ИмяДляПеревода = "ПоступлениеСредствОтФСС" Тогда 
				Возврат НСтр("ru='Поступление средств от ФСС';uk='Надходження коштів від ФСС'" ,КодЯзыка);			
			КонецЕсли;	
			
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Перечисление.ВидыОперацийППИсходящее" Тогда 
			Если ИмяДляПеревода = "ПеречислениеНалога" Тогда 
				Возврат НСтр("ru='Перечисление налога';uk='Перерахування податку'" ,КодЯзыка);			
			ИначеЕсли ИмяДляПеревода = "ПеречислениеЗП" Тогда 
				Возврат НСтр("ru='Перечисление заработной платы';uk='Перерахування заробітної плати'" ,КодЯзыка);
			КонецЕсли;
			
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Перечисление.ВидыОперацийРКО" Тогда 
			Если ИмяДляПеревода = "ВыплатаЗаработнойПлаты" Тогда 
				Возврат НСтр("ru='Выплата заработной платы';uk='Виплата заробітної плати'" ,КодЯзыка);			
			ИначеЕсли ИмяДляПеревода = "ВыплатаЗаработнойПлатыРаботнику" Тогда 
				Возврат НСтр("ru='Выплата заработной платы работнику';uk='Виплата заробітної плати працівнику'" ,КодЯзыка);
			КонецЕсли;	
			
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Перечисление.Периодичность" Тогда 
			Если ИмяДляПеревода = "День" Тогда 	
			    Возврат НСтр("ru='День';uk='День'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "Неделя" Тогда 	
			    Возврат НСтр("ru='Неделя';uk='Тиждень'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "Месяц" Тогда 	
			    Возврат НСтр("ru='Месяц';uk='Місяць'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "Квартал" Тогда 	
			    Возврат НСтр("ru='Квартал';uk='Квартал'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "Год" Тогда 	
			    Возврат НСтр("ru='Год';uk='Рік'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "Декада" Тогда 	
			    Возврат НСтр("ru='Декада';uk='Декада'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "Полугодие" Тогда 	
			    Возврат НСтр("ru='Полугодие';uk='Півріччя'" ,КодЯзыка);
			КонецЕсли;
			
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Перечисление.ПричиныИзмененияСостояния" Тогда 
			Если ИмяДляПеревода = "ПриемНаРаботу" Тогда 	
			    Возврат НСтр("ru='Прием на работу';uk='Прийом на роботу'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "Перемещение" Тогда 	
			    Возврат НСтр("ru='Перемещение';uk='Переміщення'" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "Увольнение" Тогда 	
			    Возврат НСтр("ru='Увольнение';uk='Звільнення'" ,КодЯзыка);
			КонецЕсли;
	
	
			
		КонецЕсли;
		
		Возврат "";

КонецФункции //ОбработатьПереводы()


Процедура РазделитьСлово(СловоДляПеревода, Слово, Префикс, Суффикс, КодЯзыкаРезультат, КодЯзыкаИсточник)

	Префикс = "";
	Суффикс = "";
	
	// обработаем пробелы в конце
	Слово = СокрП(СловоДляПеревода);
	Если СтрДлина(Слово) <> СтрДлина(СловоДляПеревода) Тогда
		Суффикс = Сред(СловоДляПеревода, СтрДлина(Слово) + 1) + Суффикс;
	КонецЕсли;	
	
	// обработаем : в конце
	Если Прав(Слово, 1) = ":" Тогда
		Суффикс = ":" + Суффикс;
		Слово = Лев(Слово, СтрДлина(Слово) - 1);
	КонецЕсли; 
	
	СтрокаКатегории = НСтр("ru=' (категории)';uk=' (категорії)'", КодЯзыкаИсточник);
	Если Прав(Слово, СтрДлина(СтрокаКатегории)) = СтрокаКатегории Тогда
		Суффикс = НСтр("ru=' (категории)';uk=' (категорії)'", КодЯзыкаРезультат) + Суффикс;
		Слово   = Лев(Слово, СтрДлина(Слово) - СтрДлина(СтрокаКатегории));
	КонецЕсли; 
	
	СтрокаКатегория = НСтр("ru='(категория ';uk='(категорія '", КодЯзыкаИсточник);
	ПозКатегория = Найти(Слово, СтрокаКатегория);
	Если ПозКатегория <> 0 Тогда
		Префикс = Лев(Слово, ПозКатегория - 1);
		Префикс = Префикс + НСтр("ru='(категория ';uk='(категорія '", КодЯзыкаРезультат);
		Слово   = Сред(Слово, ПозКатегория + СтрДлина(СтрокаКатегория));
		Слово   = Сред(Слово, 1, СтрДлина(Слово) - 1);
		Суффикс = ")" + Суффикс;
	КонецЕсли; 
	
	СтрокаСвойство = НСтр("ru='(св-во ';uk='(вл-ть '", КодЯзыкаИсточник);
	ПозСвойство = Найти(Слово, СтрокаСвойство);
	Если ПозСвойство <> 0 Тогда
		Префикс = Лев(Слово, ПозСвойство - 1);
		Префикс = Префикс + НСтр("ru='(св-во ';uk='(вл-ть '", КодЯзыкаРезультат);
		Слово   = Сред(Слово, ПозСвойство + СтрДлина(СтрокаСвойство));
		Слово   = Сред(Слово, 1, СтрДлина(Слово) - 1);
		Суффикс = ")" + Суффикс;
	КонецЕсли; 
	
	СтрокаПроверки = НСтр("ru=' (нач. ост.)';uk=' (поч. зал.)'", КодЯзыкаИсточник);
	Если Прав(Слово, СтрДлина(СтрокаПроверки)) = СтрокаПроверки Тогда
		Суффикс = НСтр("ru=' (нач. ост.)';uk=' (поч. зал.)'", КодЯзыкаРезультат) + Суффикс;
		Слово   = Лев(Слово, СтрДлина(Слово) - СтрДлина(СтрокаПроверки));
	КонецЕсли; 
	
	СтрокаПроверки = НСтр("ru=' (приход)';uk=' (прибуток)'", КодЯзыкаИсточник);
	Если Прав(Слово, СтрДлина(СтрокаПроверки)) = СтрокаПроверки Тогда
		Суффикс = НСтр("ru=' (приход)';uk=' (прибуток)'", КодЯзыкаРезультат) + Суффикс;
		Слово   = Лев(Слово, СтрДлина(Слово) - СтрДлина(СтрокаПроверки));
	КонецЕсли; 
	
	СтрокаПроверки = НСтр("ru=' (расход)';uk=' (витрата)'", КодЯзыкаИсточник);
	Если Прав(Слово, СтрДлина(СтрокаПроверки)) = СтрокаПроверки Тогда
		Суффикс = НСтр("ru=' (расход)';uk=' (витрата)'", КодЯзыкаРезультат) + Суффикс;
		Слово   = Лев(Слово, СтрДлина(Слово) - СтрДлина(СтрокаПроверки));
	КонецЕсли; 
	
	СтрокаПроверки = НСтр("ru=' (кон. ост.)';uk=' (кін. зал.)'", КодЯзыкаИсточник);
	Если Прав(Слово, СтрДлина(СтрокаПроверки)) = СтрокаПроверки Тогда
		Суффикс = НСтр("ru=' (кон. ост.)';uk=' (кін. зал.)'", КодЯзыкаРезультат) + Суффикс;
		Слово   = Лев(Слово, СтрДлина(Слово) - СтрДлина(СтрокаПроверки));
	КонецЕсли; 
	
	СтрокаПроверки = НСтр("ru=' (оборот)';uk=' (оборот)'", КодЯзыкаИсточник);
	Если Прав(Слово, СтрДлина(СтрокаПроверки)) = СтрокаПроверки Тогда
		Суффикс = НСтр("ru=' (оборот)';uk=' (оборот)'", КодЯзыкаРезультат) + Суффикс;
		Слово   = Лев(Слово, СтрДлина(Слово) - СтрДлина(СтрокаПроверки));
	КонецЕсли; 
	
	СтрокаПроверки = " (" + глЗначениеПеременной("ВалютаУправленческогоУчета") + ")";
	Если Прав(Слово, СтрДлина(СтрокаПроверки)) = СтрокаПроверки Тогда
		Суффикс = " (" + глЗначениеПеременной("ВалютаУправленческогоУчета") + ")" + Суффикс;
		Слово   = Лев(Слово, СтрДлина(Слово) - СтрДлина(СтрокаПроверки));
	КонецЕсли; 
	
	СтрокаПроверки = " (" + глЗначениеПеременной("ВалютаРегламентированногоУчета") + ")";
	Если Прав(Слово, СтрДлина(СтрокаПроверки)) = СтрокаПроверки Тогда
		Суффикс = " (" + глЗначениеПеременной("ВалютаРегламентированногоУчета") + ")" + Суффикс;
		Слово   = Лев(Слово, СтрДлина(Слово) - СтрДлина(СтрокаПроверки));
	КонецЕсли; 
	
	
	СтрокаПроверки = НСтр("ru=' (в ед. хранения)';uk=' (в од. зберігання)'", КодЯзыкаИсточник);
	Если Прав(Слово, СтрДлина(СтрокаПроверки)) = СтрокаПроверки Тогда
		Суффикс = НСтр("ru=' (в ед. хранения)';uk=' (в од. зберігання)'", КодЯзыкаРезультат) + Суффикс;
		Слово   = Лев(Слово, СтрДлина(Слово) - СтрДлина(СтрокаПроверки));
	КонецЕсли; 
	
	СтрокаПроверки = НСтр("ru=' (в базовых ед.)';uk=' (у базових од.)'", КодЯзыкаИсточник);
	Если Прав(Слово, СтрДлина(СтрокаПроверки)) = СтрокаПроверки Тогда
		Суффикс = НСтр("ru=' (в базовых ед.)';uk=' (у базових од.)'", КодЯзыкаРезультат) + Суффикс;
		Слово   = Лев(Слово, СтрДлина(Слово) - СтрДлина(СтрокаПроверки));
	КонецЕсли; 
	
	СтрокаПроверки = НСтр("ru=' (в ед. отчетов)';uk=' (в од. звітів)'", КодЯзыкаИсточник);
	Если Прав(Слово, СтрДлина(СтрокаПроверки)) = СтрокаПроверки Тогда
		Суффикс = НСтр("ru=' (в ед. отчетов)';uk=' (в од. звітів)'", КодЯзыкаРезультат) + Суффикс;
		Слово   = Лев(Слово, СтрДлина(Слово) - СтрДлина(СтрокаПроверки));
	КонецЕсли; 
	
	СтрокаПроверки = НСтр("ru=' (в ед. заказа)';uk=' (в од. замовлення)'", КодЯзыкаИсточник);
	Если Прав(Слово, СтрДлина(СтрокаПроверки)) = СтрокаПроверки Тогда
		Суффикс = НСтр("ru=' (в ед. заказа)';uk=' (в од. замовлення)'", КодЯзыкаРезультат) + Суффикс;
		Слово   = Лев(Слово, СтрДлина(Слово) - СтрДлина(СтрокаПроверки));
	КонецЕсли; 
	
	СтрокаПроверки = НСтр("ru=' (в валюте упр. учета)';uk=' (у валюті упр. обліку)'", КодЯзыкаИсточник);
	Если Прав(Слово, СтрДлина(СтрокаПроверки)) = СтрокаПроверки Тогда
		Суффикс = НСтр("ru=' (в валюте упр. учета)';uk=' (у валюті упр. обліку)'", КодЯзыкаРезультат) + Суффикс;
		Слово   = Лев(Слово, СтрДлина(Слово) - СтрДлина(СтрокаПроверки));
	КонецЕсли; 
	
	СтрокаПроверки = НСтр("ru=' (в валюте регл. учета)';uk=' (у валюті регл. обліку)'", КодЯзыкаИсточник);
	Если Прав(Слово, СтрДлина(СтрокаПроверки)) = СтрокаПроверки Тогда
		Суффикс = НСтр("ru=' (в валюте регл. учета)';uk=' (у валюті регл. обліку)'", КодЯзыкаРезультат) + Суффикс;
		Слово   = Лев(Слово, СтрДлина(Слово) - СтрДлина(СтрокаПроверки));
	КонецЕсли; 
	
	СтрокаПроверки = НСтр("ru=' (в валюте взаиморасчетов)';uk=' (у валюті взаєморозрахунків)'", КодЯзыкаИсточник);
	Если Прав(Слово, СтрДлина(СтрокаПроверки)) = СтрокаПроверки Тогда
		Суффикс = НСтр("ru=' (в валюте взаиморасчетов)';uk=' (у валюті взаєморозрахунків)'", КодЯзыкаРезультат) + Суффикс;
		Слово   = Лев(Слово, СтрДлина(Слово) - СтрДлина(СтрокаПроверки));
	КонецЕсли; 
	
	СтрокаПроверки = НСтр("ru='.% в группе иерархии';uk='.% у групі ієрархії'", КодЯзыкаИсточник);
	Если Прав(Слово, СтрДлина(СтрокаПроверки)) = СтрокаПроверки Тогда
		Суффикс = НСтр("ru='.% в группе иерархии';uk='.% у групі ієрархії'", КодЯзыкаРезультат) + Суффикс;
		Слово   = Лев(Слово, СтрДлина(Слово) - СтрДлина(СтрокаПроверки));
	КонецЕсли;
	
	СтрокаПроверки = НСтр("ru='.% в группе иерархии колонки или точки';uk='.% у групі ієрархії колонки або точки'", КодЯзыкаИсточник);
	Если Прав(Слово, СтрДлина(СтрокаПроверки)) = СтрокаПроверки Тогда
		Суффикс = НСтр("ru='.% в группе иерархии колонки или точки';uk='.% у групі ієрархії колонки або точки'", КодЯзыкаРезультат) + Суффикс;
		Слово   = Лев(Слово, СтрДлина(Слово) - СтрДлина(СтрокаПроверки));
	КонецЕсли;
	
	СтрокаПроверки = НСтр("ru='.% в группе иерархии строки или серии';uk='.% у групі ієрархії рядки або серії'", КодЯзыкаИсточник);
	Если Прав(Слово, СтрДлина(СтрокаПроверки)) = СтрокаПроверки Тогда
		Суффикс = НСтр("ru='.% в группе иерархии строки или серии';uk='.% у групі ієрархії рядки або серії'", КодЯзыкаРезультат) + Суффикс;
		Слово   = Лев(Слово, СтрДлина(Слово) - СтрДлина(СтрокаПроверки));
	КонецЕсли;
	
	СтрокаПроверки = НСтр("ru='.% в группировке';uk='.% у групованні'", КодЯзыкаИсточник);
	Если Прав(Слово, СтрДлина(СтрокаПроверки)) = СтрокаПроверки Тогда
		Суффикс = НСтр("ru='.% в группировке';uk='.% у групуванні'", КодЯзыкаРезультат) + Суффикс;
		Слово   = Лев(Слово, СтрДлина(Слово) - СтрДлина(СтрокаПроверки));
	КонецЕсли;
	
	СтрокаПроверки = НСтр("ru='.% в группировке колонки или точки';uk='.% у групованні колонки або точки'", КодЯзыкаИсточник);
	Если Прав(Слово, СтрДлина(СтрокаПроверки)) = СтрокаПроверки Тогда
		Суффикс = НСтр("ru='.% в группировке колонки или точки';uk='.% у групованні колонки або точки'", КодЯзыкаРезультат) + Суффикс;
		Слово   = Лев(Слово, СтрДлина(Слово) - СтрДлина(СтрокаПроверки));
	КонецЕсли;
	
	СтрокаПроверки = НСтр("ru='.% в группировке строки или серии';uk='.% у групованні рядки або серії'", КодЯзыкаИсточник);
	Если Прав(Слово, СтрДлина(СтрокаПроверки)) = СтрокаПроверки Тогда
		Суффикс = НСтр("ru='.% в группировке строки или серии';uk='.% у групованні рядки або серії'", КодЯзыкаРезультат) + Суффикс;
		Слово   = Лев(Слово, СтрДлина(Слово) - СтрДлина(СтрокаПроверки));
	КонецЕсли;
	
	СтрокаПроверки = НСтр("ru='.% в колонке или точке';uk='.% у колонці або точці'", КодЯзыкаИсточник);
	Если Прав(Слово, СтрДлина(СтрокаПроверки)) = СтрокаПроверки Тогда
		Суффикс = НСтр("ru='.% в колонке или точке';uk='.% у колонці або точці'", КодЯзыкаРезультат) + Суффикс;
		Слово   = Лев(Слово, СтрДлина(Слово) - СтрДлина(СтрокаПроверки));
	КонецЕсли;
	
	СтрокаПроверки = НСтр("ru='.% в строке или серии';uk='.% у рядку або серії'", КодЯзыкаИсточник);
	Если Прав(Слово, СтрДлина(СтрокаПроверки)) = СтрокаПроверки Тогда
		Суффикс = НСтр("ru='.% в строке или серии';uk='.% у рядку або серії'", КодЯзыкаРезультат) + Суффикс;
		Слово   = Лев(Слово, СтрДлина(Слово) - СтрДлина(СтрокаПроверки));
	КонецЕсли;
	
	СтрокаПроверки = НСтр("ru='.% общий';uk='.% загальний'", КодЯзыкаИсточник);
	Если Прав(Слово, СтрДлина(СтрокаПроверки)) = СтрокаПроверки Тогда
		Суффикс = НСтр("ru='.% общий';uk='.% загальний'", КодЯзыкаРезультат) + Суффикс;
		Слово   = Лев(Слово, СтрДлина(Слово) - СтрДлина(СтрокаПроверки));
	КонецЕсли;
	
	
	СловоБезПробелов = СокрП(Слово);
	Если СтрДлина(Слово) <> СтрДлина(СловоБезПробелов) Тогда
		Суффикс = Сред(Слово, СтрДлина(СловоБезПробелов) + 1) + Суффикс;
		Слово   = СловоБезПробелов;
	КонецЕсли;	
	
КонецПроцедуры // РазделитьСлово()

Функция ПолучитьПереводСлова(СловоДляПеревода, КодЯзыкаРезультат = Неопределено, КодЯзыкаИсточник = "ru") Экспорт
	
	Если КодЯзыкаРезультат = Неопределено Тогда
		КодЯзыкаРезультат = ЛокализацияПовтИсп.ПолучитьЯзыкФормированияПечатныхФормОтчетов();
	КонецЕсли; 
	
	Если КодЯзыкаРезультат = КодЯзыкаИсточник Тогда	
		// переводить не требуется
		Возврат СловоДляПеревода;
	КонецЕсли; 
	
	Слово   = СловоДляПеревода;
	Префикс = "";
	Суффикс = "";
	
	РазделитьСлово(СловоДляПеревода, Слово, Префикс, Суффикс, КодЯзыкаРезультат, КодЯзыкаИсточник);
	
	ХешИсточник = ЛокализацияПовтИсп.ПолучитьХешСтроки(Слово);
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	| 	Переводы.ТекстRU КАК Текст,
	|   Переводы.ТекстUK КАК Перевод
	|ИЗ 
	|	РегистрСведений.ПереводыТекстов КАК Переводы
	|ГДЕ
	|	Переводы.ХешRU = &Хеш 
	|";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "RU", ВРЕГ(КодЯзыкаИсточник));
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "UK", ВРЕГ(КодЯзыкаРезультат));
	
	Запрос.УстановитьПараметр("Хеш", ХешИсточник);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Количество = Выборка.Количество();
	
	Результат = "";
	НеобходимоДобавить = Истина;
	
	Если Количество = 0 Тогда
		НеобходимоДобавить = Истина;
	ИначеЕсли Количество = 1 Тогда
		Выборка.Следующий();
		Если Выборка.Текст = Слово Тогда
			Результат = Выборка.Перевод;
			НеобходимоДобавить = Ложь;
		КонецЕсли;	
	Иначе
		Пока Выборка.Следующий() Цикл 
			Если Выборка.Текст = Слово Тогда
				Результат = Выборка.Перевод;
				НеобходимоДобавить = Ложь;
				Прервать;
			КонецЕсли; 	
		КонецЦикла;	
	КонецЕсли; 
	
	Если НеобходимоДобавить Тогда
		
		Запись = РегистрыСведений.ПереводыТекстов.СоздатьМенеджерЗаписи();
		
		ИмяПоляТекстИсточник  = "Текст" + ВРЕГ(КодЯзыкаИсточник);
		ИмяПоляТекстРезультат = "Текст" + ВРЕГ(КодЯзыкаРезультат);
		
		Запись[ИмяПоляТекстИсточник]  = Слово;
		Запись[ИмяПоляТекстРезультат] = "";
		
		Запись.Записать();
		Если ТестовыйРежим() Тогда
			Сообщить(НСтр("ru='ПолучитьПереводСлова - добавлена запись в РегистрыСведений.Переводы для ';uk='ПолучитьПереводСлова - доданий запис у РегистрыСведений.Переводы для '") + Слово + НСтр("ru=', необходимо добавить перевод на ';uk=', необхідно додати переклад на '") + ВРЕГ(КодЯзыкаРезультат));
		КонецЕсли; 
		
		Результат = Слово;
		
	ИначеЕсли ПустаяСтрока(Результат) Тогда
		
		Если ТестовыйРежим() Тогда
			Сообщить(НСтр("ru='ПолучитьПереводСлова - не найден перевод для ';uk='ПолучитьПереводСлова - не знайдений переклад для '") + Слово + НСтр("ru=' на ';uk=' на '") + ВРЕГ(КодЯзыкаРезультат));
		КонецЕсли; 
		
		Результат = Слово;
		
	КонецЕсли; 
	
	Возврат Префикс + Результат + Суффикс;

КонецФункции // ПолучитьПереводСлова()

Функция ПолучитьПереводТекста(Текст, КодЯзыкаРезультат = Неопределено, КодЯзыкаИсточник = "ru") Экспорт
	
	Если КодЯзыкаРезультат = Неопределено Тогда
		КодЯзыкаРезультат = ЛокализацияПовтИсп.ПолучитьЯзыкФормированияПечатныхФормОтчетов();
	КонецЕсли; 
	
	Если КодЯзыкаРезультат = КодЯзыкаИсточник Тогда	
		// переводить не требуется
		Возврат Текст;
	КонецЕсли; 
	
	МассивСтрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Текст, ".", Ложь);
	КоличествоСтрок = МассивСтрок.Количество();
	
	ПереводитьКакПодстроки = Ложь;
	
	Если КоличествоСтрок > 1 Тогда
		ПереводитьКакПодстроки = Истина;
		
		Для Индекс = 1 По КоличествоСтрок - 1 Цикл
			ТекСтрока  = МассивСтрок[Индекс];
			ПредСтрока = МассивСтрок[Индекс - 1];
			ПервыйСимволПредыдущей = Лев(ПредСтрока, 1);
			Если НЕ (ЛокализацияПовтИсп.СимволБуква(ПервыйСимволПредыдущей) ИЛИ ЛокализацияПовтИсп.СимволЦифра(ПервыйСимволПредыдущей)) Тогда
				ПереводитьКакПодстроки = Ложь;
				Прервать;
			КонецЕсли; 
			ПервыйСимволТекущей = Лев(ТекСтрока, 1);
			Если НЕ (ЛокализацияПовтИсп.СимволБуква(ПервыйСимволТекущей) И ВРЕГ(ПервыйСимволТекущей) = ПервыйСимволТекущей) Тогда
				ПереводитьКакПодстроки = Ложь;
				Прервать;
			КонецЕсли; 
		КонецЦикла; 
	КонецЕсли;	
	
	Если ПереводитьКакПодстроки Тогда
		Результат = "";
		Для Индекс = 0 По КоличествоСтрок - 1 Цикл
			Результат = Результат + ?(ПустаяСтрока(Результат), "", ".") + ЛокализацияПовтИсп.ПолучитьПереводСлова(МассивСтрок[Индекс], КодЯзыкаРезультат, КодЯзыкаИсточник);
		КонецЦикла; 
		Возврат Результат;
	Иначе
		МассивСтрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Текст, Символы.ПС, Ложь);
		КоличествоСтрок = МассивСтрок.Количество();
		Если КоличествоСтрок = 1 Тогда
			Возврат ЛокализацияПовтИсп.ПолучитьПереводСлова(Текст, КодЯзыкаРезультат, КодЯзыкаИсточник);
		Иначе	
			Результат = "";
			Для Индекс = 0 По КоличествоСтрок - 1 Цикл
				Результат = Результат + ?(ПустаяСтрока(Результат), "", Символы.ПС) + ЛокализацияПовтИсп.ПолучитьПереводСлова(МассивСтрок[Индекс], КодЯзыкаРезультат, КодЯзыкаИсточник);
			КонецЦикла; 
			Возврат Результат;
		КонецЕсли; 
	КонецЕсли;

КонецФункции // ПолучитьПереводТекста()

Функция ОбработатьИсключенияЗначенийПолейСКД(ЗначениеПоля, КодЯзыка) Экспорт
	
	НовоеЗначениеПоля = Неопределено; 
	
	Если Лев(ЗначениеПоля, 7) = "Период:" Тогда
		
		НовоеЗначениеПоля = НСтр("ru='Период:';uk='Період:'", КодЯзыка) + 
							Сред(ЗначениеПоля, 8);
							
							
	ИначеЕсли Лев(ЗначениеПоля, 27) = "Период формирования отчета:" Тогда
		
		НовоеЗначениеПоля = НСтр("ru='Период формирования отчета:';uk='Період формування звіту:'", КодЯзыка) + 
							Сред(ЗначениеПоля, 28);
							
	КонецЕсли; 
	
	Возврат НовоеЗначениеПоля;

КонецФункции // ОбработатьИсключенияЗначенийПолейСКД()

Функция ПолучитьХешСтроки(Строка) Экспорт
	
	
	МаксХеш = 4294967295; // Pow(2, 32) - 1
	Простое = 33; 

	Результат = 0;
	
	Длина = СтрДлина(Строка);
	
	Если Длина = 0 Тогда
		Возврат 0;
	КонецЕсли; 
	
	Для Поз = 1 По Длина Цикл
		Результат = Результат * Простое + КодСимвола(Строка, Поз);
		Если Результат > МаксХеш Тогда
			Результат = Результат % МаксХеш;
		КонецЕсли; 
	КонецЦикла; 
	
	Возврат Результат;
	
КонецФункции // ПолучитьХешСтроки()

Функция ПолучитьПереводДляОтчетовНаСКД(Строка, КодЯзыка = Неопределено) Экспорт
	Возврат ЛокализацияПовтИсп.ПолучитьПереводТекста(Строка, КодЯзыка);
КонецФункции // ПолучитьПереводДляОтчетовНаСКД()

Функция ПолучитьФорматЯзыкаДляПредставленияВСхемахСКД() Экспорт
	
	КодЯзыка  = ЛокализацияПовтИсп.ПолучитьЯзыкФормированияПечатныхФормОтчетов();
	Результат = ";Л=" + ?(КодЯзыка = "uk","uk_UA","ru_RU");
	
	Возврат Результат;

КонецФункции // ПолучитьФорматЯзыкаДляПредставленияВСхемахСКД()


// Проверяет, является ли символ цифрой.
//
// Параметры:
//  СимволПроверки - символ для проверки.
//
// Возвращаемое значение:
//  Истина       - символ является цифрой;
//  Ложь         - символ не является цифрой;
//
Функция СимволЦифра(Знач СимволПроверки) Экспорт
	
	Если НЕ ЗначениеЗаполнено(СимволПроверки) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	КодСимвола = КодСимвола(СимволПроверки);
	Если НЕ (КодСимвола >= 48 И КодСимвола <= 57) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции // СимволЦифра()

// Проверяет, является ли символ символом кириллического алфавита.
//
// Параметры: 
//    СимволПроверки - символ проверки
//
// Возвращаемое значение:
//  Истина       - символ является символом кириллического алфавита;
//  Ложь         - символ не является символом кириллического алфавита или пустой;
//
Функция СимволКириллица(Знач СимволПроверки) Экспорт
	
	Если НЕ ЗначениеЗаполнено(СимволПроверки) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	КодыДопустимыхСимволов = Новый Массив;
	КодыДопустимыхСимволов.Добавить(1105); // "ё"
	КодыДопустимыхСимволов.Добавить(1025); // "Ё"
	КодыДопустимыхСимволов.Добавить(1110); // "і"
	КодыДопустимыхСимволов.Добавить(1030); // "І"
	КодыДопустимыхСимволов.Добавить(1111); // "ї"
	КодыДопустимыхСимволов.Добавить(1031); // "Ї"
	КодыДопустимыхСимволов.Добавить(1108); // "є"
	КодыДопустимыхСимволов.Добавить(1028); // "Є"
	
	КодСимвола = КодСимвола(СимволПроверки);
	Если ((КодСимвола < 1040) Или (КодСимвола > 1103)) 
		И (КодыДопустимыхСимволов.Найти(КодСимвола) = Неопределено) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции // СимволКириллица

// Проверяет, является ли символ символом латинского или кириллического алфавита.
//
// Параметры: 
//    СимволПроверки - символ проверки
//
// Возвращаемое значение:
//  Истина       - символ является символом латинского алфавита;
//  Ложь         - символ не является символом латинского алфавита или пустой;
//
Функция СимволЛатиница(Знач СимволПроверки) Экспорт
	
	Если НЕ ЗначениеЗаполнено(СимволПроверки) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	КодСимвола = КодСимвола(СимволПроверки);
	Если ((КодСимвола < 65) Или (КодСимвола > 90 И КодСимвола < 97) Или (КодСимвола > 122)) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции // СимволЛатиница

// Проверяет, является ли символ символом символом латинского или кириллического алфавита.
//
// Параметры: 
//    СимволПроверки - символ проверки
//
// Возвращаемое значение:
//  Истина       - символ является символом латинского или кириллического алфавита;
//  Ложь         - символ не является символом латинского или кириллического алфавита или пустой;
//
Функция СимволБуква(Знач СимволПроверки) Экспорт
	
	Возврат ЛокализацияПовтИсп.СимволКириллица(СимволПроверки) ИЛИ ЛокализацияПовтИсп.СимволЛатиница(СимволПроверки);
	
КонецФункции // СимволБуква

Функция ТестовыйРежим() Экспорт
	//Возврат Истина; // MR - комментируем в релизе!
	Возврат Ложь; 
КонецФункции // ТестовыйРежим()


