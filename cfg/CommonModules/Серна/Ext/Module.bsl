#Если Клиент Тогда

// Открывает ОсновнуюФорму ручной корректировки
//
Процедура РучнаяКорректировкаОсновнаяФорма(ЭтоНовый,Ссылка,ЭтотОбъект)  Экспорт
	
	Если НЕ ЭтоНовый Тогда
		ФормаНастройки = Обработки.КорректировкаДвижений.ПолучитьФорму("ОсновнаяФорма", ЭтотОбъект, Строка(Ссылка));
		ФормаНастройки.ДокументОбъект = ЭтотОбъект;
		Если ФормаНастройки.Открыта() Тогда
			Для Каждого СтрокаТаблицыРегистров из ФормаНастройки.Регистры Цикл
				СтрокаТаблицыРегистров.Прочитан = Ложь;
				//СтрокаТаблицыРегистров.Отрисован = Ложь;
			КонецЦикла;
			
			КолСтраниц = ФормаНастройки.ЭлементыФормы.ОсновнаяПанель.Страницы.количество()-1;
			Для НомерСтраницы = 0 По КолСтраниц Цикл
				Страница = ФормаНастройки.ЭлементыФормы.ОсновнаяПанель.Страницы[КолСтраниц-НомерСтраницы];
				Если Страница.Видимость и Страница.Значение="" Тогда
					ФормаНастройки.ЭлементыФормы.ОсновнаяПанель.Страницы.Удалить(ФормаНастройки.ЭлементыФормы.ОсновнаяПанель.Страницы.Индекс(Страница));
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ФормаНастройки.Открыть();
	КонецЕсли;
 	
КонецПроцедуры // РучнаяКорректировкаОсновнаяФорма()
	
#КонецЕсли

// Позволяет определить есть ли среди реквизитов шапки документа
// реквизит с переданным именем.
//
// Параметры: 
//  ИмяРеквизита - строковое имя искомого реквизита, 
//  МетаданныеДокумента - объект описания метаданных документа, среди реквизитов которого производится поиск.
//
// Возвращаемое значение:
//  Истина - нашли реквизит с таким именем, Ложь - не нашли.
//
Функция ЕстьРеквизитДокумента(ИмяРеквизита, МетаданныеДокумента) Экспорт

	Возврат НЕ (МетаданныеДокумента.Реквизиты.Найти(ИмяРеквизита) = Неопределено);

КонецФункции // ЕстьРеквизитДокумента()

Процедура ОбработкаПроведенияРучныеКорректировкиНачислений(Источник, Отказ, РежимПроведения) Экспорт
	
	Если (Не ТипЗнч(Источник.Ссылка) = Тип("ДокументСсылка.НачислениеЗарплатыРаботникамОрганизаций")) и (Не ТипЗнч(Источник.Ссылка) = Тип("ДокументСсылка.РегистрацияРазовыхНачисленийРаботниковОрганизаций")) Тогда
		Возврат;
	ИначеЕсли Не ЗначениеЗаполнено(Источник.Ссылка) Тогда
		Возврат;
	Иначе
		лИмяТЧ = ?(ТипЗнч(Источник.Ссылка) = Тип("ДокументСсылка.НачислениеЗарплатыРаботникамОрганизаций"), "Начисления", "ОсновныеНачисления");
		лНайденныеСтроки = Источник[лИмяТЧ].НайтиСтроки( Новый Структура("Авторасчет", Ложь) );
		Если (лНайденныеСтроки.Количество() = 0) Тогда 
			Возврат; 
		КонецЕсли;
	КонецЕсли;
	
	Если (ВРег( СокрЛП(ИмяКомпьютера()) ) = "UAIEVSRV5RDS1") Тогда
		лмасПараметрыЗадания = Новый Массив;
    	лмасПараметрыЗадания.Добавить( Источник.Ссылка );
     
    	// Запускаем фоновое выполнение алгоритма
    	ФоновыеЗадания.Выполнить("Серна.ОтправитьПисьмоВФоне", лмасПараметрыЗадания, Новый УникальныйИдентификатор, "Отправка письма о ручных корректировках");		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОтправитьПисьмоВФоне( пПараметрФоновогоЗадания ) Экспорт
	Если (ТипЗнч(пПараметрФоновогоЗадания) = Тип("Массив")) Тогда 
		Если (пПараметрФоновогоЗадания.Количество() = 1) Тогда 
			лСсылка = пПараметрФоновогоЗадания[0];
		Иначе
			Возврат; 
		КонецЕсли;
	Иначе
		лСсылка = пПараметрФоновогоЗадания;
	КонецЕсли;
	Если (Не ТипЗнч(лСсылка) = Тип("ДокументСсылка.РегистрацияРазовыхНачисленийРаботниковОрганизаций")) и ( Не ТипЗнч(лСсылка) = Тип("ДокументСсылка.НачислениеЗарплатыРаботникамОрганизаций")) Тогда
		Возврат;
	КонецЕсли;
	
	лОбработка = Обработки.гауРассылкаОРучныхКорректировкахНачислений.Создать();
	лОбработка.ДокументНачисления = лСсылка;
	лОбработка.Инициализировать();
КонецПроцедуры
