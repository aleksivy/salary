
// Процедура проверяет, есть ли необходимость выполнять обновление информационной базы.
// Если необходимо - выполняется обновление.
// Если обновление не удалось выполнить - предлагается завершить работу системы.
//
// Параметры:
//  Нет.
//
Процедура ВыполнитьОбновлениеИнформационнойБазы() Экспорт

	// Проверка легальности получения обновления.
	Если НЕ ПроверитьЛегальностьПолученияОбновления(Константы.НомерВерсииКонфигурации.Получить()) Тогда
		Возврат;	
	КонецЕсли;
	
	ПервыйЗапуск = (Константы.НомерВерсииКонфигурации.Получить()="");
	
	// Проверка необходимости обновления информационной базы.
	Если НЕ ПустаяСтрока(Метаданные.Версия)
	   И Константы.НомерВерсииКонфигурации.Получить() <> Метаданные.Версия Тогда
	   	Если НЕ ПервыйЗапуск Тогда
			#Если Клиент Тогда
			Предупреждение(НСтр("ru='Изменился номер версии конфигурации. Будет выполнено обновление информационной базы.';uk='Змінився номер версії конфігурації. Буде виконане оновлення інформаційної бази.'"));
			#КонецЕсли
		КонецЕсли;
	Иначе
		Возврат;
	КонецЕсли;

	// Проверка наличия прав для обновления информационной базы.
	Если НЕ ПравоДоступа("МонопольныйРежим", Метаданные) 
	 ИЛИ НЕ РольДоступна("ПолныеПрава") Тогда
        #Если Клиент Тогда
		Предупреждение(НСтр("ru='Недостаточно прав для выполнения обновления. Необходимы полные права. Работа системы будет завершена.';uk='Недостатньо прав для виконання оновлення. Необхідні повні права. Робота системи буде завершена.'"));
		глЗначениеПеременнойУстановить("глЗапрашиватьПодтверждениеПриЗакрытии", Ложь);
		ЗавершитьРаботуСистемы(Ложь);
		#КонецЕсли
		Возврат;
	КонецЕсли;

	// Установка монопольного режима для обновления информационной базы.
	Попытка
		УстановитьМонопольныйРежим(Истина);
	Исключение
		#Если Клиент Тогда
		Сообщить(ОписаниеОшибки(), СтатусСообщения.ОченьВажное);
		Предупреждение(НСтр("ru='Не удалось установить монопольный режим. Работа системы будет завершена.';uk='Не вдалося встановити монопольний режим. Робота системи буде завершена.'"));
		глЗначениеПеременнойУстановить("глЗапрашиватьПодтверждениеПриЗакрытии", Ложь);
		ЗавершитьРаботуСистемы(Ложь);
		#КонецЕсли
		Возврат;
	КонецПопытки;

	// Обновление информационной базы.
	Обработки.ОбновлениеИнформационнойБазы.Создать().ВыполнитьОбновление();

	// Откючение монопольного режима.
	УстановитьМонопольныйРежим(Ложь);

	// Проверка выполнения обновления информационной базы.
	Если Константы.НомерВерсииКонфигурации.Получить() <> Метаданные.Версия Тогда
		Сообщить(НСтр("ru='Обновление информационной базы не выполнено.';uk='Оновлення інформаційної бази не виконано.'"), СтатусСообщения.Важное);
		#Если Клиент Тогда
		Текст = НСтр("ru='Не выполнено обновление информационной базы! Завершить работу системы?';uk='Не виконане оновлення інформаційної бази! Завершити роботу системи?'");
		Ответ = Вопрос(Текст, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да, );

		Если Ответ = КодВозвратаДиалога.Да Тогда
			глЗначениеПеременнойУстановить("глЗапрашиватьПодтверждениеПриЗакрытии", Ложь);
			ЗавершитьРаботуСистемы(Ложь);
		КонецЕсли;
		#КонецЕсли
	Иначе
		Если НЕ ПервыйЗапуск Тогда
			Сообщить(НСтр("ru='Обновление информационной базы выполнено успешно.';uk='Оновлення інформаційної бази виконано успішно.'"), СтатусСообщения.Информация);
		Иначе
			Сообщить(НСтр("ru='Начальное заполнение информационной базы выполнено успешно.';uk='Початкове заповнення інформаційної бази виконане успішно.'"), СтатусСообщения.Информация);
		КонецЕсли;	
	КонецЕсли;

КонецПроцедуры

// Проверить легальность получения обновления.
//
// Параметры
//  ТекущаяВерсияИБ  - Строка - номер версии ИБ.
//
// Возвращаемое значение:
//   Булево   - Истина, если проверка завершилась успешно.
//
Функция ПроверитьЛегальностьПолученияОбновления(Знач ТекущаяВерсияИБ)

#Если Клиент Тогда
	Если ТекущаяВерсияИБ <> Метаданные.Версия И ТекущаяВерсияИБ <> "" Тогда
		Форма = Обработки.ЛегальностьПолученияОбновлений.ПолучитьФорму();
		Форма.ПоказыватьПредупреждениеОПерезапуске = Истина;
		Результат = Форма.ОткрытьМодально();
		Если Результат <> Истина Тогда
			ЗавершитьРаботуСистемы(Ложь);
			Возврат Ложь;
		КонецЕсли; 
	КонецЕсли;
#КонецЕсли
	Возврат Истина;

КонецФункции 
