Перем	мИмяОбъектаМетаданных;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура выполняет запись новой строки в истории ввода
//
Процедура ДополнитьИсторию()

	РаботаСДиалогами.ДополнитьСписокИсторииВвода(мИмяОбъектаМетаданных + "." + "ФизЛицо", Отбор.ДокументыПоРаботникуОрганизации.Значение);

КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)
	
	Если ЭтаФорма.ЭлементыФормы.ЖурналДокументовСписок.ТекущаяСтрока = Неопределено тогда
		Возврат
	КонецЕсли;

	РаботаСДиалогами.НапечататьДвиженияДокумента(ЭлементыФормы.ЖурналДокументовСписок.ТекущиеДанные.Ссылка);
	
КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

// Процедура вызывается при нажатии кнопки "Печать" командной панели формы,
// вызывает печать по умолчанию для формы документа.
//
Процедура ДействияФормыДействиеПечать(Кнопка)

	Если ЭлементыФормы.ЖурналДокументовСписок.ТекущаяСтрока <> Неопределено Тогда

		Попытка
			УниверсальныеМеханизмы.НапечататьДокументИзФормыСписка(ЭлементыФормы.ЖурналДокументовСписок.ТекущаяСтрока.ПолучитьОбъект())
		Исключение
		КонецПопытки
			
	КонецЕсли;

КонецПроцедуры // ОсновныеДействияФормыДействиеПечать()

Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	Если ЭлементыФормы.ЖурналДокументовСписок.ТекущиеДанные = Неопределено тогда
		Возврат
	КонецЕсли;
	
	ФормаСтруктурыПодчиненности = ПолучитьОбщуюФорму("ФормаСтруктурыПодчиненности", ЭтаФорма);
	Если ФормаСтруктурыПодчиненности.Открыта() Тогда
		ФормаСтруктурыПодчиненности.Закрыть();
	КонецЕсли;
	ФормаСтруктурыПодчиненности.ДокументСсылка = ЭлементыФормы.ЖурналДокументовСписок.ТекущиеДанные.Ссылка;
	ФормаСтруктурыПодчиненности.Открыть();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ

// Процедура - обработчик события "ПриИзменении" поля ввода Физ Лицо.
//
Процедура ФизЛицоПриИзменении(Элемент)

	ДополнитьИсторию();
	Отбор.ДокументыПоРаботникуОрганизации.Использование = ЗначениеЗаполнено(Элемент.Значение);
		
КонецПроцедуры

// Процедура - обработчик события "НачалоВыбораИзСписка" поля ввода Физ Лицо.
//
Процедура ФизЛицоНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	НовоеЗначение = ВыбратьИзСписка(РаботаСДиалогами.ПолучитьСписокИсторииВвода(мИмяОбъектаМетаданных + "." + "ФизЛицо"), Элемент);

	Если НовоеЗначение <> Неопределено Тогда		
		Отбор.ДокументыПоРаботникуОрганизации.ВидСравнения = ВидСравнения.Равно;
		Элемент.Значение = НовоеЗначение.Значение;
		ДополнитьИсторию();
		Отбор.ДокументыПоРаботникуОрганизации.Использование = ЗначениеЗаполнено(Элемент.Значение);
		
	КонецЕсли;


КонецПроцедуры

Процедура ФизЛицоНачалоВыбора(Элемент, СтандартнаяОбработка)
	мГоловнаяОрганизация = Справочники.Организации.ПустаяСсылка();
	ПроцедурыУправленияПерсоналом.ОткрытьФормуВыбораСотрудникаОрганизации(Элемент, ЭтаФорма, Истина, ОбщегоНазначения.ПолучитьРабочуюДату(), мГоловнаяОрганизация, 0,СтандартнаяОбработка, Элемент.Значение);
КонецПроцедуры

Процедура ФизЛицоОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.СотрудникиОрганизаций") Тогда
		Элемент.Значение = ВыбранноеЗначение.ФизЛицо;
		СтандартнаяОбработка = Ложь;
		ДополнитьИсторию();
		Отбор.ДокументыПоРаботникуОрганизации.Использование = ЗначениеЗаполнено(Элемент.Значение);
	КонецЕсли;
КонецПроцедуры

мИмяОбъектаМетаданных = "ЖурналДокументов.ДокументыПоВыплатеЗарплатыОрганизаций";

