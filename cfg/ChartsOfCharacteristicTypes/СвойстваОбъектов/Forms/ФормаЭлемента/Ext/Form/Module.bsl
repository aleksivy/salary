////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ДействияФормыРедактироватьКод(Кнопка)
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подменю, ЭлементыФормы.Код);
КонецПроцедуры
Процедура ПриОткрытии()
	
	МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияКода(ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подменю);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подменю,ЭлементыФормы.Код);
КонецПроцедуры

// Обработчик события ОбновлениеОтображения формы.
//
Процедура ОбновлениеОтображения()

	// Оновляется информационная строка.
	Если НаборЗаписейНазначенияСвойства.Количество() > 0 Тогда
		ЭлементыФормы.НадписьНазначенияСвойства.Заголовок = 
		НСтр("ru='Свойство предназначено только для указанных объектов';uk=""Властивість призначена тільки для зазначених об'єктів""");
	Иначе
		ЭлементыФормы.НадписьНазначенияСвойства.Заголовок = 
		НСтр("ru='Свойство предназначено для всех объектов указанного типа';uk=""Властивість призначена для всіх об'єктів зазначеного типу""");
	КонецЕсли;

КонецПроцедуры

// Обработчик события ПриИзмененииДанных формы.
//
Процедура ПриИзмененииДанных()

	// Перечитывается набор записей.
	ЭлементыФормы.НаборЗаписейНазначенияСвойства.ОбновлятьПриИзмененииОтбора = Ложь;
	НаборЗаписейНазначенияСвойства.Отбор.Свойство.Установить(Ссылка);
	НаборЗаписейНазначенияСвойства.Прочитать();

	// Видимость и отбор значений.
	ЭлементыФормы.ПанельФормы.Страницы.ЗначенияСвойства.Доступность = ТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектов"));
	СписокЗначенияСвойства.Отбор.Владелец.Установить(Ссылка);

КонецПроцедуры

// Обработчик события ПриЗаписи формы.
//
Процедура ПриЗаписи(Отказ)
	
	Если НЕ ЗначениеЗаполнено(НазначениеСвойства) Тогда
		Предупреждение(НСтр("ru='Не заполнен обязательный реквизит: ""Назначение свойства""';uk='Не заповнений обов''язковий реквізит: ""Призначення властивості""'"));
		Отказ = Истина;
		Возврат;
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(ТипЗначения) Тогда
		Предупреждение(НСтр("ru='Не заполнен обязательный реквизит: ""Тип значения""';uk='Не заповнений обов''язковий реквізит: ""Тип значення""'"));
		Отказ = Истина;
		Возврат;
	КонецЕсли; 
	
	
	Для каждого Запись Из НаборЗаписейНазначенияСвойства Цикл
		// Очистка записей, не соответствующих по типу.
		Если НЕ НазначениеСвойства.ТипЗначения.СодержитТип(ТипЗнч(Запись.Объект)) Тогда
			НаборЗаписейНазначенияСвойства.Удалить(Запись);

		// Назначение свойства каждой записи - для впервые записываемого объекта.
		ИначеЕсли Запись.Свойство <> Ссылка Тогда
			Запись.Свойство = Ссылка;
		КонецЕсли;
	КонецЦикла;

	// Назначение свойства отбору - для впервые записываемого объекта.
	Если НаборЗаписейНазначенияСвойства.Отбор.Свойство.Значение <> Ссылка Тогда
		НаборЗаписейНазначенияСвойства.Отбор.Свойство.Значение = Ссылка;
	КонецЕсли;

	Если НаборЗаписейНазначенияСвойства.Модифицированность() Тогда
		// Запись набора записей.
		Попытка
			НаборЗаписейНазначенияСвойства.Записать();
		Исключение
			ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru='Не удалось записать назначения свойства: ';uk='Не вдалося записати призначення властивості: '") + ОписаниеОшибки(), Отказ);
		КонецПопытки;
	КонецЕсли;

КонецПроцедуры

// Обработчик события ПослеЗаписи формы.
//
Процедура ПослеЗаписи()

	СписокЗначенияСвойства.Отбор.Владелец.Установить(Ссылка);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ

// Обработчик события ПриИзменении элемента ТипЗначения.
//
Процедура ТипЗначенияПриИзменении(Элемент)

	ЭлементыФормы.ПанельФормы.Страницы.ЗначенияСвойства.Доступность = ТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектов"));
	Если НЕ ЭлементыФормы.ПанельФормы.Страницы.ЗначенияСвойства.Доступность
		 И  ЭлементыФормы.ПанельФормы.ТекущаяСтраница.Имя = "ЗначенияСвойства" Тогда
		ЭлементыФормы.ПанельФормы.ТекущаяСтраница = ЭлементыФормы.ПанельФормы.Страницы[0];
	КонецЕсли;

КонецПроцедуры

// Обработчик события ПриИзменении элемента НазначениеСвойства.
//
Процедура НазначениеСвойстваПриИзменении(Элемент)

	МассивСсылок = Новый Массив();
	МассивСсылок.Добавить(ЭтотОбъект.Ссылка);
	
	Если НЕ ЭтоНовый() 
	   И НазначениеСвойства <> Ссылка.НазначениеСвойства 
	   И НайтиПоСсылкам(МассивСсылок).Количество() > 0 Тогда

		Предупреждение(НСтр("ru='Существуют объекты, которым назначено свойство ""';uk='Існують об''єкти, яким призначена властивість ""'") + Наименование + НСтр("ru='""."
"Назначение свойства ""';uk='""."
"Призначення властивості ""'") + Наименование + НСтр("ru='"" не может быть изменено.';uk='"" не може бути змінено.'"));

		НазначениеСвойства = Ссылка.НазначениеСвойства;
		Возврат;
	КонецЕсли;
	
	КолвоЗаписейВНаборе=НаборЗаписейНазначенияСвойства.Количество();
	Для ОбратныйИндекс = 1 По КолвоЗаписейВНаборе Цикл
		Запись = НаборЗаписейНазначенияСвойства[КолвоЗаписейВНаборе-ОбратныйИндекс];
		// Очистка записей, не соответствующих по типу.
		Если НЕ НазначениеСвойства.ТипЗначения.СодержитТип(ТипЗнч(Запись.Объект)) Тогда
			НаборЗаписейНазначенияСвойства.Удалить(Запись);
		КонецЕсли;
	КонецЦикла;


КонецПроцедуры

// Обработчик события ПередНачаломДобавления элемента НаборЗаписейНазначенияСвойства.
//
Процедура НаборЗаписейНазначенияСвойстваПередНачаломДобавления(Элемент, Отказ, Копирование)

	Если НЕ ЗначениеЗаполнено(НазначениеСвойства) Тогда
		Предупреждение(НСтр("ru='Не указано назначение свойства!';uk='Не вказано призначення властивості!'"));
		Отказ = Истина;
	КонецЕсли;
	
	Если НазначениеСвойства = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Документы Тогда
		Предупреждение(НСтр("ru='Для документов изменение списка назначений свойства запрещено!';uk='Для документів редагування списку призначень властивості заборонено!'"));
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры

// Обработчик события ПередНачаломИзменения элемента НаборЗаписейНазначенияСвойства.
//
Процедура НаборЗаписейНазначенияСвойстваПередНачаломИзменения(Элемент, Отказ)

	Если НЕ ЗначениеЗаполнено(НазначениеСвойства) Тогда
		Предупреждение(НСтр("ru='Не указано назначение свойства!';uk='Не вказано призначення властивості!'"));
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры

// Обработчик события ПриНачалеРедактирования элемента НаборЗаписейНазначенияСвойства.
//
Процедура НаборЗаписейНазначенияСвойстваПриНачалеРедактирования(Элемент, НоваяСтрока)

	Элемент.ТекущиеДанные.Объект = НазначениеСвойства.ТипЗначения.ПривестиЗначение(Элемент.ТекущиеДанные.Объект);

КонецПроцедуры

// Обработчик события Очистка элемента НаборЗаписейНазначенияСвойства.Объект.
//
Процедура НаборЗаписейНазначенияСвойстваОбъектОчистка(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

КонецПроцедуры

// Обработчик события ПередНачаломДобавления элемента СписокЗначенияСвойства.
//
Процедура СписокЗначенияСвойстваПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа)

	Если ЭтоНовый() Тогда
		Вопрос = НСтр("ru='Свойство еще не записано! Записать?';uk='Властивість ще не записана! Записати?'");
		Ответ  = Вопрос(Вопрос, РежимДиалогаВопрос.ОКОтмена);

		Если Ответ = КодВозвратаДиалога.ОК Тогда
			Попытка
				Отказ = НЕ ЗаписатьВФорме();
			Исключение
				ОбщегоНазначения.СообщитьОбОшибке(ОписаниеОшибки(), Отказ);
			КонецПопытки;
		Иначе
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры



