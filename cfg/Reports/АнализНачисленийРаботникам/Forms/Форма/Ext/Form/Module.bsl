////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Обновление отчета
//
// Параметры:
//  Нет.
//
Процедура ОбновитьОтчет() Экспорт
	
	НачалоПериода = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("НачалоПериода")).Значение;
	КонецПериода  = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("КонецПериода")).Значение;
	
	Если НачалоПериода > КонецПериода тогда
		Сообщить(НСтр("ru='Неправильно указан период.';uk='Неправильно вказаний період.'"));
		Возврат;
	КонецЕсли;
	
	КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("Начислено", НСтр("ru='Начислено';uk='Нараховано'",ЛокализацияПовтИсп.ПолучитьЯзыкФормированияПечатныхФормОтчетов()));
	КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("Удержано", НСтр("ru='Удержано';uk='Утримано'",ЛокализацияПовтИсп.ПолучитьЯзыкФормированияПечатныхФормОтчетов()));
	КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("НалогиПоБухгалтерии", НСтр("ru='Налоги по бухгалтерии';uk='Податки по бухгалтерії'",ЛокализацияПовтИсп.ПолучитьЯзыкФормированияПечатныхФормОтчетов()));
	КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("НачисленоПоБухгалтерии", НСтр("ru='Начислено по бухгалтерии';uk='Нараховано по бухгалтерії'",ЛокализацияПовтИсп.ПолучитьЯзыкФормированияПечатныхФормОтчетов()));
	КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("Выплачено", НСтр("ru='Выплачено';uk='Виплачено'",ЛокализацияПовтИсп.ПолучитьЯзыкФормированияПечатныхФормОтчетов()));
	КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ДолгНаНачалоПериода", НСтр("ru='Долг на начало периода';uk='Борг на початок періоду'",ЛокализацияПовтИсп.ПолучитьЯзыкФормированияПечатныхФормОтчетов()));	
	КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ДолгНаКонецПериода", НСтр("ru='Долг на конец периода';uk='Борг на кінець періоду'",ЛокализацияПовтИсп.ПолучитьЯзыкФормированияПечатныхФормОтчетов()));	
	Если ФормированиеПечатныхФорм.ЗаполненРегламентированныйПроизводственныйКалендарь(НачалоПериода, КонецПериода) тогда 
		
		СформироватьОтчет(ЭтаФорма.ЭлементыФормы.Результат, ЭтаФорма.ДанныеРасшифровки);
		
	Иначе
		
		Сообщить(НСтр("ru='Не заполнен регламентированный производственный календарь';uk='Не заповнений регламентований виробничий календар'"));
		
	КонецЕсли;
	
КонецПроцедуры //ОбновитьОтчет()


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события перед открытием формы
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если Не ЭтоОтработкаРасшифровки 
	   И Не СохранениеНастроек.ЗаполнитьНастройкиПриОткрытииОтчета(ОтчетОбъект) Тогда
		ИнициализацияОтчета();
	КонецЕсли;
	
	ТиповыеОтчеты.НазначитьФормеУникальныйКлючИдентификации(ЭтаФорма);
	ТиповыеОтчеты.ОбновитьФормуТиповогоОтчетаПоКомпоновщику(ОтчетОбъект, ЭтаФорма);
	ТиповыеОтчеты.УправлениеОтображениемЭлементовФормыТиповогоОтчета(ОтчетОбъект, ЭтаФорма);
	
	ЗначениеПараметраНачалоПериода = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("НачалоПериода"));
	ЗначениеПараметраКонецПериода  = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("КонецПериода"));
	
	Если ЗначениеПараметраНачалоПериода.Значение = '00010101' ИЛИ ЗначениеПараметраКонецПериода.Значение = '00010101' тогда
		
		РД = ОбщегоНазначения.ПолучитьРабочуюДату();
		
		ЗначениеПараметраНачалоПериода.Значение = НачалоМесяца(РД);
		ЗначениеПараметраКонецПериода.Значение  = КонецМесяца(РД);
		
	КонецЕсли;
	
	НачалоПериода = ЗначениеПараметраНачалоПериода.Значение;
	КонецПериода  = ЗначениеПараметраКонецПериода.Значение;
	
	СтрокаНачалоПериода = РаботаСДиалогами.ДатаКакМесяцПредставление(НачалоПериода);
	СтрокаКонецПериода  = РаботаСДиалогами.ДатаКакМесяцПредставление(КонецПериода);
	
КонецПроцедуры //ПередОткрытием()

// Процедура - обработчик события обновление отображения формы
//
Процедура ОбновлениеОтображения()
	
	ТиповыеОтчеты.ОбновитьЗаголовокТиповогоОтчета(ОтчетОбъект, ЭтаФорма);
	
КонецПроцедуры //ОбновлениеОтображения()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ НАЖАТИЯ КНОПОК КОМАНДНОЙ ПАНЕЛИ

// Процедура - обработчик нажатия кнопки "Настройка"
//
Процедура ДействияФормыНастройки(Кнопка)
	
	Если ТиповыеОтчеты.РедактироватьНастройкиТиповогоОтчета(ОтчетОбъект, ЭтаФорма) Тогда
		ОбновитьОтчет();
	КонецЕсли;
	
	ЗначениеПараметраНачалоПериода = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("НачалоПериода"));
	ЗначениеПараметраКонецПериода  = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("КонецПериода"));
	ЗначениеПараметраНачалоПериода.Значение = НачалоМесяца(ЗначениеПараметраНачалоПериода.Значение);
	ЗначениеПараметраКонецПериода.Значение  = КонецМесяца(ЗначениеПараметраКонецПериода.Значение);
	
	НачалоПериода = ЗначениеПараметраНачалоПериода.Значение;
	КонецПериода  = ЗначениеПараметраКонецПериода.Значение;
	
	СтрокаНачалоПериода = РаботаСДиалогами.ДатаКакМесяцПредставление(НачалоПериода);
	СтрокаКонецПериода  = РаботаСДиалогами.ДатаКакМесяцПредставление(КонецПериода);
	
КонецПроцедуры //ДействияФормыНастройки()

// Процедура - обработчик нажатия кнопки "Сформировать"
//
Процедура ДействияФормыСформировать(Кнопка)
	
	ОбновитьОтчет();
	
КонецПроцедуры //ДействияФормыСформировать()


// Процедура - обработчик нажатия кнопки "ЗаголовокОтчета"
//
Процедура ДействияФормыЗаголовок(Кнопка)
	
	Кнопка.Пометка = Не Кнопка.Пометка;
	ТиповыеОтчеты.УправлениеОтображениемЭлементовФормыТиповогоОтчета(ОтчетОбъект, ЭтаФорма);
	ТиповыеОтчеты.УправлениеОтображениемЗаголовкаТиповогоОтчета(ОтчетОбъект, ЭтаФорма.ЭлементыФормы.Результат);
	
КонецПроцедуры //ДействияФормыЗаголовок()


// Процедура - обработчик нажатия кнопки "НовыйОтчет"
//
Процедура ДействияФормыОткрытьВНовомОкне(Кнопка)
	
	ТиповыеОтчеты.ОткрытьВНовомОкнеТиповойОтчет(ОтчетОбъект, ЭтаФорма);
	
КонецПроцедуры //ДействияФормыОткрытьВНовомОкне()


// Процедура - обработчик нажатия кнопки "ВосстановитьЗначения"
//
Процедура ДействияФормыВосстановитьЗначения(Кнопка)
	
	СохранениеНастроек.ВыбратьНастройкуФормы(СохраненнаяНастройка, ЭтаФорма, "ОтчетОбъект." + ОтчетОбъект.Метаданные().Имя, Ложь);
	ТиповыеОтчеты.ОбновитьФормуТиповогоОтчетаПоКомпоновщику(ОтчетОбъект, ЭтаФорма);
	ТиповыеОтчеты.ОбновитьЗаголовокТиповогоОтчета(ОтчетОбъект, ЭтаФорма);
	
КонецПроцедуры //ДействияФормыВосстановитьЗначения()

// Процедура - обработчик нажатия кнопки "СохранитьЗначения"
//
Процедура ДействияФормыСохранитьЗначения(Кнопка)
	
	СохранениеНастроек.ВыбратьНастройкуФормы(СохраненнаяНастройка, ЭтаФорма, "ОтчетОбъект." + ОтчетОбъект.Метаданные().Имя, Истина);
	ТиповыеОтчеты.ОбновитьЗаголовокТиповогоОтчета(ОтчетОбъект, ЭтаФорма);
	
КонецПроцедуры //ДействияФормыСохранитьЗначения()

// Процедура - обработчик нажатия кнопки "Отбор"
//
Процедура ДействияФормыОтбор(Кнопка)
	
	Кнопка.Пометка = Не Кнопка.Пометка;
	ПоказыватьБыстрыйОтбор = Кнопка.Пометка;
	ТиповыеОтчеты.УправлениеОтображениемЭлементовФормыТиповогоОтчета(ОтчетОбъект, ЭтаФорма);
	ТиповыеОтчеты.ОбработкаИзмененияТиповогоОтчетаНаФормеОтчета(ОтчетОбъект, ЭтаФорма);
	
КонецПроцедуры //ДействияФормыОтбор()

// Процедура - обработчик нажатия кнопки "Печать"
//
Процедура ДействияФормыПечать(Кнопка)
	
	ТиповыеОтчеты.ПечатьТиповогоОтчета(ЭлементыФормы.Результат);
	
КонецПроцедуры //ДействияФормыПечать()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Процедура - обработчик нажатия кнопки "Период"
//
Процедура ПолеВводаПериодПриИзменении(Элемент)
	
	ТиповыеОтчеты.ОбновитьПараметрыПериодаПоФорме(КомпоновщикНастроек, ЭтаФорма);
	
КонецПроцедуры //ПолеВводаПериодПриИзменении()

// Процедура - обработчик события регулирование поле ввода "НачалоПериода"
//
Процедура НачалоПериодаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	НачалоПериода    = ДобавитьМесяц(НачалоПериода, Направление);
	Элемент.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(НачалоПериода);
	
	КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("НачалоПериода").Значение = НачалоМесяца(НачалоПериода);
	ТиповыеОтчеты.ОбработкаИзмененияТиповогоОтчетаНаФормеОтчета(ОтчетОбъект, ЭтаФорма);
	
КонецПроцедуры //НачалоПериодаРегулирование()

// Процедура - обработчик события авто подбора текста поле ввода "НачалоПериода"
//
Процедура НачалоПериодаАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	РаботаСДиалогами.ДатаКакМесяцАвтоПодборТекста(Текст, ТекстАвтоПодбора, СтандартнаяОбработка);
	
КонецПроцедуры //НачалоПериодаАвтоПодборТекста()

// Процедура - обработчик события начало выбора из списка кнопки "НачалоПериода"
//
Процедура НачалоПериодаНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	РаботаСДиалогами.НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, СтандартнаяОбработка, НачалоПериода, ЭтаФорма);
	КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("НачалоПериода").Значение = НачалоМесяца(НачалоПериода);
	ТиповыеОтчеты.ОбработкаИзмененияТиповогоОтчетаНаФормеОтчета(ОтчетОбъект, ЭтаФорма);
	
КонецПроцедуры //НачалоПериодаНачалоВыбораИзСписка()

// Процедура - обработчик события очистка кнопки "НачалоПериода"
//
Процедура НачалоПериодаОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры //НачалоПериодаОчистка()

// Процедура - обработчик события начало выбора из списка кнопки "КонецПериода"
//
Процедура КонецПериодаНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	РаботаСДиалогами.НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, СтандартнаяОбработка, КонецПериода, ЭтаФорма);
	КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("КонецПериода").Значение = КонецМесяца(КонецПериода);
	ТиповыеОтчеты.ОбработкаИзмененияТиповогоОтчетаНаФормеОтчета(ОтчетОбъект, ЭтаФорма);
	
КонецПроцедуры //КонецПериодаНачалоВыбораИзСписка()

// Процедура - обработчик события очистка кнопки "КонецПериода"
//
Процедура КонецПериодаОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры //КонецПериодаОчистка()

// Процедура - обработчик события регулирование поле ввода "КонецПериода"
//
Процедура КонецПериодаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	КонецПериода     = ДобавитьМесяц(КонецПериода, Направление);
	Элемент.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(КонецПериода);
	КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("КонецПериода").Значение = КонецМесяца(КонецПериода);
	ТиповыеОтчеты.ОбработкаИзмененияТиповогоОтчетаНаФормеОтчета(ОтчетОбъект, ЭтаФорма);
	
КонецПроцедуры //КонецПериодаРегулирование()

// Процедура - обработчик события авто подбора текста поле ввода "КонецПериода"
//
Процедура КонецПериодаАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	РаботаСДиалогами.ДатаКакМесяцАвтоПодборТекста(Текст, ТекстАвтоПодбора, СтандартнаяОбработка);
	
КонецПроцедуры //КонецПериодаАвтоПодборТекста()


// Процедура - обработчик события при изменении поля ввода "НачалоПериода"
//
Процедура НачалоПериодаПриИзменении(Элемент)
	
	РаботаСДиалогами.ДатаКакМесяцПодобратьДатуПоТексту(Элемент.Значение, НачалоПериода);
	
	Элемент.Значение           = РаботаСДиалогами.ДатаКакМесяцПредставление(НачалоПериода);
	
	ЗначениеПараметра          = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("НачалоПериода"));;
	ЗначениеПараметра.Значение = НачалоМесяца(НачалоПериода);
	ТиповыеОтчеты.ОбработкаИзмененияТиповогоОтчетаНаФормеОтчета(ОтчетОбъект, ЭтаФорма);
	
КонецПроцедуры //НачалоПериодаПриИзменении()

// Процедура - обработчик события при изменении поля ввода "КонецПериода"
//
Процедура КонецПериодаПриИзменении(Элемент)
	
	РаботаСДиалогами.ДатаКакМесяцПодобратьДатуПоТексту(Элемент.Значение, КонецПериода);
	
	Элемент.Значение           = РаботаСДиалогами.ДатаКакМесяцПредставление(КонецПериода);
	
	ЗначениеПараметра          = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("КонецПериода"));
	ЗначениеПараметра.Значение = КонецМесяца(КонецПериода);
	ТиповыеОтчеты.ОбработкаИзмененияТиповогоОтчетаНаФормеОтчета(ОтчетОбъект, ЭтаФорма);
	
КонецПроцедуры //КонецПериодаПриИзменении()

// Процедура - обработчик события обработка расшифровки табличного поля "Результат"
//
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	Перем ВыполненноеДействие;

	// Запретим стандартную обработку расшифровки
	СтандартнаяОбработка = Ложь;

	// Создадим и инициализируем обработчик расшифровки
	ОбработкаРасшифровки = Новый ОбработкаРасшифровкиКомпоновкиДанных(ДанныеРасшифровки, Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
	
	ДоступныеДействия = Новый Массив();
	ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.ОткрытьЗначение);
	ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Расшифровать);
	ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Упорядочить);
	
	// Осуществим выбор действия расшифровки пользователем
	Настройки = ОбработкаРасшифровки.Выполнить(Расшифровка, ВыполненноеДействие, ДоступныеДействия);
	
	Если Настройки <> Неопределено Тогда
		// Пользователь выбрал действие, для которого нужно менять настройки

		Если ВыполненноеДействие = ДействиеОбработкиРасшифровкиКомпоновкиДанных.Упорядочить Тогда
			
			ФормированиеПечатныхФорм.ПеренестиПорядокВОтчет(Настройки);
			
			// Если требется упорядочить - упорядочим в текущем отчете
			КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
			ОбновитьОтчет();

		Иначе
            // При других действиях - создадим новый отчет, откроем форму, сформируем отчет в ней
			Отчет = Отчеты[Метаданные().Имя].Создать();
			Отчет.КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
			Форма = Отчет.ПолучитьФорму();
			Форма.ОбновитьОтчет();
			Форма.Открыть();

		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры //РезультатОбработкаРасшифровки()

Процедура ТабличноеПолеОтборПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ТиповыеОтчеты.ОбработкаИзмененияТиповогоОтчетаНаФормеОтчета(ОтчетОбъект, ЭтаФорма);
	
КонецПроцедуры

