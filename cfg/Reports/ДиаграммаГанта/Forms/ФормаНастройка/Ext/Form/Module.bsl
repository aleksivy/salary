////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Заполняет диалог по значениям реквизитов отчета
//
// Параметры:
//	Нет.
//
Процедура ЗаполнитьДиалогПоОбъекту()

	// Здесь должно быть расположено заполнение реквизитов формы
	// по реквизитам отчета, если они непосредственно не связаны
	// с реквизитами отчета (если таковые имеются)
	
	Если НЕ ВыбиратьВидОтчета Тогда
		ЭлементыФормы.ПанельРазделУчета.Свертка = РежимСверткиЭлементаУправления.Верх;
	КонецЕсли; 
	
	// Доступные периодичности для каждого вида отчета
	КодОтчета = ПолучитьКодОтчета();
	Если КодОтчета = мПланируемаяЗанятостьРаботников ИЛИ КодОтчета = мПланируемаяЗанятостьРаботниковНеУтверждено ИЛИ КодОтчета = мПланируемаяЗанятостьПомещений Тогда
		
		ЭлементыФормы.ПереключательПериодичность1.Заголовок 			= "Час, день";
		ЭлементыФормы.ПереключательПериодичность1.ВыбираемоеЗначение 	= мЧасДень;
		ЭлементыФормы.ПереключательПериодичность2.Заголовок 			= "День, неделя, месяц";
		ЭлементыФормы.ПереключательПериодичность2.ВыбираемоеЗначение 	= мДеньНеделяМесяц;
		ЭлементыФормы.ПереключательПериодичность3.Заголовок 			= "Неделя, месяц, год";
		ЭлементыФормы.ПереключательПериодичность3.ВыбираемоеЗначение 	= мНеделяМесяцГод;
		
	Иначе
		
		ЭлементыФормы.ПереключательПериодичность1.Заголовок 			= "День, неделя, месяц";
		ЭлементыФормы.ПереключательПериодичность1.ВыбираемоеЗначение 	= мДеньНеделяМесяц;
		ЭлементыФормы.ПереключательПериодичность2.Заголовок 			= "Неделя, месяц, год";
		ЭлементыФормы.ПереключательПериодичность2.ВыбираемоеЗначение 	= мНеделяМесяцГод;
		ЭлементыФормы.ПереключательПериодичность3.Заголовок 			= "Месяц, год";
		ЭлементыФормы.ПереключательПериодичность3.ВыбираемоеЗначение 	= мМесяцГод;
		
	КонецЕсли;
		
	ЭлементыФормы.ПереключательПериодичность1.Значение = Периодичность;
	
КонецПроцедуры // ЗаполнитьДиалогПоОбъекту()

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Обработчик события "ПередОткрытием" формы
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	//Настройка списка видов отчета
	СписокВидовОтчета = Новый СписокЗначений;
	Для каждого Строка Из мТаблицаВидыОтчета Цикл
		СписокВидовОтчета.Добавить(Строка.ВидОтчета, Строка.ВидОтчета);
	КонецЦикла; 
	ЭлементыФормы.ПолеВыбораВидОтчета.СписокВыбора = СписокВидовОтчета;
	ЭлементыФормы.ПолеВыбораВидОтчета.Значение = ВидОтчета;

КонецПроцедуры

// Обработчик события "ПриОткрытии" формы
Процедура ПриОткрытии()
	
	ЗаполнитьДиалогПоОбъекту();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ КОМАНДНОЙ ПАНЕЛИ ФОРМЫ

// Обработчик события Нажатие кнопки ОК командной панели ОсновныеДействияФормы.
//
Процедура ОсновныеДействияФормыОК(Кнопка)
	
	Закрыть(Истина);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ДИАЛОГА

// Процедура - обработчик нажатия кнопки настройки периода.
//
Процедура КнопкаНастройкаПериодаНажатие(Элемент)
	
	НП = Новый НастройкаПериода;
	НП.УстановитьПериод(ДатаНач, ДатаКон);
	Если НП.Редактировать() Тогда
		ДатаНач = НП.ПолучитьДатуНачала();
		ДатаКон = НП.ПолучитьДатуОкончания();
	КонецЕсли;

КонецПроцедуры // КнопкаНастройкаПериодаНажатие()

// Процедура - обработчик события "ПриИзменении" вида отчета
Процедура ПолеВыбораВидОтчетаПриИзменении(Элемент)
	
	Заголовок = ВидОтчета;

	Состояние(НСтр("ru='Заполнение по умолчанию';uk='Заповнення по умовчанню'"));
	ЗаполнитьНачальныеНастройки();
	ЗаполнитьДиалогПоОбъекту();
	Оповестить("ИзмененоИмяРегистра",,ЭтаФорма);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ПАНЕЛИ ОТБОР

// Процедура - обработчик перед удалением строки отбора
//
Процедура ОтборПередУдалением(Элемент, Отказ)
	
	Если Не ПустаяСтрока(Элемент.ТекущаяСтрока.Имя) Тогда
		Отказ = Истина;
	КонецЕсли; 
	
КонецПроцедуры // ОтборПередУдалением()


////////////////////////////////////////////////////////////////////////////////
// ИНИЦИАЛИЗАЦИЯ ФОРМЫ
// 

// Если вызывающая сторона явна не установит данный признак, то панель выбора вида отчета будет недоступна
ВыбиратьВидОтчета = Ложь;

