////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем ПоказыватьЗаголовок;
Перем ВысотаЗаголовка;
Перем НеВосстанавливатьНастройку;


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

//  Управляет кнокой заголовка
//
// Параметры:
//	Нет.
//
Процедура УправлениеКнопкойЗаголовка()
		
	Элементыформы.КоманднаяПанельФормы.Кнопки.Заголовок.Пометка = ПоказыватьЗаголовок	
		
КонецПроцедуры // ВыводЗаголовка()

//  Управляет выводом заголовка
//
// Параметры:
//	Нет.
//
Процедура ВыводЗаголовка()
	
	ЭлементыФормы.ПолеСправки.Область(1,,ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
	
КонецПроцедуры // ВыводЗаголовка()

// Процедура обновляет диаграмму ганта по установленным датам.
//
// Параметры
//  Нет  
//
Процедура ОтрисовкаГанта() Экспорт

	Гант = ЭлементыФормы.ДиаграммаГанта;
	Гант.Обновление = Истина;
	Гант.Очистить();

	
	серия1 = Гант.УстановитьСерию("Затраты","");
	цвет = новый цвет(225,210,160);
	Серия1.Цвет = цвет;	
	
	серия2 = Гант.УстановитьСерию("Результат","");
	цвет = новый цвет(160,200,220);
	Серия2.Цвет = цвет;
	
	
	Точка = гант.УстановитьТочку("Затраты",);
	Значение1 = Гант.ПолучитьЗначение(Точка, Серия1);										
	Интервал = Значение1.Добавить();
	Интервал.Начало = ДатаРасходовС;
	Интервал.Конец = ДатаРасходовПо;

	
	Точка = гант.УстановитьТочку("Результат",);
	Значение2 = Гант.ПолучитьЗначение(Точка, Серия2);										
	Интервал = Значение2.Добавить();
	Интервал.Начало = ДатаПриходовС;
	Интервал.Конец = ДатаПриходовПо;

	//показ диаграммы
	Гант.ПоказатьУровеньТочек(0);
	Гант.ПоказатьУровеньСерий(0);
	Гант.Обновление = Истина;

	

КонецПроцедуры // ОтрисовкаГанта()

// Обновляет отчет
//
// Параметры:
//	Нет.
//
Процедура ОбновитьОтчет() Экспорт
	
  ОтрисовкаГанта();	
  СформироватьОтчет(ЭлементыФормы.ПолеСправки,ПоказыватьЗаголовок,ВысотаЗаголовка,Ложь);
  
КонецПроцедуры  // ОбновитьОтчет


///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если НЕ (неВосстанавливатьНастройку = Истина) Тогда
		
		ЗаполнитьНачальныеНастройки();
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДатаПриходовПо) Тогда
		ДатаПриходовПо = РабочаяДата;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ДатаРасходовПо) Тогда
		ДатаРасходовПо = РабочаяДата;
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события при открытии формы
//
Процедура ПриОткрытии()
	
	УстановилиСверткуИзНастройки = Ложь;
	
	Если НЕ (НеВосстанавливатьНастройку = Истина) Тогда
		
	Иначе
		//в следующий раз настройку мы все-таки восстановим - форма уже открыта...
		НеВосстанавливатьНастройку = Ложь;
		
	КонецЕсли;
		
	ВысотаЗаголовка = 0;
	ЭлементыФормы.ПолеСправки.Очистить();
	ПоказыватьЗаголовок = Истина;
	
	УправлениеКнопкойЗаголовка();

	// Установим флажок для выбранного типа отчета.
	
	ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Настройка.Кнопки.ОтчетПоКандидатам.Пометка = ТипОтчета = "Кандидат";
	ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Настройка.Кнопки.ОтчетПоРаботника.Пометка  = ТипОтчета = "Работник";
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура - обработчик нажатия кнопки "Заголовок".
//
Процедура КоманднаяПанельФормыЗаголовок(Кнопка)
	
	ПоказыватьЗаголовок = Не ПоказыватьЗаголовок;
	УправлениекнопкойЗаголовка();
	ВыводЗаголовка();
	
КонецПроцедуры // КоманднаяПанельФормыЗаголовок

// Процедура - обработчик нажатия кнопки "Сформировать"
//
Процедура КнопкаСформироватьНажатие(Элемент)
	
	ОбновитьОтчет()	
	
КонецПроцедуры // КнопкаСформироватьНажатие

// Процедура - обработчик нажатия кнопки "Отбор"
//
Процедура КоманднаяПанельФормыОтбор(Кнопка)
	
	ФормаВыбораИсточников = ПолучитьФорму("ФормаВыбораИсточников", ЭтаФорма);
	ФормаВыбораИсточников.Открыть();
		
КонецПроцедуры

// Процедура - обработчик нажатия кнопки "ОтчетПоКандидатам" в подменю "Настройки"
//
Процедура КоманднаяПанельФормыОтчетПоКандидатам(Кнопка)
	ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Настройка.Кнопки.ОтчетПоКандидатам.Пометка = Истина;	
	ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Настройка.Кнопки.ОтчетПоРаботника.Пометка  = Ложь;
	ТипОтчета = "Кандидат";
	ОбновитьОтчет()
КонецПроцедуры

// Процедура - обработчик нажатия кнопки "ОтчетПоРаботника" в подменю "Настройки"
//
Процедура КоманднаяПанельФормыОтчетПоРаботника(Кнопка)
	ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Настройка.Кнопки.ОтчетПоКандидатам.Пометка = Ложь;	
	ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Настройка.Кнопки.ОтчетПоРаботника.Пометка  = Истина;
    ТипОтчета = "Работник";
	ОбновитьОтчет()
КонецПроцедуры

// Процедура - обработчик нажатия кнопки "На принтер"
Процедура ДействияФормыНаПринтер(Кнопка)
	
	ЭлементыФормы.ПолеСправки.Напечатать();

КонецПроцедуры

// Обработчик события элемента КоманднаяПанельФормы.НовыйОтчет.
//
Процедура КоманднаяПанельФормыНовыйОтчет(Кнопка)
	
	Если Строка(ЭтотОбъект) = "ВнешняяОбработкаОбъект." + ЭтотОбъект.Метаданные().Имя Тогда
			
		Предупреждение(НСтр("ru='Данный отчет является внешней обработкой.';uk='Даний звіт є зовнішньою обробкою.'") + Символы.ПС + НСтр("ru='Открытие нового отчета возможно только для объектов конфигурации.';uk=""Відкриття нового звіту можливо тільки для об'єктів конфігурації."""));
		Возврат;
			
	Иначе
			
		НовыйОтчет = Отчеты[ЭтотОбъект.Метаданные().Имя].Создать();
			
	КонецЕсли;
	
	ФормаНовогоОтчета = НовыйОтчет.ПолучитьФорму();
	ФормаНовогоОтчета.Открыть();

КонецПроцедуры // КоманднаяПанельФормыДействиеНовыйОтчет()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ДИАЛОГА

// Процедура выбора периода Затрат
//
//
Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(ДатаРасходовС, ?(ДатаРасходовПо='0001-01-01', ДатаРасходовПо, КонецДня(ДатаРасходовПо)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.Редактировать();
	ДатаРасходовС = НастройкаПериода.ПолучитьДатуНачала();
	ДатаРасходовПо = НастройкаПериода.ПолучитьДатуОкончания();
	
	ОтрисовкаГанта();	

КонецПроцедуры // ВыбПериодНажатие

// Процедура выбора периода Результата
//
//
Процедура ВыбПериодНажатие1(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(ДатаПриходовС, ?(ДатаПриходовПо='0001-01-01', ДатаПриходовПо, КонецДня(ДатаПриходовПо)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.Редактировать();
	ДатаПриходовС = НастройкаПериода.ПолучитьДатуНачала();
	ДатаПриходовПо = НастройкаПериода.ПолучитьДатуОкончания();
	
	 ОтрисовкаГанта();	

КонецПроцедуры // ВыбПериодНажатие


