////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Обновляет таблицу отчета
//
// Параметры:
//	Нет.
//
Процедура ОбновитьОтчет() Экспорт
	
	Если ВариантОтображения = Перечисления.ВариантыОтображенияОтчетов.Таблица Тогда
	
		ЭлементыФормы.ПанельИзображений.ТекущаяСтраница = ЭлементыФормы.ПанельИзображений.Страницы.Таблица;
		СформироватьОтчет(ЭлементыФормы.ПолеТабличногоДокументаРезультат);
		
	ИначеЕсли ВариантОтображения = Перечисления.ВариантыОтображенияОтчетов.Диаграмма Тогда
	
		ЭлементыФормы.ПанельИзображений.ТекущаяСтраница = ЭлементыФормы.ПанельИзображений.Страницы.Диаграмма;
		СформироватьОтчет(ЭлементыФормы.Диаграмма);
		
	ИначеЕсли ВариантОтображения = Перечисления.ВариантыОтображенияОтчетов.СводнаяТаблица Тогда
	
		ЭлементыФормы.ПанельИзображений.ТекущаяСтраница = ЭлементыФормы.ПанельИзображений.Страницы.СводнаяТаблица;
		СформироватьОтчет(ЭлементыФормы.СводнаяТаблица.ВстроенныеТаблицы.СводнаяТаблица);
		
	КонецЕсли;
	
КонецПроцедуры // ОбновитьОтчет()

// Формирует текст заголовка
//
// Параметры:
//	Нет.
//
Процедура СформироватьЗаголовокФормы()

	Заголовок = УправлениеОтчетами.СформироватьЗаголовокОсновнойФормы(УниверсальныйОтчет.ДатаНач, УниверсальныйОтчет.ДатаКон, ЭтотОбъект.Метаданные().Синоним, Ложь);

КонецПроцедуры // СформироватьЗаголовокФормы()

// Заполняет параметры диаграммы по умолчанию
//
// Параметры:
//	Нет.
//
Процедура ЗаполнитьНачальныеНастройкиДиаграммы()
	
	ОтчетДиаграмма.ПостроительОтчета.УстановитьНастройки(УниверсальныйОтчет.ПостроительОтчета.ПолучитьНастройки());
	
	ОтчетДиаграмма.ЗаполнитьПоказатели("СуммаВзаиморасчетовНачальныйОстаток", "Сальдо начальное", Истина, "ЧЦ=15; ЧДЦ=2");
	ОтчетДиаграмма.ЗаполнитьПоказатели("СуммаВзаиморасчетовПриход", "Начислено", Истина, "ЧЦ=15; ЧДЦ=2");
	ОтчетДиаграмма.ЗаполнитьПоказатели("СуммаВзаиморасчетовРасход", "Выплачено", Истина, "ЧЦ=15; ЧДЦ=2");
	ОтчетДиаграмма.ЗаполнитьПоказатели("СуммаВзаиморасчетовКонечныйОстаток", "Сальдо конечное", Истина, "ЧЦ=15; ЧДЦ=2");
	
	Если ОтчетДиаграмма.ТипДиаграммыОтчета<>Неопределено Тогда
		ЭлементыФормы.Диаграмма.ТипДиаграммы = ОтчетДиаграмма.ТипДиаграммыОтчета;
	Иначе
		ОтчетДиаграмма.ТипДиаграммыОтчета = ЭлементыФормы.Диаграмма.ТипДиаграммы;
	КонецЕсли;
	
	Если ОтчетДиаграмма.ВидПодписейККруговойДиаграмме<>Неопределено Тогда
		ЭлементыФормы.Диаграмма.ВидПодписей = ОтчетДиаграмма.ВидПодписейККруговойДиаграмме;
	Иначе
		ОтчетДиаграмма.ВидПодписейККруговойДиаграмме = ЭлементыФормы.Диаграмма.ВидПодписей;
	КонецЕсли;
	
	Если ОтчетДиаграмма.РаздвижениеСерийКруговойДиаграммы<>Неопределено Тогда
		ЭлементыФормы.Диаграмма.АвтоРаздвижениеСерий = ОтчетДиаграмма.РаздвижениеСерийКруговойДиаграммы;
	Иначе
		ОтчетДиаграмма.РаздвижениеСерийКруговойДиаграммы = ЭлементыФормы.Диаграмма.АвтоРаздвижениеСерий;
	КонецЕсли;
	
	Если ОтчетДиаграмма.ОриентацияИзометрическойДиаграммы<>Неопределено Тогда
		ЭлементыФормы.Диаграмма.Ориентация = ОтчетДиаграмма.ОриентацияИзометрическойДиаграммы;
	Иначе
		ОтчетДиаграмма.ОриентацияИзометрическойДиаграммы = ЭлементыФормы.Диаграмма.Ориентация;
	КонецЕсли;
	
	Если ОтчетДиаграмма.РежимПробеловДиаграммыСОбластями<>Неопределено Тогда
		ЭлементыФормы.Диаграмма.РежимПробелов = ОтчетДиаграмма.РежимПробеловДиаграммыСОбластями;
	Иначе
		ОтчетДиаграмма.РежимПробеловДиаграммыСОбластями = ЭлементыФормы.Диаграмма.РежимПробелов;
	КонецЕсли;
	
	Если ОтчетДиаграмма.ОграничениеСерий<>Неопределено Тогда
		ЭлементыФормы.Диаграмма.МаксимумСерий = ОтчетДиаграмма.ОграничениеСерий;
	Иначе
		ОтчетДиаграмма.ОграничениеСерий = ЭлементыФормы.Диаграмма.МаксимумСерий;
	КонецЕсли;
	
	ОтчетДиаграмма.ОтображатьЗаголовок = ЭлементыФормы.Диаграмма.ОтображатьЗаголовок;
	ОтчетДиаграмма.ОтображатьЛегенду   = ЭлементыФормы.Диаграмма.ОтображатьЛегенду;
	
	ОтчетДиаграмма.Окантовка = Истина;
	ОтчетДиаграмма.Свет = Истина;
	
КонецПроцедуры // ЗаполнитьНачальныеНастройкиДиаграммы()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события перед открытием формы
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

 	ЗаполнитьНачальныеНастройкиДиаграммы();
 	
КонецПроцедуры // ПередОткрытием()

// Процедура - обработчик события при открытии формы
//
Процедура ПриОткрытии()
	
	ВариантОтображения = ?(ВариантОтображения.Пустая(), Перечисления.ВариантыОтображенияОтчетов.Таблица, ВариантОтображения);
	
	Если НЕ ЗначениеЗаполнено(УниверсальныйОтчет.ДатаКон) Тогда
		
 		УниверсальныйОтчет.ДатаНач = НачалоМесяца(ОбщегоНазначения.ПолучитьРабочуюДату());
 		УниверсальныйОтчет.ДатаКон = КонецМесяца(УниверсальныйОтчет.ДатаНач) + 1;
 		ОтчетДиаграмма.ДатаНач = УниверсальныйОтчет.ДатаНач;
 		ОтчетДиаграмма.ДатаКон = УниверсальныйОтчет.ДатаКон;
		
 	КонецЕсли;
	
	МесяцСтрока = РаботаСДиалогами.ДатаКакМесяцПредставление(УниверсальныйОтчет.ДатаНач);
	
	УниверсальныйОтчет.мДействиеПолеВводаВидСравненияПриИзменении = Новый Действие("ПолеВводаВидСравненияПриИзменении");
	УниверсальныйОтчет.мДействиеПолеВводаЗначениеПриИзменении = Новый Действие("ПолеВводаЗначениеПриИзменении");
	УниверсальныйОтчет.мИмяЭлементаУправленияБыстрыеОтборы = "ПанельИзображений";
	
	УниверсальныйОтчет.ФормаПриОткрытии(УниверсальныйОтчет, ЭтотОбъект, ЭтаФорма);
	
	ЭлементыФормы.КоманднаяПанельФормы.Кнопки.ПодменюОтображение.Кнопки.ОтображениеТаблица.Пометка = Истина;
	ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подменю.Кнопки.ПодменюОтображение.Кнопки.ОтображениеТаблица.Пометка = Истина;
	
	СформироватьЗаголовокФормы();
	
КонецПроцедуры // ПриОткрытии()

// Процедура - обработчик обновления данных формы
//
Процедура ОбновлениеОтображения()

	СформироватьЗаголовокФормы();
	
КонецПроцедуры // ОбновлениеОтображения()

// Процедура - обработчик события при закрытии формы
//
Процедура ПриЗакрытии()
	
	УниверсальныйОтчет.ФормаПриЗакрытии(УниверсальныйОтчет, ЭтотОбъект, ЭтаФорма);
		
КонецПроцедуры // ПриЗакрытии()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ НАЖАТИЯ КНОПОК КОМАНДНОЙ ПАНЕЛИ

// Процедура - обработчик нажатия кнопки "Сформировать"
//
Процедура КоманднаяПанельФормыСформировать(Кнопка)
	
	ОбновитьОтчет();
	
КонецПроцедуры // КоманднаяПанельФормыСформировать()

// Процедура - обработчик нажатия кнопки "Настройка"
//
Процедура КоманднаяПанельФормыНастройка(Кнопка)
	
	Если ВариантОтображения = Перечисления.ВариантыОтображенияОтчетов.Диаграмма Тогда
		
		ФормаНастройка = ОтчетДиаграмма.ПолучитьФорму("ФормаНастройка", ЭтаФорма);
		
		мНазваниеОтчета = ОтчетДиаграмма.мНазваниеОтчета;
		ОтчетДиаграмма.мВыбиратьИмяРегистра = Ложь;
		ОтчетДиаграмма.мНазваниеОтчета = ОтчетДиаграмма.мНазваниеОтчета + " - настройка диаграммы"; // временно уточним название отчета
		
		РезультатОткрытия = ФормаНастройка.ОткрытьМодально();

		Если РезультатОткрытия = Истина Тогда
			ОтчетДиаграмма.Показатели[ОтчетДиаграмма.НомерПоказателя].Использование = Истина;
			ОбновитьОтчет();
		КонецЕсли;
		
		ОтчетДиаграмма.мНазваниеОтчета = мНазваниеОтчета;
		
	Иначе
	
		УниверсальныйОтчет.ФормаНастройка(УниверсальныйОтчет, ЭтотОбъект, ЭтаФорма, ЭлементыФормы.ПолеТабличногоДокументаРезультат);
		
	КонецЕсли;
	
	МесяцСтрока = РаботаСДиалогами.ДатаКакМесяцПредставление(УниверсальныйОтчет.ДатаНач);
	
КонецПроцедуры // КоманднаяПанельФормыНастройка()

// Процедура - обработчик нажатия кнопки "НовыйОтчет"
//
Процедура КоманднаяПанельФормыНовыйОтчет(Кнопка)
	
	// Дополнительные параметры в расшифровывающий отчет можно перередать
	// посредством инициализации переменной "ДополнительныеПараметры".
	ДополнительныеПараметры = Неопределено;
	
	УниверсальныйОтчет.ФормаНовыйОтчет(УниверсальныйОтчет, ЭтотОбъект, ДополнительныеПараметры);

КонецПроцедуры // КоманднаяПанельФормыНовыйОтчет()

// Процедура - обработчик нажатия кнопки "БыстрыеОтборы"
//
Процедура КоманднаяПанельФормыБыстрыеОтборы(Кнопка)
	
	УниверсальныйОтчет.УправлениеОтображениемЭлементовФормы(УниверсальныйОтчет, ЭтаФорма, Кнопка.Имя);
	УниверсальныйОтчет.УправлениеПанельюБыстрыеОтборы(УниверсальныйОтчет, ЭтаФорма);
	
КонецПроцедуры // КоманднаяПанельФормыБыстрыеОтборы()

// Процедура - обработчик нажатия кнопки "ЗаголовокОтчета"
//
Процедура КоманднаяПанельФормыЗаголовокОтчета(Кнопка)
	
	УниверсальныйОтчет.УправлениеОтображениемЭлементовФормы(УниверсальныйОтчет, ЭтаФорма, Кнопка.Имя);
	УниверсальныйОтчет.УправлениеОтображениемЗаголовка(УниверсальныйОтчет, ЭлементыФормы.ПолеТабличногоДокументаРезультат);
	
КонецПроцедуры // КоманднаяПанельФормыЗаголовокОтчета()

// Процедура - обработчик нажатия кнопки "Таблица"
//
Процедура КоманднаяПанельФормыОтображениеТаблица(Кнопка)
	
	ВариантОтображения = Перечисления.ВариантыОтображенияОтчетов.Таблица;
	УправлениеОтчетами.ПометитьКнопкиОтображения(ЭтотОбъект, ЭтаФорма);
	ОбновитьОтчет();
	
КонецПроцедуры // КоманднаяПанельФормыОтображениеТаблица()

// Процедура - обработчик нажатия кнопки "Диаграмма"
//
Процедура КоманднаяПанельФормыОтображениеДиаграмма(Кнопка)

	ВариантОтображения = Перечисления.ВариантыОтображенияОтчетов.Диаграмма;
	УправлениеОтчетами.ПометитьКнопкиОтображения(ЭтотОбъект, ЭтаФорма);
	ОбновитьОтчет();
	
КонецПроцедуры // КоманднаяПанельФормыОтображениеДиаграмма()

// Процедура - обработчик нажатия кнопки "Сводная таблица"
//
Процедура КоманднаяПанельФормыОтображениеСводнаяТаблица(Кнопка)

	ВариантОтображения = Перечисления.ВариантыОтображенияОтчетов.СводнаяТаблица;
	УправлениеОтчетами.ПометитьКнопкиОтображения(ЭтотОбъект, ЭтаФорма);
	ОбновитьОтчет();
	
КонецПроцедуры // КоманднаяПанельФормыОтображениеСводнаяТаблица()

// Процедура - обработчик нажатия кнопки "ВосстановитьНастройку"
//
Процедура КоманднаяПанельФормыВосстановитьНастройку(Кнопка)
	
	УниверсальныйОтчет.ВосстановитьНастройки(УниверсальныйОтчет, ЭтотОбъект, ЭтаФорма);
	УправлениеОтчетами.ПометитьКнопкиОтображения(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры // КоманднаяПанельФормыДействиеВосстановитьЗначения()

// Процедура - обработчик нажатия кнопки "СохранитьНастройку"
//
Процедура КоманднаяПанельФормыСохранитьНастройку(Кнопка)
	
	УниверсальныйОтчет.СохранитьНастройки(УниверсальныйОтчет, ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры // КоманднаяПанельФормыДействиеСохранитьЗначения()

// Процедура - обработчик нажатия кнопки "Печать" диаграммы.
//
Процедура КоманднаяПанельДиаграммыПечать(Кнопка)
	
	ДокументРезультат = Новый ТабличныйДокумент;
	ОтчетДиаграмма.ПолучитьДиаграммуНаПечать(ДокументРезультат);
	ДокументРезультат.Показать(ЭтотОбъект.Метаданные().Синоним);
	
КонецПроцедуры // КоманднаяПанельДиаграммыПечать()

Процедура ДиаграммаОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	ОбработкаРасшифровки(Расшифровка, ОтчетОбъект);
	
КонецПроцедуры // ДиаграммаОбработкаРасшифровки()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Процедура - обработчик нажатия кнопки "КнопкаНастройкаПериода"
//
Процедура КнопкаНастройкаПериодаНажатие(Элемент)
	
	УниверсальныйОтчет.ФормаНастройкаПериода(УниверсальныйОтчет);
	
КонецПроцедуры // КнопкаНастройкаПериодаНажатие()

// Процедура - обработчик нажатия кнопки "КнопкаМинусПериод"
//
Процедура КнопкаМинусПериодНажатие(Элемент)
	
	УниверсальныйОтчет.ФормаМинусПериод(УниверсальныйОтчет);
	
КонецПроцедуры // КнопкаМинусПериодНажатие()

// Процедура - обработчик нажатия кнопки "КнопкаПлюсПериод"
//
Процедура КнопкаПлюсПериодНажатие(Элемент)
	
	УниверсальныйОтчет.ФормаПлюсПериод(УниверсальныйОтчет);
	
КонецПроцедуры // КнопкаПлюсПериодНажатие()

// Процедура - обработчик события "Обработка расшифровки" поля табличного документа "ПолеТабличногоДокументаРезультат"
//
Процедура ПолеТабличногоДокументаРезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбработкаРасшифровки(Расшифровка, ОтчетОбъект);
	
КонецПроцедуры // ПолеТабличногоДокументаРезультатОбработкаРасшифровки()

// Процедура - обработчик события "При изменении" поля ввода "ПолеВводаВидСравнения"
//
Процедура ПолеВводаВидСравненияПриИзменении(Элемент)
	
	УниверсальныйОтчет.ВидСравненияПриИзменении(Элемент, ЭтаФорма);
	
КонецПроцедуры // ПолеВводаВидСравненияПриИзменении()

// Процедура - обработчик события "При изменении" полей ввода "Значение", "ЗначениеС", "ЗначениеПо"
//
Процедура ПолеВводаЗначениеПриИзменении(Элемент)
	
	УниверсальныйОтчет.ЗначениеПриИзменении(Элемент, ЭтаФорма);
	
КонецПроцедуры // ПолеВводаВидСравненияПриИзменении()
