Перем ФормаНастройка;
Перем СтруктураСвязиЭлементовСДанными;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Обновляет таблицу или диаграмму отчета
Процедура ОбновитьОтчет() Экспорт

	ЭтотОтчет.СформироватьОтчет(ЭлементыФормы.ДиаграммаГанта);
	
	ТекущийЭлемент = ЭлементыФормы.ДиаграммаГанта;

КонецПроцедуры // ОбновитьОтчет()

// Устанавливает заголовок формы
//
// Параметры:
//	Нет.
//
Процедура СформироватьЗаголовокФормы()

	Заголовок = УправлениеОтчетами.СформироватьЗаголовокОсновнойФормы(ДатаНач, ДатаКон, ВидОтчета, Ложь);
	
КонецПроцедуры // СформироватьЗаголовокФормы()

// Устанавливает видимость панели быстрого отбора
Процедура УстановитьВидимостьПанелиБыстрогоОтбора()
	
	Если НЕ ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Верх Тогда
		ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Верх;
		
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Отбор.Пометка = Ложь;
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подменю.Кнопки.Отбор.Пометка = Ложь;
		
	Иначе
		ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Нет;
		
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Отбор.Пометка = Истина;
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подменю.Кнопки.Отбор.Пометка = Истина;
		
	КонецЕсли;

КонецПроцедуры

// Формирует структуру, в которую складываются настройки
//
Функция СформироватьСтруктуруДляСохраненияНастроек() Экспорт
	
	СтруктНастр = Новый Структура;
	СтруктНастр.Вставить("НастройкиПостроителя", ПостроительОтчета.ПолучитьНастройки());
	СтруктНастр.Вставить("Периодичность", Периодичность);
	
	Возврат СтруктНастр;
	
КонецФункции

// Заполняет настройки из структуры - кроме состояния панели "Отбор"
//
Процедура ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт

	ПостроительОтчета.УстановитьНастройки(СтруктураСНастройками.НастройкиПостроителя);
	Периодичность = СтруктураСНастройками.Периодичность;
	
КонецПроцедуры


///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Процедура - обработчик события "Перед открытием" формы отчета.
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	Если НЕ ЗначениеЗаполнено(Периодичность) Тогда
		Периодичность = 1;
	КонецЕсли;
	РД = ОбщегоНазначения.ПолучитьРабочуюДату();
	Если НЕ ЗначениеЗаполнено(ДатаНач) Тогда
		ДатаНач = НачалоГода(РД);
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ДатаКон) Тогда
		ДатаКон = КонецГода(РД);
	КонецЕсли;

	СформироватьЗаголовокФормы();
	ЭтотОтчет.ЗаполнитьНачальныеНастройки();
	УправлениеОтчетами.УстановитьСвязьПолейБыстрогоОтбораНаФорме(ЭлементыФормы, ПостроительОтчета.Отбор,,"ОбщийОтчет.ПостроительОтчета.Отбор");
	УстановитьВидимостьПанелиБыстрогоОтбора();
	
КонецПроцедуры // ПередОткрытием()

// Процедура - обработчик события перед сохранением значений формы
//
Процедура ПередСохранениемЗначений(Отказ)

	СохраненныеНастройки = СформироватьСтруктуруДляСохраненияНастроек();

КонецПроцедуры // ПередСохранениемЗначений()

// Процедура - обработчик события после восстановления значений формы
//
Процедура ПослеВосстановленияЗначений()

	Если ТипЗнч(СохраненныеНастройки) = Тип("Структура") Тогда
		
		ВосстановитьНастройкиИзСтруктуры(СохраненныеНастройки);
		СформироватьЗаголовокФормы();
		
	КонецЕсли;
	
КонецПроцедуры // ПослеВосстановленияЗначений()


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура - обработчик нажатия кнопки "Сформировать"
Процедура КоманднаяПанельФормыВыполнить(Элемент)
	
	ОбновитьОтчет();

КонецПроцедуры

// Процедура - обработчик нажатия кнопки "Отбор"
Процедура КоманднаяПанельФормыОтбор(Кнопка)
	
	УстановитьВидимостьПанелиБыстрогоОтбора();
	
КонецПроцедуры

// Процедура - обработчик нажатия кнопки "Настройка"
Процедура КоманднаяПанельФормыНастройка(Кнопка)
	
	//ВызовСтандартнойНастройки(ЭтаФорма);
	
	ФормаНастройка = ПолучитьФорму("ФормаНастройка", ЭтаФорма);

	СтруктураСНастройками = СформироватьСтруктуруДляСохраненияНастроек();

	СтараяДатаКон = ДатаКон;
	СтараяДатаНач = ДатаНач;
	
	РезультатОткрытия = ФормаНастройка.ОткрытьМодально();

	Если РезультатОткрытия = Истина Тогда

		СформироватьЗаголовокФормы();
		ОбновитьОтчет();

	Иначе
		//форму закрыли эскейпом или по "Закрыть" - восстановим настройки, отчет формировать не будем!
		//восстанавливаем значения
		НеВосстанавливатьНастройку = Ложь;
		ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками);
		ДатаКон = СтараяДатаКон;
		ДатаНач = СтараяДатаНач;
	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик нажатия кнопки "Печать"
//
Процедура КоманднаяПанельФормыПечать(Кнопка)
	
	ЭтотОтчет.Печать();
	
КонецПроцедуры

// Процедура - обработчик нажатия кнопки "На принтер"
Процедура ДействияФормыНаПринтер(Кнопка)
	
	ЭлементыФормы.ДиаграммаГанта.Напечатать();

КонецПроцедуры

// Обработчик события элемента КоманднаяПанельФормы.НовыйОтчет.
//
Процедура КоманднаяПанельФормыНовыйОтчет(Кнопка)
	
	Если Строка(ЭтотОбъект) = "ВнешняяОбработкаОбъект." + ЭтотОбъект.Метаданные().Имя Тогда
			
		Предупреждение(НСтр("ru='Данный отчет является внешней обработкой.';uk='Даний звіт є зовнішньою обробкою.'") + Символы.ПС + НСтр("ru='Открытие нового отчета возможно только для объектов конфигурации.';uk=""Відкриття нового звіту можливо тільки для об'єктів конфігурації."""));
		Возврат;
			
	Иначе
			
		НовыйОтчет = Отчеты[ЭтотОбъект.Метаданные().Имя].Создать();
			
	КонецЕсли;
	
	ФормаНовогоОтчета = НовыйОтчет.ПолучитьФорму();
	ФормаНовогоОтчета.Открыть();

КонецПроцедуры // КоманднаяПанельФормыДействиеНовыйОтчет()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ДИАЛОГА

// Процедура - обработчик нажатия кнопки настройки периода.
Процедура КнопкаНастройкаПериодаНажатие(Элемент)
	
	НП = Новый НастройкаПериода;
	НП.ВариантНастройки	=ВариантНастройкиПериода.Период;
	НП.УстановитьПериод(ДатаНач, КонецДня(ДатаКон));
	Если НП.Редактировать() Тогда
		ДатаНач = НП.ПолучитьДатуНачала();
		ДатаКон = НП.ПолучитьДатуОкончания();
		СформироватьЗаголовокФормы();
	КонецЕсли;

КонецПроцедуры // КнопкаНастройкаПериодаНажатие()

// Процедура - обработчик изменения данных в поле выбора вида сравнения
//
Процедура ПолеВидаСравнения1ПриИзменении(Элемент)

	УправлениеОтчетами.ПолеВидаСравненияПриИзменении(Элемент, ЭлементыФормы);
	
КонецПроцедуры // ПолеВидаСравнения1ПриИзменении()

// Процедура - обработчик изменения данных в поле значения отбора
//
Процедура ПолеНастройки1ПриИзменении(Элемент)

	УправлениеОтчетами.ПолеНастройкиПриИзменении(Элемент, ПостроительОтчета.Отбор);
	
КонецПроцедуры // ПолеНастройки1ПриИзменении()

Процедура ДатаНачПриИзменении(Элемент)
	
	СформироватьЗаголовокФормы();
	
КонецПроцедуры

Процедура ДатаКонПриИзменении(Элемент)
	
	СформироватьЗаголовокФормы();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

// Синхронизация объекта формы ("ЭтотОбъект") с реквизитом отчета "ОбщийОтчет"  
РеквизитыЭтогоОбъекта = ЭтотОбъект.Метаданные().Реквизиты;
Для каждого Реквизит из РеквизитыЭтогоОбъекта Цикл
	ЭтотОбъект[Реквизит.Имя] = ЭтотОтчет.ОбщийОтчет[Реквизит.Имя];
КонецЦикла;
ЭтотОтчет.ОбщийОтчет = ЭтотОбъект;
