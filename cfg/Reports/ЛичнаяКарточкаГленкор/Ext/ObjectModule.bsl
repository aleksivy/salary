
#Если Клиент Тогда

Функция СформироватьЗапросОсновныеСведения(ДатаОтчета,Сотрудник, ОрганизацияОтчета, РаботникОтчета)

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДатаОтчета", ДатаОтчета);
	Запрос.УстановитьПараметр("Организация", ОрганизацияОтчета);
	Запрос.УстановитьПараметр("ПустаяДата", Дата(1,1,1));
	Запрос.УстановитьПараметр("Работник",	РаботникОтчета);
	Запрос.УстановитьПараметр("Сотрудник",	Сотрудник);
	Запрос.УстановитьПараметр("МужскойПол",	Перечисления.ПолФизическихЛиц.Мужской);
	Запрос.УстановитьПараметр("ЖенскийПол",	Перечисления.ПолФизическихЛиц.Женский);
    Запрос.УстановитьПараметр("Адрес",	Перечисления.ТипыКонтактнойИнформации.Адрес);
	Запрос.УстановитьПараметр("Телефон",	Перечисления.ТипыКонтактнойИнформации.Телефон);
	
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ФизическиеЛица.ДатаРождения		КАК ДатаРождения,
	|	ФизическиеЛица.Пол				КАК Пол,
	|	ФизическиеЛица.МестоРождения	КАК	МестоРождения,
	|	ФизическиеЛица.Ссылка			КАК Ссылка
	|ПОМЕСТИТЬ
	|	ВТФизическиеЛица
	|ИЗ
	|	Справочник.ФизическиеЛица	КАК ФизическиеЛица
	|ГДЕ
	|	ФизическиеЛица.Ссылка	= &Работник";
	Запрос.Выполнить();
	
	МинусДней = "
	|   ВЫБОР	КОГДА ЕСТЬNULL(Дней,0)=0 ТОГДА 0 ИНАЧЕ -Дней КОНЕЦ
	|   "; 

	ТекстЗапросаСтаж =  "
	|ВЫБРАТЬ
	|  ПриказОПриеме.ДатаПриема		КАК ДатаПриема,
	|  СУММА( ЕСТЬNULL(ОбщийСтаж.ДнейСтажа, 0))  КАК ДнейСтажа
	|	ИЗ (	ВЫБРАТЬ 
	|           	МИНИМУМ(Работники.Период) КАК ДатаПриема
	|			ИЗ РегистрСведений.РаботникиОрганизаций КАК Работники
	|   		ГДЕ Работники.Сотрудник = &Сотрудник
	|	) КАК ПриказОприеме
	|
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ ( 
	|	ВЫБРАТЬ
	|		Стаж.ФизЛицо,
	|	Стаж.ДнейСтажа
	|	ИЗ РегистрСВедений.НачальныеСведенияОСтажеРаботниковОрганизации КАК Стаж
	|	ГДЕ	Стаж.Организация	= &Организация
	|	И	Стаж.ВидСтажа		= ТребуемыйВидСтажа
	|
	|) КАК ОбщийСтаж		
	|ПО ОбщийСтаж.ФизЛицо = &Работник
	|   
	|СГРУППИРОВАТЬ ПО  
	|  ПриказОПриеме.ДатаПриема
	|";
	
	//Находим стаж для выслуги лет
	ЗапросВыслуга = Новый Запрос;
	ЗапросВыслуга.Текст = "
	|ВЫБРАТЬ
	| ПЕРВЫЕ 1 
	|	Начисления.ВидСтажа  КАК ВидСтажа
	|ИЗ
	|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций	КАК Начисления
	|ГДЕ
	|	Начисления.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ВыслугаЛет)	
	|	И Начисления.ВидСтажа <> ЗНАЧЕНИЕ(Справочник.ВидыСтажа.ПустаяСсылка)
	|";
	Выборка = ЗапросВыслуга.Выполнить().Выбрать();
	ВыслугаЛет = Справочники.ВидыСтажа.ПустаяСсылка();
	Пока Выборка.Следующий() Цикл
		ВыслугаЛет = Выборка.ВидСтажа;
	КонецЦикла;	
	
	ТекстВыслугаЛет= СтрЗаменить(ТекстЗапросаСтаж,"ТребуемыйВидСтажа", "&парамВыслугаЛет" );
	Запрос.Текст = "
	|ВЫБРАТЬ 	
	|	&Работник КАК ФизЛицо,
	|	ДОБАВИТЬКДАТЕ( Стаж.ДатаПриема, ДЕНЬ, "+СтрЗаменить(МинусДней,"Дней","Стаж.ДнейСтажа")+")	КАК ДатаБольничногоСтажа   
	|ПОМЕСТИТЬ ВТСведенияОБольничномСтаже
	|ИЗ 
	|	( " + ТекстВыслугаЛет + " ) КАК Стаж";
	Запрос.УстановитьПараметр("парамВыслугаЛет", ВыслугаЛет);
	Запрос.Выполнить();
	Запрос.Текст = "ВЫБРАТЬ  ДатаВыслугаЛет ИЗ ВТСведенияОБольничномСтаже";
	                                           	
	ТекстОбщийТрудовойСтаж = СтрЗаменить(ТекстЗапросаСтаж,"ТребуемыйВидСтажа", "ЗНАЧЕНИЕ(Справочник.ВидыСтажа.ОбщийТрудовойСтаж)" );
	Запрос.Текст = "
	|ВЫБРАТЬ 	
	|	&Работник КАК ФизЛицо,
	|	ДОБАВИТЬКДАТЕ( Стаж.ДатаПриема, ДЕНЬ, "+СтрЗаменить(МинусДней,"Дней","Стаж.ДнейСтажа")+")	КАК ДатаТрудовогоСтажа   
	|ПОМЕСТИТЬ ВТСведенияОбОбщемТрудовомСтаже
	|ИЗ 
	| ( " + ТекстОбщийТрудовойСтаж +"	) КАК Стаж";
	Запрос.Выполнить();
	Запрос.Текст = "ВЫБРАТЬ  ДатаТрудовогоСтажа ИЗ ВТСведенияОбОбщемТрудовомСтаже";
	
	 Запрос.Текст ="ВЫБРАТЬ  
	 |Год(ФизическиеЛица.ДатаРождения) КАК ГодРождения,
	 |Месяц(ФизическиеЛица.ДатаРождения) КАК МесяцРождения,
	 |День(ФизическиеЛица.ДатаРождения) КАК ЧислоРождения,
	 |ФИОФизЛицСрезПоследних.Имя,
	 |ФИОФизЛицСрезПоследних.Отчество,
	 |ФИОФизЛицСрезПоследних.Фамилия,
	 |ВЫБОР
	 | КОГДА ФизическиеЛица.Пол = &МужскойПол
	 | ТОГДА ""Ч""
	 | КОГДА ФизическиеЛица.Пол = &ЖенскийПол
	 | ТОГДА ""Ж""
	 | ИНАЧЕ """"
	 |КОНЕЦ КАК Пол,
	 |ФизическиеЛица.МестоРождения,
	 |Телефоны.Представление КАК Телефоны,
	 |ФизическиеЛица_Образование.ВидОбразования,
	 |ФизическиеЛица_Образование.УчебноеЗаведение,
	 |ФизическиеЛица_Образование.Специальность,
	 |ФизическиеЛица_Образование.Квалификация,
	 |ФизическиеЛица_Образование.ФормаОбучения,
	 |ФизическиеЛица_Образование.Диплом,
	 |ФизическиеЛица_Образование.ГодОкончания,
	 |ФизическиеЛица_ТрудоваяДеятельность.Организация КАК ПоследнееМестоРаботы,
	 |ФизическиеЛица_ТрудоваяДеятельность.ДатаОкончания КАК ДатаУвольнения,
	 |ФизическиеЛица_ТрудоваяДеятельность.Должность КАК ПоследняяДолжность,
	 |СемейноеПоложениеФизЛицСрезПоследних.СемейноеПоложение.Представление КАК СемейноеПоложение,
	 |ПаспортныеДанныеФизЛицСрезПоследних.ДокументДатаВыдачи,
	 |ПаспортныеДанныеФизЛицСрезПоследних.ДокументКемВыдан,
	 |ПаспортныеДанныеФизЛицСрезПоследних.ДокументНомер,
	 |ПаспортныеДанныеФизЛицСрезПоследних.ДокументСерия,
	 |Адреса.Представление КАК ПропискаАдрес,
	 |ГражданствоФизЛицСрезПоследних.Страна	КАК Гражданство,
	 |ВЫБОР КОГДА РаботникиОрганизаций.Регистратор ССЫЛКА Документ.УвольнениеИзОрганизаций
	 | ТОГДА ДобавитьКДате(РаботникиОрганизаций.Период, ДЕНЬ, -1)
	 | ИНАЧЕ &ПустаяДата
	 |КОНЕЦ КАК ДатаУвольненияИзОрг,
	 |ВЫБОР КОГДА РаботникиОрганизаций.Регистратор ССЫЛКА Документ.УвольнениеИзОрганизаций
	 | ТОГДА РаботникиОрганизаций.Регистратор
	 | ИНАЧЕ NULL
	 |КОНЕЦ КАК ДокументУвольнения,
	 //|РаботникиОрганизаций.ТабельныйНомер
	 |СотрудникиОрганизаций.Код КАК ТабельныйНомер,
	 |БольничныйСтаж.ДатаБольничногоСтажа КАК ДатаБольничногоСтажа,
	 |ТрудовойСтаж.ДатаТрудовогоСтажа КАК ДатаТрудовогоСтажа
	 |ИЗ
	 |	ВТФизическиеЛица	КАК ФизическиеЛица
	 | ЛЕВОЕ СОЕДИНЕНИЕ 
	 | РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаОтчета) КАК ФИОФизЛицСрезПоследних
	 | ПО ФизическиеЛица.Ссылка = ФИОФизЛицСрезПоследних.ФизЛицо
	 //| ЛЕВОЕ СОЕДИНЕНИЕ   
	 //| РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаОтчета, ФизЛицо = &Работник) КАК РаботникиОрганизаций
	 //| ПО ФизическиеЛица.Ссылка = РаботникиОрганизаций.ФизЛицо И РаботникиОрганизаций.ПодразделениеОрганизации.Владелец = &Организация
	 | ЛЕВОЕ СОЕДИНЕНИЕ   
	 | Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
	 | ПО СотрудникиОрганизаций.Ссылка =&Сотрудник 
	 | ЛЕВОЕ СОЕДИНЕНИЕ   
	 | РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаОтчета, Сотрудник = &Сотрудник) КАК РаботникиОрганизаций
	 | ПО ИСТИНА
	 | ЛЕВОЕ СОЕДИНЕНИЕ
	 | РегистрСведений.ГражданствоФизЛиц.СрезПоследних(&ДатаОтчета, ФизЛицо = &Работник) КАК ГражданствоФизЛицСрезПоследних
	 | ПО ФизическиеЛица.Ссылка = ГражданствоФизЛицСрезПоследних.ФизЛицо
	 | ЛЕВОЕ СОЕДИНЕНИЕ 
	 | РегистрСведений.СемейноеПоложениеФизЛиц.СрезПоследних(&ДатаОтчета, ФизЛицо = &Работник) КАК СемейноеПоложениеФизЛицСрезПоследних
	 | ПО ФизическиеЛица.Ссылка = СемейноеПоложениеФизЛицСрезПоследних.ФизЛицо
	 | ЛЕВОЕ СОЕДИНЕНИЕ 
	 | РегистрСведений.ПаспортныеДанныеФизЛиц.СрезПоследних(&ДатаОтчета, ФизЛицо = &Работник) КАК ПаспортныеДанныеФизЛицСрезПоследних
	 | ПО ФизическиеЛица.Ссылка = ПаспортныеДанныеФизЛицСрезПоследних.ФизЛицо
	 | ЛЕВОЕ СОЕДИНЕНИЕ
	 | РегистрСведений.КонтактнаяИнформация КАК Адреса
	 | ПО ФизическиеЛица.Ссылка = Адреса.Объект И Адреса.Тип = &Адрес
	 | ЛЕВОЕ СОЕДИНЕНИЕ
	 | РегистрСведений.КонтактнаяИнформация КАК Телефоны
	 | ПО ФизическиеЛица.Ссылка = Телефоны.Объект И Телефоны.Тип = &Телефон
	 | ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.Образование КАК ФизическиеЛица_Образование
	 | ПО ФизическиеЛица_Образование.Ссылка = &Работник 
	 | ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.ТрудоваяДеятельность КАК ФизическиеЛица_ТрудоваяДеятельность
	 | ПО ФизическиеЛица_ТрудоваяДеятельность.Ссылка = &Работник
	 | ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОБольничномСтаже КАК БольничныйСтаж
	 | ПО ФизическиеЛица.Ссылка = БольничныйСтаж.ФизЛицо
	 | ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОбОбщемТрудовомСтаже КАК ТрудовойСтаж
	 | ПО ФизическиеЛица.Ссылка = ТрудовойСтаж.ФизЛицо
	 |";
	
	Возврат Запрос.Выполнить();	

КонецФункции

Функция СформироватьЗапросОбразование(ДатаОтчета, РаботникОтчета,ПоследипломнаяПодготовка = Ложь)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаОтчета",ДатаОтчета);
	Запрос.УстановитьПараметр("Работник", РаботникОтчета );
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Образование.ВидОбразования 		КАК ВидОбразования,
	|	Образование.УчебноеЗаведение	КАК УчебноеЗаведение,
	|	Образование.Специальность		КАК Специальность,
	|	Образование.Диплом				КАК Диплом,
	|	Образование.ГодОкончания		КАК ГодОкончания,
	|	Образование.Квалификация 		КАК Квалификация,
	|	Образование.ФормаОбучения		КАК ФормаОбучения,
	|	Образование.УченаяСтепень		КАК УчебнаяСтепень
	|ИЗ
	|	Справочник.ФизическиеЛица.Образование КАК Образование
	|ГДЕ
	|	Образование.Ссылка = &Работник 
	|";
		
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить();
	
	
	
	
	
КонецФункции

Функция СформироватьЗапросПрофОбразование(ДатаОтчета, РаботникОтчета);
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Работник", РаботникОтчета);
	Запрос.УстановитьПараметр("ДатаОтчета", ДатаОтчета);
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ПройденныеУчебныеКурсы.ФизЛицо					КАК ФизЛицо,
	|	ПройденныеУчебныеКурсы.КурсОбучения				КАК КурсОбучения,
	|	ПройденныеУчебныеКурсы.Период					КАК ПериодОбучения,
	|	ПройденныеУчебныеКурсы.ФормаОбучения			КАК	ФормаОбучения, 
	|	ПройденныеУчебныеКурсы.ДокументОбОбразовании	КАК ДокументОбОбразовании,
	|	ПройденныеУчебныеКурсы.ДатаДокумента			КАК ДатаДокумента,
	|	РаботникиОрганизаций.ПодразделениеОрганизации	КАК ПодразделениеОрганизации
	|ИЗ
	|	РегистрСведений.ПройденныеУчебныеКурсы	КАК ПройденныеУчебныеКурсы
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|ПО 
	|	РаботникиОрганизаций.Сотрудник.ФизЛицо = ПройденныеУчебныеКурсы.ФизЛицо
	|   И РаботникиОрганизаций.Период < ПройденныеУчебныеКурсы.Период
	|ГДЕ
	|	ПройденныеУчебныеКурсы.ДатаДокумента < &ДатаОтчета
	|	И ПройденныеУчебныеКурсы.ФизЛицо = &Работник
	|УПОРЯДОЧИТЬ ПО
	|	ПройденныеУчебныеКурсы.Период ВОЗР";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция СформироватьЗапросЧленыСемьи(ДатаОтчета,РаботникОтчета)

	Запрос = Новый Запрос;

	// Установим параметры запроса
    Запрос.УстановитьПараметр("Работник",	РаботникОтчета);
	Запрос.УстановитьПараметр("Дата", ДатаОтчета);
	
	Запрос.Текст ="ВЫБРАТЬ РАЗРЕШЕННЫЕ
    | ФизическиеЛица_СоставСемьи.СтепеньРодства КАК СтепеньРодства,
	| ЕстьNULL(ФизическиеЛица_СоставСемьи.ФизЛицо,ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)) КАК ЧленСемьи,
	| ФизическиеЛица_СоставСемьи.ФизЛицо.ДатаРождения КАК ДатаРожденияФизЛица,
	| ФизическиеЛица_СоставСемьи.ГодРождения КАК ГодРождения,	
	| ЕстьNULL(ФИОЧленовСемьи.Фамилия,"""")	КАК Фамилия,
	| ЕстьNULL(ФИОЧленовСемьи.Имя,"""")		КАК Имя,
	| ЕстьNULL(ФИОЧленовСемьи.Отчество,"""")	КАК Отчество
    |ИЗ
    | Справочник.ФизическиеЛица.СоставСемьи КАК ФизическиеЛица_СоставСемьи
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата) КАК ФИОЧленовСемьи
	|ПО
	|	ФизическиеЛица_СоставСемьи.ФизЛицо = ФИОЧленовСемьи.ФизЛицо
    |ГДЕ
    | ФизическиеЛица_СоставСемьи.Ссылка = &Работник";

	Возврат Запрос.Выполнить();

КонецФункции

Функция СформироватьЗапросВоинскийУчет(ДатаОтчета, РаботникОтчета)

	Запрос = Новый Запрос;

	// Установим параметры запроса
    Запрос.УстановитьПараметр("ДатаОтчета", 		ДатаОтчета);
	Запрос.УстановитьПараметр("Работник",			РаботникОтчета);
	
	Запрос.Текст ="ВЫБРАТЬ РАЗРЕШЕННЫЕ 
				  | ВоинскийУчет.*,
				  | ЕСТЬNULL(ВоинскийУчет.Звание.Состав, ЗНАЧЕНИЕ(Перечисление.СоставыВоеннослужащих.ПустаяСсылка)) КАК Состав
				  |ИЗ
	              |	РегистрСведений.ВоинскийУчет.СрезПоследних(&ДатаОтчета) КАК ВоинскийУчет
	              |
	              |ГДЕ
	              |	ВоинскийУчет.Физлицо = &Работник";

	Возврат Запрос.Выполнить();

КонецФункции

Функция СформироватьЗапросНазначения(ДатаОтчета, ОрганизацияОтчета, РаботникОтчета)
   
	Запрос = Новый Запрос;

	// Установим параметры запроса
    Запрос.УстановитьПараметр("ДатаОтчета", ДатаОтчета);
    Запрос.УстановитьПараметр("Организация", ОрганизацияОтчета);
	Запрос.УстановитьПараметр("Работник",	РаботникОтчета);
	
	Запрос.Текст ="ВЫБРАТЬ РАЗРЕШЕННЫЕ
 	|	ПриемНаРаботуВОрганизацию.Ссылка КАК Приказ,
	|	ПриемНаРаботуВОрганизацию.ДатаПриема КАК ДатаС,
	|	ПриемНаРаботуВОрганизацию.ПодразделениеОрганизации КАК Подразделение,
	|	ПриемНаРаботуВОрганизацию.Должность,
	|	ПлановыеНачисления.Показатель1 КАК Оклад
	|ИЗ
	|	Документ.ПриемНаРаботуВОрганизацию.РаботникиОрганизации КАК ПриемНаРаботуВОрганизацию
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисления
	|			ПО ПриемНаРаботуВОрганизацию.ДатаПриема = ПлановыеНачисления.Период
	|				И ПриемНаРаботуВОрганизацию.Сотрудник = ПлановыеНачисления.Сотрудник
	|				И ПриемНаРаботуВОрганизацию.Ссылка.Организация = ПлановыеНачисления.Организация	
	|				И ПлановыеНачисления.ВидРасчета.ЗачетОтработанногоВремени
	|				И ПлановыеНачисления.ВидРасчета <> ПлановыеНачисления.ВидРасчетаИзмерение
	|				И ПлановыеНачисления.Актуальность = ИСТИНА

	|
	|
	|ГДЕ
	|	(ПриемНаРаботуВОрганизацию.Сотрудник = &Работник 
	|	ИЛИ ПриемНаРаботуВОрганизацию.Сотрудник.ОсновноеНазначение = &Работник) И
	|	ПриемНаРаботуВОрганизацию.Ссылка.Проведен = ИСТИНА И
	|	ПриемНаРаботуВОрганизацию.Ссылка.Организация = &Организация И
	|   ПриемНаРаботуВОрганизацию.ДатаПриема <= &ДатаОтчета
	|	
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КадровоеПеремещениеОрганизации.Ссылка КАК Приказ,
	|	КадровоеПеремещениеОрганизации.ДатаНачала КАК ДатаС,
	|	КадровоеПеремещениеОрганизации.ПодразделениеОрганизации КАК Подразделение,
	|	КадровоеПеремещениеОрганизации.Должность КАК Должность,
	|	КадровоеПеремещениеНачисления.Показатель1	КАК Оклад
	|ИЗ
	|	Документ.КадровоеПеремещениеОрганизаций.РаботникиОрганизации КАК КадровоеПеремещениеОрганизации
	|   ЛЕВОЕ СОЕДИНЕНИЕ
	|	(ВЫБРАТЬ
	|     КадровоеПеремещениеОрганизации.Ссылка,
	|     МАКСИМУМ(КадровоеПеремещениеНачисления.Период) КАК Период
	|    ИЗ Документ.КадровоеПеремещениеОрганизаций.РаботникиОрганизации КАК КадровоеПеремещениеОрганизации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК КадровоеПеремещениеНачисления
	|			ПО КадровоеПеремещениеОрганизации.Сотрудник = КадровоеперемещениеНачисления.Сотрудник
	|			   И КадровоеПеремещениеОрганизации.ДатаНачала >= КадровоеПеремещениеНачисления.Период	
	|			   И КадровоеПеремещениеОрганизации.Ссылка.Организация = КадровоеПеремещениеНачисления.Организация	
	|			   И КадровоеПеремещениеНачисления.ВидРасчета.ЗачетОтработанногоВремени
	|			   И КадровоеПеремещениеНачисления.ВидРасчета <> КадровоеПеремещениеНачисления.ВидРасчетаИзмерение
	|	ГДЕ
	|		(КадровоеПеремещениеОрганизации.Сотрудник = &Работник 
	|		ИЛИ КадровоеПеремещениеОрганизации.Сотрудник.ОсновноеНазначение = &Работник) И
	|		КадровоеПеремещениеОрганизации.Ссылка.Проведен = ИСТИНА И
	|		КадровоеПеремещениеОрганизации.Ссылка.Организация = &Организация И
	|   	КадровоеПеремещениеОрганизации.ДатаНачала <= &ДатаОтчета
	|   СГРУППИРОВАТЬ ПО
	|    КадровоеПеремещениеОрганизации.Ссылка
    |	) КАК НачисленияДаты
	|   ПО КадровоеПеремещениеОрганизации.Ссылка = НачисленияДаты.Ссылка
	|   ЛЕВОЕ СОЕДИНЕНИЕ
	|   РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК КадровоеПеремещениеНачисления
	|	ПО КадровоеПеремещениеОрганизации.Сотрудник = КадровоеперемещениеНачисления.Сотрудник
	|	 И НачисленияДаты.Период = КадровоеПеремещениеНачисления.Период	
	|	 И КадровоеПеремещениеОрганизации.Ссылка.Организация = КадровоеПеремещениеНачисления.Организация	
	|	 И КадровоеПеремещениеНачисления.ВидРасчета.ЗачетОтработанногоВремени
	|	 И КадровоеПеремещениеНачисления.ВидРасчета <> КадровоеПеремещениеНачисления.ВидРасчетаИзмерение
	|
	|ГДЕ
	|	(КадровоеПеремещениеОрганизации.Сотрудник = &Работник 
	|	ИЛИ КадровоеПеремещениеОрганизации.Сотрудник.ОсновноеНазначение = &Работник) И
	|	КадровоеПеремещениеОрганизации.Ссылка.Проведен = ИСТИНА И
	|	КадровоеПеремещениеОрганизации.Ссылка.Организация = &Организация И
	|   КадровоеПеремещениеОрганизации.ДатаНачала <= &ДатаОтчета
	|УПОРЯДОЧИТЬ ПО
	|	ДатаС";
	
	Возврат Запрос.Выполнить();

КонецФункции

Функция СформироватьЗапросОтпуска(ДатаОтчета, ОрганизацияОтчета, РаботникОтчета)
   
	Запрос = Новый Запрос;
	// Установим параметры запроса
    Запрос.УстановитьПараметр("ДатаОтчета", ДатаОтчета);
 	Запрос.УстановитьПараметр("Организация", ОрганизацияОтчета);
	Запрос.УстановитьПараметр("Работник",	РаботникОтчета);

   	ОтборОрганизация = Новый Структура("Организация", ОрганизацияОтчета);
	
	ВестиУчетОстатковОтпусков = РегистрыСведений.УчетнаяПолитикаПоПерсоналуОрганизаций.Получить(ОтборОрганизация).ВестиУчетОстатковОтпусков;
	
	Если ВестиУчетОстатковОтпусков Тогда
		Запрос.Текст = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 10
		|	ОтпускаОрганизаций.Ссылка 		КАК Приказ,
		|	ОтпускаОрганизаций.ДатаНачала	КАК ДатаНачала,
		|	ОтпускаОрганизаций.ДатаОкончания	КАК ДатаОкончания,
		|	МИНИМУМ(ИспользованиеЕжегодныхОтпусков.РабочийПериодНачало)	КАК РабочийПериодНачало,
		|	МАКСИМУМ(ИспользованиеЕжегодныхОтпусков.РабочийПериодокончание)	КАК РабочийПериодОкончание,
		|	ОтпускаОрганизаций.ВидОтпуска				КАК ВидОтпуска
		
		|ИЗ
		|	Документ.ОтпускаОрганизаций.РаботникиОрганизации КАК ОтпускаОрганизаций 
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	РегистрНакопления.ИспользованиеЕжегодныхОтпусковРаботников КАК ИСпользованиеЕжегодныхОтпусков
		|ПО ОтпускаОрганизаций.ДатаНачала = ИспользованиеЕжегодныхОтпусков.Период
		|И ОтпускаОрганизаций.Сотрудник = ИСпользованиеЕжегодныхОтпусков.Сотрудник 
		|ГДЕ	
		|	(ОтпускаОрганизаций.Сотрудник = &Работник
		|	ИЛИ ОтпускаОрганизаций.Сотрудник.ОсновноеНазначение = &Работник) И
		|	ОтпускаОрганизаций.Ссылка.Проведен = ИСТИНА И
		|		ОтпускаОрганизаций.Ссылка.Организация = &Организация И
		|   ОтпускаОрганизаций.ДатаНачала <= &ДатаОтчета
		|СГРУППИРОВАТЬ ПО
		|	ОтпускаОрганизаций.Ссылка,
		|	ОтпускаОрганизаций.ДатаНачала,
		|	ОтпускаОрганизаций.ДатаОкончания,
		|	ОтпускаОрганизаций.ВидОтпуска";		
		
	Иначе
		 
		Запрос.Текст ="ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 10
 		|	ОтпускаОрганизаций.Ссылка КАК Приказ,
		|	ОтпускаОрганизаций.ДатаНачала КАК ДатаНачала,
		|	ОтпускаОрганизаций.ДатаОкончания КАК ДатаОкончания,
		|	ОтпускаОрганизаций.РабочийГодС		КАК РабочийПериодНачало	,
		|	ОтпускаОрганизаций.РабочийГодПо		КАК РабочийПериодОкончание,
		|	ОтпускаОрганизаций.ВидОтпуска
		|ИЗ
		|	Документ.ОтпускаОрганизаций.РаботникиОрганизации КАК ОтпускаОрганизаций
		|
		|ГДЕ	
		|	(ОтпускаОрганизаций.Сотрудник = &Работник
		|	ИЛИ ОтпускаОрганизаций.Сотрудник.ОсновноеНазначение = &Работник) И
		|	ОтпускаОрганизаций.Ссылка.Проведен = ИСТИНА И
		|		ОтпускаОрганизаций.Ссылка.Организация = &Организация И
		|   ОтпускаОрганизаций.ДатаНачала <= &ДатаОтчета";
	КонецЕсли;
	Запрос.Текст = Запрос.Текст + "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	| 
	|ВЫБРАТЬ
	|	ОтпускПоУходуЗаРебенком.Ссылка,
	|	ОтпускПоУходуЗаРебенком.ДатаНачала,
	|	ОтпускПоУходуЗаРебенком.ДатаОкончания,
	|	ГОД(ОтпускПоУходуЗаРебенком.ДатаНачала),
	|	ГОД(ОтпускПоУходуЗаРебенком.ДатаОкончания),
	|	""Відпустка по догляду за дитиною до 3-х років""
	|ИЗ
	|	Документ.ОтпускПоУходуЗаРебенком КАК ОтпускПоУходуЗаРебенком
	|ГДЕ
	|	(ОтпускПоУходуЗаРебенком.Сотрудник = &Работник
	|	ИЛИ ОтпускПоУходуЗаРебенком.Сотрудник.ОсновноеНазначение = &Работник) И
	|	ОтпускПоУходуЗаРебенком.Ссылка.Проведен = ИСТИНА И
	|		ОтпускПоУходуЗаРебенком.Ссылка.Организация = &Организация И
	|   ОтпускПоУходуЗаРебенком.ДатаНачала <= &ДатаОтчета
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаНачала";
	
	Возврат Запрос.Выполнить();

КонецФункции

Функция СформироватьЗапросКонтактнаяИнформация(РаботникОтчета)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Работник", РаботникОтчета);
	
	Запрос.УстановитьПараметр("ФактАдресФизЛица", Справочники.ВидыКонтактнойИнформации.ФактАдресФизЛица);
	Запрос.УстановитьПараметр("ЮрАдресФизЛица", Справочники.ВидыКонтактнойИнформации.ЮрАдресФизЛица);
	Запрос.УстановитьПараметр("ТелФизЛицаДомашний", Справочники.ВидыКонтактнойИнформации.ТелефонФизЛицаДомашний);
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР 
	|		КОГДА КонтактнаяИнформация.Вид = &ФактАдресФизЛица
	|			ТОГДА ""1""
	|		КОГДА КонтактнаяИнформация.Вид = &ЮрАдресФизЛица
	|			ТОГДА ""3""
	|		КОГДА КонтактнаяИнформация.Вид = &ТелФизЛицаДомашний
	|			ТОГДА ""2""
	|	КОНЕЦ КАК Приоритет,	
	|		
	|	КонтактнаяИнформация.Вид		КАК ВидКонтактнойИнформации,
	|	КонтактнаяИнформация.Представление	КАК Представление,
	|	КонтактнаяИнформация.Поле1		КАК Поле1,
	|	КонтактнаяИнформация.Поле2		КАК Поле2,
	|	КонтактнаяИнформация.Поле3		КАК Поле3,
	|	КонтактнаяИнформация.Поле4		КАК Поле4,
	|	КонтактнаяИнформация.Поле5		КАК Поле5,
	|	КонтактнаяИнформация.Поле6		КАК Поле6,
	|	КонтактнаяИнформация.Поле7		КАК Поле7,
	|	КонтактнаяИнформация.Поле8		КАК Поле8,
	|	КонтактнаяИнформация.Поле9		КАК Поле9,
	|	КонтактнаяИнформация.Поле10		КАК Поле10	
	|ИЗ
	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ
	|	КонтактнаяИнформация.Объект = &Работник
	|	И (КонтактнаяИнФормация.Вид = &ФактАдресФизЛица ИЛИ
	|		КонтактнаяИнформация.Вид = &ЮрАдресФизЛица ИЛИ
	|		КонтактнаяИнформация.Вид =&ТелФизЛицаДомашний)
	|";
	Возврат Запрос.Выполнить();
	
КонецФункции

Процедура ПечатьФорма2009(ТабДокумент, ДатаОтчета, Сотрудник, ОрганизацияОтчета, РаботникОтчета, ПустойБланк = Ложь) Экспорт
	
	Если Не ПустойБланк Тогда
		РезультатыОсновныеСведения = СформироватьЗапросОсновныеСведения(ДатаОтчета,Сотрудник, ОрганизацияОтчета, РаботникОтчета.ФизЛицо).Выбрать();
		РезультатыОбразование = СформироватьЗапросОбразование(ДатаОтчета, РаботникОтчета.ФизЛицо).Выгрузить();
		РезультатыЧленыСемьи = СформироватьЗапросЧленыСемьи(ДатаОтчета,РаботникОтчета.ФизЛицо).Выбрать();
		РезультатыПрофОбразование = СформироватьЗапросПрофОбразование(ДатаОтчета, РаботникОтчета.ФизЛицо).Выбрать();
		РезультатыВоинскийУчет = СформироватьЗапросВоинскийУчет(ДатаОтчета, РаботникОтчета.ФизЛицо).Выбрать();
		РезультатыНазначения = СформироватьЗапросНазначения(ДатаОтчета, ОрганизацияОтчета, РаботникОтчета).Выбрать();
		РезультатыОтпуска = СформироватьЗапросОтпуска(ДатаОтчета, ОрганизацияОтчета, РаботникОтчета).Выбрать();		
	КонецЕсли; 	     
	
	// запоминаем области макета
	Макет = ПолучитьМакет("П2_от_25_12_2009");
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьОсновныеСведения = Макет.ПолучитьОбласть("ОсновныеСведения");
	ОбластьВоинскийУчет = Макет.ПолучитьОбласть("ВоинскийУчет");
	ОбластьПрофОбразование = Макет.ПолучитьОбласть("ПрофОбразование");
	ОбластьНазначенияИПеремещения = Макет.ПолучитьОбласть("НазначенияИПеремещения");
	ОбластьОтпуска = Макет.ПолучитьОбласть("Отпуска");
	ОбластьДополнительныеСведения = Макет.ПолучитьОбласть("ДополнительныеСведения");
	
	Если ПустойБланк Тогда
		ТабДокумент.Вывести(ОбластьШапка);
		ТабДокумент.Вывести(ОбластьОсновныеСведения);
		ТабДокумент.Вывести(ОбластьВоинскийУчет);
		ТабДокумент.Вывести(ОбластьПрофОбразование);
		ТабДокумент.Вывести(ОбластьНазначенияИПеремещения);
		ТабДокумент.Вывести(ОбластьОтпуска);
		ТабДокумент.Вывести(ОбластьДополнительныеСведения);
		Возврат;
	КонецЕсли;
	
	//Шапка	
	ОбластьШапка.Параметры.НазваниеОрганизации = ОрганизацияОтчета.НаименованиеПолное;
	ОбластьШапка.Параметры.ЕДРПОУ = УправлениеКонтактнойИнформацией.ПолучитьКодОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(ОрганизацияОтчета, ДатаОтчета));
	Если Сотрудник.ВидЗанятости = Перечисления.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы Тогда
		ОбластьШапка.Параметры.ВидЗанятости = "Основна"
	Иначе
		ОбластьШапка.Параметры.ВидЗанятости = "За сумісництвом";
	КонецЕсли;
	
	Если Сотрудник.ФизЛицо.Пол = Перечисления.ПолФизическихЛиц.Мужской Тогда
		ОбластьШапка.Параметры.Пол = "чоловіча";
	ИначеЕсли Сотрудник.ФизЛицо.Пол = Перечисления.ПолФизическихЛиц.Женский Тогда
		ОбластьШапка.Параметры.Пол = "жіноча";
	Иначе
	КонецЕсли;
	ОбластьШапка.Параметры.КодПоДРФО = Сотрудник.ФизЛицо.КодПоДРФО;
	Попытка
		ОбластьШапка.Параметры.ТабельныйНомер = Число( Сотрудник.Код );
	Исключение
	    ОбластьШапка.Параметры.ТабельныйНомер = Сотрудник.Код;
	КонецПопытки;
	ОбластьШапка.Параметры.Дата = ДатаОтчета;

	//Основные сведения
	ДанныеУчебноеЗаведение = "";
	ДанныеДиплом = "";
	Пока РезультатыОсновныеСведения.Следующий() Цикл
		ОбластьОсновныеСведения.Параметры.Заполнить(РезультатыОсновныеСведения);
		
		ОбластьОсновныеСведения.Параметры.ДатаРождения = Формат(РезультатыОсновныеСведения.ЧислоРождения,"ЧГ=0; ЧВН=; ЧЦ=2") + ". " + Формат(РезультатыОсновныеСведения.МесяцРождения,"ЧГ=0; ЧВН=; ЧЦ=2") + ". "+  Формат(РезультатыОсновныеСведения.ГодРождения,"ЧГ=0; ЧВН=");
			
		//Заполняем образование
		//Выводим только наибольшее по значимости образование                                                                        
		ВидыОбразования = Справочники.ВидыОбразованияФизЛиц;
		//Запрос = Новый Запрос;
		//РезультатыОбразование = Запрос.Выполнить().Выгрузить();
		Если РезультатыОбразование.Найти(ВидыОбразования.ВысшееОбразование, "ВидОбразования") <> Неопределено Тогда
			ОбластьОсновныеСведения.Параметры.ВидОбразования = ВидыОбразования.ВысшееОбразование;
		ИначеЕсли РезультатыОбразование.Найти(ВидыОбразования.НеполноеВысшееОбразование, "ВидОбразования") <> Неопределено Тогда
			ОбластьОсновныеСведения.Параметры.ВидОбразования = ВидыОбразования.НеполноеВысшееОбразование;
		ИначеЕсли РезультатыОбразование.Найти(ВидыОбразования.БазовоеВысшееОбразование, "ВидОбразования") <> Неопределено Тогда
			ОбластьОсновныеСведения.Параметры.ВидОбразования = ВидыОбразования.БазовоеВысшееОбразование;
		ИначеЕсли РезультатыОбразование.Найти(ВидыОбразования.СреднееПрофессиональноеОбразование, "ВидОбразования")<> Неопределено Тогда
			ОбластьОсновныеСведения.Параметры.ВидОбразования = ВидыОбразования.СреднееПрофессиональноеОбразование;
		ИначеЕсли РезультатыОбразование.Найти(ВидыОбразования.НачальноеПрофессиональноеОбразование, "ВидОбразования") <> Неопределено Тогда
			ОбластьОсновныеСведения.Параметры.ВидОбразования =ВидыОбразования.НачальноеПрофессиональноеОбразование;
		ИначеЕсли РезультатыОбразование.Найти(ВидыОБразования.СреднееПолноеОбщееОбразование, "ВидОбразования") <> Неопределено Тогда
			ОбластьОсновныеСведения.Параметры.ВидОбразования = ВидыОбразования.СреднееПолноеОбщееОбразование;
		ИначеЕсли РезультатыОбразование.Найти(ВидыОбразования.БазовоеОбщееСреднееОбразование, "ВидОбразования") <> Неопределено Тогда
			ОбластьОсновныеСведения.Параметры.ВидОбразования =ВидыОбразования.БазовоеОбщееСреднееОбразование
		КонецЕсли;
			
		номер = 0;
		Для Каждого Образование ИЗ РезультатыОбразование Цикл
			Если Образование.ВидОбразования = ВидыОбразования.Аспирантура ИЛИ
					Образование.ВидОбразования = ВидыОбразования.АдъюнктураОрдинатура ИЛИ
					Образование.ВидОбразования = ВидыОбразования.Докторантура Тогда
					Продолжить;
			КонецЕсли;
				
			номер =	1	+	номер;
			Если номер > 4 Тогда
				Прервать;
			КонецЕсли;
			ОбластьОсновныеСведения.Параметры["УчебноеЗаведение" + номер]	=	Образование.УчебноеЗаведение;
			ОбластьОсновныеСведения.Параметры["Диплом" + номер] 			=   Образование.Диплом;
			ОбластьОсновныеСведения.Параметры["ГодОкончания" + номер]       =	Образование.ГодОкончания;
			ОбластьОсновныеСведения.Параметры["Специальность" + номер] 		= 	Образование.Специальность;
			ОбластьОсновныеСведения.Параметры["Квалификация" + номер]		= 	Образование.Квалификация;
			ОбластьОсновныеСведения.Параметры["ФормаОбучения" + номер]		= 	Образование.ФормаОбучения;				
		КонецЦикла;
		
		Если РезультатыОбразование.Найти(ВидыОбразования.Аспирантура, "ВидОбразования") <> Неопределено Тогда
			ОбластьОсновныеСведения.Параметры.Аспирантура = "х";
		КонецЕсли;
		
		Если РезультатыОбразование.Найти(ВидыОбразования.АдъюнктураОрдинатура, "ВидОбразования") <> Неопределено Тогда
			ОбластьОсновныеСведения.Параметры.Адъюнктура = "х";
		КонецЕсли;
		
		Если РезультатыОбразование.Найти(ВидыОбразования.Докторантура, "ВидОбразования") <> Неопределено Тогда
			ОбластьОсновныеСведения.Параметры.Докторантура = "х";
		КонецЕсли;
		
		номер = 0;
		Для Каждого Образование ИЗ РезультатыОбразование Цикл
			Если Образование.ВидОбразования = ВидыОбразования.Аспирантура ИЛИ
				Образование.ВидОбразования = ВидыОбразования.АдъюнктураОрдинатура ИЛИ
				Образование.ВидОбразования = ВидыОбразования.Докторантура Тогда
				Продолжить;
			КонецЕсли;
				
			номер =	1	+	номер;
			Если номер > 4 Тогда
				Прервать;
			КонецЕсли;
			ОбластьОсновныеСведения.Параметры["УчебноеЗаведение" + номер]	=	Образование.УчебноеЗаведение;
			ОбластьОсновныеСведения.Параметры["Диплом" + номер] 			=   Образование.Диплом;
			ОбластьОсновныеСведения.Параметры["ГодОкончания" + номер]       =	Образование.ГодОкончания;
			ОбластьОсновныеСведения.Параметры["Специальность" + номер] 		= 	Образование.Специальность;
			ОбластьОсновныеСведения.Параметры["Квалификация" + номер]		= 	Образование.Квалификация;
			ОбластьОсновныеСведения.Параметры["ФормаОбучения" + номер]		= 	Образование.ФормаОбучения;				
		КонецЦикла;
		
		номер = 4;
		Для Каждого Образование ИЗ РезультатыОбразование Цикл
			Если Образование.ВидОбразования = ВидыОбразования.Аспирантура ИЛИ
					Образование.ВидОбразования = ВидыОбразования.АдъюнктураОрдинатура ИЛИ
					Образование.ВидОбразования = ВидыОбразования.Докторантура Тогда						
				номер =	1	+	номер;
				Если номер > 7 Тогда
					Прервать;
				КонецЕсли;
				ОбластьОсновныеСведения.Параметры["УчебноеЗаведение" + номер]	=	Образование.УчебноеЗаведение;
				ОбластьОсновныеСведения.Параметры["Диплом" + номер] 			=   Образование.Диплом;
				ОбластьОсновныеСведения.Параметры["ГодОкончания" + номер]       =	Образование.ГодОкончания;
				ОбластьОсновныеСведения.Параметры["УченаяСтепень" + номер] 	= 	Образование.УчебнаяСтепень;		
			КонецЕсли;
		КонецЦикла;
		
		//Пенсионер ли?
		Отбор = Новый Структура("ФизЛицо");
		Отбор.Вставить("ФизЛицо", РаботникОтчета.Физлицо);
		Пенсионер = РегистрыСведений.СведенияОПенсионерах.СрезПоследних(ДатаОтчета, Отбор).Найти(Истина,"Пенсионер"); 
		Если Пенсионер <> Неопределено Тогда
			ОбластьОсновныеСведения.Параметры.Пенсия = "є пенсіонером";
		Иначе
			ОбластьОсновныеСведения.Параметры.Пенсия = "не є пенсіонером";
		КонецЕсли;

		
		ЛетСтажа = 0;
		МесяцевСтажа = 0;
		ДнейСтажа = 0;
		ПроведениеРасчетов.РазобратьРазностьДат(ДатаОтчета,РезультатыОсновныеСведения.ДатаТрудовогоСтажа,ДнейСтажа, МесяцевСтажа, ЛетСтажа);
		ОбластьОсновныеСведения.Параметры.ДнейСтажа = ДнейСтажа;
		ОбластьОсновныеСведения.Параметры.МесяцевСтажа = МесяцевСтажа;
		ОбластьОсновныеСведения.Параметры.ЛетСтажа = ЛетСтажа;
		
		ЛетСтажа = 0;
		МесяцевСтажа = 0;
		ДнейСтажа = 0;			
		ПроведениеРасчетов.РазобратьРазностьДат(ДатаОтчета,РезультатыОсновныеСведения.ДатаБольничногоСтажа,ДнейСтажа, МесяцевСтажа, ЛетСтажа);
		ОбластьОсновныеСведения.Параметры.ДнейВыслуга = ДнейСтажа;
		ОбластьОсновныеСведения.Параметры.МесяцевВыслуга = МесяцевСтажа;
		ОбластьОсновныеСведения.Параметры.ЛетВыслуга = ЛетСтажа;
		
		ОбластьОсновныеСведения.Параметры.Дата = Формат(ДатаОтчета,"ДФ=""дд.ММ.гггг""");
	КонецЦикла;
	
	
	Если ЗначениеЗаполнено(РезультатыОсновныеСведения.ДокументУвольнения) Тогда
		ТЧ = РезультатыОсновныеСведения.ДокументУвольнения.РаботникиОрганизации.Выгрузить();
		СтрокаТЧ = ТЧ.Найти(РаботникОтчета,"Сотрудник");
		Если СтрокаТЧ = Неопределено Тогда
			Основание = "";
		Иначе
			Основание = ", "+СтрокаТЧ.СтатьяКЗОТ.Наименование;
		КонецЕсли;
	Иначе
		Основание = "";
	КонецЕсли;
	ДатаУвольненияИзОрг = Формат(РезультатыОсновныеСведения.ДатаУвольненияИзОрг,"ДФ=""дд.ММ.гггг"";ДП="" """);
	ОбластьОсновныеСведения.Параметры.ДатаУвольнения = Формат(РезультатыОсновныеСведения.ДатаУвольнения,"ДФ=""дд.ММ.гггг"";ДП="" """);
	СтатьяКЗОТ = Основание;
	
	//Семейные связи
	номер = 0;
	Пока РезультатыЧленыСемьи.Следующий() Цикл
		номер = 1 + номер;
		Если номер>5 Тогда
			Прервать;
		КонецЕсли;
		ОбластьОсновныеСведения.Параметры["СтепеньРодства"+номер] = РезультатыЧленыСемьи.СтепеньРодства;
		ОбластьОсновныеСведения.Параметры["ФИО"+номер] = РезультатыЧленыСемьи.Фамилия + " " + РезультатыЧленыСемьи.Имя + " " + РезультатыЧленыСемьи.Отчество; 
		ОбластьОсновныеСведения.Параметры["ГодРождения"+номер] = РезультатыЧленыСемьи.ГодРождения;
	КонецЦикла;
		
	//Прописка и фактическое место жительства
	ТЗКонтактнаяИнформация = СформироватьЗапросКонтактнаяИнформация(РаботникОтчета.ФизЛицо).Выгрузить();
	СтрокаФактАдрес = ТЗКонтактнаяИнформация.Найти("1", "Приоритет");
	Если СтрокаФактАдрес <> Неопределено Тогда
	СтрокаФактАдрес = СтрокаФактАдрес.Представление;
	КонецЕсли;
		
	СтрокаТелефон = ТЗКонтактнаяИнформация.Найти("2", "Приоритет");
	Если СтрокаТелефон <> Неопределено И СтрокаФактАдрес <> Неопределено Тогда
		СтрокаФактАдрес = Строка(СтрокаФактАдрес) + ", тел: " + Строка(СтрокаТелефон.Поле3); 
	ИначеЕсли СтрокаТелефон <> Неопределено Тогда
		СтрокаФактАдрес = "тел: " + Строка(СтрокаТелефон.Поле3);	
	КонецЕсли;

	ОбластьОсновныеСведения.Параметры.ФактАдресПроживания = СтрокаФактАдрес;
	
	СтрокаЮрАдрес = ТЗКонтактнаяИнформация.Найти("3", "Приоритет");
	Если СтрокаЮрАдрес <> Неопределено Тогда
		СтрокаЮрАдрес = СтрокаЮрАдрес.Представление;
	КонецЕсли;
	ОбластьОсновныеСведения.Параметры.ЮрАдресПроживания = СтрокаЮрАдрес;

	//Воинский учет
	Если РезультатыВоинскийУчет.Следующий() Тогда
	        ОбластьВоинскийУчет.Параметры.Заполнить(РезультатыВоинскийУчет);

			// Особенности заполнения некоторых полей карточки
	        ОбластьВоинскийУчет.Параметры.ПолнаяГодность = "" + Локализация.ПолучитьЛокализованныйСинонимОбъекта(РезультатыВоинскийУчет.Годность, "uk") + " " + РезультатыВоинскийУчет.ОснованиеНегодности;
			Если 	РезультатыВоинскийУчет.Состав = Перечисления.СоставыВоеннослужащих.МладшиеОфицеры
				или РезультатыВоинскийУчет.Состав = Перечисления.СоставыВоеннослужащих.СтаршиеОфицеры
				или РезультатыВоинскийУчет.Состав = Перечисления.СоставыВоеннослужащих.ВысшиеОфицеры
			Тогда
			    ОбластьВоинскийУчет.Параметры.Состав = РезультатыВоинскийУчет.Профиль;
			КонецЕсли;
			Если РезультатыВоинскийУчет.ОтношениеКВоинскойОбязанности = Перечисления.ОтношениеКВоинскойОбязанности.Призывник Тогда
				ОбластьВоинскийУчет.Параметры.Группа = РезультатыВоинскийУчет.ОтношениеКВоинскойОбязанности;
			КонецЕсли;
			
			//Переводы
			ОбластьВоинскийУчет.Параметры.Группа = Локализация.ПолучитьЛокализованныйСинонимОбъекта(ОбластьВоинскийУчет.Параметры.Группа, "uk");
			ОбластьВоинскийУчет.Параметры.Категория = Локализация.ПолучитьЛокализованныйСинонимОбъекта(ОбластьВоинскийУчет.Параметры.Категория, "uk");
			ОбластьВоинскийУчет.Параметры.Состав = Локализация.ПолучитьЛокализованныйСинонимОбъекта(ОбластьВоинскийУчет.Параметры.Состав, "uk");
			
	КонецЕсли;	
		
	//Проф. образование
	номер = 0;
	Пока РезультатыПрофОбразование.Следующий() Цикл
		номер = номер +1;
		Если номер >  5 Тогда
			Прервать;
		КонецЕсли;
		ОбластьПрофОбразование.Параметры["Дата" + номер] = Формат(РезультатыПрофОбразование.ДатаДокумента,"ДФ=""дд.ММ.гггг""");
		ОбластьПрофОбразование.Параметры["СтПодразделение" + номер] = РезультатыПрофОбразование.ПодразделениеОрганизации;
		ОбластьПрофОбразование.Параметры["ПериодОбучения" + номер] = Формат(РезультатыПрофОбразование.ДатаДокумента,"ДФ=""дд.ММ.гггг""");
		ОбластьПрофОбразование.Параметры["ВидОбучения"+номер]= РезультатыПрофОбразование.КурсОбучения;
		ОбластьПрофОбразование.Параметры["ФормаОбучения" + номер] = РезультатыПрофОбразование.ФормаОбучения;
		ОбластьПрофОбразование.параметры["ПрофДокумент" + номер ]= РезультатыПрофОбразование.ДокументОбОбразовании;
	КонецЦикла;
	
	//Назначение и перемещения
	номер = 0;
	Пока РезультатыНазначения.Следующий() Цикл
		номер = 1 + номер;
		Если номер > 10 Тогда
			Прервать;
		КонецЕсли;
		
		ОбластьНазначенияИПеремещения.Параметры["ДатаС" + номер] = Формат(РезультатыНазначения.ДатаС,"ДФ=""дд.ММ.гггг""");
		ОбластьНазначенияИПеремещения.Параметры["Подразделение" + номер] = РезультатыНазначения.Подразделение;
		ОбластьНазначенияИПеремещения.Параметры["Должность" + номер] = РезультатыНазначения.Должность;
		ОбластьНазначенияИПеремещения.Параметры["Код" + номер] = РезультатыНазначения.Должность.КодКП;
		ОбластьНазначенияИПеремещения.Параметры["Приказ"+номер] = ОбщегоНазначения.ПолучитьНомерНаПечать(РезультатыНазначения.Приказ) + " від " + Формат(РезультатыНазначения.Приказ.Дата,"ДФ=дд.ММ.гг");
		ОбластьНазначенияИПеремещения.Параметры["Оклад" + номер] = Формат(РезультатыНазначения.Оклад,"ЧДЦ=2");
	КонецЦикла;	
	
	//Отпуска
	номер =0;
	Пока РезультатыОтпуска.Следующий() Цикл
		номер = 1 + номер;
		Если РезультатыОтпуска.ВидОтпуска = "Відпустка по догляду за дитиною до 3-х років" Тогда
			ОбластьОтпуска.Параметры["ВидОтпуска" + номер] = "Відпустка по догляду за дитиною до 3-х років"
		Иначе
			ОбластьОтпуска.Параметры["ВидОтпуска" + номер] = РезультатыОтпуска.ВидОтпуска.ВидОтпускаДляФормОтчетности
		КонецЕсли;	
		ОбластьОтпуска.Параметры["ПриказОтпуск" + номер] =ОбщегоНазначения.ПолучитьНомерНаПечать(РезультатыОтпуска.Приказ) + " від " + Формат(РезультатыОтпуска.Приказ.Дата,"ДФ=дд.ММ.гг");
		ОбластьОтпуска.Параметры["ЗаПериод" + номер] = Формат(РезультатыОтпуска.РабочийПериодНачало,"ДФ=""дд.ММ.гггг""")+" - "+Формат(РезультатыОтпуска.РабочийПериодОкончание,"ДФ=""дд.ММ.гггг"""); 
		ОбластьОтпуска.Параметры["ДатаСОтпуск" + номер] = РезультатыОтпуска.ДатаНачала;
		ОбластьОтпуска.Параметры["ДатаПо" + номер] = РезультатыОтпуска.ДатаОкончания; 
	КонецЦикла;	
	
	 //ДополнительныеСведения
	 	//ответственный работник кадровой службы
	//ОтветсвенныеЛица
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МоментВремени", ДатаОтчета);
	Запрос.УстановитьПараметр("Организация", ОрганизацияОтчета);
	Запрос.УстановитьПараметр("РаботникКадровойСлужбы", Перечисления.ОтветственныеЛицаОрганизаций.РаботникКадровойСлужбы);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОтветственныеЛицаОрганизации.Должность			КАК ДолжностьОтветственного,
	|	ОтветственныеЛицаОрганизации.ФизическоеЛицо		КАК ФизЛицо, 
	|	ЕстьNULL(ФИООтветственногоЛица.Фамилия, """")	КАК Фамилия,
	|	ЕстьNULL(ФИООтветственногоЛица.Имя,"""")		КАК Имя,
	|	ЕстьNULL(ФИООтветственногоЛица.Отчество,"""")	КАК Отчество
	|
	|ИЗ
	|	РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(&МоментВремени, СтруктурнаяЕдиница = &Организация И ОтветственноеЛицо = &РаботникКадровойСлужбы) КАК ответственныеЛицаОрганизации
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрСведений.ФИОФизЛиц.СрезПоследних(&МоментВремени, ФизЛицо = &РаботникКадровойСлужбы) КАК ФИООтветственногоЛица
	|ПО
	|	ОтветственныеЛицаОрганизации.ФизическоеЛицо = ФИООтветственногоЛица.ФизЛицо
	|
	|";
	
	Запрос.Текст = ТекстЗапроса;
	Выборка = Запрос.Выполнить().Выбрать();	
	Пока Выборка.Следующий() Цикл
		КадровыйРаботник = Выборка;
	КонецЦикла;
	
	Если ЗначениеЗаполнено(КадровыйРаботник) Тогда
		Если КадровыйРаботник.Фамилия <> "" Тогда
			ОбластьДополнительныеСведения.Параметры.ФИОКадровогоРаботника =  Строка(КадровыйРаботник.Фамилия) + " " + Строка(КадровыйРаботник.Имя) + " " + Строка(КадровыйРаботник.Отчество);
		Иначе
			ОбластьДополнительныеСведения.Параметры.ФиоКадровогоРаботника = КадровыйРаботник.ФизЛицо.Наименование;
		КонецЕсли;
		ОбластьДополнительныеСведения.Параметры.ДолжностьКадровогоРаботника = КадровыйРаботник.ДолжностьОтветственного;
	КонецЕсли;
	ОбластьДополнительныеСведения.Параметры.ДатаУвольненияИзОрг = ДатаУвольненияИзОрг;
	ОбластьДополнительныеСведения.Параметры.СтатьяКЗОТ = Основание;
	
	ТабДокумент.Вывести(ОбластьШапка);
	ТабДокумент.Вывести(ОбластьОсновныеСведения);
	ТабДокумент.Вывести(ОбластьВоинскийУчет);
	ТабДокумент.Вывести(ОбластьПрофОбразование);
	ТабДокумент.Вывести(ОбластьНазначенияИПеремещения);
	ТабДокумент.Вывести(ОбластьОтпуска);
	ТабДокумент.Вывести(ОбластьДополнительныеСведения);
	
КонецПроцедуры

#КонецЕсли