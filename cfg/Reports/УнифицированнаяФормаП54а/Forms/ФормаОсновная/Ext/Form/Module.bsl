////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Устанавливает видимость панели быстрого отбора
Процедура УстановитьВидимостьПанелиБыстрогоОтбора()
	
	Если НЕ ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Верх Тогда
		
		ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Верх;
		ЭлементыФормы.ДействияФормы.Кнопки.Отбор.Пометка = Ложь;
		ЭлементыФормы.ДействияФормы.Кнопки.Подменю.Кнопки.Отбор.Пометка = Ложь;
		
	Иначе
		
		ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Нет;
		ЭлементыФормы.ДействияФормы.Кнопки.Отбор.Пометка = Истина;
		ЭлементыФормы.ДействияФормы.Кнопки.Подменю.Кнопки.Отбор.Пометка = Истина;
		
	КонецЕсли;

КонецПроцедуры

// Процедура формирует заголовок окна
//
Процедура ОбновитьЗаголовокОкна()

	Если ОтборОрганизации Тогда
		
		Если ТипЗнч(Организация) = Тип("СправочникСсылка.Организации") Тогда
			
			Если Организация = Справочники.Организации.ПустаяСсылка() Тогда
				Заголовок = "Унифицированная форма П-54а по организации: <Не задано значение>"
			Иначе
				Заголовок = "Унифицированная форма П-54а по организации: " + Организация
			КонецЕсли; 
			
		Иначе
			
			Если Организация.Количество() = 0 Тогда
				Заголовок = "Унифицированная форма П-54а по списку организаций: <Не задано значение>"
			Иначе
				Заголовок = "Унифицированная форма П-54а по списку организаций: " + Организация
			КонецЕсли; 
			
		КонецЕсли;
		
	Иначе
		Заголовок = "Унифицированная форма П-54а"
	КонецЕсли; 	
	
КонецПроцедуры // ОбновитьЗаголовокОкна()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// Установим дату начала отчета
	Если ЗначениеЗаполнено(глЗначениеПеременной("глТекущийПользователь")) Тогда
		
		ЕстьДатаОтчетаПользователя = ЗначениеЗаполнено(УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"),"ОсновнаяДатаНачалаОтчетов"));
		
		Если Не ЕстьДатаОтчетаПользователя Тогда
			
			ДатаНач = НачалоМесяца(РабочаяДата);
			ДатаКон = КонецМесяца(РабочаяДата);
			
		Иначе
			
			ДатаНач = НачалоМесяца(УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"),"ОсновнаяДатаНачалаОтчетов"));
			ДатаКон = КонецМесяца(ДатаНач)
			
		КонецЕсли; 
		
	Иначе
		
		ДатаНач = НачалоМесяца(РабочаяДата);
		ДатаКон = КонецМесяца(РабочаяДата);
		
	КонецЕсли;
	НП.УстановитьПериод(ДатаНач, ДатаКон);
	
	ЭлементыФормы.ПолеВидаСравненияОрганизация.СписокВыбора = УправлениеОтчетами.ПолучитьСписокВидовСравненияПоТипу(Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ВидСравненияОрганизации     = ВидСравнения.Равно;
	Организация = ОбщегоНазначения.ПустоеЗначениеТипа("СправочникСсылка.Организации");
	
	ЭлементыФормы.ПолеВидаСравненияПодразделение.СписокВыбора = УправлениеОтчетами.ПолучитьСписокВидовСравненияПоТипу(Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	ВидСравненияПодразделения     = ВидСравнения.Равно;
	Подразделение = ОбщегоНазначения.ПустоеЗначениеТипа("СправочникСсылка.ПодразделенияОрганизаций");
	
	Работник = ОбщегоНазначения.ПустоеЗначениеТипа("СправочникСсылка.СотрудникиОрганизаций");
	ЭлементыФормы.ПолеВидаСравненияРаботник.СписокВыбора = УправлениеОтчетами.ПолучитьСписокВидовСравненияПоТипу(Новый ОписаниеТипов("СправочникСсылка.СотрудникиОрганизаций"));
	ВидСравненияРаботника     = ВидСравнения.Равно;
	
	УстановитьВидимостьПанелиБыстрогоОтбора(); 
	
КонецПроцедуры

// Процедура - обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()

	ОбновитьЗаголовокОкна();
	ФлажокНастройкиРаботникПриИзменении(ЭлементыФормы.ФлажокНастройкиРаботник)	

КонецПроцедуры

// Процедура - обработчик события "ПередСохранениемЗначений" формы.
//
Процедура ПередСохранениемЗначений(Отказ)
	
	СохраненныеНастройки = Новый Структура;
	СохраненныеНастройки.Вставить("ФлажокНастройкиОрганизация",		ОтборОрганизации);
	СохраненныеНастройки.Вставить("ПолеВидаСравненияОрганизация",	ВидСравненияОрганизации);
	СохраненныеНастройки.Вставить("ПолеНастройкиОрганизация",		Организация);
	СохраненныеНастройки.Вставить("ФлажокНастройкиПодразделение",	ОтборПодразделения);
	СохраненныеНастройки.Вставить("ПолеВидаСравненияПодразделение",	ВидСравненияПодразделения);
	СохраненныеНастройки.Вставить("ПолеНастройкиПодразделение",		Подразделение);
	СохраненныеНастройки.Вставить("ФлажокНастройкиРаботник",		ОтборРаботника);
	СохраненныеНастройки.Вставить("ПолеВидаСравненияРаботник",		ВидСравненияРаботника);
	СохраненныеНастройки.Вставить("ПолеНастройкиРаботник",			Работник);
	
КонецПроцедуры

// Процедура - обработчик события "ПослеВосстановленияЗначений" формы.
//
Процедура ПослеВосстановленияЗначений()
	
	Если ТипЗнч(СохраненныеНастройки) = Тип("Структура") Тогда

		ОтборОрганизации		  = СохраненныеНастройки.ФлажокНастройкиОрганизация;
		ВидСравненияОрганизации	  = СохраненныеНастройки.ПолеВидаСравненияОрганизация;
		Организация				  = СохраненныеНастройки.ПолеНастройкиОрганизация;
		ОтборПодразделения  	  = СохраненныеНастройки.ФлажокНастройкиПодразделение;
		ВидСравненияПодразделения = СохраненныеНастройки.ПолеВидаСравненияПодразделение;
		Подразделение			  = СохраненныеНастройки.ПолеНастройкиПодразделение;
		ОтборРаботника			  = СохраненныеНастройки.ФлажокНастройкиРаботник;
		ВидСравненияРаботника	  = СохраненныеНастройки.ПолеВидаСравненияРаботник;
		Работник				  = СохраненныеНастройки.ПолеНастройкиРаботник;
		
		Если ТипЗнч(Работник) = Тип("СписокЗначений") Тогда
			ЭлементыФормы.ПолеНастройкиРаботник.ОграничениеТипа	= Новый ОписаниеТипов("СписокЗначений");
		Иначе
			ЭлементыФормы.ПолеНастройкиРаботник.ОграничениеТипа	= Новый ОписаниеТипов("СправочникСсылка.СотрудникиОрганизаций");
		КонецЕсли;
		
		Если ТипЗнч(Подразделение) = Тип("СписокЗначений") Тогда
			ЭлементыФормы.ПолеНастройкиПодразделение.ОграничениеТипа	= Новый ОписаниеТипов("СписокЗначений");
		Иначе
			ЭлементыФормы.ПолеНастройкиПодразделение.ОграничениеТипа	= Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций");
		КонецЕсли;
		                                                                                        
		Если ТипЗнч(Организация) = Тип("СписокЗначений") Тогда
			ЭлементыФормы.ПолеНастройкиОрганизация.ОграничениеТипа = Новый ОписаниеТипов("СписокЗначений");
		Иначе
			ЭлементыФормы.ПолеНастройкиОрганизация.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Организации");
		КонецЕсли;
		
		ОбновитьЗаголовокОкна();
		ФлажокНастройкиРаботникПриИзменении(ЭлементыФормы.ФлажокНастройкиРаботник)	
		
	КонецЕсли; 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ КОМАНДНОЙ ПАНЕЛИ ФОРМЫ

// Процедура - обработчик нажатия кнопки "Сформировать"
Процедура ДействияФормыСформировать(Кнопка)
	
    ПередСохранениемЗначений(Истина);	

    СформироватьОтчет(ЭлементыФормы.ДокументРезультат);

	ТекущийЭлемент = ЭлементыФормы.ДокументРезультат;

	Если ЭлементыФормы.ДокументРезультат.ВысотаТаблицы = 0 Тогда
		Сообщить(НСтр("ru='Данные не обнаружены!';uk='Дані не знайдені!'"));
	КонецЕсли; 
	
КонецПроцедуры

// Процедура - обработчик нажатия кнопки "Отбор"
Процедура ДействияФормыОтбор(Кнопка)
	
	УстановитьВидимостьПанелиБыстрогоОтбора()
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ДИАЛОГА

// Процедура - обработчик нажатия кнопки выбора даты начала периода
//
Процедура ДатаНачПриИзменении(Элемент)
	
	ДатаНач = НачалоМесяца(ДатаНач);
	
КонецПроцедуры

// Процедура - обработчик нажатия кнопки выбора даты окончания периода
//
Процедура ДатаКонПриИзменении(Элемент)
	
	ДатаКон = КонецМесяца(ДатаКон);
	
КонецПроцедуры

// Процедура - обработчик нажатия кнопки настройки периода
//
Процедура КнопкаНастройкаПериодаНажатие(Элемент)

	Если НП.Редактировать() Тогда
		
		ДатаНач = НП.ПолучитьДатуНачала();
		ДатаНачПриИзменении(ЭлементыФормы.ДатаНач);
		ДатаКон = НП.ПолучитьДатуОкончания();
		ДатаКонПриИзменении(ЭлементыФормы.ДатаКон);

	КонецЕсли;
	
КонецПроцедуры // КнопкаНастройкаПериодаНажатие()

// Процедура - обработчик изменения флажка отбора по организации.
//
Процедура ФлажокНастройкиОрганизацияПриИзменении(Элемент)
	ОбновитьЗаголовокОкна();
КонецПроцедуры

// Процедура - обработчик изменения данных в поле выбора вида сравнения
//
Процедура ПолеВидаСравненияРаботникПриИзменении(Элемент)
	
	Если ТипЗнч(Работник) = Тип("СправочникСсылка.СотрудникиОрганизаций") Тогда
		ЗаписываемоеЗначение = Работник;                                                               
	Иначе
		Если Работник.Количество() = 0 Тогда    
			ЗаписываемоеЗначение = ОбщегоНазначения.ПустоеЗначениеТипа("СправочникСсылка.СотрудникиОрганизаций")
		Иначе
			ЗаписываемоеЗначение = Работник[0].Значение;
		КонецЕсли;
	КонецЕсли;
	
	Если Элемент.Значение = ВидСравнения.ВСписке           ИЛИ Элемент.Значение = ВидСравнения.НеВСписке
	 ИЛИ Элемент.Значение = ВидСравнения.ВСпискеПоИерархии ИЛИ Элемент.Значение = ВидСравнения.НеВСпискеПоИерархии Тогда
		
		ЭлементыФормы.ПолеНастройкиРаботник.ОграничениеТипа	  = Новый ОписаниеТипов("СписокЗначений");
        Работник = Новый СписокЗначений;
		Если ЗначениеЗаполнено(ЗаписываемоеЗначение) Тогда
			Работник.Добавить(ЗаписываемоеЗначение);
		КонецЕсли;
		
	Иначе              
		
		ЭлементыФормы.ПолеНастройкиРаботник.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.СотрудникиОрганизаций");
		Работник	 = ЗаписываемоеЗначение;
		
	КонецЕсли; 
	
КонецПроцедуры

// Процедура - обработчик изменения данных в поле выбора вида сравнения
//
Процедура ПолеВидаСравненияПодразделениеПриИзменении(Элемент)
	
	Если ТипЗнч(Подразделение) = Тип("СправочникСсылка.ПодразделенияОрганизаций") Тогда
		ЗаписываемоеЗначение = Подразделение;                                                               
	Иначе
		Если Подразделение.Количество() = 0 Тогда    
			ЗаписываемоеЗначение = ОбщегоНазначения.ПустоеЗначениеТипа("СправочникСсылка.ПодразделенияОрганизаций")
		Иначе
			ЗаписываемоеЗначение = Подразделение[0].Значение;
		КонецЕсли;
	КонецЕсли;
	
	Если Элемент.Значение = ВидСравнения.ВСписке           ИЛИ Элемент.Значение = ВидСравнения.НеВСписке
	 ИЛИ Элемент.Значение = ВидСравнения.ВСпискеПоИерархии ИЛИ Элемент.Значение = ВидСравнения.НеВСпискеПоИерархии Тогда
		
		ЭлементыФормы.ПолеНастройкиПодразделение.ОграничениеТипа	  = Новый ОписаниеТипов("СписокЗначений");
        Подразделение = Новый СписокЗначений;
		Если ЗначениеЗаполнено(ЗаписываемоеЗначение) Тогда
			Подразделение.Добавить(ЗаписываемоеЗначение);
		КонецЕсли;
		
	Иначе              
		
		ЭлементыФормы.ПолеНастройкиПодразделение.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций");
		Подразделение	 = ЗаписываемоеЗначение;
		
	КонецЕсли; 
	
КонецПроцедуры

// Процедура - обработчик изменения данных в поле выбора вида сравнения
//
Процедура ПолеВидаСравненияОрганизацияПриИзменении(Элемент)
	
	Если ТипЗнч(Организация) = Тип("СправочникСсылка.Организации") Тогда
		ЗаписываемоеЗначение = Организация;                                                               
	Иначе
		Если Организация.Количество() = 0 Тогда    
			ЗаписываемоеЗначение = ОбщегоНазначения.ПустоеЗначениеТипа("СправочникСсылка.Организации")
		Иначе
			ЗаписываемоеЗначение = Организация[0].Значение;
		КонецЕсли;
	КонецЕсли;
	
	Если Элемент.Значение = ВидСравнения.ВСписке ИЛИ Элемент.Значение = ВидСравнения.НеВСписке Тогда
		
		ЭлементыФормы.ПолеНастройкиОрганизация.ОграничениеТипа	  = Новый ОписаниеТипов("СписокЗначений");
        Организация = Новый СписокЗначений;
		Если ЗначениеЗаполнено(ЗаписываемоеЗначение) Тогда
			Организация.Добавить(ЗаписываемоеЗначение);
		КонецЕсли;
		
	Иначе              
		
		ЭлементыФормы.ПолеНастройкиОрганизация.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Организации");
		Организация = ЗаписываемоеЗначение;
		
	КонецЕсли; 
	
	ОбновитьЗаголовокОкна();
	
КонецПроцедуры

// Процедура - обработчик изменения данных в поле значения отбора
//
Процедура ПолеНастройкиОрганизацияПриИзменении(Элемент)
	
	Значение = Элемент.Значение;
	
    Если ТипЗнч(Значение) = Тип("СписокЗначений") Тогда
		
		ЭлементыФормы.ФлажокНастройкиОрганизация.Значение = (Значение.Количество() <> 0)
		
	Иначе
		
		ЭлементыФормы.ФлажокНастройкиОрганизация.Значение = (ЗначениеЗаполнено(Значение))
		
	КонецЕсли; 
	
	ОбновитьЗаголовокОкна();
	
КонецПроцедуры

// Процедура - обработчик изменения данных в поле значения отбора
//
Процедура ПолеНастройкиПодразделениеПриИзменении(Элемент)
	
	Значение = Элемент.Значение;
	
    Если ТипЗнч(Значение) = Тип("СписокЗначений") Тогда
		
		ЭлементыФормы.ФлажокНастройкиПодразделение.Значение = (Значение.Количество() <> 0)
		
	Иначе
		
		ЭлементыФормы.ФлажокНастройкиПодразделение.Значение = (ЗначениеЗаполнено(Значение))
		
	КонецЕсли; 
	
КонецПроцедуры

// Процедура - обработчик изменения данных в поле значения отбора
//
Процедура ПолеНастройкиРаботникПриИзменении(Элемент)
	
	Значение = Элемент.Значение;
	
    Если ТипЗнч(Значение) = Тип("СписокЗначений") Тогда
		
		ЭлементыФормы.ФлажокНастройкиРаботник.Значение = (Значение.Количество() <> 0)
		
	Иначе
		
		ЭлементыФормы.ФлажокНастройкиРаботник.Значение = (ЗначениеЗаполнено(Значение))
		
	КонецЕсли;
	
   ФлажокНастройкиРаботникПриИзменении(ЭлементыФормы.ФлажокНастройкиРаботник)	
   
КонецПроцедуры

// Процедура - обработчик изменения данных в поле значения отбора
//
Процедура ФлажокНастройкиРаботникПриИзменении(Элемент)
	
	ОтборПодразделения = Мин(ОтборПодразделения, НЕ Элемент.Значение);
	ЭлементыФормы.ФлажокНастройкиПодразделение.Доступность   = НЕ Элемент.Значение;
	ЭлементыФормы.ПолеНастройкиПодразделение.Доступность     = НЕ Элемент.Значение;
	ЭлементыФормы.ПолеВидаСравненияПодразделение.Доступность = НЕ Элемент.Значение;
	
КонецПроцедуры

// Процедура - обработчик расшифровки табличного документа
// ДокументРезультат
Процедура ДокументРезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	Если ТипЗнч(Расшифровка) = Тип("Структура") Тогда
		
		СтандартнаяОбработка = Ложь;
		
		РасчетныеЛистки = Отчеты.РасчетныеЛисткиОрганизаций.Создать();
		
		Настройки = Новый Структура;
		Настройки.Вставить("ФлажокНастройкиОрганизация",	 Истина);
		Настройки.Вставить("ПолеВидаСравненияОрганизация",	 ВидСравнения.Равно);
		Настройки.Вставить("ПолеНастройкиОрганизация",		 Расшифровка.Организация);
		Настройки.Вставить("ФлажокНастройкиПодразделение",	 Ложь);
		Настройки.Вставить("ПолеВидаСравненияПодразделение", 0);
		Настройки.Вставить("ПолеНастройкиПодразделение",	 0);
		Настройки.Вставить("ФлажокНастройкиРаботник",		 Истина);
		Настройки.Вставить("ПолеВидаСравненияРаботник",		 ВидСравнения.Равно);
		Настройки.Вставить("ПолеНастройкиРаботник",			 Расшифровка.ФизЛицо);
		
		РасчетныеЛистки.СохраненныеНастройки = Настройки;
		РасчетныеЛистки.ДатаНач              = Расшифровка.ДатаНач;
		РасчетныеЛистки.ДатаКон              = Расшифровка.ДатаКон;
		
		Док = Новый ТабличныйДокумент;
		РасчетныеЛистки.СформироватьОтчет(Док, , , , Ложь);
		Док.ОтображатьЗаголовки = Ложь;
		Док.ОтображатьСетку     = Ложь;
		Док.Показать("Расчетные листки организации");
		
	КонецЕсли;	
	
КонецПроцедуры




