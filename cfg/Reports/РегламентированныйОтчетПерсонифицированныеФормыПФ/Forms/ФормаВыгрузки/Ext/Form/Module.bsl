Функция ПреобразоватьВДату(Значение)
	Попытка
		Возврат Дата(Значение)
	Исключение
		Возврат Неопределено
	КонецПопытки;
КонецФункции

Процедура КнопкаВыполнитьНажатие(Кнопка)
	
	СохранитьВФорматеДБФ();
	
КонецПроцедуры

// <Описание процедуры>
//
// Параметры
//  <Параметр1>  – <Тип.Вид> – <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  – <Тип.Вид> – <описание параметра>
//                 <продолжение описания параметра>
//
Процедура СохранитьВФорматеДБФ()
   перем ТаблицаСтраниц, СтруктураГруппы;
   перем Нач, Корр, Отмен, НП,KTF, ИННСотр,ГодОтчета,сЕДРПОУ,Совмещ,Пр, КодТипаСтавки,Начисл,Отчисл;
   перем НачОтношенийД,НачОтношенийМ,НачОтношенийГ,КонОтношенийД,КонОтношенийМ,КонОтношенийГ;
   перем СуммаДохода,БазаОбложен,СуммаБольни,СуммаВзноса,чДней;
   перем ИтСуммаДохода,ИтБазаОбложен,ИтСуммаБольни,ИтСуммаВзноса,ИтДней,НачОтношений,КонОтношений;
   перем ПолныхМесяцевСтажа,ПолныхДнейСтажа, П31;
   перем КодОснования;
       
   ФормаДоступа = ПолучитьФорму("ФормаОтчета2004Кв1");
   
   Если Не ФормаДоступа.мСтруктураМногостраничныхРазделов.Свойство(АктивнаяСтраница) Тогда
	   // здесь выгрузка многострочных разделов
	   Если АктивнаяСтраница = "СписокЛиц" Тогда
		   
		    xB = Новый xBase();
		    ФайлДанных = КаталогДанных + "\APM_ATST.DBF";

		   	xB.Поля.Добавить("TIN","S",10,0);
			xB.Поля.Добавить("FULLN_U","S",30,0); 
			xB.Поля.Добавить("NAME_U","S",30,0);
			xB.Поля.Добавить("FATH_U","S",20,0);
			xB.Поля.Добавить("D_ROG","D",8,0);
			xB.Поля.Добавить("POL","S",1,0);
			xB.Поля.Добавить("D_PST","D",8,0);
			xB.Поля.Добавить("D_UVL","D",8,0);
			xB.Поля.Добавить("D_TIN","D",8,0);
			xB.Поля.Добавить("KRPOU","S",12,0);
			xB.Поля.Добавить("RNPD","N",5,0);
			xB.Поля.Добавить("DFPV","D",8,0); 
			xB.Поля.Добавить("KOP","S",10,0); 
			xB.Поля.Добавить("TOZ","S",6,0);
			
			xB.СоздатьФайл(ФайлДанных); 
			
			Если Не xB.Открыта() Тогда  
				Предупреждение(НСтр("ru='Не удалось создать и открыть указанный файл!';uk='Не вдалося створити й відкрити зазначений файл!'"));  
			КонецЕсли;  
			
			ФормаДоступа.мСтруктураМногострочныхРазделов.Свойство("СписокЛиц", СтруктураГруппы);
			
			Для каждого стр Из СтруктураГруппы Цикл
			   xB.Добавить();
			   xB.УстановитьЗначениеПоля("TIN",стр.ИНН);
			   xB.УстановитьЗначениеПоля("FULLN_U",стр.Фамилия);
			   xB.УстановитьЗначениеПоля("NAME_U",стр.Имя);
			   xB.УстановитьЗначениеПоля("FATH_U",стр.Отчество);
			   xB.УстановитьЗначениеПоля("D_ROG",формат(стр.ДатаРожд, "ДФ=yyyyMMdd"));
			   xB.УстановитьЗначениеПоля("POL",стр.Пол);
			   xB.УстановитьЗначениеПоля("D_PST",стр.ДатаПриема);
			   xB.УстановитьЗначениеПоля("D_UVL",стр.ДатаУвольнения);
			   xB.УстановитьЗначениеПоля("D_TIN",формат(ДатаПодписи, "ДФ=yyyyMMdd"));
			   xB.УстановитьЗначениеПоля("KRPOU",Строка(ФормаДоступа.КодЕДРПОУ));
			   xB.УстановитьЗначениеПоля("KOP",""); 
			   xB.УстановитьЗначениеПоля("TOZ","");
               xB.УстановитьЗначениеПоля("RNPD", '00010101'); 
			   xB.УстановитьЗначениеПоля("DFPV",Число(0));

               xB.Записать();
			КонецЦикла;  			
		   
		ИначеЕсли АктивнаяСтраница = "СписокЛьготников" Тогда
			ФайлДанных = КаталогДанных + "\APM_BTST.DBF";
			xB = Новый xBase();

			xB.Поля.Добавить("KTF","S",1,0);
			xB.Поля.Добавить("TIN","S",10,0);
			xB.Поля.Добавить("ZVIT_R","N",4,0);
			xB.Поля.Добавить("KRPOU","S",12,0);
			xB.Поля.Добавить("KPM","N",2,0);
			xB.Поля.Добавить("KPD","N",2,0);
			xB.Поля.Добавить("KPLG","S",8,0);
			xB.Поля.Добавить("RNPD","N",5,0);
			xB.Поля.Добавить("DFPV","D",8,0);
			xB.Поля.Добавить("NPD","N",5,0);
			xB.Поля.Добавить("DFD","D",8,0);
			xB.Поля.Добавить("KPFU","C",8,0); 
			xB.Поля.Добавить("NZV","S",1,0);
			xB.Поля.Добавить("KOP","S",10,0); 
			xB.Поля.Добавить("TOZ","S",6,0);
			
			xB.СоздатьФайл(ФайлДанных);
			
			Если Не xB.Открыта() Тогда  
				Предупреждение(НСтр("ru='Не удалось создать и открыть указанный файл!';uk='Не вдалося створити й відкрити зазначений файл!'"));  
			КонецЕсли;  

			ФормаДоступа.мСтруктураМногострочныхРазделов.Свойство("СписокЛьготников", СтруктураГруппы);
			
			Для каждого стр Из СтруктураГруппы Цикл
			   xB.Добавить();
		       xB.УстановитьЗначениеПоля("KTF","1");
			   xB.УстановитьЗначениеПоля("TIN",стр.ИНН);
			   xB.УстановитьЗначениеПоля("ZVIT_R",КодГода);
			   xB.УстановитьЗначениеПоля("KRPOU",Строка(ФормаДоступа.КодЕДРПОУ));
			   
			   xB.УстановитьЗначениеПоля("KPM",ОбщегоНазначения.ПреобразоватьВЧисло(стр.СтажМес)); 
			   xB.УстановитьЗначениеПоля("KPD",ОбщегоНазначения.ПреобразоватьВЧисло(стр.СтажДень)); 
			   КодОснования = "" + стр.КодОснования;
			   xB.УстановитьЗначениеПоля("KPLG",КодОснования);
			   xB.УстановитьЗначениеПоля("RNPD",ОбщегоНазначения.ПреобразоватьВЧисло(0));
			   xB.УстановитьЗначениеПоля("DFPV","");
			   xB.УстановитьЗначениеПоля("NPD",ОбщегоНазначения.ПреобразоватьВЧисло(0));
			   xB.УстановитьЗначениеПоля("DFD",Дата(ДатаПодписи));
			   xB.УстановитьЗначениеПоля("KPFU",""); 
			   xB.УстановитьЗначениеПоля("NZV","");
			   xB.УстановитьЗначениеПоля("KOP",""); 
			   xB.УстановитьЗначениеПоля("TOZ","");
			   xB.Записать();

			КонецЦикла;  			
			
	   КонецЕсли;	
   Иначе
	   Если Не ФормаДоступа.мСтруктураМногостраничныхРазделов.Свойство(АктивнаяСтраница, ТаблицаСтраниц) Тогда
		   Возврат;
	   КонецЕсли;
	        ТаблицаСтраниц = СтруктураМногостраничныхРазделов[АктивнаяСтраница];
	        //создаем файл 
	   		xB = Новый xBase();
			
			ФайлДанных = КаталогДанных + "\APM_ITST.DBF";
			
			xB.Поля.Добавить("KTF","S",1,0);
			xB.Поля.Добавить("TIN","S",10,0);
			xB.Поля.Добавить("ZVIT_R","N",4,0);
			xB.Поля.Добавить("ZVIT_P","N",1,0);
			xB.Поля.Добавить("SPLAT_R","N",4,0);
			xB.Поля.Добавить("KRPOU","S",12,0);
			xB.Поля.Добавить("OTK","S",1,0);
			xB.Поля.Добавить("KTSZ","S",1,0);
			xB.Поля.Добавить("SVR","N",10,2);
			xB.Поля.Добавить("SVZ","N",10,2);
			Для Инд = 1 По 12 Цикл
				xB.Поля.Добавить("SZ"+Инд,"N",9,2);
				xB.Поля.Добавить("SZP"+Инд,"N",9,2);
				xB.Поля.Добавить("SL"+Инд,"N",9,2);
				xB.Поля.Добавить("SPD"+Инд,"N",9,2);
				xB.Поля.Добавить("KD"+Инд,"N",3,0);
			КонецЦикла;
			xB.Поля.Добавить("SZ","N",10,2);
			xB.Поля.Добавить("SZP","N",10,2);
			xB.Поля.Добавить("SL","N",10,2);
			xB.Поля.Добавить("SP","N",10,2);
			xB.Поля.Добавить("KD","N",3,0);
			//
			xB.Поля.Добавить("DPR","D",8,0);
			xB.Поля.Добавить("DZR","D",8,0);
			xB.Поля.Добавить("KPM","N",2,0);
			xB.Поля.Добавить("KPD","N",2,0);
			Для Инд = 1 По 4 Цикл
				xB.Поля.Добавить("KPLG"+Инд,"S",8,0);
				xB.Поля.Добавить("KMZ"+Инд,"N",2,0);
				xB.Поля.Добавить("KST"+Инд,"S",1,0);
				xB.Поля.Добавить("SSM"+Инд,"N",2,0);
				xB.Поля.Добавить("SSD"+Инд,"N",2,0);
				xB.Поля.Добавить("SST"+Инд,"N",3,0);
				xB.Поля.Добавить("SSG"+Инд,"N",4,0);
				xB.Поля.Добавить("SSH"+Инд,"N",2,0);
				xB.Поля.Добавить("SSZ"+Инд,"N",3,0);
				xB.Поля.Добавить("NST"+Инд,"N",6,2);
				xB.Поля.Добавить("KSZ"+Инд,"S",1,0);
			КонецЦикла;
			xB.Поля.Добавить("RNPD","N",5,0);
			xB.Поля.Добавить("DFPV","D",8,0); 
			xB.Поля.Добавить("NPD","N",5,0);
			xB.Поля.Добавить("DFD","D",8,0);
			xB.Поля.Добавить("KPFU","C",8,0); 
			xB.Поля.Добавить("NZV","S",1,0);
			xB.Поля.Добавить("KOP","S",10,0); 
			xB.Поля.Добавить("TOZ","S",6,0); 
			
			xB.СоздатьФайл(ФайлДанных); 
		   
		   Если Не xB.Открыта() Тогда  
			   Предупреждение(НСтр("ru='Не удалось создать и открыть указанный файл!';uk='Не вдалося створити й відкрити зазначений файл!'"));  
		   КонецЕсли;  

	   
		   Для Каждого Страница Из ТаблицаСтраниц Цикл
			   xB.Добавить();
			   СтруктураДанныхСтраницы = Страница.Данные;
			   СтруктураДанныхСтраницы.Свойство("Н", Нач);
			   СтруктураДанныхСтраницы.Свойство("К", Корр);
			   СтруктураДанныхСтраницы.Свойство("С", Отмен);
			   СтруктураДанныхСтраницы.Свойство("НП",НП);
			   
			   KTF = ?(СтрДлина(Нач)<>0,1,?(СтрДлина(Корр)<>0,2,?(СтрДлина(Отмен)<>0,3,?(СтрДлина(НП)<>0,4,1))));
			   xB.УстановитьЗначениеПоля("KTF",KTF); 
			   
			   СтруктураДанныхСтраницы.Свойство("Инн", ИННСотр);
			   xB.УстановитьЗначениеПоля("TIN",Строка(ИННСотр));
			   
			   СтруктураДанныхСтраницы.Свойство("ГодОтчета", ГодОтчета);
			   xB.УстановитьЗначениеПоля("ZVIT_R",ОбщегоНазначения.ПреобразоватьВЧисло(ГодОтчета));
			   
			   xB.УстановитьЗначениеПоля("ZVIT_P",Строка(КодГода));
			   
			   xB.УстановитьЗначениеПоля("SPLAT_R",ОбщегоНазначения.ПреобразоватьВЧисло(ГодВыплаты));
			   
			   
			   xB.УстановитьЗначениеПоля("KRPOU",Строка(ФормаДоступа.КодЕДРПОУ));
			   
			   СтруктураДанныхСтраницы.Свойство("Пр", Пр);
			   Если ЗначениеЗаполнено(Пр) Тогда
				  Пр = 1; 
			   Иначе
				  Пр = 0; 
			   Конецесли;	   
			   xB.УстановитьЗначениеПоля("OTK",Строка(Пр));
			   
			   xB.УстановитьЗначениеПоля("KTSZ",Строка(КодСтавки));
			   
			   СтруктураДанныхСтраницы.Свойство("СуммаНач", Начисл);
			   xB.УстановитьЗначениеПоля("SVR",Строка(Начисл));
			   
			   СтруктураДанныхСтраницы.Свойство("СуммаУдерж",Отчисл);
			   xB.УстановитьЗначениеПоля("SVZ",Строка(Отчисл));
			   
			   Для Мес = 1 по 12 Цикл
				   СтруктураДанныхСтраницы.Свойство("Мес"+ Строка(Мес) + "Всего", СуммаДохода);
				   xB.УстановитьЗначениеПоля("SZ"+Мес,ОбщегоНазначения.ПреобразоватьВЧисло(СуммаДохода));
				   
				   СтруктураДанныхСтраницы.Свойство("Мес"+ Строка(Мес) + "Пенс", БазаОбложен);
				   xB.УстановитьЗначениеПоля("SZP"+Мес,ОбщегоНазначения.ПреобразоватьВЧисло(БазаОбложен));
				   
				   СтруктураДанныхСтраницы.Свойство("Мес"+ Строка(Мес) + "Больн", СуммаБольни);
				   xB.УстановитьЗначениеПоля("SL"+Мес,ОбщегоНазначения.ПреобразоватьВЧисло(СуммаБольни));
				   
				   СтруктураДанныхСтраницы.Свойство("Мес"+ Строка(Мес) + "Удерж", СуммаВзноса);
				   xB.УстановитьЗначениеПоля("SPD"+Мес,ОбщегоНазначения.ПреобразоватьВЧисло(СуммаВзноса));
				   
				   СтруктураДанныхСтраницы.Свойство("Мес"+ Строка(Мес) + "Дней", чДней);
				   xB.УстановитьЗначениеПоля("KD"+Мес,ОбщегоНазначения.ПреобразоватьВЧисло(чДней));
			   КонецЦикла;
			   
			   СтруктураДанныхСтраницы.Свойство("ИтогВсего",ИтСуммаДохода);
			   xB.УстановитьЗначениеПоля("SZ",ОбщегоНазначения.ПреобразоватьВЧисло(ИтСуммаДохода));
			   
			   СтруктураДанныхСтраницы.Свойство("ПенсВсего",ИтБазаОбложен);
			   xB.УстановитьЗначениеПоля("SZP",ОбщегоНазначения.ПреобразоватьВЧисло(ИтБазаОбложен));
			   
			   СтруктураДанныхСтраницы.Свойство("БольнВсего",ИтСуммаБольни);
			   xB.УстановитьЗначениеПоля("SL",ОбщегоНазначения.ПреобразоватьВЧисло(ИтСуммаБольни));
			   
			   СтруктураДанныхСтраницы.Свойство("УдержВсего",ИтСуммаВзноса);
			   xB.УстановитьЗначениеПоля("SP",ОбщегоНазначения.ПреобразоватьВЧисло(ИтСуммаВзноса));
			   
			   СтруктураДанныхСтраницы.Свойство("ДнейВсего",ИтДней);
			   xB.УстановитьЗначениеПоля("KD",ОбщегоНазначения.ПреобразоватьВЧисло(ИтДней));

			   СтруктураДанныхСтраницы.Свойство("Днач",НачОтношенийД);
			   СтруктураДанныхСтраницы.Свойство("МесНач",НачОтношенийМ);
			   СтруктураДанныхСтраницы.Свойство("ГодНач",НачОтношенийГ);
			   НачОтношений = "" + НачОтношенийГ + НачОтношенийМ + НачОтношенийД;
			   
			   xB.УстановитьЗначениеПоля("DPR",ПреобразоватьВДату(НачОтношений));
			   
			   СтруктураДанныхСтраницы.Свойство("Дкон",КонОтношенийД);
			   СтруктураДанныхСтраницы.Свойство("МесКон",КонОтношенийМ);
			   СтруктураДанныхСтраницы.Свойство("ГодКон",КонОтношенийГ);
			   КонОтношений = "" + КонОтношенийГ + КонОтношенийМ + КонОтношенийД;

			   xB.УстановитьЗначениеПоля("DZR",ПреобразоватьВДату(КонОтношений));
			   
			   СтруктураДанныхСтраницы.Свойство("Мес",ПолныхМесяцевСтажа);
			   xB.УстановитьЗначениеПоля("KPM",ОбщегоНазначения.ПреобразоватьВЧисло(ПолныхМесяцевСтажа));
			   
			   СтруктураДанныхСтраницы.Свойство("Дней",ПолныхДнейСтажа);
			   xB.УстановитьЗначениеПоля("KPD",ОбщегоНазначения.ПреобразоватьВЧисло(ПолныхДнейСтажа));
			   
			   xB.УстановитьЗначениеПоля("RNPD",ОбщегоНазначения.ПреобразоватьВЧисло(0));
			   xB.УстановитьЗначениеПоля("DFPV",Дата(ДатаПодписи));
			   
			   СтруктураДанныхСтраницы.Свойство("П31",П31);
               xB.УстановитьЗначениеПоля("NPD",П31);
			   
			   xB.УстановитьЗначениеПоля("DFD",Дата(ДатаПодписи));
			   
			   xB.УстановитьЗначениеПоля("KPFU",""); 
			   
			   xB.УстановитьЗначениеПоля("NZV","");
			   
			   xB.УстановитьЗначениеПоля("KOP","");
			   
			   xB.УстановитьЗначениеПоля("TOZ",""); 
			   
			   xB.Записать();
			   
		   КонецЦикла;	   
		   
	   КонецЕсли;
	   
	 xB.Записать();
  
	//======= конец загрузки в DBF  ====================
	xB.ЗакрытьФайл();
	
  //  ФайлДанных = ФайлДанных + ".DBF";
  //  ВыбФайл = Новый Файл(ФайлДанных);  
 
////	Если ВыбФайл.Существует() Тогда 
  //  	
  //  Попытка
  //  	ПереместитьФайл(ФайлДанных,ФайлДанныхРез);
  //  Исключение
  //  	Предупреждение("Закройте файл с именем " + ФайлДанныхРез +" !");
  //  	Возврат
  //  КонецПопытки;

  Сообщить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Файл  %1  успешно сформирован в каталоге: %2';uk='Файл  %1  успішно сформований у каталозі: %2'"), СокрЛП(ФайлДанных), КаталогДанных));
  //  Иначе  
  //  	Предупреждение("Файл не найден!");  
  //  КонецЕсли  


КонецПроцедуры // СохранитьвФорматеДБФ()()

Процедура КаталогДанныхНачалоВыбора(Элемент, СтандартнаяОбработка)

	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	Диалог.Заголовок = НСтр("ru='Выберите каталог сохранения dbf файлов';uk='Виберіть каталог збереження dbf файлів'");

	Если Диалог.Выбрать() Тогда
		КаталогДанных = Диалог.Каталог;
	КонецЕсли;
 КонецПроцедуры

Процедура ПриОткрытии()
	 Если АктивнаяСтраница <> "Работодатель" Тогда
		 
		 Сообщить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Внимание! В файл с расширением *.dbf будут выгружаться  данные текущей активной страницы ""%1"" !	 "
"Перед выгрузкой данных следует заполнить данные отчета, воспользовавшись кнопкой ""Заполнить"" !';uk='Увага! У файл із розширенням *.dbf будуть вивантажуватися  дані поточної активної сторінки ""%1"" !	 "
"Перед вивантаженням даних потрібно заповнити дані звіту, скориставшись кнопкою ""Заповнити"" !'"), ПредставлениеАктивнойСтраницы));
	 Иначе
		 Сообщить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Внимание! Для данных текущей активной страницы ""%1"
"не предусмотрена выгрузка данных в файл с расширением *.dbf с целью последующей загрузки в программный комплекс АРМ !';uk='Увага! Для даних поточної активної сторінки ""%1"
"не передбачене вивантаження даних у файл із розширенням *.dbf з метою наступного завантаження в програмний комплекс АРМ !'"), ПредставлениеАктивнойСтраницы));	 
		 
	 КонецЕсли;		   
	 
	 Если АктивнаяСтраница <> "ИндВедомости" Тогда
		 ЭлементыФормы["КодСтавки"].Видимость = Ложь;
		 ЭлементыФормы["Надпись2"].Видимость = Ложь;
	 КонецЕсли;	
	 
	 //Восстановим значение Каталога для выгрузки РегОтчетов
	КаталогДанных = ВосстановитьЗначение("КаталогДанныхПерсФорм")
 КонецПроцедуры

 Процедура ПриЗакрытии()
	 //Сохраним значение Каталога для выгрузки РегОтчетов
	СохранитьЗначение("КаталогДанныхПерсФорм",КаталогДанных);
 КонецПроцедуры

 
