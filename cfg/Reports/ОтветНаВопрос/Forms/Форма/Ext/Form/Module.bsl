Перем ВысотаЗаголовка;
Перем НеЗаполнятьНастройкиПриОткрытии;
Перем СтруктураСвязиЭлементовСДанными;
Перем ОтборРазвернут;

// Управляет пометками кнопок ком. панели
//
// Параметры:
//	Нет.
//
Процедура УправлениеПараметрамиОтображенияЭлементовФормы()
	
	Если ПоказыватьЗаголовок Тогда
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Заголовок.Пометка = Истина;
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подменю.Кнопки.Заголовок.Пометка = Истина;

	Иначе
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Заголовок.Пометка = Ложь;
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подменю.Кнопки.Заголовок.Пометка = Ложь;

	КонецЕсли;

	// Отображение заголовка отчета
	Если ЗначениеЗаполнено(ВысотаЗаголовка) Тогда
		ЭлементыФормы.ДокументРезультат.Область(1,,ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
	КонецЕсли;

	Если ОтборРазвернут Тогда
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Отбор.Пометка = Истина;
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подменю.Кнопки.Отбор.Пометка = Истина;
		ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Нет;
	Иначе
		ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Верх;
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Отбор.Пометка = Ложь;
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подменю.Кнопки.Отбор.Пометка = Ложь;
	КонецЕсли;
	
КонецПроцедуры // УправлениеПараметрамиОтображенияЭлементовФормы()

//  Управляет выводом заголовка
//
// Параметры:
//	Нет.
//
Процедура ВыводЗаголовка()

	// Перезаполнять заголовок можно только у "чистого" отчета
	Если ЭлементыФормы.ДокументРезультат.ВысотаТаблицы = 0 Тогда

		ЭтотОтчет.СформироватьОтчет(ЭлементыФормы.ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, Истина);
		
	КонецЕсли;

	УправлениеПараметрамиОтображенияЭлементовФормы();
	
КонецПроцедуры // ВыводЗаголовка()

// Формирует текст заголовка
//
// Параметры:
//	Нет.
//
Процедура СформироватьЗаголовокФормы()

	Заголовок = УправлениеОтчетами.СформироватьЗаголовокОсновнойФормы(, , мНазваниеОтчета, -1);

КонецПроцедуры // СформироватьЗаголовокФормы()

// Обновляет таблицу отчета
//
// Параметры:
//	Нет.
//
Процедура ОбновитьОтчет() Экспорт
	
 	НеЗаполнятьНастройкиПриОткрытии = Не Открыта();
	
	СписокПустыхЗначений = Новый СписокЗначений;
	ТипыПВХ = Метаданные.ПланыВидовХарактеристик.ВопросыДляАнкетирования.Тип.Типы();
	Если ЭтотОтчет.ОбщийОтчет.ПостроительОтчета.Отбор.Найти("Вопрос") <> Неопределено Тогда
		ЭтотОтчет.ОтчетДиаграмма.мНазваниеОтчета = Строка(ЭтотОтчет.ОбщийОтчет.ПостроительОтчета.Отбор.Вопрос.Значение);
	КонецЕсли;
	
	Для каждого ТипИзХарактеристики из ТипыПВХ Цикл
		СписокПустыхЗначений.Добавить(ОбщегоНазначения.ПустоеЗначениеТипа(ТипИзХарактеристики));
	КонецЦикла;
	СписокПустыхЗначений.Добавить(Неопределено);
	
	ЭтотОтчет.ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("СписокПустыхЗначений", СписокПустыхЗначений);
	ЭтотОтчет.ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("Анкета", 			  ЭлементыФормы.ПолеНастройкиАнкета.Значение);
	ЭтотОтчет.ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("Раздел",	  	  	  	  ЭлементыФормы.ПолеНастройкиРаздел.Значение);
	ЭтотОтчет.ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("Опрос",	  	  	  	  ЭлементыФормы.ПолеНастройкиОпрос.Значение);
	ЭтотОтчет.ОтчетДиаграмма.ПостроительОтчета.Параметры.Вставить("СписокПустыхЗначений", СписокПустыхЗначений);
	ЭтотОтчет.ОтчетДиаграмма.ПостроительОтчета.Параметры.Вставить("Анкета", 			  ЭлементыФормы.ПолеНастройкиАнкета.Значение);
	ЭтотОтчет.ОтчетДиаграмма.ПостроительОтчета.Параметры.Вставить("Раздел",	  	  	  	  ЭлементыФормы.ПолеНастройкиРаздел.Значение);
	ЭтотОтчет.ОтчетДиаграмма.ПостроительОтчета.Параметры.Вставить("Опрос",	  	  	  	  ЭлементыФормы.ПолеНастройкиОпрос.Значение);
	
	Если ЭтотОтчет.ВариантОтображения = Перечисления.ВариантыОтображенияОтчетов.Таблица Тогда
		
		// обновляем настройки построителя отчетов, формирующего диаграмму
		ЭтотОтчет.ОтчетДиаграмма.ПостроительОтчета.УстановитьНастройки(ПостроительОтчета.ПолучитьНастройки());
		
		ОбновитьТаблицуОтчета();
		
	ИначеЕсли ЭтотОтчет.ВариантОтображения = Перечисления.ВариантыОтображенияОтчетов.Диаграмма Тогда
		
		// обновляем настройки построителя отчетов, формирующего таблицы (обычную и сводную)
		ПостроительОтчетаДиаграммы = ЭтотОтчет.ПолучитьПостроительДиаграммы();
		
		Если ПостроительОтчетаДиаграммы.ИзмеренияСтроки.Количество() > 0 Тогда
			ИзмерениеСтрокиДиаграммы = ПостроительОтчетаДиаграммы.ИзмеренияСтроки[0];
			ИзмерениеСтрокиТаблицы = ПостроительОтчета.ИзмеренияСтроки.Найти(ИзмерениеСтрокиДиаграммы.Имя);
			Если ИзмерениеСтрокиТаблицы <> Неопределено Тогда
				МестоИзмерения = ПостроительОтчета.ИзмеренияСтроки.Индекс(ИзмерениеСтрокиТаблицы);
				Если МестоИзмерения > 0 Тогда
					ПостроительОтчета.ИзмеренияСтроки.Сдвинуть(ИзмерениеСтрокиТаблицы,-МестоИзмерения);
				КонецЕсли;
			Иначе
				ПостроительОтчета.ИзмеренияСтроки.Вставить(ИзмерениеСтрокиДиаграммы.ПутьКДанным,ИзмерениеСтрокиДиаграммы.Имя,ИзмерениеСтрокиДиаграммы.ТипИзмерения,ИзмерениеСтрокиДиаграммы.Макет,ИзмерениеСтрокиДиаграммы.МакетИерархии,0);
				ИзмерениеКолонкиТаблицы = ПостроительОтчета.ИзмеренияКолонки.Найти(ИзмерениеСтрокиДиаграммы.Имя);
				Если ИзмерениеКолонкиТаблицы <> Неопределено Тогда
					ПостроительОтчета.ИзмеренияКолонки.Удалить(ИзмерениеКолонкиТаблицы)
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если ПостроительОтчетаДиаграммы.ИзмеренияКолонки.Количество() > 0 Тогда
			ИзмерениеКолонкиДиаграммы = ПостроительОтчетаДиаграммы.ИзмеренияКолонки[0];
			ИзмерениеКолонкиТаблицы = ПостроительОтчета.ИзмеренияКолонки.Найти(ИзмерениеКолонкиДиаграммы.Имя);
			Если ИзмерениеКолонкиТаблицы <> Неопределено Тогда
				МестоИзмерения = ПостроительОтчета.ИзмеренияКолонки.Индекс(ИзмерениеКолонкиТаблицы);
				Если МестоИзмерения > 0 Тогда
					ПостроительОтчета.ИзмеренияКолонки.Сдвинуть(ИзмерениеКолонкиТаблицы,-МестоИзмерения);
				КонецЕсли;
			ИначеЕсли ПостроительОтчета.ИзмеренияСтроки.Найти(ИзмерениеКолонкиДиаграммы.Имя) = Неопределено Тогда
				ПостроительОтчета.ИзмеренияКолонки.Вставить(ИзмерениеКолонкиДиаграммы.ПутьКДанным,ИзмерениеКолонкиДиаграммы.Имя,ИзмерениеКолонкиДиаграммы.ТипИзмерения,ИзмерениеКолонкиДиаграммы.Макет,ИзмерениеКолонкиДиаграммы.МакетИерархии,0);
			КонецЕсли;
		КонецЕсли;
		
		ЭтотОтчет.ОтчетДиаграмма.Показатели.Загрузить(ОбщийОтчет.Показатели.Выгрузить());
		
		ОбновитьДиаграмму();
		
	ИначеЕсли ЭтотОтчет.ВариантОтображения = Перечисления.ВариантыОтображенияОтчетов.СводнаяТаблица Тогда
		
		// обновляем настройки построителя отчетов, формирующего диаграмму
		ЭтотОтчет.ОтчетДиаграмма.ПостроительОтчета.УстановитьНастройки(ПостроительОтчета.ПолучитьНастройки());
		
		ОбновитьСводнуюТаблицу();
		
	КонецЕсли;
	
КонецПроцедуры // ОбновитьОтчет()

// Обновляет таблицу отчета
//
// Параметры:
//	Нет.
//
Процедура ОбновитьТаблицуОтчета() Экспорт

	ЭтотОтчет.СформироватьОтчет(ЭлементыФормы.ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка);

	Если ЗначениеЗаполнено(ВысотаЗаголовка) Тогда
		ЭлементыФормы.ДокументРезультат.Область(1,,ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
	КонецЕсли;

	ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.ДокументРезультат;

	УправлениеПараметрамиОтображенияЭлементовФормы();
	
КонецПроцедуры // ОбновитьТаблицуОтчета()

Процедура ОбновитьДиаграмму() Экспорт
	
	ЭтотОтчет.СформироватьДиаграмму(ЭлементыФормы.Диаграмма);
	ОбщийОтчетДиаграмма = ЭтотОтчет.ОтчетДиаграмма;
	
	Если ОбщийОтчетДиаграмма.НомерПоказателя = 2 тогда // это показатель Развернутый ответ
		ЭлементыФормы.Диаграмма.Очистить();
		РезультатРазвернутыйОтвет = ЭтотОтчет.ОтчетДиаграмма.ПостроительОтчета.Результат;
		ТаблицаРазвернутыйОтвет = РезультатРазвернутыйОтвет.Выгрузить(ОбходРезультатаЗапроса.Прямой);
		ТаблицаРазвернутыйОтвет.Колонки.Добавить("Ответ");
		СписокСтрокКУдалению = Новый СписокЗначений;
		Для Каждого СтрокаТаблицаРазвернутыйОтвет из ТаблицаРазвернутыйОтвет Цикл
			Попытка
				СтрокаТаблицаРазвернутыйОтвет.Ответ = Число(СтрокаТаблицаРазвернутыйОтвет.РазвернутыйОтвет);
			Исключение
			КонецПопытки;
		КонецЦикла;
		ТаблицаРазвернутыйОтвет.Свернуть("ТиповойОтвет", "Ответ");
		ВсегоСтрок = ТаблицаРазвернутыйОтвет.Количество() - 1;
		Для индСтроки = 0 по ВсегоСтрок Цикл
			СтрокаТаблицаРазвернутыйОтвет = ТаблицаРазвернутыйОтвет[ВсегоСтрок - индСтроки];
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицаРазвернутыйОтвет.ТиповойОтвет) тогда
				ТаблицаРазвернутыйОтвет.Удалить(СтрокаТаблицаРазвернутыйОтвет);
			КонецЕсли;
		КонецЦикла;
		ЭлементыФормы.Диаграмма.ИсточникДанных = ТаблицаРазвернутыйОтвет;
	КонецЕсли;
	ТипДиаграммыОтчета = ОбщийОтчетДиаграмма.ТипДиаграммыОтчета;
	Если ТипДиаграммыОтчета <> Неопределено Тогда
		ЭлементыФормы.Диаграмма.ТипДиаграммы = ТипДиаграммыОтчета;
	КонецЕсли;
	
	Если ОбщийОтчетДиаграмма.ВидПодписейККруговойДиаграмме<>Неопределено Тогда
		ЭлементыФормы.Диаграмма.ВидПодписей = ОбщийОтчетДиаграмма.ВидПодписейККруговойДиаграмме;
	КонецЕсли;
	
	Если ОбщийОтчетДиаграмма.РаздвижениеСерийКруговойДиаграммы<>Неопределено Тогда
		ЭлементыФормы.Диаграмма.АвтоРаздвижениеСерий = ОбщийОтчетДиаграмма.РаздвижениеСерийКруговойДиаграммы;
	КонецЕсли; 
	
	ЭлементыФормы.Диаграмма.Свет = ОбщийОтчетДиаграмма.Свет;
	ЭлементыФормы.Диаграмма.Окантовка = ОбщийОтчетДиаграмма.Окантовка;
	ЭлементыФормы.Диаграмма.Градиент = ОбщийОтчетДиаграмма.Градиент;
	
	Если ОбщийОтчетДиаграмма.ОриентацияИзометрическойДиаграммы <> Неопределено Тогда
		ЭлементыФормы.Диаграмма.Ориентация = ОбщийОтчетДиаграмма.ОриентацияИзометрическойДиаграммы;
	КонецЕсли;
	
	Если ОбщийОтчетДиаграмма.РежимПробеловДиаграммыСОбластями <> Неопределено Тогда
		ЭлементыФормы.Диаграмма.РежимПробелов = ОбщийОтчетДиаграмма.РежимПробеловДиаграммыСОбластями;
	КонецЕсли;
	
	Если ОбщийОтчетДиаграмма.ОграничениеСерий<>Неопределено Тогда
		ЭлементыФормы.Диаграмма.МаксимумСерий = ОбщийОтчетДиаграмма.ОграничениеСерий;
	КонецЕсли;
	
	ЭлементыФормы.Диаграмма.МаксимумСерийКоличество = ОбщийОтчетДиаграмма.МаксимумСерийКоличество;
	ЭлементыФормы.Диаграмма.МаксимумСерийПроцент = ОбщийОтчетДиаграмма.МаксимумСерийПроцент;

	ВыводимыйПоказатель = "";
	Если ОбщийОтчетДиаграмма.НомерПоказателя < ОбщийОтчетДиаграмма.мТаблицаПоказатели.Количество() Тогда
		ВыводимыйПоказатель = ОбщийОтчетДиаграмма.мТаблицаПоказатели[ОбщийОтчетДиаграмма.НомерПоказателя].ПредставлениеПоля;
	КонецЕсли;
	
	ЭлементыФормы.Диаграмма.ОбластьПостроения.ВертикальныеМетки = ОбщийОтчетДиаграмма.ВертикальныеМетки;

	ЭлементыФормы.Диаграмма.ОбластьЗаголовка.Текст = ОбщийОтчетДиаграмма.мНазваниеОтчета + ": " + ВыводимыйПоказатель;
	
	ЭлементыФормы.Диаграмма.БазовоеЗначение = ОбщийОтчетДиаграмма.БазовоеЗначение;
	
	ЭлементыФормы.Диаграмма.ОтображатьЗаголовок = ОбщийОтчетДиаграмма.ОтображатьЗаголовок;
	
	ЭлементыФормы.Диаграмма.ОтображатьЛегенду   = ОбщийОтчетДиаграмма.ОтображатьЛегенду;
	
	ТекущийЭлемент = ЭлементыФормы.Диаграмма;

КонецПроцедуры

Процедура ОбновитьСводнуюТаблицу() Экспорт

	ЭтотОтчет.СформироватьСводнуюТаблицу(ЭлементыФормы.СводнаяТаблица.ВстроенныеТаблицы.СводнаяТаблица);
	
	ТекущийЭлемент = ЭлементыФормы.СводнаяТаблица;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ НАЖАТИЯ КНОПОК КОМАНДНОЙ ПАНЕЛИ

// Процедура - обработчик нажатия кнопки "Обновить".
//
Процедура КоманднаяПанельФормыОбновить(Кнопка)

	ОбновитьОтчет();

КонецПроцедуры // ВыполнитьНажатие()

// Процедура - обработчик нажатия кнопки "Отбор".
//
Процедура КоманднаяПанельФормыОтбор(Кнопка)

	ОтборРазвернут = НЕ ОтборРазвернут;

	УправлениеПараметрамиОтображенияЭлементовФормы();
	
КонецПроцедуры

// Процедура - обработчик нажатия кнопки "Заголовок".
//
Процедура КоманднаяПанельФормыЗаголовок(Кнопка)
	
	ПоказыватьЗаголовок = Не ПоказыватьЗаголовок;
	
	ВыводЗаголовка();
	
КонецПроцедуры

// Процедура - обработчик нажатия кнопки "Настройка".
//
Процедура КоманднаяПанельФормыНастройка(Кнопка)
	
	Если ЭтотОтчет.ВариантОтображения = Перечисления.ВариантыОтображенияОтчетов.Диаграмма Тогда
		
		ФормаНастройка = ЭтотОтчет.ОтчетДиаграмма.ПолучитьФорму("ФормаНастройка", ЭтаФорма);
		
		ЭтотОтчет.ОтчетДиаграмма.мНазваниеОтчета = мНазваниеОтчета + " - настройка диаграммы"; // временно уточним название отчета
		
		РезультатОткрытия = ФормаНастройка.ОткрытьМодально();

		Если РезультатОткрытия = Истина Тогда
			Показатели[ЭтотОтчет.ОтчетДиаграмма.НомерПоказателя].Использование = Истина;
			ОбновитьОтчет();
		КонецЕсли;
		
		ЭтотОтчет.ОтчетДиаграмма.мНазваниеОтчета = мНазваниеОтчета;
		
	Иначе
		
		ФормаНастройка = ЭтотОтчет.ПолучитьФормуНастройки();
		ФормаНастройка.ВладелецФормы = ЭтаФорма;
		
		СтруктураСНастройками = ЭтотОтчет.СформироватьСтруктуруДляСохраненияНастроек(ПоказыватьЗаголовок);
		
		СтараяДатаКон = ДатаКон;
		СтараяДатаНач = ДатаНач;
		
		НазваниеОтчета = мНазваниеОтчета; // временно уточним название отчета
		мНазваниеОтчета = мНазваниеОтчета + " - настройка таблицы";
		
		РезультатОткрытия = ФормаНастройка.ОткрытьМодально();
		
		Если РезультатОткрытия = Истина Тогда
			
			Для каждого СтрокаТЗ Из Показатели Цикл
				Если СтрокаТЗ.Использование Тогда
					ЭтотОтчет.ОтчетДиаграмма.НомерПоказателя = Показатели.Индекс(СтрокаТЗ);
					Прервать
				КонецЕсли;
			КонецЦикла;
			ОбновитьОтчет();
			
		Иначе
			
			// Форму закрыли эскейпом или по "Закрыть" - восстановим настройки, отчет формировать не будем!
			// Восстанавливаем сохраненные значения
			
			ЭтотОтчет.ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ПоказыватьЗаголовок);
			
			ДатаКон = СтараяДатаКон;
			ДатаНач = СтараяДатаНач;
			
		КонецЕсли;
		
		мНазваниеОтчета = НазваниеОтчета;
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик нажатия кнопки "Отображение"
//
// Не является ошибкой проверки конфигурации - Обработчик уставливается динамически методом "Действие"
// в процедуре "ЗаполнитьМенюОтчетаОтображение" общего модуля "Отчеты"
Процедура КоманднаяПанельФормыОтображение(Кнопка)

	УправлениеОтчетами.ДействияПриИзмененииОтображения(ЭтотОтчет, ЭтаФорма, Кнопка)

КонецПроцедуры

// Заполняет параметры диаграммы по умолчанию
//
// Параметры:
//	Нет.
//
Процедура ЗаполнитьНачальныеНастройкиДиаграммы()
	
	Если ЭтотОтчет.ОтчетДиаграмма.ТипДиаграммыОтчета<>Неопределено Тогда
		ЭлементыФормы.Диаграмма.ТипДиаграммы = ЭтотОтчет.ОтчетДиаграмма.ТипДиаграммыОтчета;
	Иначе
		ЭтотОтчет.ОтчетДиаграмма.ТипДиаграммыОтчета = ЭлементыФормы.Диаграмма.ТипДиаграммы;
	КонецЕсли;
	
	Если ЭтотОтчет.ОтчетДиаграмма.ВидПодписейККруговойДиаграмме<>Неопределено Тогда
		ЭлементыФормы.Диаграмма.ВидПодписей = ЭтотОтчет.ОтчетДиаграмма.ВидПодписейККруговойДиаграмме;
	Иначе
		ЭтотОтчет.ОтчетДиаграмма.ВидПодписейККруговойДиаграмме = ЭлементыФормы.Диаграмма.ВидПодписей;
	КонецЕсли;
	
	Если ЭтотОтчет.ОтчетДиаграмма.РаздвижениеСерийКруговойДиаграммы<>Неопределено Тогда
		ЭлементыФормы.Диаграмма.АвтоРаздвижениеСерий = ЭтотОтчет.ОтчетДиаграмма.РаздвижениеСерийКруговойДиаграммы;
	Иначе
		ЭтотОтчет.ОтчетДиаграмма.РаздвижениеСерийКруговойДиаграммы = ЭлементыФормы.Диаграмма.АвтоРаздвижениеСерий;
	КонецЕсли;
	
	Если ЭтотОтчет.ОтчетДиаграмма.ОриентацияИзометрическойДиаграммы<>Неопределено Тогда
		ЭлементыФормы.Диаграмма.Ориентация = ЭтотОтчет.ОтчетДиаграмма.ОриентацияИзометрическойДиаграммы;
	Иначе
		ЭтотОтчет.ОтчетДиаграмма.ОриентацияИзометрическойДиаграммы = ЭлементыФормы.Диаграмма.Ориентация;
	КонецЕсли;
	
	Если ЭтотОтчет.ОтчетДиаграмма.РежимПробеловДиаграммыСОбластями<>Неопределено Тогда
		ЭлементыФормы.Диаграмма.РежимПробелов = ЭтотОтчет.ОтчетДиаграмма.РежимПробеловДиаграммыСОбластями;
	Иначе
		ЭтотОтчет.ОтчетДиаграмма.РежимПробеловДиаграммыСОбластями = ЭлементыФормы.Диаграмма.РежимПробелов;
	КонецЕсли;
	
	Если ЭтотОтчет.ОтчетДиаграмма.ОграничениеСерий<>Неопределено Тогда
		ЭлементыФормы.Диаграмма.МаксимумСерий = ЭтотОтчет.ОтчетДиаграмма.ОграничениеСерий;
	Иначе
		ЭтотОтчет.ОтчетДиаграмма.ОграничениеСерий = ЭлементыФормы.Диаграмма.МаксимумСерий;
	КонецЕсли;
	
	ЭтотОтчет.ОтчетДиаграмма.ОтображатьЗаголовок = ЭлементыФормы.Диаграмма.ОтображатьЗаголовок;
	ЭтотОтчет.ОтчетДиаграмма.ОтображатьЛегенду   = ЭлементыФормы.Диаграмма.ОтображатьЛегенду;
	
	ЭтотОтчет.ОтчетДиаграмма.Окантовка = Истина;
	ЭтотОтчет.ОтчетДиаграмма.Свет = Истина;
	
КонецПроцедуры // ЗаполнитьПараметрыДиаграммы()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события перед открытием формы
// 
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если Лев(ЭтотОтчет.ТекстЗапросаОтчета, 7) <> "ВЫБРАТЬ" тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если НеЗаполнятьНастройкиПриОткрытии = Ложь Тогда

		ЭтотОтчет.ОбщийОтчет = ЭтотОбъект;

		ЭтотОтчет.ЗаполнитьНачальныеНастройки();
		
	КонецЕсли;
	
 	ЗаполнитьНачальныеНастройкиДиаграммы();
 	ВысотаЗаголовка = 0;
 	СформироватьЗаголовокФормы();
 	// Вспоминим параметры для данной формы
 	ИмяОтчета=ЭтотОтчет.Метаданные().Имя;
 	ОтборРазвернут=?(ВосстановитьЗначение(ИмяОтчета + "_ОтборПомечен") = Истина, Истина, Ложь); // отбор в первый раз не показывать
 	ПоказыватьЗаголовок = ?(ВосстановитьЗначение(ИмяОтчета + "_ЗаголовокПомечен") = Ложь, Ложь, Истина); // заголовок в первый раз наоборот, показывать
 	ВыводЗаголовка();
	
	УправлениеОтчетами.УстановитьСвязьПолейБыстрогоОтбораНаФорме(ЭлементыФормы, ПостроительОтчета.Отбор, СтруктураСвязиЭлементовСДанными, "ОбщийОтчет.ПостроительОтчета.Отбор");
	
КонецПроцедуры // ПередОткрытием()

// Процедура - обработчик события при открытии формы
//
Процедура ПриОткрытии(Отказ)
	ВариантОтображения = ?(ВариантОтображения.Пустая(), Перечисления.ВариантыОтображенияОтчетов.Таблица, ВариантОтображения);
	УправлениеОтчетами.ЗаполнитьМенюОтчетаОтображение(ЭтотОтчет, ЭтаФорма, Новый Действие("КоманднаяПанельФормыОтображение"));		
	УправлениеОтчетами.УстановитьВидимостьПанелиОтчета(ЭлементыФормы, ЭтотОтчет.ВариантОтображения);
	
	НеЗаполнятьНастройкиПриОткрытии = Ложь;

	УправлениеПараметрамиОтображенияЭлементовФормы();
	
КонецПроцедуры

// Процедура - обработчик события перед сохранением значений формы
//
Процедура ПередСохранениемЗначений(Отказ)

	СохраненныеНастройки = ЭтотОтчет.СформироватьСтруктуруДляСохраненияНастроек(ПоказыватьЗаголовок);

КонецПроцедуры // ПередСохранениемЗначений()

// Процедура - обработчик события после восстановления значений формы
//
Процедура ПослеВосстановленияЗначений()

	// Если настройка восстанавливается, когда открывается форма сформровенного отчета, игнорируем
	Если НеЗаполнятьНастройкиПриОткрытии Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(СохраненныеНастройки) = Тип("Структура") Тогда
		
		ЭтотОтчет.ВосстановитьНастройкиИзСтруктуры(СохраненныеНастройки, ПоказыватьЗаголовок);
		
		// Очистим результат - он более не соответствует настройке
		ЭлементыФормы.ДокументРезультат.Очистить();
		ВысотаЗаголовка=0;
		
		ВыводЗаголовка();
		
		СформироватьЗаголовокФормы();
		
	КонецЕсли;

КонецПроцедуры // ПослеВосстановленияЗначений()

// Процедура - орбаротчик события при закрытии
//
Процедура ПриЗакрытии()
	
	ИмяОтчета = ЭтотОтчет.Метаданные().Имя;
	
	// Запомним параметры для данной формы
	СохранитьЗначение( ИмяОтчета+ "_ОтборПомечен", ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Отбор.Пометка);
	
	// Запомним параметры для данной формы
	СохранитьЗначение( ИмяОтчета+ "_ЗаголовокПомечен", ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Заголовок.Пометка);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Процедура - обработчик события "Обработка расшифровки" поля табличного документа ДокументРезультат
//
Процедура ДокументРезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	ЭтотОтчет.ОбработкаРасшифровки(Расшифровка, Элемент, ВысотаЗаголовка, СтандартнаяОбработка);

КонецПроцедуры // ДокументРезультатОбработкаРасшифровки()

// Процедура - обработчик нажатия кнопки "Печать" диаграммы.
//
Процедура КоманднаяПанельДиаграммыПечать(Кнопка)
	
	ДокументРезультат = Новый ТабличныйДокумент;
	ЭтотОтчет.ОтчетДиаграмма.ПолучитьДиаграммуНаПечать(ДокументРезультат);
	ДокументРезультат.Показать();
	
КонецПроцедуры

Процедура ДиаграммаОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	ЭтотОтчет.ОтчетДиаграмма.ОбработкаРасшифровкиСтандартногоОтчета(Расшифровка, СтандартнаяОбработка, ЭтотОтчет);
КонецПроцедуры

// При инициализации формы необходимо заполнить реквизиты и поля основного реквизита формы 
ЗаполнитьПоляОсновногоРеквизита(ЭтотОтчет.ОбщийОтчет);

НеЗаполнятьНастройкиПриОткрытии = Ложь;
ОтборРазвернут = Ложь;
