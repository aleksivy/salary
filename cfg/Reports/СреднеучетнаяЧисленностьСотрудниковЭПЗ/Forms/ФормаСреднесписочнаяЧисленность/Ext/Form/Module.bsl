Перем ИдентификаторОкнаРасшифровки;
Перем ФормаНастройка;
Перем СтруктураРеквизитов;
Перем НеВосстанавливатьНастройку;
Перем СтруктураСвязиЭлементовСДанными;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Управляет пометками кнопок ком. панели
//
// Параметры:
//	Нет.
//
Процедура УправлениеПометкамиКнопокКоманднойПанели()
	
	Если ПоказыватьЗаголовок Тогда
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Заголовок.Пометка = Истина;
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подменю.Кнопки.Заголовок.Пометка = Истина;

	Иначе
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Заголовок.Пометка = Ложь;
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подменю.Кнопки.Заголовок.Пометка = Ложь;

	КонецЕсли;

	Если ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Верх Тогда
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Отбор.Пометка = Ложь;
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подменю.Кнопки.Отбор.Пометка = Ложь;
	Иначе
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Отбор.Пометка = Истина;
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подменю.Кнопки.Отбор.Пометка = Истина;
	КонецЕсли;
	
КонецПроцедуры // УправлениеПометкамиКнопокКоманднойПанели()

// Обновляет таблицу отчета
//
// Параметры:
//	Нет.
//
Процедура ОбновитьОтчет() Экспорт

	СформироватьОтчет(ЭлементыФормы.ДокументРезультат, ПоказыватьЗаголовок);

	ЭлементыФормы.ДокументРезультат.Область("Заголовок").Видимость = ПоказыватьЗаголовок;

	ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.ДокументРезультат;

	УправлениеПометкамиКнопокКоманднойПанели();
	
КонецПроцедуры // ОбновитьОтчет()

//  Управляет выводом заголовка
//
// Параметры:
//	Нет.
//
Процедура ВыводЗаголовка()

	// Перезаполнять заголовок можно только у "чистого" отчета
	Если ЭлементыФормы.ДокументРезультат.ВысотаТаблицы = 0 Тогда

		СформироватьОтчет(ЭлементыФормы.ДокументРезультат, ПоказыватьЗаголовок, Истина);
		
	КонецЕсли;

	ЭлементыФормы.ДокументРезультат.Область("Заголовок").Видимость = ПоказыватьЗаголовок;

	УправлениеПометкамиКнопокКоманднойПанели();
	
КонецПроцедуры // ВыводЗаголовка()

// Формирует текст заголовка
//
// Параметры:
//	Нет.
//
Процедура СформироватьЗаголовокФормы()

	Заголовок = УправлениеОтчетами.СформироватьЗаголовокОсновнойФормы(ДатаНачала, ДатаКонца, НСтр("ru='Среднесписочная численность сотрудников (ЭПЗ)';uk='Середньосписочна чисельність працівників (ЕПЗ)'"), 2);

КонецПроцедуры // СформироватьЗаголовокФормы()

// Формирует структуру, в которую складываются настройки
//
Функция СформироватьСтруктуруДляСохраненияНастроек() Экспорт
	
	СтруктНастр = Новый Структура;
	СтруктНастр.Вставить("НастройкиПостроителя", ПостроительОтчета.ПолучитьНастройки());
	СтруктНастр.Вставить("ЗаголовокПомечен", ПоказыватьЗаголовок);
	СтруктНастр.Вставить("ОтборПомечен", ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Отбор.Пометка);
	
	Возврат СтруктНастр;
	
КонецФункции

// Заполняет настройки из структуры - кроме состояния панели "Отбор"
//
Процедура ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт

	ПостроительОтчета.УстановитьНастройки(СтруктураСНастройками.НастройкиПостроителя);
	ПоказыватьЗаголовок = СтруктураСНастройками.ЗаголовокПомечен;
	ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Отбор.Пометка = СтруктураСНастройками.ОтборПомечен

КонецПроцедуры


// Процедура - обработчик нажатия кнопки выбора даты начала периода
//
Процедура ДатаНачПриИзменении(Элемент)
	
	ДатаНачала = НачалоМесяца(ДатаНачала);
	
КонецПроцедуры

// Процедура - обработчик нажатия кнопки выбора даты окончания периода
//
Процедура ДатаКонПриИзменении(Элемент)
	
	ДатаКонца = КонецМесяца(ДатаКонца);
	
КонецПроцедуры

// Процедура - обработчик нажатия кнопки настройки периода
//
Процедура КнопкаНастройкаПериодаНажатие(Элемент)

	Если НП.Редактировать() Тогда
		
		ДатаНачала = НП.ПолучитьДатуНачала();
		ДатаНачПриИзменении(ЭлементыФормы.ДатаНачала);
		ДатаКонца = НП.ПолучитьДатуОкончания();
		ДатаКонПриИзменении(ЭлементыФормы.ДатаКонца);

	КонецЕсли;
	
КонецПроцедуры // КнопкаНастройкаПериодаНажатие()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ НАЖАТИЯ КНОПОК КОМАНДНОЙ ПАНЕЛИ

// Процедура - обработчик нажатия кнопки "Отбор".
//
Процедура КоманднаяПанельФормыОтбор(Кнопка)

	Если НЕ ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Верх Тогда
		ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Верх;
	Иначе
		ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Нет;
	КонецЕсли;

	УправлениеПометкамиКнопокКоманднойПанели();
	
КонецПроцедуры

// Процедура - обработчик нажатия кнопки "Обновить".
//
Процедура КоманднаяПанельФормыСформировать(Кнопка)

	ОбновитьОтчет();

КонецПроцедуры // ВыполнитьНажатие()

// Процедура - обработчик нажатия кнопки "Заголовок".
//
Процедура КоманднаяПанельЗаголовок(Кнопка)
	ПоказыватьЗаголовок = Не ПоказыватьЗаголовок;
	ВыводЗаголовка();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик закрытия формы
//

// Процедура - обработчик обновления данных формы
//
Процедура ОбновлениеОтображения()

	СформироватьЗаголовокФормы();
	
КонецПроцедуры // ОбновлениеОтображения()

// Процедура - обработчик события перед открытием формы
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// Установим дату начала отчета
	Если ЗначениеЗаполнено(глЗначениеПеременной("глТекущийПользователь")) Тогда
		
		ЕстьДатаОтчетаПользователя = ЗначениеЗаполнено(УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"),"ОсновнаяДатаНачалаОтчетов"));
		
		Если Не ЕстьДатаОтчетаПользователя Тогда
			
			ДатаНачала = НачалоМесяца(РабочаяДата);
			ДатаКонца = КонецМесяца(РабочаяДата);
			
		Иначе
			
			ДатаНачала = НачалоМесяца(УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"),"ОсновнаяДатаНачалаОтчетов"));
			ДатаКонца = КонецМесяца(ДатаНачала)
			
		КонецЕсли; 
		
	Иначе
		
		ДатаНачала = НачалоМесяца(РабочаяДата);
		ДатаКонца = КонецМесяца(РабочаяДата);
		
	КонецЕсли;
	НП.УстановитьПериод(ДатаНачала, ДатаКонца);
	
	
	Если НЕ (неВосстанавливатьНастройку = Истина) Тогда

		ЗаполнитьНачальныеНастройки();

		ВыводЗаголовка();

		СформироватьЗаголовокФормы();
		
	КонецЕсли;
	
	//"" = по всем, "Ж" = Женщины, "Инв" = Инвалиды, "Пен" = пенсионеры, "ГПХ" - работающие по договору ГПХ
	ЭлементыФормы.ВидОтчета.СписокВыбора.Добавить("", "");
	ЭлементыФормы.ВидОтчета.СписокВыбора.Добавить("Ж", НСтр("ru='Женщины';uk='Жінки'"));
	ЭлементыФормы.ВидОтчета.СписокВыбора.Добавить("Пен", НСтр("ru='Пенсионеры';uk='Пенсіонери'"));
	ЭлементыФормы.ВидОтчета.СписокВыбора.Добавить("Инв", НСтр("ru='Инвалиды';uk='Інваліди'"));
	ЭлементыФормы.ВидОтчета.СписокВыбора.Добавить("ГПХ", НСтр("ru='По договору ГПХ';uk='За договором ЦПХ'"));
	
	УправлениеОтчетами.УстановитьСвязьПолейБыстрогоОтбораНаФорме(ЭлементыФормы, ПостроительОтчета.Отбор,
	                                          СтруктураСвязиЭлементовСДанными, "ЭтотОтчет.ПостроительОтчета.Отбор");
	
											  
КонецПроцедуры // ПередОткрытием()     ЭтотОбъект

// Процедура - обработчик события при открытии формы
//
Процедура ПриОткрытии()
	
	//ЭлементыФормы.ПанельОтбор.Свертка = РежимСверткиЭлементаУправления.Верх;
	УправлениеПометкамиКнопокКоманднойПанели();
	
КонецПроцедуры

// Процедура - обработчик события "ПередСохранениемЗначений" формы.
//
Процедура ПередСохранениемЗначений(Отказ)
	
	Настройки = ПостроительОтчета.ПолучитьНастройки(Истина, Ложь, Ложь, Ложь);
	
КонецПроцедуры

// Процедура - обработчик события "ПослеВосстановленияЗначений" формы.
//
Процедура ПослеВосстановленияЗначений()
	
	Если  ТипЗнч(Настройки) = Тип("НастройкиПостроителяОтчета") Тогда
		
		ПостроительОтчета.УстановитьНастройки(Настройки, Истина, Ложь, Ложь, Ложь);	
		
	КонецЕсли;
	
КонецПроцедуры



Процедура ПолеНастройкиОрганизацияПриИзменении(Элемент)
	
	Значение = Элемент.Значение;
	
    Если ТипЗнч(Значение) = Тип("СписокЗначений") Тогда
		
		ЭлементыФормы.ФлажокНастройкиОрганизация.Значение = (Значение.Количество() <> 0)
		
	Иначе
		
		ЭлементыФормы.ФлажокНастройкиОрганизация.Значение = (ЗначениеЗаполнено(Значение))
		
	КонецЕсли; 
	ПолеНастройкиОрганизация = Элемент.Значение;
	УправлениеОтчетами.ПолеНастройкиПриИзменении(Элемент, ПостроительОтчета.Отбор);
	
//	ОбновитьЗаголовокОкна();
	
КонецПроцедуры

Процедура ПолеНастройкиПодразделениеПриИзменении(Элемент)
	
	Значение = Элемент.Значение;
	
    Если ТипЗнч(Значение) = Тип("СписокЗначений") Тогда
		
		ЭлементыФормы.ФлажокНастройкиПодразделение.Значение = (Значение.Количество() <> 0)
		
	Иначе
		
		ЭлементыФормы.ФлажокНастройкиПодразделение.Значение = (ЗначениеЗаполнено(Значение))
		
	КонецЕсли; 
	
	ПолеНастройкиПодразделение = Элемент.Значение;
	УправлениеОтчетами.ПолеНастройкиПриИзменении(Элемент, ПостроительОтчета.Отбор);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Процедура - обработчик изменения данных в поле выбора вида сравнения
//
Процедура ПолеВидаСравнения1ПриИзменении(Элемент)

	УправлениеОтчетами.ПолеВидаСравненияПриИзменении(Элемент, ЭлементыФормы);
	
КонецПроцедуры // ПолеВидаСравнения1ПриИзменении()

//Процедура нужна для сценарного тестирования отчета
Процедура ВидОтчетаОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	Если Текст = "Без отбора" Тогда
		Значение = "";
		СтандартнаяОбработка = Ложь;	
	КонецЕсли;
	
КонецПроцедуры
