Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если Не ЭтоОтработкаРасшифровки Тогда
		СохранениеНастроек.ЗаполнитьНастройкиПриОткрытииОтчета(ОтчетОбъект);
	КонецЕсли;

	ТиповыеОтчеты.НазначитьФормеУникальныйКлючИдентификации(ЭтаФорма);
	ТиповыеОтчеты.ОбновитьФормуТиповогоОтчетаПоКомпоновщику(ОтчетОбъект, ЭтаФорма);
	ТиповыеОтчеты.УправлениеОтображениемЭлементовФормыТиповогоОтчета(ОтчетОбъект, ЭтаФорма);
	Если Не ЭтоОтработкаРасшифровки Тогда
		ЗаполнитьВычисляемыеПоля();
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ДействияФормыНастройки(Кнопка)
	
	Если ТиповыеОтчеты.РедактироватьНастройкиТиповогоОтчета(ОтчетОбъект, ЭтаФорма) Тогда
		ОбновитьОтчет();
	КонецЕсли;
	
КонецПроцедуры

Процедура ДействияФормыСформировать(Кнопка)
	
	ОбновитьОтчет();
	
КонецПроцедуры

Процедура ДействияФормыЗаголовок(Кнопка)
	
	Кнопка.Пометка = Не Кнопка.Пометка;
	ТиповыеОтчеты.УправлениеОтображениемЭлементовФормыТиповогоОтчета(ОтчетОбъект, ЭтаФорма);
	ТиповыеОтчеты.УправлениеОтображениемЗаголовкаТиповогоОтчета(ОтчетОбъект, ЭтаФорма.ЭлементыФормы.Результат);
	
КонецПроцедуры

Процедура ДействияФормыОткрытьВНовомОкне(Кнопка)
	
	ТиповыеОтчеты.ОткрытьВНовомОкнеТиповойОтчет(ОтчетОбъект, ЭтаФорма);
	
КонецПроцедуры

Процедура ДействияФормыВосстановитьЗначения(Кнопка)
	
	СохранениеНастроек.ВыбратьНастройкуФормы(СохраненнаяНастройка, ЭтаФорма, "ОтчетОбъект." + ОтчетОбъект.Метаданные().Имя, Ложь);
	ТиповыеОтчеты.ОбновитьФормуТиповогоОтчетаПоКомпоновщику(ОтчетОбъект, ЭтаФорма);
	ТиповыеОтчеты.ОбновитьЗаголовокТиповогоОтчета(ОтчетОбъект, ЭтаФорма);
	
КонецПроцедуры

Процедура ДействияФормыСохранитьЗначения(Кнопка)
	
	СохранениеНастроек.ВыбратьНастройкуФормы(СохраненнаяНастройка, ЭтаФорма, "ОтчетОбъект." + ОтчетОбъект.Метаданные().Имя, Истина);
	ТиповыеОтчеты.ОбновитьЗаголовокТиповогоОтчета(ОтчетОбъект, ЭтаФорма);
	
КонецПроцедуры

Процедура ДействияФормыОтбор(Кнопка)
	
	Кнопка.Пометка = Не Кнопка.Пометка;
	ПоказыватьБыстрыйОтбор = Кнопка.Пометка;
	ТиповыеОтчеты.УправлениеОтображениемЭлементовФормыТиповогоОтчета(ОтчетОбъект, ЭтаФорма);
	ТиповыеОтчеты.ОбработкаИзмененияТиповогоОтчетаНаФормеОтчета(ОтчетОбъект, ЭтаФорма);
	
КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	ТиповыеОтчеты.ОбновитьЗаголовокТиповогоОтчета(ОтчетОбъект, ЭтаФорма);
	
КонецПроцедуры

Процедура КнопкаНастройкаПериодаНажатие(Элемент)
	
	ТиповыеОтчеты.НастроитьПериод(НастройкаПериода, НачалоПериода, КонецПериода);
	ТиповыеОтчеты.ОбновитьПараметрыПериодаПоФорме(КомпоновщикНастроек, ЭтаФорма);
	ТиповыеОтчеты.ОбработкаИзмененияТиповогоОтчетаНаФормеОтчета(ОтчетОбъект, ЭтаФорма);
	
КонецПроцедуры

Процедура ПолеВводаПериодПриИзменении(Элемент)
	
	ТиповыеОтчеты.ОбновитьПараметрыПериодаПоФорме(КомпоновщикНастроек, ЭтаФорма);
	ТиповыеОтчеты.ОбработкаИзмененияТиповогоОтчетаНаФормеОтчета(ОтчетОбъект, ЭтаФорма);
	
КонецПроцедуры

Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	ТиповыеОтчеты.ОбработкаРасшифровкиТиповогоОтчета(Расшифровка, СтандартнаяОбработка, ОтчетОбъект, ЭтаФорма);
	
КонецПроцедуры

Процедура ДействияФормыПечать(Кнопка)
	
	ТиповыеОтчеты.ПечатьТиповогоОтчета(ЭлементыФормы.Результат);
	
КонецПроцедуры

Процедура ЗаполнитьВычисляемыеПоля()
	
	КодЯзыкаПечати = ЛокализацияПовтИсп.ПолучитьЯзыкФормированияПечатныхФормОтчетов();
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Ссылка,Код,Представление,
	|	""СемейноеПоложениеФизЛиц"" КАК ИмяСправочника
	|ИЗ
	|	Справочник.СемейноеПоложениеФизЛиц
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Ссылка,Код,Представление,
	|	""ВидыОбразованияФизЛиц"" КАК ИмяСправочника
	|ИЗ
	|	Справочник.ВидыОбразованияФизЛиц
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Ссылка,Код,Представление,
	|	""СтепениЗнанияЯзыка"" КАК ИмяСправочника
	|ИЗ
	|	Справочник.СтепениЗнанияЯзыка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Ссылка,Код,Представление,
	|	""СтепениРодстваФизЛиц"" КАК ИмяСправочника
	|ИЗ
	|	Справочник.СтепениРодстваФизЛиц
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИмяСправочника,
	|	Код";
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
  	Пока Выборка.Следующий() цикл
		Если Выборка.ИмяСправочника = "СтепениРодстваФизЛиц" тогда
			НовоеОписаниеВычисляемогоПоля = ОтчетОбъект.СхемаКомпоновкиДанных.ВычисляемыеПоля.Добавить();
			НовоеОписаниеВычисляемогоПоля.Выражение = "ВЫБОР КОГДА ДанныеФизлица.СоставСемьиФизЛиц.ФизическиеЛица_Состав_Семьи__СтепеньРодства.Код = &"  + "СтепеньРодства" + СокрЛП(Выборка.Ссылка.Код) + " ТОГДА 1 ИНАЧЕ 0 КОНЕЦ";
			НовоеОписаниеВычисляемогоПоля.Заголовок = НСтр("ru='Количество записей (родственник по степени: ';uk='Кількість записів (родич по ступені: '" ,КодЯзыкаПечати) + Выборка.Представление + ")";
			НовоеОписаниеВычисляемогоПоля.ПутьКДанным = "СтепеньРодства" + СокрЛП(Выборка.Ссылка.Код); 
			НовоеОписаниеВычисляемогоПоля.ОграничениеИспользования.Условие = Истина;
            НовыйПараметрВычисляемогоПоля = ОтчетОбъект.СхемаКомпоновкиДанных.Параметры.Добавить();
			НовыйПараметрВычисляемогоПоля.Значение = Выборка.Ссылка.Код; 
			НовыйПараметрВычисляемогоПоля.Имя = "СтепеньРодства" + СокрЛП(Выборка.Ссылка.Код);
			НовыйПараметрВычисляемогоПоля.ОграничениеИспользования = Истина;
			НовыйРесурс = ОтчетОбъект.СхемаКомпоновкиДанных.ПоляИтога.Добавить();
			НовыйРесурс.Выражение = "Сумма(СтепеньРодства" + СокрЛП(Выборка.Ссылка.Код)+")";
			НовыйРесурс.ПутьКДанным = "СтепеньРодства" + СокрЛП(Выборка.Ссылка.Код);
			
		ИначеЕсли Выборка.ИмяСправочника = "ВидыОбразованияФизЛиц" тогда
			НовоеОписаниеВычисляемогоПоля = ОтчетОбъект.СхемаКомпоновкиДанных.ВычисляемыеПоля.Добавить();
			НовоеОписаниеВычисляемогоПоля.Выражение = "ВЫБОР КОГДА ДанныеФизлица.ОбразованиеФизЛиц.ФизическиеЛица_Образование__ВидОбразования.Код = &"  + "Образование" + СокрЛП(Выборка.Ссылка.Код) + " ТОГДА 1 ИНАЧЕ 0 КОНЕЦ";
			НовоеОписаниеВычисляемогоПоля.Заголовок = НСтр("ru='Имеют образование : ';uk='Мають освіту : '" ,КодЯзыкаПечати) + Выборка.Представление;
			НовоеОписаниеВычисляемогоПоля.ПутьКДанным = "Образование" + СокрЛП(Выборка.Ссылка.Код); 
			НовоеОписаниеВычисляемогоПоля.ОграничениеИспользования.Условие = Истина;
			НовыйПараметрВычисляемогоПоля = ОтчетОбъект.СхемаКомпоновкиДанных.Параметры.Добавить();
			НовыйПараметрВычисляемогоПоля.Значение = Выборка.Ссылка.Код; 
			НовыйПараметрВычисляемогоПоля.Имя = "Образование" + СокрЛП(Выборка.Ссылка.Код);
			НовыйПараметрВычисляемогоПоля.ОграничениеИспользования = Истина;
			НовыйРесурс = ОтчетОбъект.СхемаКомпоновкиДанных.ПоляИтога.Добавить();
			НовыйРесурс.Выражение = "Сумма(Образование" + СокрЛП(Выборка.Ссылка.Код)+")";
			НовыйРесурс.ПутьКДанным ="Образование" + СокрЛП(Выборка.Ссылка.Код);
			
		ИначеЕсли Выборка.ИмяСправочника = "СтепениЗнанияЯзыка" тогда	
			НовоеОписаниеВычисляемогоПоля = ОтчетОбъект.СхемаКомпоновкиДанных.ВычисляемыеПоля.Добавить();
			НовоеОписаниеВычисляемогоПоля.Выражение = "ВЫБОР КОГДА ДанныеФизлица.ФизическиеЛица_ЗнаниеЯзыков.ФизическиеЛица_Знание_Языков__Степень_Знания_Языка.Код = &"  + "СтепениЗнанияЯзыка" + СокрЛП(Выборка.Ссылка.Код) + " ТОГДА 1 ИНАЧЕ 0 КОНЕЦ";
			НовоеОписаниеВычисляемогоПоля.Заголовок = НСтр("ru='Владеют иностранным языком : ';uk='Володіють іноземною мовою : '" ,КодЯзыкаПечати) + Выборка.Представление;
			НовоеОписаниеВычисляемогоПоля.ПутьКДанным = "СтепениЗнанияЯзыка" + СокрЛП(Выборка.Ссылка.Код); 
			НовоеОписаниеВычисляемогоПоля.ОграничениеИспользования.Условие = Истина;
			НовыйПараметрВычисляемогоПоля = ОтчетОбъект.СхемаКомпоновкиДанных.Параметры.Добавить();
			НовыйПараметрВычисляемогоПоля.Значение = Выборка.Ссылка.Код; 
			НовыйПараметрВычисляемогоПоля.Имя = "СтепениЗнанияЯзыка" + СокрЛП(Выборка.Ссылка.Код);
			НовыйПараметрВычисляемогоПоля.ОграничениеИспользования = Истина;
			НовыйРесурс = ОтчетОбъект.СхемаКомпоновкиДанных.ПоляИтога.Добавить();
			НовыйРесурс.Выражение = "Сумма(СтепениЗнанияЯзыка" + СокрЛП(Выборка.Ссылка.Код)+")";
			НовыйРесурс.ПутьКДанным ="СтепениЗнанияЯзыка" + СокрЛП(Выборка.Ссылка.Код);
			
		ИначеЕсли Выборка.ИмяСправочника = "СемейноеПоложениеФизЛиц" тогда				
			НовоеОписаниеВычисляемогоПоля = ОтчетОбъект.СхемаКомпоновкиДанных.ВычисляемыеПоля.Добавить();
			НовоеОписаниеВычисляемогоПоля.Выражение = "ВЫБОР КОГДА ДанныеФизлица.СемейноеПоложениеФизЛиц.ФизическиеЛица__СемейноеПоложение = &"  + "СемейноеПоложение" + СокрЛП(Выборка.Ссылка.Код) + " ТОГДА 1 ИНАЧЕ 0 КОНЕЦ";
			НовоеОписаниеВычисляемогоПоля.Заголовок = НСтр("ru='Имеют семейное положение : ';uk='Мають сімейне положення : '" ,КодЯзыкаПечати) + Выборка.Представление;
			НовоеОписаниеВычисляемогоПоля.ПутьКДанным = "СемейноеПоложение" + СокрЛП(Выборка.Ссылка.Код); 
			НовоеОписаниеВычисляемогоПоля.ОграничениеИспользования.Условие = Истина;
			НовыйПараметрВычисляемогоПоля = ОтчетОбъект.СхемаКомпоновкиДанных.Параметры.Добавить();
			НовыйПараметрВычисляемогоПоля.Значение = Выборка.Ссылка.Код; 
			НовыйПараметрВычисляемогоПоля.Имя = "СемейноеПоложение" + СокрЛП(Выборка.Ссылка.Код);
			НовыйПараметрВычисляемогоПоля.ОграничениеИспользования = Истина;
			НовыйРесурс = ОтчетОбъект.СхемаКомпоновкиДанных.ПоляИтога.Добавить();
			НовыйРесурс.Выражение = "Сумма(СемейноеПоложение" + СокрЛП(Выборка.Ссылка.Код)+")";
			НовыйРесурс.ПутьКДанным ="СемейноеПоложение" + СокрЛП(Выборка.Ссылка.Код);

   		КонецЕсли;	

	КонецЦикла;	
	МетаданныеПеречисления = Метаданные.Перечисления.СостоянияРаботникаОрганизации;
	Для Каждого Значение ИЗ МетаданныеПеречисления.ЗначенияПеречисления цикл
			Если Значение.Имя = "НеРаботает" Тогда
				Продолжить;
			КонецЕсли;
			НовоеОписаниеВычисляемогоПоля = ОтчетОбъект.СхемаКомпоновкиДанных.ВычисляемыеПоля.Добавить();
			НовоеОписаниеВычисляемогоПоля.Выражение = "ВЫБОР КОГДА СостояниеРаботниковОрганизаций__Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации."  + Значение.Имя + ") ТОГДА 1 ИНАЧЕ 0 КОНЕЦ";
			НовоеОписаниеВычисляемогоПоля.Заголовок = НСтр("ru='Имеют состояние : ';uk='Мають стан : '") + Значение.Представление();
			НовоеОписаниеВычисляемогоПоля.ПутьКДанным = "Состояние_" + Значение.Имя; 
			НовоеОписаниеВычисляемогоПоля.ОграничениеИспользования.Условие = Истина;
			НовыйПараметрВычисляемогоПоля = ОтчетОбъект.СхемаКомпоновкиДанных.Параметры.Добавить();
			НовыйПараметрВычисляемогоПоля.Значение = Значение.Имя; 
			НовыйПараметрВычисляемогоПоля.Имя = "Состояние_" + Значение.Имя;
			НовыйПараметрВычисляемогоПоля.ОграничениеИспользования = Истина;
			НовыйРесурс = ОтчетОбъект.СхемаКомпоновкиДанных.ПоляИтога.Добавить();
			НовыйРесурс.Выражение = "Сумма(Состояние_" + Значение.Имя + ")";
			НовыйРесурс.ПутьКДанным ="Состояние_" + Значение.Имя;
	КонецЦикла;	
	
	ОтчетОбъект.КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(ОтчетОбъект.СхемаКомпоновкиДанных));
	
КонецПроцедуры	

Процедура ОбновитьОтчет() Экспорт
	
	СформироватьОтчет(ЭтаФорма.ЭлементыФормы.Результат, ЭтаФорма.ДанныеРасшифровки);
	
КонецПроцедуры

Процедура ТабличноеПолеОтборПравоеЗначениеДляКраткогоОтображенияЭлементаНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтрокаОтбора = ЭлементыФормы.ТабличноеПолеОтбор.ТекущаяСтрока;
	
	Если ТипЗнч(СтрокаОтбора.ПравоеЗначение) = Тип("СправочникСсылка.ПодразделенияОрганизаций") тогда
		 
		 ПолеОрганизации               = Новый ПолеКомпоновкиДанных("РаботникиОрганизаций__Организация");
		 
		 Для каждого ЭлементОтбора из КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
			 
			Если ЭлементОтбора.ЛевоеЗначение = ПолеОрганизации 
				 И ТипЗнч(ЭлементОтбора.ПравоеЗначение) = Тип("СправочникСсылка.Организации") тогда
				Элемент.ВыборПоВладельцу = ЭлементОтбора.ПравоеЗначение;
				Прервать;
			КонецЕсли;
			
		КонецЦикла;	
	КонецЕсли;

КонецПроцедуры

Процедура ТабличноеПолеОтборПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ТиповыеОтчеты.ОбработкаИзмененияТиповогоОтчетаНаФормеОтчета(ОтчетОбъект, ЭтаФорма);
	
КонецПроцедуры

