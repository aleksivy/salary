////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// настройка порядка
	ЭлементыФормы.РегистрСведенийСписок.НастройкаПорядка.Физлицо.Доступность = Истина;
	ЭлементыФормы.РегистрСведенийСписок.НастройкаПорядка.Статус.Доступность = Истина;
	
КонецПроцедуры

// Процедура - обработчик события "ПриОткрытии" формы
//
Процедура ПриОткрытии()

	СтруктураКолонок = Новый Структура();

	// Установить колонки, видимостью которых пользователь управлять не может.
	СтруктураКолонок.Вставить("ФизЛицо");
	СтруктураКолонок.Вставить("Статус");

	// Установить ограничение - изменять видимость колонок для табличной части 
	ОбработкаТабличныхЧастей.УстановитьИзменятьВидимостьКолонокТабЧасти(ЭлементыФормы.РегистрСведенийСписок.Колонки, СтруктураКолонок);

	ЭлементыФормы.ДействияФормы.Кнопки.История.Пометка					= Истина;
	ЭлементыФормы.ДействияФормы.Кнопки.Подменю.Кнопки.История.Пометка	= Истина;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНДНОЙ ПАНЕЛИ ФОРМЫ

Процедура ДействияФормыМенеджерКонтактов(Кнопка)
	
	Обработки.МенеджерКонтактов.ПолучитьФорму().Открыть();
	
КонецПроцедуры

// Процедура открывает форму списка регистра.
Процедура ДействияФормыИстория(Кнопка)
	
	Если Кнопка.Пометка Тогда
		
		ЭлементыФормы.ДействияФормы.Кнопки.История.Пометка					= Ложь;
		ЭлементыФормы.ДействияФормы.Кнопки.Подменю.Кнопки.История.Пометка	= Ложь;
		
		ЭлементыФормы.РегистрСведенийСписок.ВыбиратьСрез = ИспользованиеСреза.Последние;
		
	Иначе
		
		ЭлементыФормы.ДействияФормы.Кнопки.История.Пометка					= Истина;
		ЭлементыФормы.ДействияФормы.Кнопки.Подменю.Кнопки.История.Пометка	= Истина;
		
		ЭлементыФормы.РегистрСведенийСписок.ВыбиратьСрез = ИспользованиеСреза.НеИспользовать;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДействияФормыОценить(Кнопка)
	Если ЭлементыФормы.РегистрСведенийСписок.ТекущаяСтрока <> Неопределено Тогда
		
		Статус = ЭлементыФормы.РегистрСведенийСписок.ТекущиеДанные.Статус;
		
		Если Статус = Перечисления.СостоянияКандидатаНаРаботу.ПринятКРассмотрению Тогда
			
			НовыйДокумент = Документы.ОценкаКандидата.СоздатьДокумент();
			ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(НовыйДокумент);
			НовыйДокумент.УстановитьНовыйНомер();
			
			НоваяСтрока	= НовыйДокумент.Кандидаты.Добавить();
			НоваяСтрока.ФизЛицо = ЭлементыФормы.РегистрСведенийСписок.ТекущаяСтрока.ФизЛицо;
			НоваяСтрока.ДатаПринятияРешения = РабочаяДата;
			
			НовыйДокумент.ПолучитьФорму().Открыть();
			
		ИначеЕсли Статус = Перечисления.СостоянияКандидатаНаРаботу.ПринятНаРаботу Тогда
			
			Запрос = Новый Запрос("ВЫБРАТЬ
			                      |	ПриемНаРаботуРаботники.ИспытательныйСрок
			                      |ИЗ
			                      |	Документ.ПриемНаРаботу.Работники КАК ПриемНаРаботуРаботники
			                      |
			                      |ГДЕ
			                      |	ПриемНаРаботуРаботники.Ссылка = &Ссылка И
			                      |	ПриемНаРаботуРаботники.Сотрудник.ФизЛицо = &ФизЛицо");
								  
			Запрос.УстановитьПараметр("Ссылка",ЭлементыФормы.РегистрСведенийСписок.ТекущиеДанные.Регистратор); 
			Запрос.УстановитьПараметр("ФизЛицо",ЭлементыФормы.РегистрСведенийСписок.ТекущаяСтрока.ФизЛицо); 
			
			Выборка = Запрос.Выполнить().Выбрать();
			
			Если Выборка.Следующий() и Выборка.ИспытательныйСрок = Перечисления.ИспытательныйСрок.СИспытательнымСроком Тогда
				
				НовыйДокумент = Документы.РезультатИспытательногоСрока.СоздатьДокумент();
				ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(НовыйДокумент);
				НовыйДокумент.УстановитьНовыйНомер();
				
				НоваяСтрока	= НовыйДокумент.Работники.Добавить();
				НоваяСтрока.ФизЛицо = ЭлементыФормы.РегистрСведенийСписок.ТекущаяСтрока.ФизЛицо;
				НоваяСтрока.ДатаПринятияРешения = РабочаяДата;
				НоваяСтрока.Решение = Истина;
				
				НовыйДокумент.ПолучитьФорму().Открыть();
				
			Иначе
				Предупреждение(НСтр("ru='Испытательный срок не назначался!';uk='Випробувальний строк не призначався!'"));
			КонецЕсли;
			
		Иначе
			Предупреждение(НСтр("ru='Решение уже принято!';uk='Рішення вже прийнято!'"));
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры

Процедура ДействияФормыНовыйКандидат(Кнопка)
	Документы.РегистрацияКандидатов.ПолучитьФормуНовогоДокумента().Открыть();
КонецПроцедуры

Процедура ДействияФормыНаписатьПисьмо(Кнопка)
	
	Если ЭлементыФормы.РегистрСведенийСписок.ТекущиеДанные <> Неопределено И ЗначениеЗаполнено(ЭлементыФормы.РегистрСведенийСписок.ТекущиеДанные.ФизЛицо) Тогда
		УправлениеЭлектроннойПочтой.НаписатьПисьмоОбъекту(ЭлементыФормы.РегистрСведенийСписок.ТекущиеДанные.ФизЛицо, глЗначениеПеременной("глТекущийПользователь"));
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ РегистрСведенийСписок

// Процедура - обработчик события "Выбор" табличного поля.
Процедура РегистрСведенийСписокВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	Если РежимВыбора Тогда
		ВыбранныйНаборДанных = Новый Структура("Физлицо, Статус",Элемент.ТекущаяСтрока.Физлицо,Элемент.ТекущиеДанные.Статус);
		ОповеститьОВыборе(ВыбранныйНаборДанных);
	Иначе
		ВыбраннаяСтрока.Физлицо.ПолучитьФорму().Открыть();
	КонецЕсли;
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

// Процедура - обработчик события "ПередНачаломДобавления" табличного поля.
Процедура РегистрСведенийСписокПередНачаломДобавления(Элемент, Отказ, Копирование)
	Документы.РегистрацияКандидатов.ПолучитьФормуНовогоДокумента().Открыть();
КонецПроцедуры


