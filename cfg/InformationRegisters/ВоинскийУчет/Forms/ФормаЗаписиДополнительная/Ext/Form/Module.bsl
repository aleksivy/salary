// Устанавливает доступность реквизитов, выполняет необходимую очистку 
//		значений в соответствии с логикой заполнения
Процедура УстановитьДоступность()

	Состав = Звание.Состав; // звание могло измениться
	ЭлементыФормы.Состав.Значение = Состав;
	
    Офицер		= (Состав = Перечисления.СоставыВоеннослужащих.МладшиеОфицеры
					или Состав = Перечисления.СоставыВоеннослужащих.СтаршиеОфицеры
					или Состав = Перечисления.СоставыВоеннослужащих.ВысшиеОфицеры);
    Призывник	= (ОтношениеКВоинскойОбязанности = Перечисления.ОтношениеКВоинскойОбязанности.Призывник);
	Состоит 	= не (ОтношениеКВоинскойОбязанности = Перечисления.ОтношениеКВоинскойОбязанности.НеВоеннообязанный
					или ОтношениеКВоинскомуУчету = Перечисления.ОтношениеКВоинскомуУчету.НеСостоит);
	Снят	 	= (ОтношениеКВоинскомуУчету = Перечисления.ОтношениеКВоинскомуУчету.СнятПоВозрасту
					или ОтношениеКВоинскомуУчету = Перечисления.ОтношениеКВоинскомуУчету.СнятПоСостояниюЗдоровья);
    Годен		= Годность = Перечисления.ГодностьКВоеннойСлужбе.Годен;

	ЭлементыФормы.Годность.Доступность
		= Состоит и (не Офицер) и (не Призывник);
	ЭлементыФормы.Звание.Доступность
		= Состоит и (не Призывник);
	ЭлементыФормы.ЗабронированОрганизацией.Доступность
		= Состоит и (не Призывник);
	ЭлементыФормы.НаличиеМобпредписания.Доступность
		= Состоит и (не Призывник);
	ЭлементыФормы.Военкомат.Доступность
		= Состоит;
	ЭлементыФормы.ВоенкоматФМП.Доступность
		= Состоит;
	ЭлементыФормы.ОснованиеНегодности.Доступность
		= Состоит и (((не Офицер) и (не Годен)) или (Офицер и Снят))  и (не Призывник);
	ЭлементыФормы.ВУС.Доступность
		= Состоит и (не Призывник);
	ЭлементыФормы.СпецУчет.Доступность
		= Состоит;
	ЭлементыФормы.Группа.Доступность
		= Состоит и (не Офицер) и (не Призывник);
	ЭлементыФормы.ГруппаДо2016.Доступность
		= Состоит и (не Офицер) и (не Призывник);
	ЭлементыФормы.Категория.Доступность
		= Состоит и (не Призывник);
	ЭлементыФормы.Профиль.Доступность
		= Состоит и Офицер и (не Призывник);
	ЭлементыФормы.ДатаИНомерПриказаОПризыве.Доступность = (ОтношениеКВоинскомуУчету = Перечисления.ОтношениеКВоинскомуУчету.ПризванНаВоинскуюСлужбу
		ИЛИ ОтношениеКВоинскомуУчету = Перечисления.ОтношениеКВоинскомуУчету.СлужбаПоКонтракту);
	ЭлементыФормы.СрокКонтракта.Доступность = (ОтношениеКВоинскомуУчету = Перечисления.ОтношениеКВоинскомуУчету.СлужбаПоКонтракту);

	Для каждого Ресурс Из Метаданные.РегистрыСведений.ВоинскийУчет.Ресурсы Цикл

		ИмяРесурса = Ресурс.Имя;

        // очистим неиспользуемые значения
		Если (не ЭлементыФормы[ИмяРесурса].Доступность) Тогда

			Если ТипЗнч(РегистрСведенийМенеджерЗаписи[ИмяРесурса]) = Тип("Булево") Тогда
				Если РегистрСведенийМенеджерЗаписи[ИмяРесурса] Тогда
			
					РегистрСведенийМенеджерЗаписи[ИмяРесурса] = Ложь;

				КонецЕсли;
			ИначеЕсли ЗначениеЗаполнено(РегистрСведенийМенеджерЗаписи[ИмяРесурса]) Тогда
			
				РегистрСведенийМенеджерЗаписи[ИмяРесурса] = NULL;
				
			КонецЕсли; 
		КонецЕсли; 

		// доступность надписей
		Если ТипЗнч(ЭлементыФормы[ИмяРесурса]) = Тип("ПолеВвода") Тогда
		
			ЭлементыФормы["Надпись"+ИмяРесурса].Доступность = ЭлементыФормы[ИмяРесурса].Доступность;
		
		КонецЕсли; 
	
	КонецЦикла;

	

КонецПроцедуры // УстановитьДоступность()


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()
	
	ФизЛицоПриОткрытии    			         = ФизЛицо;
	ПериодПриОткрытии   					 = Период;
	ВоенкоматПриОткрытии 					 = Военкомат;
	ВоенкоматФМППриОткрытии 				 = ВоенкоматФМП;
	ВУСПриОткрытии           				 = ВУС;
	РеквизитыВоенногоБилетаПриОткрытии       = РеквизитыВоенногоБилета;
	ГодностьПриОткрытии   		 			 = Годность;
	ЗабронированОрганизациейПриОткрытии 	 = ЗабронированОрганизацией;
	ЗваниеПриОткрытии             			 = Звание;
	НаличиеМобпредписанияПриОткрытии   		 = НаличиеМобпредписания;
	ОтношениеКВоинскойОбязанностиПриОткрытии = ОтношениеКВоинскойОбязанности;
	ОтношениеКВоинскомуУчетуПриОткрытии      = ОтношениеКВоинскомуУчету;
	ОснованиеНегодностиПриОткрытии      	 = ОснованиеНегодности;
	СпецУчетПриОткрытии  				     = СпецУчет;
	ГруппаПриОткрытии      					 = Группа;
	ГруппаДо2016ПриОткрытии      			 = ГруппаДо2016;
	КатегорияПриОткрытии				     = Категория;
	ПрофильПриОткрытии      				 = Профиль;
	ДатаИНомерПриказаОПризывеПриОткрытии	 = ДатаИНомерПриказаОПризыве;
	        
	Заголовок = Заголовок + " " + ФизЛицо.Наименование;
	
	Прочитать();
	
	// У записи обязательно должны быть заполнены реквизиты ФизЛицо и Период
	Если ФизЛицо.Пустая() Тогда
	    ФизЛицо = ФизЛицоПриОткрытии;
		Период  = ПериодПриОткрытии;
	КонецЕсли;
	
	УстановитьДоступность();
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	// Если поменяли дату, то тогда новая  запись
	Если ПериодПриОткрытии <> Период Тогда
		
		// Если что-то поменяли тогда запишем 
		Если ВоенкоматПриОткрытии <> Военкомат ИЛИ
			 ВоенкоматФМППриОткрытии <> ВоенкоматФМП ИЛИ
			 ВУСПриОткрытии <> ВУС ИЛИ
			 РеквизитыВоенногоБилетаПриОткрытии <> РеквизитыВоенногоБилета ИЛИ
			 ГодностьПриОткрытии <> Годность ИЛИ
			 ЗабронированОрганизациейПриОткрытии <> ЗабронированОрганизацией ИЛИ
			 ЗваниеПриОткрытии <> Звание ИЛИ
			 НаличиеМобпредписанияПриОткрытии <> НаличиеМобпредписания ИЛИ
			 ОтношениеКВоинскойОбязанностиПриОткрытии <> ОтношениеКВоинскойОбязанности ИЛИ
			 ОтношениеКВоинскомуУчетуПриОткрытии <> ОтношениеКВоинскомуУчету ИЛИ
			 ОснованиеНегодностиПриОткрытии <> ОснованиеНегодности ИЛИ
			 СпецУчетПриОткрытии <> СпецУчет ИЛИ
			 ГруппаПриОткрытии <> Группа ИЛИ
			 ГруппаДо2016ПриОткрытии <> ГруппаДо2016 ИЛИ
			 КатегорияПриОткрытии <> Категория ИЛИ
			 ПрофильПриОткрытии <> Профиль ИЛИ
			 ДатаИНомерПриказаОПризывеПриОткрытии <> ДатаИНомерПриказаОПризыве
			 Тогда
		
			МенеджерЗаписи = РегистрыСведений.ВоинскийУчет.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.Период  						 = Период;
			МенеджерЗаписи.ФизЛицо 						 = ФизЛицо;
			МенеджерЗаписи.Военкомат					 = Военкомат;
			МенеджерЗаписи.ВоенкоматФМП					 = ВоенкоматФМП;
			МенеджерЗаписи.ВУС							 = ВУС;
			МенеджерЗаписи.РеквизитыВоенногоБилета		 = РеквизитыВоенногоБилета;
			МенеджерЗаписи.Годность						 = Годность;
			МенеджерЗаписи.ЗабронированОрганизацией		 = ЗабронированОрганизацией;
			МенеджерЗаписи.Звание 						 = Звание;
			МенеджерЗаписи.НаличиеМобпредписания		 = НаличиеМобпредписания;
			МенеджерЗаписи.ОтношениеКВоинскойОбязанности = ОтношениеКВоинскойОбязанности;
			МенеджерЗаписи.ОтношениеКВоинскомуУчету		 = ОтношениеКВоинскомуУчету;
			МенеджерЗаписи.ОснованиеНегодности			 = ОснованиеНегодности;
			МенеджерЗаписи.СпецУчет						 = СпецУчет;
			МенеджерЗаписи.Группа						 = Группа;
			МенеджерЗаписи.ГруппаДо2016					 = ГруппаДо2016;
			МенеджерЗаписи.Категория		 			 = Категория;
			МенеджерЗаписи.Профиль						 = Профиль;
			МенеджерЗаписи.ДатаИНомерПриказаОПризыве     = ДатаИНомерПриказаОПризыве;
			
			МенеджерЗаписи.Записать();
			
		КонецЕсли; 
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеЗаписи()
	Оповестить("ОбновитьФорму", Новый Структура("ИмяЭлемента","ВоинскийУчет"), ФизЛицо);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура КнопкаИсторияНажатие(Элемент)
	
	ФормаРегистра = РегистрыСведений.ВоинскийУчет.ПолучитьФормуСписка();
	ФормаРегистра.РегистрСведенийСписок.Отбор.ФизЛицо.Значение = ФизЛицо;
	ФормаРегистра.РегистрСведенийСписок.Отбор.ФизЛицо.ВидСравнения = ВидСравнения.Равно;
	ФормаРегистра.РегистрСведенийСписок.Отбор.ФизЛицо.Использование = Истина;
	ФормаРегистра.ЭлементыФормы.РегистрСведенийСписок.НачальноеОтображениеСписка = НачальноеОтображениеСписка.Конец;
	
	ФормаРегистра.Открыть();
	
КонецПроцедуры

Процедура ЗваниеПриИзменении(Элемент)
	Состав = Звание.Состав;
	УстановитьДоступность();
КонецПроцедуры

Процедура ОтношениеКВоинскойОбязанностиПриИзменении(Элемент)
	УстановитьДоступность();
КонецПроцедуры

Процедура ОтношениеКВоинскомуУчетуПриИзменении(Элемент)
	УстановитьДоступность();
КонецПроцедуры

Процедура ГодностьПриИзменении(Элемент)
	УстановитьДоступность();
КонецПроцедуры

