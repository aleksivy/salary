
////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мЗаголовокФормы;
Перем мРежимВводаПоказателей;

Перем мОрганизация;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Устанавливает свертку панелей и видимость реквизитов формы в зависимости от выбранной организационной структуры 
//
Процедура ВидОрганизационнойСтруктурыПредприятияПриИзменении()
	
	Если мРежимВводаПоказателей = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда		
		ЭлементыФормы.ДействияФормы.Кнопки.ПорядокФормированияСМ.Кнопки.ПоЦФО.Пометка = Ложь;
		ЭлементыФормы.ДействияФормы.Кнопки.ПорядокФормированияСМ.Кнопки.ПоОрганизациям.Пометка = Истина;
		ЭлементыФормы.ПанельОрганизации.Свертка = РежимСверткиЭлементаУправления.Нет;	
		ОрганизацияПриИзменении();
	Иначе
		ЭлементыФормы.ДействияФормы.Кнопки.ПорядокФормированияСМ.Кнопки.ПоЦФО.Пометка = Истина;
		ЭлементыФормы.ДействияФормы.Кнопки.ПорядокФормированияСМ.Кнопки.ПоОрганизациям.Пометка = Ложь;
		ЭлементыФормы.ПанельОрганизации.Свертка = РежимСверткиЭлементаУправления.Верх;
		Отбор.Организация.Значение = Справочники.Организации.ПустаяСсылка();
		ОрганизацияПриИзменении("ПоЦФО")
	КонецЕсли;

КонецПроцедуры //ВидОрганизационнойСтруктурыПредприятияПриИзменении

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	мРежимВводаПоказателей = ВосстановитьЗначение("РежимВводаПоказателей");
	
КонецПроцедуры //ПередОткрытием


// Процедура - обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()
		
	мЗаголовокФормы = НСтр("ru='Периодические значения показателей схем мотивации ';uk='Періодичні значення показників схем мотивації '");
	
	Если НЕ ЗначениеЗаполнено(мРежимВводаПоказателей) Тогда
		мРежимВводаПоказателей = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц;
		ЭлементыФормы.ДействияФормы.Кнопки.ПорядокФормированияСМ.Кнопки.ПоОрганизациям.Пометка = Истина;
	Иначе
		ЭлементыФормы.ДействияФормы.Кнопки.ПорядокФормированияСМ.Кнопки.ПоЦФО.Пометка = Истина;
	КонецЕсли;

	// заполним организацию
	РаботаСДиалогами.ЗаполнениеОтбораПоОрганизацииПоУмолчанию(ЭтаФорма, Отбор.Организация, ЭлементыФормы.Организация, Неопределено, Ложь, глЗначениеПеременной("глТекущийПользователь"));
	
	мОрганизация = Отбор.Организация.Значение;
	
	Отбор.Организация.Использование = Истина;
	Если Не ЗначениеЗаполнено(Отбор.Организация.Значение) Тогда
		Отбор.Организация.ВидСравнения	= ВидСравнения.НеРавно;
	КонецЕсли;
	
	
	ВидОрганизационнойСтруктурыПредприятияПриИзменении();

	Заголовок = мЗаголовокФормы + ?(ЗначениеЗаполнено(Отбор.Организация.Значение),"по " + Строка(Отбор.Организация.Значение) + " ","");
	
	РегистрСведенийСписок.Порядок.Установить("Подразделение,Показатель");
	
КонецПроцедуры //ПриОткрытии

// Процедура - обработчик события "ПриЗакрытии" формы.
//
Процедура ПриЗакрытии()
	
	СохранитьЗначение("РежимВводаПоказателей",мРежимВводаПоказателей);
	
КонецПроцедуры //ПриЗакрытии

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ



Процедура ДействияФормыПоОрганизациям(Кнопка)
	
	мРежимВводаПоказателей = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц;	
	Если Не ЗначениеЗаполнено(Отбор.Организация.Значение) Тогда
		
		Если мОрганизация = Неопределено Тогда
			// заполним организацию
			РаботаСДиалогами.ЗаполнениеОтбораПоОрганизацииПоУмолчанию(ЭтаФорма, Отбор.Организация, ЭлементыФормы.Организация, Неопределено, Ложь, глЗначениеПеременной("глТекущийПользователь"));
			
			Отбор.Организация.Использование = Истина;
			Если Не ЗначениеЗаполнено(Отбор.Организация.Значение) Тогда
				Отбор.Организация.ВидСравнения	= ВидСравнения.НеРавно;
			КонецЕсли;
		Иначе
			Отбор.Организация.Значение = мОрганизация;
		КОнецЕсли;
	КонецЕсли;
	ВидОрганизационнойСтруктурыПредприятияПриИзменении();
	
КонецПроцедуры

Процедура ДействияФормыПоЦФО(Кнопка)
	
	мОрганизация = Отбор.Организация.Значение;
	мРежимВводаПоказателей = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоЦентрамОтветственности;
	ВидОрганизационнойСтруктурыПредприятияПриИзменении();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ



// Процедура - обработчик события "ОрганизацияПриИзменении"
//
Процедура ОрганизацияПриИзменении(РежимВвода = "")
	
	Организация = Отбор.Организация.Значение;
	
	Если Организация = Справочники.Организации.ПустаяСсылка() И (РежимВвода <> "ПоЦФО") Тогда
		Отбор.Организация.ВидСравнения	= ВидСравнения.НеРавно;
	Иначе
		Отбор.Организация.ВидСравнения	= ВидСравнения.Равно;
	КонецЕсли;	
	Заголовок = мЗаголовокФормы + ?(ЗначениеЗаполнено(Отбор.Организация.Значение),НСтр("ru='по ';uk='по'") + Строка(Отбор.Организация.Значение) + " ","");
	

КонецПроцедуры


