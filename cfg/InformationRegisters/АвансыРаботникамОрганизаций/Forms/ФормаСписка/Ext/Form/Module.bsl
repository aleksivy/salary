// устанавливает заголовок формы по отбору 
Процедура УстановитьЗаголовок();
	Заголовок = НСтр("ru='Авансы работникам организации  ';uk='Аванси працівникам організації '") + Отбор.Организация.Значение;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// устанавливает текущую позицию в списке
// Парамтеры: 
//  ПарамОрганизация
//  ПарамФизлицо
//
Процедура УстановитьСтроку(ПарамОрганизация, ПарамФизлицо) Экспорт
    Отбор.Организация.Значение = ПарамОрганизация;
    Отбор.Организация.Использование = Истина;
    ЗаписьСтруктура = Новый Структура("Организация, Физлицо", ПарамОрганизация, ПарамФизлицо);
    ЭлементыФормы.РегистрСведенийСписок.ТекущаяСтрока = РегистрыСведений.АвансыРаботникамОрганизаций.СоздатьКлючЗаписи(ЗаписьСтруктура);
    УстановитьЗаголовок();
    
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	// настройка порядка
	ЭлементыФормы.РегистрСведенийСписок.НастройкаПорядка.Сотрудник.Доступность = Истина;
	
КонецПроцедуры

// Процедура - обработчик события "ПриОткрытии" формы
//
Процедура ПриОткрытии()
		
    Если Отбор.Организация.Значение = Справочники.Организации.ПустаяСсылка() Тогда
        Отбор.Организация.Значение = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"),"ОсновнаяОрганизация");
        Отбор.Организация.Использование = Не Отбор.Организация.Значение.Пустая();
    КонецЕсли;
    УстановитьЗаголовок();
		
	СтруктураКолонок = Новый Структура();

	// Установить колонки, видимостью которых пользователь управлять не может.
	СтруктураКолонок.Вставить("ФизЛицо");

	// Установить ограничение - изменять видимость колонок для табличной части 
	ОбработкаТабличныхЧастей.УстановитьИзменятьВидимостьКолонокТабЧасти(ЭлементыФормы.РегистрСведенийСписок.Колонки, СтруктураКолонок);
	
	// заполним организацию
	РаботаСДиалогами.ЗаполнениеОтбораПоОрганизацииПоУмолчанию(ЭтаФорма, Отбор.Организация, ЭлементыФормы.Организация, ПараметрОтборПоРегистратору, Ложь, глЗначениеПеременной("глТекущийПользователь"));
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Процедура - обработчик события "ПриИзменении" поля ввода "Организация".
Процедура ОрганизацияПриИзменении(Элемент)

 	Заголовок = НСтр("ru='Авансы работникам организации ';uk='Аванси працівникам організації '") + Элемент.Значение.Наименование;
    Отбор.Организация.Использование = Не Элемент.Значение.Пустая();
	
КонецПроцедуры

Процедура РегистрСведенийСписокСотрудникНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ПроцедурыУправленияПерсоналом.ОткрытьФормуВыбораСотрудникаОрганизации(Элемент, Элемент, Истина, РабочаяДата, Отбор.Организация.Значение , 1, СтандартнаяОбработка, Элемент.Значение);
	
КонецПроцедуры
