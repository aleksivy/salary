Процедура ЗагрузитьЗначенияИзРегистраСведений()

	Выборка = РегистрыСведений.ЗначенияПравПользователя.Выбрать();
	Пока Выборка.Следующий() Цикл

		Если ЗначениеЗаполнено(Выборка.НаборПрав) Тогда
			ИмяТаблицы = Строка(Выборка.НаборПрав);
			Для а = 0 По ЭлементыФормы["ТабличноеПоле"+ИмяТаблицы].Значение.Количество() Цикл

				ТекущаяСтрока = ЭлементыФормы["ТабличноеПоле"+ИмяТаблицы].Значение.Получить(а);
				Если ТекущаяСтрока.Право = Выборка.Право Тогда
					ТекущаяСтрока.Значение = Выборка.Значение;
					Если ТипЗнч(Выборка.Значение)=Тип("Булево") Тогда
						ТекущаяСтрока.ЗначениеФлага = Выборка.Значение;
					КонецЕсли;

					Прервать;
				КонецЕсли;

			КонецЦикла;
		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	Для а = 0 По Перечисления.НаборПравПользователей.Количество()-1 Цикл
		Закладка = Перечисления.НаборПравПользователей.Получить(а);
		ИмяТабличногоПоля = "ТабличноеПоле"+Закладка;
		Если а = 0 Тогда
			ЭлементыФормы.Панель.Страницы.Получить(0).Имя       = Закладка;
			ЭлементыФормы.Панель.Страницы.Получить(0).Заголовок = Закладка;
			ЭлементыФормы["ТабличноеПоле"].Имя = ИмяТабличногоПоля;

			ТабличноеПолеПервойЗакладки = ЭлементыФормы["ТабличноеПоле"+Закладка];
		Иначе
			ТекущаяЗакладка = ЭлементыФормы.Панель.Страницы.Добавить(Закладка, Закладка);

			ЭлементыФормы.Панель.ТекущаяСтраница = ТекущаяЗакладка;
			ЭлементыФормы.Добавить(Тип("ТабличноеПоле"), ИмяТабличногоПоля, ИСТИНА, ЭлементыФормы.Панель);
			ЭлементыФормы[ИмяТабличногоПоля].Значение = Новый ТаблицаЗначений;
			ЭлементыФормы[ИмяТабличногоПоля].ТолькоПросмотр = Ложь;

			ЭлементыФормы[ИмяТабличногоПоля].Верх     = ТабличноеПолеПервойЗакладки.Верх;
			ЭлементыФормы[ИмяТабличногоПоля].Лево     = ТабличноеПолеПервойЗакладки.Лево;
			ЭлементыФормы[ИмяТабличногоПоля].Высота   = ТабличноеПолеПервойЗакладки.Высота;
			ЭлементыФормы[ИмяТабличногоПоля].Ширина   = ТабличноеПолеПервойЗакладки.Ширина;

			ЭлементыФормы[ИмяТабличногоПоля].УстановитьПривязку(ГраницаЭлементаУправления.Право, ЭлементыФормы.Панель, ГраницаЭлементаУправления.Право);
			ЭлементыФормы[ИмяТабличногоПоля].УстановитьПривязку(ГраницаЭлементаУправления.Низ  , ЭлементыФормы.Панель, ГраницаЭлементаУправления.Низ);

			ЭлементыФормы[ИмяТабличногоПоля].УстановитьДействие("ПриВыводеСтроки", ТабличноеПолеПервойЗакладки.ПолучитьДействие("ПриВыводеСтроки"));

			Для НомерКолонки = 0 по ТабличноеПолеПервойЗакладки.Колонки.Количество()-1 Цикл
				ДобавляемаяКолонка = ТабличноеПолеПервойЗакладки.Значение.Колонки.Получить(НомерКолонки);
				ТекущаяКолонка = ЭлементыФормы[ИмяТабличногоПоля].Значение.Колонки.Добавить(ДобавляемаяКолонка.Имя, ДобавляемаяКолонка.ТипЗначения);
				ТекущаяКолонка.Заголовок   = ДобавляемаяКолонка.Заголовок;
				ТекущаяКолонка.Ширина      = ДобавляемаяКолонка.Ширина;

				ДобавляемаяКолонка = ТабличноеПолеПервойЗакладки.Колонки.Получить(НомерКолонки);
				ТекущаяКолонка = ЭлементыФормы[ИмяТабличногоПоля].Колонки.Добавить(ДобавляемаяКолонка.Имя);
				ТекущаяКолонка.Данные           = ДобавляемаяКолонка.Данные;
				ТекущаяКолонка.ДанныеФлажка     = ДобавляемаяКолонка.ДанныеФлажка;
				ТекущаяКолонка.Видимость        = ДобавляемаяКолонка.Видимость;
				ТекущаяКолонка.Доступность      = ДобавляемаяКолонка.Доступность;
				ТекущаяКолонка.ТекстШапки       = ДобавляемаяКолонка.ТекстШапки;
				ТекущаяКолонка.Ширина           = ДобавляемаяКолонка.Ширина;
				ТекущаяКолонка.ИзменениеРазмера = ДобавляемаяКолонка.ИзменениеРазмера;
			КонецЦикла;
		КонецЕсли;

		Выборка = ПланыВидовХарактеристик.ПраваПользователей.Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = ЭлементыФормы[ИмяТабличногоПоля].Значение.Добавить();
			НоваяСтрока.НаборПрав = Закладка;
			НоваяСтрока.Право     = Выборка.Ссылка;
			НоваяСтрока.Значение  = НоваяСтрока.Право.ТипЗначения.ПривестиЗначение();
		КонецЦикла;
	КонецЦикла;

	ЭлементыФормы.Панель.ТекущаяСтраница = ЭлементыФормы.Панель.Страницы.Получить(0);
	ЗагрузитьЗначенияИзРегистраСведений();

КонецПроцедуры

Процедура ТабличноеПолеПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	Если ДанныеСтроки.Право = ПланыВидовХарактеристик.ПраваПользователей.ПечатьНепроведенныхДокументов Тогда

		ДанныеСтроки.Значение = ДанныеСтроки.ЗначениеФлага;
		ОформлениеСтроки.Ячейки.Значение.Текст = ?(ДанныеСтроки.Значение = Истина, "Разрешена", "Запрещена");

		ОформлениеСтроки.Ячейки.Флажок.ТолькоПросмотр   = Ложь;
		ОформлениеСтроки.Ячейки.Значение.ТолькоПросмотр = Истина;

	ИначеЕсли ДанныеСтроки.Право = ПланыВидовХарактеристик.ПраваПользователей.РедактированиеТаблиц
		ИЛИ   ДанныеСтроки.Право = ПланыВидовХарактеристик.ПраваПользователей.РедактированиеЦенВДокументах Тогда

		ДанныеСтроки.Значение = ДанныеСтроки.ЗначениеФлага;
		ОформлениеСтроки.Ячейки.Значение.Текст = ?(ДанныеСтроки.Значение = Истина, "Разрешено", "Запрещено");

		ОформлениеСтроки.Ячейки.Флажок.ТолькоПросмотр   = Ложь;
		ОформлениеСтроки.Ячейки.Значение.ТолькоПросмотр = Истина;

	Иначе

		ОформлениеСтроки.Ячейки.Флажок.ТолькоПросмотр   = Истина;
		ОформлениеСтроки.Ячейки.Значение.ТолькоПросмотр = Ложь;

	КонецЕсли;

КонецПроцедуры

Процедура КоманднаяПанельВыполнить(Кнопка)

	Выборка = РегистрыСведений.ЗначенияПравПользователя.Выбрать();
	Пока Выборка.Следующий() Цикл
		Выборка.ПолучитьМенеджерЗаписи().Удалить();
	КонецЦикла;

	Для НомерСтраницы = 0 По ЭлементыФормы.Панель.Страницы.Количество()-1 Цикл
		ТекущаяСтраница = ЭлементыФормы.Панель.Страницы.Получить(НомерСтраницы);
		НаименованиеСтраницы = ТекущаяСтраница.Имя;
		Для НомерСтроки = 0 По ЭлементыФормы["ТабличноеПоле"+НаименованиеСтраницы].Значение.Количество()-1 Цикл
			Строка = ЭлементыФормы["ТабличноеПоле"+НаименованиеСтраницы].Значение.Получить(НомерСтроки);

			ЭлементРегистраСведений           = РегистрыСведений.ЗначенияПравПользователя.СоздатьМенеджерЗаписи();
			ЭлементРегистраСведений.НаборПрав = Строка.НаборПрав;
			ЭлементРегистраСведений.Право     = Строка.Право;
			ЭлементРегистраСведений.Значение  = Строка.Значение;
			ЭлементРегистраСведений.Записать();
		КонецЦикла;
	КонецЦикла;

	Закрыть();

КонецПроцедуры







