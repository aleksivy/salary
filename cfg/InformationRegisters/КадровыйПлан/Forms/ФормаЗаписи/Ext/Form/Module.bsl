////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Перем мРежимНабораПерсонала;

// Процедура устанавливает доступность реквизитов формы в зависимости от значения переключателей
//
Процедура УстановитьДоступностьРеквизитовФормы()
	
	ЭлементыФормы.Требования.ТолькоПросмотр		= Не УточнитьОписаниеВакансии;
	ЭлементыФормы.Обязанности.ТолькоПросмотр	= Не УточнитьОписаниеВакансии;
	ЭлементыФормы.Условия.ТолькоПросмотр		= Не УточнитьОписаниеВакансии;
	
КонецПроцедуры // УстановитьДоступностьРеквизитовФормы()

Процедура ОбновитьОписаниеВакансии()
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Должность",		Должность);
	
	Если мРежимНабораПерсонала = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
		Запрос.УстановитьПараметр("ПодразделениеОрганизации",	ПодразделениеОрганизации);
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ВложенныйЗапрос.УточнитьОписаниеВакансии КАК УточнитьОписаниеВакансии,
		|	ВложенныйЗапрос.Требования,
		|	ВложенныйЗапрос.Обязанности,
		|	ВложенныйЗапрос.Условия
		|ИЗ
		|	(ВЫБРАТЬ
		|		Должности.Требования КАК Требования,
		|		Должности.Обязанности КАК Обязанности,
		|		Должности.Условия КАК Условия,
		|		ЛОЖЬ КАК УточнитьОписаниеВакансии
		|	ИЗ
		|		Справочник.Должности КАК Должности
		|	ГДЕ
		|		Должности.Ссылка = &Должность
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		СведенияОРабочихМестах.Требования,
		|		СведенияОРабочихМестах.Обязанности,
		|		СведенияОРабочихМестах.Условия,
		|		ИСТИНА
		|	ИЗ
		|		РегистрСведений.СведенияОРабочихМестах КАК СведенияОРабочихМестах
		|	ГДЕ
		|		СведенияОРабочихМестах.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
		|		И СведенияОРабочихМестах.ПодразделениеОрганизации = &ПодразделениеОрганизации
		|		И СведенияОРабочихМестах.Должность = &Должность) КАК ВложенныйЗапрос
		|
		|УПОРЯДОЧИТЬ ПО
		|	УточнитьОписаниеВакансии УБЫВ";
	Иначе
		Запрос.УстановитьПараметр("Подразделение",	Подразделение);
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ВложенныйЗапрос.УточнитьОписаниеВакансии КАК УточнитьОписаниеВакансии,
		|	ВложенныйЗапрос.Требования,
		|	ВложенныйЗапрос.Обязанности,
		|	ВложенныйЗапрос.Условия
		|ИЗ
		|	(ВЫБРАТЬ
		|		Должности.Требования КАК Требования,
		|		Должности.Обязанности КАК Обязанности,
		|		Должности.Условия КАК Условия,
		|		ЛОЖЬ КАК УточнитьОписаниеВакансии
		|	ИЗ
		|		Справочник.Должности КАК Должности
		|	ГДЕ
		|		Должности.Ссылка = &Должность
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		СведенияОРабочихМестах.Требования,
		|		СведенияОРабочихМестах.Обязанности,
		|		СведенияОРабочихМестах.Условия,
		|		ИСТИНА
		|	ИЗ
		|		РегистрСведений.СведенияОРабочихМестах КАК СведенияОРабочихМестах
		|	ГДЕ
		|		СведенияОРабочихМестах.Подразделение = &Подразделение
		|		И СведенияОРабочихМестах.ПодразделениеОрганизации = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|		И СведенияОРабочихМестах.Должность = &Должность) КАК ВложенныйЗапрос
		|
		|УПОРЯДОЧИТЬ ПО
		|	УточнитьОписаниеВакансии УБЫВ";
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ЭтаФорма, Выборка);
	КонецЕсли;
	
КонецПроцедуры // ОбновитьОписаниеВакансии()

Процедура ЗаписатьОписание()
	
	НаборЗаписей = РегистрыСведений.СведенияОРабочихМестах.СоздатьНаборЗаписей();
	Если мРежимНабораПерсонала = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
		НаборЗаписей.Отбор.ПодразделениеОрганизации.Установить(ПодразделениеОрганизации);
	Иначе
		НаборЗаписей.Отбор.Подразделение.Установить(Подразделение);
	КонецЕсли;
	НаборЗаписей.Отбор.Должность.Установить(Должность);
	
	Если УточнитьОписаниеВакансии Тогда
		Запись = НаборЗаписей.Добавить();
		Если мРежимНабораПерсонала = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
			Запись.ПодразделениеОрганизации	= ПодразделениеОрганизации;
		Иначе
			Запись.Подразделение			= Подразделение;
		КонецЕсли;
		Запись.Должность	= Должность;
		
		Запись.Требования	= Требования;
		Запись.Обязанности	= Обязанности;
		Запись.Условия		= Условия;
	КонецЕсли;
	
	НаборЗаписей.Записать();
	
	Модифицированность = Ложь;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()
	
	мРежимНабораПерсонала = Константы.РежимНабораПерсонала.Получить();
	
	Если мРежимНабораПерсонала = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
		ЭлементыФормы.ПанельРежимНабораПерсонала.ТекущаяСтраница = ЭлементыФормы.ПанельРежимНабораПерсонала.Страницы.ПоСтруктуреЮридическихЛиц;
	Иначе
		ЭлементыФормы.ПанельРежимНабораПерсонала.ТекущаяСтраница = ЭлементыФормы.ПанельРежимНабораПерсонала.Страницы.ПоЦентрамОтветственности;
	КонецЕсли;
	
	ОбновитьОписаниеВакансии();
	
	УстановитьДоступностьРеквизитовФормы();
	
	ТекущийЭлемент = ЭлементыФормы.Требования;
	
КонецПроцедуры // ПриОткрытии()

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		ТекстВопроса = НСтр("ru='Данные были изменены. Сохранить изменения?';uk='Дані були змінені. Зберегти зміни?'");
		
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			ЗаписатьОписание();
			
		ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

Процедура ОсновныеДействияФормыЗаписатьИЗакрыть(Кнопка)
	
	ЗаписатьОписание();
	Закрыть();
	
КонецПроцедуры

Процедура ОсновныеДействияФормыЗаписать(Кнопка)
	
	ЗаписатьОписание();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура ДолжностьНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь
КонецПроцедуры

Процедура ПодразделениеНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь
КонецПроцедуры

Процедура ПодразделениеОрганизацииНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь
КонецПроцедуры

Процедура ИспользоватьОписаниеВакансииИзДолжностиПриИзменении(Элемент)
	
	УстановитьДоступностьРеквизитовФормы();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
