перем ПредФизЛицо;
перем ПредОрганизация;

Процедура ПередЗаписью(Отказ)

	Если НЕ ЗначениеЗаполнено(Период) Тогда
		Предупреждение(НСтр("ru='Не указана дата!';uk='Не вказана дата!'"));
		Отказ=Истина;
		Возврат;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ФизЛицо) Тогда
		Предупреждение(НСтр("ru='Не указан сотрудник!';uk='Не зазначений співробітник!'"));
		Отказ=Истина;
		Возврат;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Предупреждение(НСтр("ru='Не указана организация!';uk='Не зазначена організація!'"));
		Отказ=Истина;
		Возврат;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ВидСтажа) Тогда
		Предупреждение(НСтр("ru='Не указан вид стажа!';uk='Не зазначений вид стажу!'"));
		Отказ=Истина;
		Возврат;
	КонецЕсли;
		
	
	Если Год < 6 Тогда
		НачальныйСтаж = Строка(Год) + НСтр("ru=' г. ';uk=' р. '") + Строка(Месяц) + " м. " + Строка(День) + " д. ";
	Иначе
		НачальныйСтаж = Строка(Год) + НСтр("ru=' л. ';uk=' р. '") + Строка(Месяц) + " м. " + Строка(День) + " д. ";
	КонецЕсли;
	
	
	новДатаСтажа = ПроведениеРасчетов.ПересчитатьСтажВДату(Период, Ложь, - ЭлементыФормы.День.Значение, - ЭлементыФормы.Месяц.Значение, - ЭлементыФормы.Год.Значение);
	Если ЗначениеЗаполнено(ДатаСтажа) Тогда
		новДнейСтажа = ( НачалоДня(Период) - НачалоДня(ДатаСтажа) ) / 86400;
	Иначе
		НовДнейСтажа = 0;
	КонецЕсли;	
	
	Если НовДнейСтажа <> ДнейСтажа Тогда
		ДнейСтажа = НовДнейСтажа - 1;
	КонецЕсли;
	
	Если новДатаСтажа <> ДатаСтажа Тогда
		датаСтажа = НовДатаСтажа - 1;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеЗаписи()
	
	Если РежимНастройкиЗаписи И ВидСтажа = Справочники.ВидыСтажа.ОбщийТрудовойСтаж Тогда
		ФизЛицоОбъект = ФизЛицо.ПолучитьОбъект();
		ФизЛицоОбъект.ТрудоваяДеятельность.Загрузить(ТрудоваяДеятельность);
		ФизЛицоОбъект.Записать();
	ИначеЕсли РежимНастройкиЗаписи Тогда
		
		ФизЛицоОбъект = ФизЛицо.ПолучитьОбъект();
		Стажи = ФизЛицоОбъект.Стажи.Выгрузить();
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("тзТрудоваяДеятельность", ТрудоваяДеятельность);
		Запрос.УстановитьПараметр("тзСтажи", Стажи);
		Запрос.УстановитьПараметр("ВидСтажа", ВидСтажа);
		
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	&ВидСтажа КАК ВидСтажа,
		|	ТрудоваяДеятельность.ДатаНачала,
		|	ТрудоваяДеятельность.ДатаОкончания
		|ПОМЕСТИТЬ ВТТрудоваяДеятельность
		|ИЗ
		|	&тзТрудоваяДеятельность КАК ТрудоваяДеятельность
		|;
		|
		|ВЫБРАТЬ
		|	Стажи.ВидСтажа,
		|	Стажи.ДатаНачала,
		|	Стажи.ДатаОкончания
		|ПОМЕСТИТЬ ВТСтажи
		|ИЗ
		|	&тзСтажи КАК Стажи
		|ГДЕ
		|   Стажи.ВидСтажа <> &ВидСтажа
		|;
		|
		|ВЫБРАТЬ
		|	Стажи.ВидСтажа,
		|	Стажи.ДатаНачала,
		|	Стажи.ДатаОкончания
		|ИЗ
		|	ВТСтажи КАК Стажи
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ
		|	Стажи.ВидСтажа,
		|	Стажи.ДатаНачала,
		|	Стажи.ДатаОкончания
		|ИЗ
		|	ВТТрудоваяДеятельность КАК Стажи";
		
		ФизЛицоОбъект.Стажи.Загрузить(Запрос.Выполнить().Выгрузить());
        ФизЛицоОбъект.Записать();
	КонецЕсли;	
	
	Оповестить("ОбновитьФорму", Новый Структура("ИмяЭлемента","Стаж"), ФизЛицо);
КонецПроцедуры

Процедура ПриОткрытии()
	Если Период = НачалоДня(ТекущаяДата()) Тогда
		УстановитьПериод();
	КонецЕсли;
	
	УстановитьВидимость();
	ПересчитатьСтаж(Истина);
	УстановитьПояснение();
	
	
КонецПроцедуры

Процедура ПериодПриИзменении(Элемент)
	ПересчитатьСтаж();
КонецПроцедуры

Процедура ГодМесяцДеньПриИзменении(Элемент)
	
	
	Если ДатаСтажа = Неопределено Тогда
	    ДатаСтажа = РабочаяДата - 1;
	КонецЕсли;            
	
	ДатаСтажа = ПроведениеРасчетов.ПересчитатьСтажВДату(Период, , ЭлементыФормы.День.Значение,ЭлементыФормы.Месяц.Значение,ЭлементыФормы.Год.Значение) - 1; 
	
КонецПроцедуры

Процедура РежимНастройкиПриИзменении(Элемент)
	
	//РасширеннаяНастройка = Не РасширеннаяНастройка;
	УстановитьВидимость();
	ПересчитатьСтаж(Истина);
	
КонецПроцедуры

Процедура УстановитьВидимость()
	
	Если РежимНастройкиЗаписи Тогда
		ЭлементыФормы.Панель.ТекущаяСтраница = ЭлементыФормы.Панель.Страницы.Расширенная;
		ЭлементыФормы.Год.Доступность = Ложь;
		ЭлементыФормы.Месяц.Доступность = Ложь;
		ЭлементыФормы.День.Доступность = Ложь;
	Иначе
		ЭлементыФормы.Панель.ТекущаяСтраница = ЭлементыФормы.Панель.Страницы.Упрощенная;
		ЭлементыФормы.Год.Доступность = Истина;
		ЭлементыФормы.Месяц.Доступность = Истина;
		ЭлементыФормы.День.Доступность = Истина;
	КонецЕсли;

	
КонецПроцедуры

Процедура ТрудоваяДеятельностьПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	ПересчитатьСтаж();
КонецПроцедуры    

Процедура ТрудоваяДеятельностьПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	ДатаНачала = Элемент.ТекущаяСтрока.ДатаНачала;
	ДатаОкончания = Элемент.ТекущаяСтрока.ДатаОкончания;
	Если ДатаОкончания  < ДатаНачала Тогда
		ОбщегоНазначения.
		СообщитьОбОшибке (НСтр("ru='Дата окончания должа быть больше даты начала';uk='Дата закінчення повинна бути більше дати початку'"),,,СтатусСообщения.Важное);
		Отказ = ИСтина;
	КонецЕсли;
	
	
	//Проверка на пересеченность дат;
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("тзТрудоваяДеятельность", ТрудоваяДеятельность);
	Запрос.УстановитьПараметр("ТекущаяДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ТекущаяДатаОкончания", ДатаОкончания);
	
	Запрос.УстановитьПараметр("начала", "начала");
	Запрос.УстановитьПараметр("окончания", "окончания");
	Запрос.УстановитьПараметр("пусто", "");
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

	Запрос.Текст = "
	|ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ ВТТрудоваяДеятельность
	|ИЗ
	|	&тзТрудоваяДеятельность КАК ТрудоваяДеятельность
	|ГДЕ
	|	(ТрудоваяДеятельность.ДатаНачала < &ТекущаяДатаНачала
	| 	И &ТекущаяДатаНачала < ТрудоваяДеятельность.ДатаОкончания)
	|	ИЛИ
	|	(ТрудоваяДеятельность.ДатаНачала < &ТекущаяДатаОкончания
	| 	И &ТекущаяДатаОкончания < ТрудоваяДеятельность.ДатаОкончания)
	|";
	
	Запрос.Выполнить();
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТрудоваяДеятельность.ДатаНачала,
	|	ТрудоваяДеятельность.ДатаОкончания		
	|ИЗ
	|	ВТТрудоваяДеятельность КАК ТрудоваяДеятельность";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл 
		ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru='Интервал в текущей строке пересекается с другой строкой таблицы';uk='Інтервал у поточному рядку перетинається з іншим рядком таблиці'"),, , СтатусСообщения.Важное );
	КонецЦикла
	 	
КонецПроцедуры

Процедура ТрудоваяДеятельностьПослеУдаления(Элемент)
	ПересчитатьСтаж();
КонецПроцедуры

Процедура ФизЛицоНачалоВыбора(Элемент, СтандартнаяОбработка)
	предФизЛицо = ФизЛицо;
КонецПроцедуры

Процедура ОрганизацияНачалоВыбора(Элемент, СтандартнаяОбработка)
	предОрганизаций= Организация;
КонецПроцедуры

Процедура ФизЛицоПриИзменении(Элемент)
	
	Если предФизЛицо <> Элемент.Значение Тогда	
		УстановитьПериод();
		ПересчитатьСтаж(Истина);
	КонецЕсли;
		

КонецПроцедуры

Процедура ОрганизацияПриИзменении(Элемент)
		Если Период = НачалоДня(ТекущаяДата()) Тогда
			УстановитьПериод();
		КонецЕсли;
КонецПроцедуры
 
Процедура УстановитьПериод()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(РаботникиОрганизаций.Период) КАК Период
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПервых КАК РаботникиОрганизаций
	|ГДЕ
	|	РаботникиОрганизаций.Сотрудник.Физлицо = &ФизЛицо
	|	И РаботникиОрганизаций.Организация = &Организация
	|	И РаботникиОрганизаций.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)";
	
	Запрос.УстановитьПараметр("ФизЛицо",ФизЛицо);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Период = Выборка.Период;
	КонецЦикла;
	Если Не ЗначениеЗаполнено(Период) Тогда
		Период = ТекущаяДата();
	КонецЕсли;
	
КонецПроцедуры	

Процедура ПересчитатьСтаж(ПерезаполнятьТЗ = Ложь) Экспорт
	Если Не РежимНастройкиЗаписи Тогда
		Если ЗначениеЗаполнено(ДатаСтажа) Тогда
			ПроведениеРасчетов.РазобратьРазностьДат(Период, ДатаСтажа, ЭлементыФормы.День.Значение,ЭлементыФормы.Месяц.Значение, ЭлементыФормы.Год.Значение);
		КонецЕсли;	
	Иначе
		Если ПерезаполнятьТЗ Тогда
			
			Если ВидСтажа = Справочники.ВидыСтажа.ОбщийТрудовойСтаж Тогда
				ТрудоваяДеятельность = Физлицо.ТрудоваяДеятельность.Выгрузить();
				ЭлементыФормы.ТрудоваяДеятельность.Значение.Колонки.НомерСтроки.Ширина = 2;
				ЭлементыФормы.ТрудоваяДеятельность.СоздатьКолонки();
			Иначе
				
				СтруктураПоиска = Новый Структура("ВидСтажа", ВидСтажа); 
				МассивНайденныхСтрок = Физлицо.Стажи.НайтиСтроки(СтруктураПоиска);
				ТрудоваяДеятельность = Физлицо.Стажи.Выгрузить(МассивНайденныхСтрок,"ДатаНачала, ДатаОкончания");
				ЭлементыФормы.ТрудоваяДеятельность.СоздатьКолонки();
			КонецЕсли;
			
		КонецЕсли;
		РазностьДат = 0;
		КоличествоДней = 0 ;
		Для Каждого ПериодСтажа ИЗ ТрудоваяДеятельность Цикл
			РазностьДат = ПериодСтажа.ДатаОкончания - ПериодСтажа.ДатаНачала+1;
			Если РазностьДат<> 0 Тогда
				КоличествоДней = КоличествоДней + РазностьДат/86400;
			КонецЕсли
			
		КонецЦикла;
		День = КоличествоДней;
		ДатаСтажа = Период - КоличествоДней*86400 - 1;
		ПроведениеРасчетов.РазобратьРазностьДат(Период, ДатаСтажа, ЭлементыФормы.День.Значение,ЭлементыФормы.Месяц.Значение, ЭлементыФормы.Год.Значение);
	КонецЕсли;
КонецПроцедуры

Процедура ВидСтажаПриИзменении(Элемент)
	
	ПересчитатьСтаж(Истина);	
	УстановитьПояснение();
	
КонецПроцедуры

Процедура УстановитьПояснение()
	
	Если ВидСтажа = Справочники.ВидыСтажа.СтраховойСтажДляБольничного Тогда
		ЭлементыФормы.Пояснение.Заголовок = НСтр("ru='(за период до первых данных о стаже по данным реестра застрахованных лиц)';uk='(за період до перших даних про стаж за даними реєстру застрахованих осіб)'");
	Иначе
		ЭлементыФормы.Пояснение.Заголовок = НСтр("ru='(дата приема работника на нынешнее место работы)';uk='(дата прийому працівника на нинішнє місце роботи)'");
	КонецЕсли;	
	
КонецПроцедуры	



