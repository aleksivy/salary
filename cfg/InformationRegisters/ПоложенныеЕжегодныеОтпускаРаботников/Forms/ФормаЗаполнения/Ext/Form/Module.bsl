
Процедура ОсновныеДействияФормыВыполнить(Кнопка)
	
	Запрос = Новый Запрос();
	Если ЗначениеЗаполнено(Организация) Тогда
		ФильтрОрганизация = "И РаботникиОрганизаций.Организация = &Организация";
	Иначе
		ФильтрОрганизация = "";
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ПериодС) И НЕ ЗначениеЗаполнено(ПериодПо) Тогда
		ФильтрПериод = "";
	ИначеЕсли ЗначениеЗаполнено(ПериодС) И НЕ ЗначениеЗаполнено(ПериодПо) Тогда
		ФильтрПериод = "И РаботникиОрганизаций.Период >= &ПериодС";
	ИначеЕсли НЕ ЗначениеЗаполнено(ПериодС) И ЗначениеЗаполнено(ПериодПо) Тогда
		ФильтрПериод = "И РаботникиОрганизаций.Период <= &ПериодПО";
	Иначе
		ФильтрПериод = "И РаботникиОрганизаций.Период >= &ПериодС И РаботникиОрганизаций.Период <= &ПериодПО";
	КонецЕсли;	
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПериодС", ПериодС);
	Запрос.УстановитьПараметр("ПериодПО", ПериодПО);
	
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	   |	РаботникиОрганизаций.Период,
	   |	РаботникиОрганизаций.Организация,
	   |	РаботникиОрганизаций.Сотрудник
	   |ИЗ
	   |	РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	   |    ЛЕВОЕ СОЕДИНЕНИЕ
	   |    РегистрСведений.ПоложенныеЕжегодныеОтпускаРаботников КАК ПоложенныеЕжегодныеОтпускаРаботников
	   |    ПО РаботникиОрганизаций.Организация = ПоложенныеЕжегодныеОтпускаРаботников.Организация
	   |     И РаботникиОрганизаций.Сотрудник = ПоложенныеЕжегодныеОтпускаРаботников.Сотрудник
	   |
	   |ГДЕ
	   |    РаботникиОрганизаций.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу)
	   |    И ПоложенныеЕжегодныеОтпускаРаботников.Сотрудник ЕСТЬ NULL
	   |    "+ФильтрОрганизация+"
	   |    "+ФильтрПериод+"
	   |";
	   
	 Выборка = Запрос.Выполнить().Выбрать();
	 НаборЗаписей = РегистрыСведений.ПоложенныеЕжегодныеОтпускаРаботников.СоздатьНаборЗаписей();
	 НаборЗаписей.Прочитать();
	 Пока Выборка.Следующий() Цикл
		Для Каждого Отпуск из Отпуска Цикл
			
			Если Отпуск.Дней = 0 Тогда
				Продолжить;
			КонецЕсли;	
			Запись = НаборЗаписей.Добавить();
			
			//Свойства
			Запись.Период 						= Выборка.Период;
			
			//Измерения
			Запись.Сотрудник					= Выборка.Сотрудник;
			Запись.Организация					= Выборка.Организация;
			Запись.ВидОтпуска					= Отпуск.ВидОтпуска;
			
			//Реквизиты
			Запись.Положено						= Отпуск.Дней;		
			
		КонецЦикла;	
	 КонецЦикла; 
	 
	 НаборЗаписей.Записать(Истина);
	 Закрыть();
	 
КонецПроцедуры

Процедура ПриОткрытии()
	
	Отпуск = Отпуска.Добавить();
	Отпуск.ВидОтпуска = Справочники.ВидыОтпусков.ЕжегодныйОсновной;
	Отпуск.Дней = ПроцедурыУправленияПерсоналом.ПолучитьПоложенноеКоличествоДнейОтпуска(Организация);
	Если Отпуск.Дней = 0 Тогда
		Отпуск.Дней = 24;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВидыОтпусков.Ссылка,
	               |	ВидыОтпусков.Код КАК Код
	               |ИЗ
	               |	Справочник.ВидыОтпусков КАК ВидыОтпусков
	               |ГДЕ
	               |	ВидыОтпусков.ВедетсяУчетОстатков
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Код";
	   
	 Выборка = Запрос.Выполнить().Выбрать();
	 Пока Выборка.Следующий() Цикл
		 Если Выборка.Ссылка <> Справочники.ВидыОтпусков.ЕжегодныйОсновной Тогда
			Отпуск = Отпуска.Добавить();
			Отпуск.ВидОтпуска = Выборка.Ссылка;
		 КонецЕсли;	
	 КонецЦикла;
	
КонецПроцедуры
