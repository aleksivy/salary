
////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
Перем ПериодДействия;

Перем мЗаголовокФормы;
Перем мРежимВводаПоказателей;

Перем мОрганизация;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Устанавливает свертку панелей и видимость реквизитов формы в зависимости от выбранной организационной структуры 
//
Процедура ВидОрганизационнойСтруктурыПредприятияПриИзменении()
	
	Если мРежимВводаПоказателей = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда		
		ЭлементыФормы.ДействияФормы.Кнопки.ПорядокФормированияСМ.Кнопки.ПоЦФО.Пометка = Ложь;
		ЭлементыФормы.ДействияФормы.Кнопки.ПорядокФормированияСМ.Кнопки.ПоОрганизациям.Пометка = Истина;
		ЭлементыФормы.ПанельОрганизации.Свертка = РежимСверткиЭлементаУправления.Нет;	
		ОрганизацияПриИзменении();
	Иначе
		ЭлементыФормы.ДействияФормы.Кнопки.ПорядокФормированияСМ.Кнопки.ПоЦФО.Пометка = Истина;
		ЭлементыФормы.ДействияФормы.Кнопки.ПорядокФормированияСМ.Кнопки.ПоОрганизациям.Пометка = Ложь;
		ЭлементыФормы.ПанельОрганизации.Свертка = РежимСверткиЭлементаУправления.Верх;
		Отбор.Организация.Значение = Справочники.Организации.ПустаяСсылка();
		ОрганизацияПриИзменении("ПоЦФО")
	КонецЕсли;

КонецПроцедуры //ВидОрганизационнойСтруктурыПредприятияПриИзменении

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	РегистрСведенийСписок.Колонки.Добавить("ПериодДействия");
	мРежимВводаПоказателей = ВосстановитьЗначение("РежимВводаПоказателей");
	
КонецПроцедуры //ПередОткрытием


// Процедура - обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()
		
	мЗаголовокФормы = НСтр("ru='Значения показателей схем мотивации ';uk='Значення показників схем мотивації '");
	
	Если НЕ ЗначениеЗаполнено(мРежимВводаПоказателей) Тогда
		мРежимВводаПоказателей = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц;
		ЭлементыФормы.ДействияФормы.Кнопки.ПорядокФормированияСМ.Кнопки.ПоОрганизациям.Пометка = Истина;
	Иначе
		ЭлементыФормы.ДействияФормы.Кнопки.ПорядокФормированияСМ.Кнопки.ПоЦФО.Пометка = Истина;
	КонецЕсли;

	// заполним организацию
	РаботаСДиалогами.ЗаполнениеОтбораПоОрганизацииПоУмолчанию(ЭтаФорма, Отбор.Организация, ЭлементыФормы.Организация, Неопределено, Ложь, глЗначениеПеременной("глТекущийПользователь"));
	
	мОрганизация = Отбор.Организация.Значение;
	
	Отбор.Организация.Использование = Истина;
	Если Не ЗначениеЗаполнено(Отбор.Организация.Значение) Тогда
		Отбор.Организация.ВидСравнения	= ВидСравнения.НеРавно;
	КонецЕсли;
	
	Организация = Отбор.Организация.Значение;
	Если ЗначениеЗаполнено(Организация) Тогда
		мМассивЭУ = Новый Массив();
		мМассивЭУ.Добавить(ЭлементыФормы.РегистрСведенийСписок.Колонки.Валюта);
		РаботаСДиалогами.УстановитьВидимостьЭУПоУчетнойПолитикеПоПерсоналу(мМассивЭУ,глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"),Организация);
	КонецЕсли;
		
	ПериодДействия = НачалоМесяца(ОбщегоНазначения.ПолучитьРабочуюДату());
	МесяцСтрока = РаботаСДиалогами.ДатаКакМесяцПредставление(ПериодДействия);

	
	ВидОрганизационнойСтруктурыПредприятияПриИзменении();

	Заголовок = мЗаголовокФормы + ?(ЗначениеЗаполнено(Отбор.Организация.Значение),НСтр("ru='по ';uk='по'") + Строка(Отбор.Организация.Значение) + " ","") + НСтр("ru='на ';uk='на '") + Формат(КонецМесяца(ПериодДействия),"ДФ='ММММ гггг'") + НСтр("ru=' г.';uk=' р.'");
	
	Отбор.ПериодДействия.ВидСравнения	= ВидСравнения.Равно;
	Отбор.ПериодДействия.Значение		= ПериодДействия;
	
	Отбор.ПериодДействия.Использование	= Истина;
	
	РегистрСведенийСписок.Порядок.Установить("Подразделение,Сотрудник,Показатель");
	
КонецПроцедуры //ПриОткрытии

// Процедура - обработчик события "ПриЗакрытии" формы.
//
Процедура ПриЗакрытии()
	
	СохранитьЗначение("РежимВводаПоказателей",мРежимВводаПоказателей);
	
КонецПроцедуры //ПриЗакрытии

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура - обработчик события "ДействияФормыЗаполнитьПоРегистру"
//
Процедура ДействияФормыЗаполнитьПоРегистру(Кнопка)
	
	НаборЗаписей = РегистрыСведений.ЗначенияПоказателейСхемМотивации.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Организация.Установить(Отбор.Организация.Значение);
	НаборЗаписей.Отбор.ПериодДействия.Установить(НачалоМесяца(ОбщегоНазначения.ПолучитьРабочуюДату()));
	Отбор.ПериодДействия.Использование	= Истина;
	НаборЗаписей.Автозаполнение();
	НаборЗаписей.ПолучитьФорму("ФормаНабораЗаписей").Открыть();
	
КонецПроцедуры //ДействияФормыЗаполнитьПоРегистру

// Процедура - обработчик события "ДействияФормыЗагрузить"
//
Процедура ДействияФормыЗагрузить(Кнопка)
	
	ОбработкаЗагрузкиДанных = Обработки.ЗагрузкаДанныхИзТабличногоДокумента.Создать();
	ОбработкаЗагрузкиДанных.РежимЗагрузки = 2;  
	ОбработкаЗагрузкиДанных.ИмяВидаРегистра = "ЗначенияПоказателейСхемМотивации";
	ОбработкаЗагрузкиДанных.ЗамещатьСуществующиеЗаписи	= Истина;
	СсылкаИсточника         = ВосстановитьЗначение("ЗначенияПоказателейСхемМотивации");
	ФормаОбработкаЗагрузкиДанных = ОбработкаЗагрузкиДанных.ПолучитьФорму();
	ФормаОбработкаЗагрузкиДанных.ЭлементыФормы.ИмяВидаРегистра.Значение = "ЗначенияПоказателейСхемМотивации";	
	ФормаОбработкаЗагрузкиДанных.Открыть();
	
КонецПроцедуры

Процедура ДействияФормыПоОрганизациям(Кнопка)
	
	мРежимВводаПоказателей = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц;	
	Если Не ЗначениеЗаполнено(Отбор.Организация.Значение) Тогда
		
		Если мОрганизация = Неопределено Тогда
			// заполним организацию
			РаботаСДиалогами.ЗаполнениеОтбораПоОрганизацииПоУмолчанию(ЭтаФорма, Отбор.Организация, ЭлементыФормы.Организация, Неопределено, Ложь, глЗначениеПеременной("глТекущийПользователь"));
			
			Отбор.Организация.Использование = Истина;
			Если Не ЗначениеЗаполнено(Отбор.Организация.Значение) Тогда
				Отбор.Организация.ВидСравнения	= ВидСравнения.НеРавно;
			КонецЕсли;
		Иначе
			Отбор.Организация.Значение = мОрганизация;
		КОнецЕсли;
	КонецЕсли;
	ВидОрганизационнойСтруктурыПредприятияПриИзменении();
	
КонецПроцедуры

Процедура ДействияФормыПоЦФО(Кнопка)
	
	мОрганизация = Отбор.Организация.Значение;
	мРежимВводаПоказателей = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоЦентрамОтветственности;
	ВидОрганизационнойСтруктурыПредприятияПриИзменении();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Процедура - обработчик события "ПериодДействияПриИзменении"
//
Процедура ПериодДействияПриИзменении(Элемент)
	
	РаботаСДиалогами.ДатаКакМесяцПодобратьДатуПоТексту(Элемент.Значение, ПериодДействия);
	Элемент.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(ПериодДействия);
	
	Отбор.ПериодДействия.ВидСравнения	= ВидСравнения.Равно;
	Отбор.ПериодДействия.Значение		= ПериодДействия;
	Отбор.ПериодДействия.Использование	= Истина;

	Заголовок = мЗаголовокФормы + ?(ЗначениеЗаполнено(Отбор.Организация.Значение),НСтр("ru='по ';uk='по'") + Строка(Отбор.Организация.Значение) + " ","") + НСтр("ru='на ';uk='на '") + ПредставлениеПериода(НачалоМесяца(ПериодДействия), КонецМесяца((ПериодДействия)));
	
КонецПроцедуры

Процедура ПериодДействияНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	РаботаСДиалогами.НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, СтандартнаяОбработка, ПериодДействия, ЭтаФорма);
	
	Отбор.ПериодДействия.ВидСравнения	= ВидСравнения.Равно;
	Отбор.ПериодДействия.Значение		= ПериодДействия;
	Отбор.ПериодДействия.Использование	= Истина;	
	
КонецПроцедуры

Процедура ПериодДействияОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

КонецПроцедуры

Процедура ПериодДействияРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ПериодДействия = ДобавитьМесяц(ПериодДействия, Направление);
	Элемент.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(ПериодДействия);
	
	Отбор.ПериодДействия.ВидСравнения	= ВидСравнения.Равно;
	Отбор.ПериодДействия.Значение		= ПериодДействия;
	Отбор.ПериодДействия.Использование	= Истина;

	Заголовок = мЗаголовокФормы + ?(ЗначениеЗаполнено(Отбор.Организация.Значение),НСтр("ru='по ';uk='по'") + Строка(Отбор.Организация.Значение) + " ","") + НСтр("ru='на ';uk='на '") + ПредставлениеПериода(НачалоМесяца(ПериодДействия), КонецМесяца((ПериодДействия)));
		

КонецПроцедуры

Процедура ПериодДействияАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	РаботаСДиалогами.ДатаКакМесяцАвтоПодборТекста(Текст, ТекстАвтоПодбора, СтандартнаяОбработка);
	
	Отбор.ПериодДействия.ВидСравнения	= ВидСравнения.Равно;
	Отбор.ПериодДействия.Значение		= ПериодДействия;
	Отбор.ПериодДействия.Использование	= Истина;	
	
КонецПроцедуры

Процедура ПериодДействияОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	РаботаСДиалогами.ДатаКакМесяцОкончаниеВводаТекста(Текст, Значение, СтандартнаяОбработка);
	
	Отбор.ПериодДействия.ВидСравнения	= ВидСравнения.Равно;
	Отбор.ПериодДействия.Значение		= ПериодДействия;
	Отбор.ПериодДействия.Использование	= Истина;

	Заголовок = мЗаголовокФормы + ?(ЗначениеЗаполнено(Отбор.Организация.Значение),НСтр("ru='по ';uk='по'") + Строка(Отбор.Организация.Значение) + " ","") + НСтр("ru='на ';uk='на '") + ПредставлениеПериода(НачалоМесяца(ПериодДействия), КонецМесяца((ПериодДействия)));

КонецПроцедуры

	
// Процедура - обработчик события "ОрганизацияПриИзменении"
//
Процедура ОрганизацияПриИзменении(РежимВвода = "")
	
	Организация = Отбор.Организация.Значение;
	
	Если Организация = Справочники.Организации.ПустаяСсылка() И (РежимВвода <> "ПоЦФО") Тогда
		Отбор.Организация.ВидСравнения	= ВидСравнения.НеРавно;
	Иначе
		Отбор.Организация.ВидСравнения	= ВидСравнения.Равно;
	КонецЕсли;	
	Заголовок = мЗаголовокФормы + ?(ЗначениеЗаполнено(Отбор.Организация.Значение),НСтр("ru='по ';uk='по'") + Строка(Отбор.Организация.Значение) + " ","") + НСтр("ru='на ';uk='на '") + ПредставлениеПериода(НачалоМесяца(ПериодДействия), КонецМесяца((ПериодДействия)));
	
	Если ЗначениеЗаполнено(Организация) Тогда
		мМассивЭУ = Новый Массив();
		мМассивЭУ.Добавить(ЭлементыФормы.РегистрСведенийСписок.Колонки.Валюта);
		РаботаСДиалогами.УстановитьВидимостьЭУПоУчетнойПолитикеПоПерсоналу(мМассивЭУ,глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"),Организация);
	КонецЕсли;


	

КонецПроцедуры

// Процедура - обработчик события "ПередНачаломДобавления"
//
Процедура РегистрСведенийСписокПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Если Не Копирование Тогда
		НовоеЗначениеПоказателя = РегистрыСведений.ЗначенияПоказателейСхемМотивации.СоздатьМенеджерЗаписи();
		ФормаЗаписи = НовоеЗначениеПоказателя.ПолучитьФорму("ФормаЗаписи");	
		ФормаЗаписи.мРежимВводаПоказателей					= мРежимВводаПоказателей;
		ФормаЗаписи.Открыть();
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры //РегистрСведенийСписокПередНачаломДобавления

