Процедура УстановитьОтборПоОрганизации()
	
	Если ЗначениеЗаполнено(Организация) Тогда
		
		ЗначениеИзСписка = ЭлементыФормы.Организация.Значение;
		РегистрСведенийСписок.Отбор.Организация.Использование = Истина;
		РегистрСведенийСписок.Отбор.Организация.ВидСравнения = ВидСравнения.Равно;
		РегистрСведенийСписок.Отбор.Организация.Значение = ЗначениеИзСписка;
		
	Иначе
		
		РегистрСведенийСписок.Отбор.Организация.Использование = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры
	
Процедура ОрганизацияПриИзменении(Элемент)
	УстановитьОтборПоОрганизации();
КонецПроцедуры

Процедура ДействияФормыЗаполнить(Кнопка)
	
	// список взносов
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("парамДата", ТекущаяДата());
	Запрос.УстановитьПараметр("парамОрганизация", Организация);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Шкала.СтатьяНалоговойДекларации.Родитель КАК Родитель,
	|	Отражение.СпособОтраженияВРеглУчете.СчетКт КАК СчетУчета
	|ИЗ РегистрСведений.ШкалаСтавокНалогов.СрезПоследних(&парамДата) КАК Шкала
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтражениеВзносовВРеглУчете КАК Отражение
	|По		Шкала.Налог = Отражение.Налог
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыПлатежныхДокументовПоВзносамВФонды КАК Параметры
	|По		Параметры.СтатьяНалоговойДекларации = Шкала.СтатьяНалоговойДекларации
	|	И	Параметры.Организация = &парамОрганизация
	|ГДЕ	Шкала.СтатьяНалоговойДекларации.Родитель ЕСТЬ НЕ NULL
	|	И	Отражение.СпособОтраженияВРеглУчете.СчетКт ЕСТЬ НЕ NULL
	|
	|// НДФЛ
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	NULL КАК Родитель,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоНДФЛ)
	|ИЗ РегистрСведений.ШкалаСтавокНалогов.СрезПоследних(&парамДата) КАК Шкала
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыПлатежныхДокументовПоВзносамВФонды КАК Параметры
	|По		Параметры.СтатьяНалоговойДекларации ЕСТЬ NULL
	|	И	Параметры.Организация = &парамОрганизация
	|ГДЕ   Параметры.Организация ЕСТЬ NULL
	|";
	
	Запрос.Текст = ТекстЗапроса;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		МенеджерЗаписи = РегистрыСведений.ПараметрыПлатежныхДокументовПоВзносамВФонды.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Организация = Организация;
		МенеджерЗаписи.СтатьяНалоговойДекларации = Выборка.Родитель;
		МенеджерЗаписи.СчетУчета = Выборка.СчетУчета;
		МенеджерЗаписи.Записать();
		
	КонецЦикла;
	
	// Военный сбор
	МенеджерЗаписи = РегистрыСведений.ПараметрыПлатежныхДокументовПоВзносамВФонды.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Организация = Организация;
	МенеджерЗаписи.СтатьяНалоговойДекларации = Справочники.Налоги.ВоенныйСбор;
	МенеджерЗаписи.СчетУчета = ПланыСчетов.Хозрасчетный.РасчетыПоОбязательнымПлатежам;
	МенеджерЗаписи.Записать();

	
КонецПроцедуры

Процедура РегистрСведенийСписокКонтрагентПриИзменении(Элемент)
	ЭлементыФормы.РегистрСведенийСписок.ТекущиеДанные.СчетКонтрагента = Элемент.Значение.ОсновнойБанковскийСчет;
КонецПроцедуры
