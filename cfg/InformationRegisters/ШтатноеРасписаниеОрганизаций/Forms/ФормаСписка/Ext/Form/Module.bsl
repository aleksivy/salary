Перем мСведенияОВидахРасчета;


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ УПРАВЛЕНИЯ ВНЕШНИМ ВИДОМ ФОРМЫ

// Обновляет заголовок формы и доступность кнопок
//
// Параметры
//  Организация -	СправочникСсылка.Организации - текущая
//					организация формы
//
Процедура ОбновитьВнешнийВидФормы(Организация)

	Заголовок = НСтр("ru='Штатное расписание организации ';uk='Штатний розклад по організації '") + Организация.Наименование;
	ЭлементыФормы.ДействияФормы.Кнопки.Печать.Доступность = ЗначениеЗаполнено(Организация);
	ЭлементыФормы.ДействияФормы.Кнопки.Структура.Доступность = ЗначениеЗаполнено(Организация);

КонецПроцедуры // ОбновитьВнешнийВидФормы()


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Если форма открывается из списка документов, процедура заполняет организацию 
// прописывает заголовок формы и выставляет отбор регистру
//
Процедура ПриОткрытии()

	// проставляем организацию пользователя по умолчанию
	Организация = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");

	Если ЗначениеЗаполнено(ПараметрОтборПоРегистратору) Тогда
		МетаданныеДокумента = ПараметрОтборПоРегистратору.Метаданные();
		Если МетаданныеДокумента.Реквизиты.Найти("Организация") <> Неопределено Тогда
			Организация = ПараметрОтборПоРегистратору.Организация;
			ЭлементыФормы.Организация.ТолькоПросмотр = Истина;
			ЭлементыФормы.ДействияФормы.Кнопки.Печать.Доступность = Ложь;
			ЭлементыФормы.ДействияФормы.Кнопки.Структура.Доступность = ЗначениеЗаполнено(Организация);
		КонецЕсли;
	КонецЕсли;
	
	ОбновитьВнешнийВидФормы(Организация);
	
КонецПроцедуры

Процедура ПриПовторномОткрытии(СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(ПараметрОтборПоРегистратору) Тогда
		
		МетаданныеДокумента = ПараметрОтборПоРегистратору.Метаданные();
		Если МетаданныеДокумента.Реквизиты.Найти("Организация") <> Неопределено Тогда
			Организация = ПараметрОтборПоРегистратору.Организация;
			Заголовок = НСтр("ru='Штатное расписание организации ';uk='Штатний розклад по організації '") + Организация.Наименование;
			ЭлементыФормы.Организация.ТолькоПросмотр = Истина
		КонецЕсли;
		
		ОбновитьВнешнийВидФормы(Организация);
	
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ ДЕЙСТВИЙ КОМАНДНОЙ ПАНЕЛИ ФОРМЫ

Процедура КоманднаяПанельДействийПечать(Кнопка)
	
	ТабДокумент = Новый ТабличныйДокумент;

	НовыйОтчет = Отчеты.УтвержденноеШтатноеРасписаниеОрганизаций.Создать();
	НовыйОтчет.ДатаАктуальности = РабочаяДата;
	НовыйОтчет.Организация = Организация;
	
	ЕстьОшибки = ЛОЖЬ;
	НовыйОтчет.СформироватьОтчет(ТабДокумент,ЕстьОшибки);
	Если ЕстьОшибки тогда
		Предупреждение(НСтр("ru='При формировании отчета возникли ошибки!';uk='При формуванні звіту виникли помилки!'"));
		Возврат;
	КонецЕсли;	 
	
	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, 1, , НСтр("ru='Штатное расписание по организации ';uk='Штатний розклад по організації '") + Организация.Наименование + НСтр("ru=' по состоянию на ';uk=' станом на '") + Формат(РабочаяДата,"ДЛФ=DD"));
	
КонецПроцедуры

Процедура ДействияФормыСтруктура(Кнопка)
	
	ТабДокумент = Новый ТабличныйДокумент;

	НовыйОтчет = Отчеты.ОрганизационнаяДиаграммаОрганизации.Создать();
	НовыйОтчет.ДатаАктуальности = РабочаяДата;
	НовыйОтчет.Организация = Организация;
	НовыйОтчет.ВидОтчета   = "СтруктураШтатногоРасписания";
	
	НовыйОтчет.СформироватьОтчет(ТабДокумент,Истина);
	
	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, 1, , НСтр("ru='Структура штатного расписания по организации ';uk='Структура штатного розкладу по організації '") + Организация.Наименование + НСтр("ru=' по состоянию на ';uk=' станом на '") + Формат(РабочаяДата,"ДЛФ=DD"));

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ

// Процедура прописывает заголовок формы 
//
// Параметры:
//  Элемент - элемент формы, который отображает организацию
//  
Процедура ОрганизацияПриИзменении(Элемент)
	ОбновитьВнешнийВидФормы(Элемент.Значение);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНЫХ ПОЛЕЙ

// Процедура обеспечивает отбор по подразделению в списке 
// штатных единиц 
//
// Параметры:
//  Элемент - элемент формы, который отображает подразделение
//  
Процедура ПодразделенияПриАктивизацииСтроки(Элемент)

	Подразделение = Элемент.ТекущаяСтрока;
	Должность = Справочники.ДолжностиОрганизаций.ПустаяСсылка();

	Если Не Подразделение.Пустая() Тогда

		СтруктураОтбора = Новый Структура();
		СтруктураОтбора.Вставить("ПодразделениеОрганизации",Подразделение);

		ШтатныеЕдиницы = РегистрыСведений.ШтатноеРасписаниеОрганизаций;
		ПоследниеЗначения = ШтатныеЕдиницы.СрезПоследних(ТекущаяДата(),СтруктураОтбора);

		Если ПоследниеЗначения.Количество() > 0 Тогда
			Должность = ПоследниеЗначения[0].Должность
		КонецЕсли;
		
	КонецЕсли;

	РегистрСведенийСписок.Отбор.ПодразделениеОрганизации.Значение	= Подразделение;
	Надбавки.Отбор.ПодразделениеОрганизации.Значение				= Подразделение;
	Надбавки.Отбор.Должность.Значение								= Должность;
		
	РегистрСведенийСписок.Отбор.ПодразделениеОрганизации.Использование = Истина;
	Надбавки.Отбор.ПодразделениеОрганизации.Использование			= Истина;
	Надбавки.Отбор.Должность.Использование							= Истина;

КонецПроцедуры

// Процедура обеспечивает отбор по штатной единице в списке 
// надбавок 
//
// Параметры:
//  Элемент - элемент формы, который отображает список штатных
//				единиц
//  
Процедура ШтатныеЕдиницыПриАктивизацииСтроки(Элемент)

	Если Элемент.ТекущаяСтрока <> Неопределено Тогда
		
		Подразделение	= Элемент.ТекущаяСтрока.ПодразделениеОрганизации;
		Должность		= Элемент.ТекущаяСтрока.Должность;

		Надбавки.Отбор.ПодразделениеОрганизации.Значение		= Подразделение;
		Надбавки.Отбор.ПодразделениеОрганизации.Использование	= Истина;
		Надбавки.Отбор.Должность.Значение					= Должность;
		Надбавки.Отбор.Должность.Использование				= Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура НадбавкиПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ТипЗнч(ДанныеСтроки.ВидНадбавки) = Тип("ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций") Тогда
		
		СведенияОВидеРасчета = ПроведениеРасчетов.ПолучитьСведенияОВидеРасчетаСхемыМотивации(мСведенияОВидахРасчета, ДанныеСтроки.ВидНадбавки);
		
		ТолькоПросмотрЯчеек = Ложь;
	
		ЕстьПоказатели = Ложь;
		Для СчПоказателей = 1 По 6 Цикл
			УстановитьТолькоПросмотр = ТолькоПросмотрЯчеек;
			Если СчПоказателей <= СведенияОВидеРасчета["КоличествоПоказателей"] Тогда			
				
				Если СведенияОВидеРасчета["Показатель" + СчПоказателей + "НаименованиеВидимость"] Тогда
					ЕстьПоказатели = Истина;
					ОформлениеСтроки.Ячейки["НаименованиеПоказатель" + СчПоказателей].УстановитьТекст(СведенияОВидеРасчета["Показатель" + СчПоказателей + "Наименование"]);
					ОформлениеСтроки.Ячейки["НаименованиеПоказатель" + СчПоказателей].Видимость = Истина;
					ОформлениеСтроки.Ячейки["Показатель" + СчПоказателей].УстановитьТекст(Формат(ДанныеСтроки["Показатель" + СчПоказателей],"ЧДЦ=" + СведенияОВидеРасчета["Показатель" + СчПоказателей + "Точность"]));

				Иначе
					
					ОформлениеСтроки.Ячейки["НаименованиеПоказатель" + СчПоказателей].Видимость = Ложь;
				КонецЕсли;
				ОформлениеСтроки.Ячейки["Показатель" + СчПоказателей].Видимость = СведенияОВидеРасчета["Показатель" + СчПоказателей + "Видимость"];
				ОформлениеСтроки.Ячейки["Валюта" + СчПоказателей].Видимость = СведенияОВидеРасчета["Валюта" + СчПоказателей + "Видимость"];
				ОформлениеСтроки.Ячейки["Валюта" + СчПоказателей].ТолькоПросмотр = (НЕ СведенияОВидеРасчета["Валюта" + СчПоказателей + "Видимость"]) ИЛИ (УстановитьТолькоПросмотр);
				ОформлениеСтроки.Ячейки["Показатель" + СчПоказателей].ТолькоПросмотр = УстановитьТолькоПросмотр;
			Иначе
				ОформлениеСтроки.Ячейки["НаименованиеПоказатель" + СчПоказателей].Видимость = Ложь;
				ОформлениеСтроки.Ячейки["Показатель" + СчПоказателей].Видимость = Ложь;
				ОформлениеСтроки.Ячейки["Валюта" + СчПоказателей].Видимость = Ложь;
			КонецЕсли;
		КонецЦикла;
	
		Если не ЕстьПоказатели Тогда
			ОформлениеСтроки.Ячейки.НаименованиеПоказатель1.УстановитьТекст(НСтр("ru='<ввод при расчете>';uk='<введення при розрахунку>'"));
			ОформлениеСтроки.Ячейки.НаименованиеПоказатель1.Видимость = Истина;
			ОформлениеСтроки.Ячейки["Показатель1"].ТолькоПросмотр = Истина;
		КонецЕсли;
		
		ОформлениеСтроки.Ячейки.Показатели.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

мСведенияОВидахРасчета = Новый Соответствие;

