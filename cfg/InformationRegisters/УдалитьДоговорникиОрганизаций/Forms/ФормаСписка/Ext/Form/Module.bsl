////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// настройка порядка
	ЭлементыФормы.РегистрСведенийСписок.НастройкаПорядка.Физлицо.Доступность = Истина;
	РегистрСведенийСписок.Порядок.Установить("Физлицо");
	
КонецПроцедуры

// Процедура - обработчик события "ПриОткрытии" формы
//
Процедура ПриОткрытии()

	Если ЗначениеЗаполнено(ПараметрОтборПоРегистратору) Тогда
		
        МетаданныеДокумента = ПараметрОтборПоРегистратору.Метаданные();
		
		Если МетаданныеДокумента.Реквизиты.Найти("Организация") <> Неопределено Тогда
			
			Отбор.Организация.Значение = ПараметрОтборПоРегистратору.Организация;
 			Заголовок = "Договорники организации " + Отбор.Организация.Значение.Наименование;
			ЭлементыФормы.Организация.ТолькоПросмотр = Истина;
			
		КонецЕсли;

		Отбор.Организация.Использование = Истина;
		
	Иначе
		
		Если Отбор.Организация.Значение.Пустая() Тогда
			Отбор.Организация.Значение = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"),"ОсновнаяОрганизация");
		КонецЕсли;
		
 		Заголовок = "Договорники организации  " + Отбор.Организация.Значение;	
	    Отбор.Организация.Использование = Не Отбор.Организация.Значение.Пустая();
		
	КонецЕсли;

	СтруктураКолонок = Новый Структура();

	// Установить колонки, видимостью которых пользователь управлять не может.
	СтруктураКолонок.Вставить("ФизЛицо");

	// Установить ограничение - изменять видимоть колонок для таличной части 
	ОбработкаТабличныхЧастей.УстановитьИзменятьВидимостьКолонокТабЧасти(ЭлементыФормы.РегистрСведенийСписок.Колонки, СтруктураКолонок);
	РегистрСведенийСписок.Колонки.Добавить("ВидРасчета", Ложь);
	
КонецПроцедуры

// Процедура - обработчик события "ПриПовторномОткрытии" формы
//
Процедура ПриПовторномОткрытии(СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(ПараметрОтборПоРегистратору) Тогда
		
		Отбор.Организация.Использование = Истина;
		
		МетаданныеДокумента = ПараметрОтборПоРегистратору.Метаданные();
		
		Если МетаданныеДокумента.Реквизиты.Найти("Организация") <> Неопределено Тогда
			
			Отбор.Организация.Значение = ПараметрОтборПоРегистратору.Организация;
			Заголовок = "Договорники организации " + Отбор.Организация.Значение.Наименование;
			ЭлементыФормы.Организация.ТолькоПросмотр = Истина;
			
        	Возврат
			
		КонецЕсли;

	Иначе
		
		Отбор.Организация.Значение = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"),"ОсновнаяОрганизация");
	    Отбор.Организация.Использование = Не Отбор.Организация.Значение.Пустая();
		
	КонецЕсли;
	
	Заголовок = "Договорники организации" + Отбор.Организация.Значение.Наименование;
	ЭлементыФормы.Организация.ТолькоПросмотр = Ложь;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНДНОЙ ПАНЕЛИ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Процедура - обработчик события "ПриИзменении" поля ввода "Организация".
Процедура ОрганизацияПриИзменении(Элемент)

 	Заголовок = "Договорники организации " + Элемент.Значение.Наименование;
    Отбор.Организация.Использование = Не Элемент.Значение.Пустая();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ

Процедура РегистрСведенийСписокПередНачаломДобавления(Элемент, Отказ, Копирование)
	Документы.ДоговорНаВыполнениеРаботСФизЛицом.ПолучитьФормуНовогоДокумента().Открыть();
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 

