
Перем мВозможностьПросмотраПользователейИБ;

Перем мСоответсвиеПользователейИБ;

Процедура ОтборПользователейИБ()

	ОбработкаОбъектСписокПользователейИБ.УстановитьОтбораДанныхПользовательИБ(ЭлементыФормы.ТаблицаПользователейИБ.ОтборСтрок, ЭтаФорма, 
		ЭлементыФормы.КоманднаяПанельПользователейИБ.Кнопки.ИсторияОтборов, ЭлементыФормы.КоманднаяПанельПользователейИБ.Кнопки.ОтключитьОтбор);
		
	
КонецПроцедуры

Процедура ОтключитьОтборПользователейИБ()

	ОбработкаОбъектСписокПользователейИБ.ОтменитьОтборДанныхПоПользователямИБ(ЭлементыФормы.ТаблицаПользователейИБ.ОтборСтрок, 
		ЭлементыФормы.КоманднаяПанельПользователейИБ.Кнопки.ОтключитьОтбор);
	
КонецПроцедуры

Процедура НайтиПользователяПоПользователюИБ()

	Если ЭлементыФормы.ТаблицаПользователейИБ.ТекущиеДанные = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	ОбъектПользователя = ПолучитьТекущегоПользователяСправочника();
	
	Если ОбъектПользователя = Неопределено Тогда
		
		Предупреждение(НСтр("ru='Не найден элемент справочника с именем: ';uk=""Не знайдений елемент довідника з ім'ям: """) + ЭлементыФормы.ТаблицаПользователейИБ.ТекущиеДанные.Имя);
		Возврат;
		
	КонецЕсли;
	
	ЭлементыФормы.СправочникСписок.ТекущаяСтрока = ОбъектПользователя.Ссылка;
	
	ЭлементыФормы.ПанельОсновная.ТекущаяСтраница = ЭлементыФормы.ПанельОсновная.Страницы.СправочникПользователи;
	
КонецПроцедуры

Процедура ОбновитьПользователейИБ()

	ИмяТекПользователяИБ = "";
	
	Если ЭлементыФормы.ТаблицаПользователейИБ.ТекущиеДанные <> Неопределено Тогда
		
		ИмяТекПользователяИБ = ЭлементыФормы.ТаблицаПользователейИБ.ТекущиеДанные.Имя;	
		
	КонецЕсли;
	
	ОбновитьСписокПользователейИБ(ИмяТекПользователяИБ);

КонецПроцедуры

Процедура СправочникСписокПриАктивизацииСтроки(Элемент)
	
	ЭлементыФормы.СправочникДерево.ТекущаяСтрока = ЭлементыФормы.СправочникСписок.ТекущийРодитель;
	
КонецПроцедуры

Процедура КоманднаяПанельФормыНастройкаПрав(Кнопка)
	
	Если ЭлементыФормы.СправочникСписок.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НастройкаПравДоступа.РедактироватьПраваДоступа(ЭлементыФормы.СправочникСписок.ТекущиеДанные.Ссылка);
		
КонецПроцедуры

Процедура КоманднаяПанельФормыГруппыПользователя(Кнопка)
	
	ТекущиеДанные = ЭлементыФормы.СправочникСписок.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено или ТекущиеДанные.ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	ФормаНастройкиГруппПользователя = Справочники.Пользователи.ПолучитьФорму("ФормаНастройкиГруппПользователя");
	ФормаНастройкиГруппПользователя.Пользователь = ТекущиеДанные.Ссылка;
	ФормаНастройкиГруппПользователя.ОткрытьМодально();
	
КонецПроцедуры

//Процедура позиционирует текущую строку списка пользователей ИБ по имени пользователя
Функция СпозиционироватьсяНаПользователеИБ(Знач ИмяПользователяИБ)
	
	ТекСтрока = ОбработкаОбъектСписокПользователейИБ.ТабличнаяЧастьПользователей.Найти(ИмяПользователяИБ, "Имя");
		
	Если ТекСтрока <> Неопределено Тогда
			
		ЭлементыФормы.ТаблицаПользователейИБ.ТекущаяСтрока = ТекСтрока;
		Возврат Истина
		
	Иначе
		
		Возврат Ложь;
			
	КонецЕсли;
	
КонецФункции

//Процедура обновляет список пользователей ИБ
Процедура ОбновитьСписокПользователейИБ(Знач ИмяПользователяИБ = "")
	
	Если мВозможностьПросмотраПользователейИБ Тогда 	
		
		ОбработкаОбъектСписокПользователейИБ.ЗаполнитьСписокПользователейИБ(ЭлементыФормы.ТаблицаПользователейИБ.ОтборСтрок);
				
		СпозиционироватьсяНаПользователеИБ(ИмяПользователяИБ);
		
		мСоответсвиеПользователейИБ = ОбработкаОбъектСписокПользователейИБ.ПолучитьСоответсвиеИменИПользователейИБ();
						
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	мВозможностьПросмотраПользователейИБ = ПравоДоступа("Администрирование", Метаданные);
	
	Если НЕ мВозможностьПросмотраПользователейИБ Тогда 

		// скрываем закладку ПользователиИБ
		ЭлементыФормы.ПанельОсновная.Страницы.ПользователиИБ.Видимость   = Ложь;
		
		// удаляем лишние кнопки
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Удалить(ЭлементыФормы.КоманднаяПанельФормы.Кнопки.РазделительПользовательИБ);
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Удалить(ЭлементыФормы.КоманднаяПанельФормы.Кнопки.ПользовательИБ);
		
		// скрываем колонку "КартинкаПользователяИБ"
		ЭлементыФормы.СправочникСписок.Колонки.КартинкаПользователяИБ.Видимость         = Ложь;
		ЭлементыФормы.СправочникСписок.Колонки.КартинкаПользователяИБ.ИзменятьВидимость = Ложь;
		
		ЭлементыФормы.СправочникСписок.Колонки.РолиПредставление.Видимость         = Ложь;
		ЭлементыФормы.СправочникСписок.Колонки.РолиПредставление.ИзменятьВидимость = Ложь;
		
	КонецЕсли;
	
	мСоответсвиеПользователейИБ = ОбработкаОбъектСписокПользователейИБ.ПолучитьСоответсвиеИменИПользователейИБ();
		
	ОбновитьСписокПользователейИБ();
	
КонецПроцедуры


// обновление пользователей ИБ
Процедура КоманднаяПанельПользователейИБОбновить(Кнопка)
	
	ОбновитьПользователейИБ();
	
КонецПроцедуры

//Процедура редактирует пользователя ИБ
Функция РедактироватьПользователяИБ(ОбъектПользователя, ТекущийПользовательИБ, Знач Модифицированность = Ложь,
	Знач ПользовательДляКопированияНастроек = Неопределено)
	
	РезультатОткрытия = УправлениеПользователями.РедактироватьИлиСоздатьПользователяИБ(ОбъектПользователя, ТекущийПользовательИБ, Модифицированность,
		ПользовательДляКопированияНастроек);

	Если РезультатОткрытия = Истина Тогда
		
		ОбновитьСписокПользователейИБ(ТекущийПользовательИБ.Имя);
						
	КонецЕсли;
	
	Возврат РезультатОткрытия;
	
КонецФункции

//процедура редактирует текущего пользователя ИБ
Процедура РедактироватьТекущегоПользователяИБ()
	
	// при выборе пользователя ИБ
	ОбъектПользователя = ПолучитьТекущегоПользователяСправочника();
		
	СтарыйПользовательИБ = ПолучитьТекущегоПользователяИБВСписке(); 
	
	РедактироватьПользователяИБ(ОбъектПользователя, СтарыйПользовательИБ);
			
КонецПроцедуры

//Функция возвращает текущего пользователя ИБ в списке
Функция ПолучитьТекущегоПользователяИБВСписке()
	
	Если ЭлементыФормы.ТаблицаПользователейИБ.ТекущиеДанные = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	СтарыйПользовательИБ = УправлениеПользователями.НайтиПользователяИБ(ЭлементыФормы.ТаблицаПользователейИБ.ТекущиеДанные.Имя);
	
	Возврат СтарыйПользовательИБ;
		
КонецФункции

//Функция возвращает текущего пользователя справочника
Функция ПолучитьТекущегоПользователяСправочника()
	
	Если ЭлементыФормы.ТаблицаПользователейИБ.ТекущиеДанные = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	// при выборе пользователя ИБ
	ОбъектПользователя = Неопределено;
	СсылкаНаСправочникПользователей = Справочники.Пользователи.НайтиПоКоду(ЭлементыФормы.ТаблицаПользователейИБ.ТекущиеДанные.Имя);
	
	Если ЗначениеЗаполнено(СсылкаНаСправочникПользователей) Тогда
		
		ОбъектПользователя = СсылкаНаСправочникПользователей.ПолучитьОбъект();
		
	КонецЕсли;
	
	Возврат ОбъектПользователя;
		
КонецФункции

// Нахождение пользователя ИБ
Процедура КоманднаяПанельФормыЭлементСпискаПользователейИБ(Кнопка)
	
	Если ЭлементыФормы.СправочникСписок.ТекущиеДанные = Неопределено
		ИЛИ ЭлементыФормы.СправочникСписок.ТекущиеДанные.ЭтоГруппа Тогда
		
		Возврат;
		
	КонецЕсли;
	
	// ищем нужного пользователя ИБ в списке и переходим на него
	ИмяПользователяИБ = СокрЛП(ЭлементыФормы.СправочникСписок.ТекущиеДанные.Код);
	
	Если ИмяПользователяИБ = "НеАвторизован" Тогда
		
		Предупреждение(НСтр("ru='Для пользователя ""НеАвторизован"" недопустимо создавать пользователя ИБ.';uk='Для користувача ""НеАвторизован"" неприпустимо створювати користувача ІБ.'"));
		Возврат;
		
	КонецЕсли;
	
	ПользовательИБ = УправлениеПользователями.НайтиПользователяИБ(ИмяПользователяИБ);
        	
	// надо открыть форму элемента пользователя ИБ
	ОбъектПользователя = ЭлементыФормы.СправочникСписок.ТекущиеДанные.Ссылка.ПолучитьОбъект();
		
	РедактироватьПользователяИБ(ОбъектПользователя, ПользовательИБ);
	
КонецПроцедуры

// найти элемент справочника
Процедура КоманднаяПанельПользователейИБНайтиЭлементСправочника(Кнопка)
	
	НайтиПользователяПоПользователюИБ();
	
КонецПроцедуры

// сложный отбор
Процедура КоманднаяПанельПользователейИБОтбор(Кнопка)
	
	ОтборПользователейИБ();
	
КонецПроцедуры


// отменить отбор
Процедура КоманднаяПанельПользователейИБОтключитьОтбор(Кнопка)
	
	ОтключитьОтборПользователейИБ();
	
КонецПроцедуры

Процедура ТаблицаПользователейИБПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ОбработкаОбъектСписокПользователейИБ.ПриВыводеСтрокиПользователяИБ(Элемент, ОформлениеСтроки, ДанныеСтроки);
	
КонецПроцедуры

Процедура ОбработкаИсторииОтбора(Кнопка, ОтборСтрок, КнопкаОтменыОтбора) Экспорт
		
	ОбработкаОбъектСписокПользователейИБ.ОбработкаИсторииОтбора(Кнопка, ЭлементыФормы.ТаблицаПользователейИБ.ОтборСтрок, 
		ЭлементыФормы.КоманднаяПанельПользователейИБ.Кнопки.ОтключитьОтбор);
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ОбработкаОбъектСписокПользователейИБ.ИнициализироватьРабоуСПользователямиИБ();
	
КонецПроцедуры

// сохранение параметров для работы с пользователями ИБ
Процедура ПриЗакрытии()
	
	ОбработкаОбъектСписокПользователейИБ.СохранитьПараметрыРабоыСПользователямиИБ();
	
КонецПроцедуры

Процедура ТаблицаПользователейИБПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	РезультатОткрытияФормы = Ложь;
	
	Если Копирование Тогда
   		СтарыйПользовательИБ = ПолучитьТекущегоПользователяИБВСписке();     
	Иначе	
		СтарыйПользовательИБ = Неопределено;
	КонецЕсли;
		
	НовыйПользовательИБ = ПользователиИнформационнойБазы.СоздатьПользователя();
	РезультатОткрытияФормы = РедактироватьПользователяИБ(Неопределено, НовыйПользовательИБ, Истина, СтарыйПользовательИБ);

    Отказ = Истина;
	
КонецПроцедуры

Процедура ТаблицаПользователейИБПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
	СтарыйПользовательИБ = ПолучитьТекущегоПользователяИБВСписке();
	
	Если СтарыйПользовательИБ = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОтветПользователя = Вопрос(НСтр("ru='Удалить пользователя?';uk='Видалити користувача?'"), РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет, НСтр("ru='Пользователь ИБ';uk='Користувач ІБ'"));
	Если ОтветПользователя <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	// запись пользователя ИБ
	Попытка
		
		СтарыйПользовательИБ.Удалить();
		
	Исключение
		
		ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru='Ошибка при удалении пользователя ИБ. ';uk='Помилка при вилученні користувача ІБ. '") + ОписаниеОшибки());
		Возврат;
				
	КонецПопытки;
	
	ОбновитьСписокПользователейИБ("");
		
КонецПроцедуры

Процедура ТаблицаПользователейИБПередНачаломИзменения(Элемент, Отказ)
	
	РедактироватьТекущегоПользователяИБ();
	Отказ = Истина;
		
КонецПроцедуры

Процедура СправочникСписокПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если НЕ мВозможностьПросмотраПользователейИБ
		ИЛИ ДанныеСтроки.ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	ОбработкаОбъектСписокПользователейИБ.ПриВыводеСтрокиПользователя(Элемент, ОформлениеСтроки, ДанныеСтроки, мСоответсвиеПользователейИБ);
	
КонецПроцедуры

// обработка оповещения
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененПользовательИБ" Тогда
		ОбновитьПользователейИБ();
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельВыпадающееМенюПользователейИБНайтиЭлементСправочника(Кнопка)
	
	НайтиПользователяПоПользователюИБ();
	
КонецПроцедуры

Процедура КоманднаяПанельВыпадающееМенюПользователейИБОбновить(Кнопка)
	
	ОбновитьПользователейИБ();
	
КонецПроцедуры

Процедура КоманднаяПанельВыпадающееМенюПользователейИБОтключитьОтбор(Кнопка)
	
	ОтключитьОтборПользователейИБ();
	
КонецПроцедуры

Процедура КоманднаяПанельВыпадающееМенюПользователейИБОтбор(Кнопка)
	
	ОтборПользователейИБ();
	
КонецПроцедуры

// уснанавливаем начальную страницу
ЭлементыФормы.ПанельОсновная.ТекущаяСтраница = ЭлементыФормы.ПанельОсновная.Страницы.СправочникПользователи;

мСоответсвиеПользователейИБ = Неопределено;

