////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мОбновлятьВладельца;

// Переменная, хранящая последнее наименование должности
// Необходима для того, чтобы можно было менять реквизит Наименование при смене должности
// Если пользователь наименование не менял
Перем мПредыдущееНаименованиеДолжности;

Перем мРежимНабораПерсонала;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура устанавливает доступность реквизитов формы в зависимости от значения переключателей
//
Процедура УстановитьДоступностьРеквизитовФормы()
	
	ЭлементыФормы.Требования.ТолькоПросмотр		= Не УточнитьОписаниеВакансии;
	ЭлементыФормы.Обязанности.ТолькоПросмотр	= Не УточнитьОписаниеВакансии;
	ЭлементыФормы.Условия.ТолькоПросмотр		= Не УточнитьОписаниеВакансии;
	
КонецПроцедуры // УстановитьДоступностьРеквизитовФормы()

Процедура ОбновитьОписаниеВакансии()
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Должность",		Должность);
	
	Если мРежимНабораПерсонала = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
		Запрос.УстановитьПараметр("ПодразделениеОрганизации",	Подразделение);
		
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ВложенныйЗапрос.УточнитьОписаниеВакансии КАК УточнитьОписаниеВакансии,
		|	ВложенныйЗапрос.Требования КАК ВакансияТребования,
		|	ВложенныйЗапрос.Обязанности КАК ВакансияОбязанности,
		|	ВложенныйЗапрос.Условия КАК ВакансияУсловия
		|ИЗ
		|	(ВЫБРАТЬ
		|		Должности.Требования КАК Требования,
		|		Должности.Обязанности КАК Обязанности,
		|		Должности.Условия КАК Условия,
		|		ЛОЖЬ КАК УточнитьОписаниеВакансии,
		|		1 КАК Порядок
		|	ИЗ
		|		Справочник.Должности КАК Должности
		|	ГДЕ
		|		Должности.Ссылка = &Должность
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		СведенияОРабочихМестах.Требования,
		|		СведенияОРабочихМестах.Обязанности,
		|		СведенияОРабочихМестах.Условия,
		|		ЛОЖЬ,
		|		2
		|	ИЗ
		|		РегистрСведений.СведенияОРабочихМестах КАК СведенияОРабочихМестах
		|	ГДЕ
		|		СведенияОРабочихМестах.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
		|		И СведенияОРабочихМестах.ПодразделениеОрганизации = &ПодразделениеОрганизации
		|		И СведенияОРабочихМестах.Должность = &Должность
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Вакансии.Требования,
		|		Вакансии.Обязанности,
		|		Вакансии.Условия,
		|		ИСТИНА,
		|		3
		|	ИЗ
		|		Справочник.Вакансии КАК Вакансии
		|	ГДЕ
		|		Вакансии.Подразделение = &ПодразделениеОрганизации
		|		И Вакансии.Должность = &Должность
		|		И ((НЕ Вакансии.Требования ПОДОБНО """")
		|				ИЛИ (НЕ Вакансии.Обязанности ПОДОБНО """")
		|				ИЛИ (НЕ Вакансии.Условия ПОДОБНО """"))) КАК ВложенныйЗапрос
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВложенныйЗапрос.Порядок УБЫВ";
		
	Иначе
		Запрос.УстановитьПараметр("Подразделение",	Подразделение);
		
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ВложенныйЗапрос.УточнитьОписаниеВакансии КАК УточнитьОписаниеВакансии,
		|	ВложенныйЗапрос.Требования КАК ВакансияТребования,
		|	ВложенныйЗапрос.Обязанности КАК ВакансияОбязанности,
		|	ВложенныйЗапрос.Условия КАК ВакансияУсловия
		|ИЗ
		|	(ВЫБРАТЬ
		|		Должности.Требования КАК Требования,
		|		Должности.Обязанности КАК Обязанности,
		|		Должности.Условия КАК Условия,
		|		ЛОЖЬ КАК УточнитьОписаниеВакансии,
		|		1 КАК Порядок
		|	ИЗ
		|		Справочник.Должности КАК Должности
		|	ГДЕ
		|		Должности.Ссылка = &Должность
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		СведенияОРабочихМестах.Требования,
		|		СведенияОРабочихМестах.Обязанности,
		|		СведенияОРабочихМестах.Условия,
		|		ЛОЖЬ,
		|		2
		|	ИЗ
		|		РегистрСведений.СведенияОРабочихМестах КАК СведенияОРабочихМестах
		|	ГДЕ
		|		СведенияОРабочихМестах.Подразделение = &Подразделение
		|		И СведенияОРабочихМестах.ПодразделениеОрганизации = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|		И СведенияОРабочихМестах.Должность = &Должность
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Вакансии.Требования,
		|		Вакансии.Обязанности,
		|		Вакансии.Условия,
		|		ИСТИНА,
		|		3
		|	ИЗ
		|		Справочник.Вакансии КАК Вакансии
		|	ГДЕ
		|		Вакансии.Подразделение = &Подразделение
		|		И Вакансии.Должность = &Должность
		|		И ((НЕ Вакансии.Требования ПОДОБНО """")
		|				ИЛИ (НЕ Вакансии.Обязанности ПОДОБНО """")
		|				ИЛИ (НЕ Вакансии.Условия ПОДОБНО """"))) КАК ВложенныйЗапрос
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВложенныйЗапрос.Порядок УБЫВ";
		
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ЭтаФорма, Выборка);
	КонецЕсли;
	
КонецПроцедуры // ОбновитьОписаниеВакансии()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()
	
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.КоманднаяПанель1.Кнопки.Подменю, ЭлементыФормы.Код);	
	
	мРежимНабораПерсонала = Константы.РежимНабораПерсонала.Получить();
	Если мРежимНабораПерсонала.Пустая() Тогда
		мРежимНабораПерсонала = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоЦентрамОтветственности;
	КонецЕсли;
		
	Если ЭтоНовый() Тогда
		Если мРежимНабораПерсонала = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
			Если Организация.Пустая() Тогда
				Организация = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");
			КонецЕсли;
			Если Подразделение = Неопределено ИЛИ Подразделение.Пустая() Тогда
				Подразделение = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновноеПодразделениеОрганизации");
			КонецЕсли;
		Иначе
			Если Подразделение = Неопределено ИЛИ Подразделение.Пустая() Тогда
				Подразделение = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновноеПодразделение");
			КонецЕсли;
		КонецЕсли;
		
		Если Ответственный.Пустая() Тогда
			Ответственный	= УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнойОтветственный");
		КонецЕсли;
	КонецЕсли;
	
	Если мРежимНабораПерсонала = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
		ЭлементыФормы.ПанельРежимНабораПерсонала.ТекущаяСтраница = ЭлементыФормы.ПанельРежимНабораПерсонала.Страницы.ПоСтруктуреЮридическихЛиц;
	Иначе
		ЭлементыФормы.ПанельРежимНабораПерсонала.ТекущаяСтраница = ЭлементыФормы.ПанельРежимНабораПерсонала.Страницы.ПоЦентрамОтветственности;
	КонецЕсли;
	
	ОбновитьОписаниеВакансии();
	
	УстановитьДоступностьРеквизитовФормы();
	
	мПредыдущееНаименованиеДолжности = Строка(Должность);
	
КонецПроцедуры // ПриОткрытии()

Процедура ПередЗаписью(Отказ)
	
	Если УточнитьОписаниеВакансии Тогда
		Требования	= ВакансияТребования;
		Обязанности	= ВакансияОбязанности;
		Условия		= ВакансияУсловия;
	Иначе
		Требования	= "";
		Обязанности	= "";
		Условия		= "";
	КонецЕсли;
	
	Если Модифицированность И ВладелецФормы <> Неопределено И НЕ ЭтоНовый() Тогда
		мОбновлятьВладельца = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеЗаписи()
	
	Оповестить("ЗаписанаВакансия", , ВладелецФормы);
	
КонецПроцедуры

Процедура ПриЗакрытии()
	
	Если мОбновлятьВладельца Тогда
		ОповеститьОЗаписиНовогоОбъекта(Ссылка);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

Процедура ДействияФормыФайлы(Кнопка)

	Отказ = Ложь;

	Если ЭтоНовый() Тогда
		ТекстВопроса = НСтр("ru='Перед вводом файлов и изображений необходимо записать элемент. Записать?';uk='Перед введенням файлів і зображень необхідно записати елемент. Записати?'");
		Ответ  = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Если Ответ = КодВозвратаДиалога.ОК Тогда
			Отказ = Не ЗаписатьВФорме();
		Иначе
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;

	Если НЕ Отказ Тогда
		СтруктураДляСпискаИзображдений = Новый Структура("ОтборОбъектИспользование, ОтборОбъектЗначение, ДоступностьОтбораОбъекта, ВидимостьКолонкиОбъекта", Истина, Ссылка, Ложь, Ложь);
		СтруктураДляСпискаДополнительныхФайлов = Новый Структура("ОтборОбъектИспользование, ОтборОбъектЗначение, ДоступностьОтбораОбъекта, ВидимостьКолонкиОбъекта", Истина, Ссылка, Ложь, Ложь);
		ОбязательныеОтборы = Новый Структура("Объект", Ссылка);
		
		РаботаСФайлами.ОткрытьФормуСпискаФайловИИзображений(СтруктураДляСпискаИзображдений, СтруктураДляСпискаДополнительныхФайлов, ОбязательныеОтборы, ЭтаФорма);
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура ДолжностьПриИзменении(Элемент)
	
	Если ПустаяСтрока(Наименование) ИЛИ (мПредыдущееНаименованиеДолжности = Наименование) Тогда
		Наименование = Элемент.Значение;
	КонецЕсли;
	
	ОбновитьОписаниеВакансии();
	
	мПредыдущееНаименованиеДолжности = Строка(Должность);
	
КонецПроцедуры

Процедура ИспользоватьОписаниеВакансииИзДолжностиПриИзменении(Элемент)
	
	УстановитьДоступностьРеквизитовФормы();
	
КонецПроцедуры

Процедура ПодразделениеОчистка(Элемент, СтандартнаяОбработка)
	
	Если мРежимНабораПерсонала = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
		Если ТипЗнч(Подразделение) <> Тип("СправочникСсылка.ПодразделенияОрганизаций") Тогда
			Подразделение = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
		КонецЕсли;
	Иначе
		Если ТипЗнч(Подразделение) <> Тип("СправочникСсылка.Подразделения") Тогда
			Подразделение = Справочники.Подразделения.ПустаяСсылка();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПодразделениеОрганизацииПриИзменении(Элемент)
	
	Если Не Подразделение.Пустая() И Организация.Пустая() Тогда
		Организация = Подразделение.Владелец;
	КонецЕсли;
	
КонецПроцедуры

Процедура ДействияФормыРедактироватьКод(Кнопка)
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.КоманднаяПанель1.Кнопки.Подменю, ЭлементыФормы.Код);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

мОбновлятьВладельца = Ложь;
