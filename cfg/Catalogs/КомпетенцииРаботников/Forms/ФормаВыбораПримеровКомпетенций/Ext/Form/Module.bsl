////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Обработчик события ПриОткрытии формы.
//
Процедура ПриОткрытии()

	Макет = Справочники.КомпетенцииРаботников.ПолучитьМакет("МакетПримеровКомпетенций");

	КодЯзыка = Локализация.КодЯзыкаИнформационнойБазы();
	Макет.КодЯзыкаМакета = КодЯзыка;

	Макет.Параметры.Расшифровка = Истина; // чтобы работала расшифровка

	ТабличныйДокумент = ЭлементыФормы.ПолеТабличногоДокумента;
	
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.Вывести(Макет);

	ТабличныйДокумент.ФиксацияСверху      = 3;

	ТабличныйДокумент.ОтображатьЗаголовки = Ложь;
	ТабличныйДокумент.ОтображатьСетку     = Ложь;
	ТабличныйДокумент.ТолькоПросмотр      = Истина;

КонецПроцедуры

// Обработчик события ОбработкаРасшифровки элемента ПолеТабличногоДокумента.
//
Процедура ПолеТабличногоДокументаОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

	// Получение значений полей выбранной строки.
	ТабличныйДокумент = ЭлементыФормы.ПолеТабличногоДокумента;
	ТекущаяОбласть    = ТабличныйДокумент.ТекущаяОбласть;

	ОбластьОписание     = ТабличныйДокумент.Области.Описание;
	ОбластьНаименование = ТабличныйДокумент.Области.Наименование;
	
	Наименование = ТабличныйДокумент.Область(ТекущаяОбласть.Верх, ОбластьНаименование.Лево, ТекущаяОбласть.Низ, ОбластьНаименование.Право).Текст;
	Описание     = ТабличныйДокумент.Область(ТекущаяОбласть.Верх, ОбластьОписание.    Лево, ТекущаяОбласть.Низ, ОбластьОписание.    Право).Текст;
		
	// Проверка наличия выбранного элемента.
	Ссылка = Справочники.КомпетенцииРаботников.НайтиПоНаименованию(Наименование);
	
	Если НЕ Ссылка.Пустая() Тогда
		
		Вопрос = НСтр("ru='В справочнике ""Компетенции работников"" уже существует элемент с наименованием ""';uk='У довіднику ""Компетенції працівників"" вже існує елемент з найменуванням ""'") + Наименование + НСтр("ru='""! Открыть существующий?';uk='""! Відкрити існуючий?'");
		Ответ  = Вопрос(Вопрос, РежимДиалогаВопрос.ДаНетОтмена, , КодВозвратаДиалога.Отмена, );
		
		Если      Ответ = КодВозвратаДиалога.Да Тогда
			
			Ссылка.ПолучитьФорму( , ВладелецФормы, ).Открыть();
			Возврат;

		ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
			Возврат;
		КонецЕсли;
		
	КонецЕсли;

	// Создание нового элемента справочника.

	ФормаНовогоЭлемента = Справочники.КомпетенцииРаботников.ПолучитьФормуНовогоЭлемента(, ВладелецФормы, );
	ФормаНовогоЭлемента.Наименование        = Наименование;
	ФормаНовогоЭлемента.ОписаниеКомпетенции = Описание;
	ФормаНовогоЭлемента.ШкалаОценок			= Справочники.ШкалыОценокКомпетенций.Пятибальная;
	
	НаборОценок = Справочники.СоставОценочныхШкалКомпетенций.Выбрать(,Справочники.ШкалыОценокКомпетенций.Пятибальная,,"ПриоритетОценки Убыв");
	
	Пока НаборОценок.Следующий() Цикл
		СтрокаТаблицы = ФормаНовогоЭлемента.ОписаниеОценок.Добавить();
		СтрокаТаблицы.Оценка 		  = НаборОценок.Ссылка;
		СтрокаТаблицы.ПриоритетОценки = НаборОценок.Ссылка.ПриоритетОценки;
	КонецЦикла;

	ФормаНовогоЭлемента.Открыть();

КонецПроцедуры
