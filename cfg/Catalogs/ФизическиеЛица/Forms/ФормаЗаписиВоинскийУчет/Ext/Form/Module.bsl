////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()
	
	Если НаборЗаписей.Количество() = 0 тогда
		НаборЗаписей.Добавить();
		ЗаписьИзНабора 			= НаборЗаписей[0];
		ЗаписьИзНабора.Период  	= ПериодПриОткрытии;
	КонецЕсли;
	ЗаписьИзНабора 					= НаборЗаписей[0];
	Военкомат						= ЗаписьИзНабора.Военкомат;
	ВоенкоматФМП					= ЗаписьИзНабора.ВоенкоматФМП;
	ВУС								= ЗаписьИзНабора.ВУС;
	Годность						= ЗаписьИзНабора.Годность;
	РеквизитыВоенногоБилета			= ЗаписьИзНабора.РеквизитыВоенногоБилета;
	ЗабронированОрганизацией		= ЗаписьИзНабора.ЗабронированОрганизацией;
	Звание							= ЗаписьИзНабора.Звание;
	НаличиеМобпредписания			= ЗаписьИзНабора.НаличиеМобпредписания;
	ОтношениеКВоинскойОбязанности	= ЗаписьИзНабора.ОтношениеКВоинскойОбязанности;
	ОтношениеКВоинскомуУчету		= ЗаписьИзНабора.ОтношениеКВоинскомуУчету;
	ОснованиеНегодности				= ЗаписьИзНабора.ОснованиеНегодности;
	СпецУчет						= ЗаписьИзНабора.СпецУчет;
	Группа							= ЗаписьИзНабора.Группа;
	ГруппаДо2016					= ЗаписьИзНабора.ГруппаДо2016;
	Категория						= ЗаписьИзНабора.Категория;
	Профиль							= ЗаписьИзНабора.Профиль;
	Период 							= ?(НЕ ЗначениеЗаполнено(ЗаписьИзНабора.Период), '19000101', ЗаписьИзНабора.Период);
	ФизЛицо							= ЗаписьИзНабора.Физлицо;
	ДатаИНомерПриказаОПризыве       = ЗаписьИзНабора.ДатаИНомерПриказаОПризыве;
	СрокКонтракта					= ЗаписьИзНабора.СрокКонтракта;
	Если ФизЛицо.Пустая() тогда
		ИндКнопки = ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Индекс(ЭлементыФормы.ОсновныеДействияФормы.Кнопки.КнопкаИстория);
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Удалить(ИндКнопки);
		
		ИндКнопки = ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Индекс(ЭлементыФормы.ОсновныеДействияФормы.Кнопки.РазделительИстория);
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Удалить(ИндКнопки);
	КонецЕсли;
	УстановитьДоступность();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура ПодтвердитьИзменения(Кнопка)
	
	ЗаписьИзНабора 			= НаборЗаписей[0];
	// Если что-то поменяли тогда запишем 
	Если ВоенкоматПриОткрытии <> Военкомат ИЛИ
		ВоенкоматФМППриОткрытии <> ВоенкоматФМП ИЛИ
		ВУСПриОткрытии <> ВУС ИЛИ
		ГодностьПриОткрытии <> Годность ИЛИ
		ЗабронированОрганизациейПриОткрытии <> ЗабронированОрганизацией ИЛИ
		ЗваниеПриОткрытии <> Звание ИЛИ
		НаличиеМобпредписанияПриОткрытии <> НаличиеМобпредписания ИЛИ
		ОтношениеКВоинскойОбязанностиПриОткрытии <> ОтношениеКВоинскойОбязанности ИЛИ
		Период <> ПериодПриОткрытии ИЛИ
		РеквизитыВоенногоБилета <> РеквизитыВоенногоБилетаПриОткрытии ИЛИ
		ОснованиеНегодности <> ОснованиеНегодностиПриОткрытии ИЛИ
		СпецУчет <> СпецУчетПриОткрытии ИЛИ
		Группа <> ГруппаПриОткрытии ИЛИ
		ГруппаДо2016 <> ГруппаДо2016ПриОткрытии ИЛИ
		Категория <> КатегорияПриОткрытии ИЛИ
		Профиль <> ПрофильПриОткрытии ИЛИ
		ОтношениеКВоинскомуУчетуПриОткрытии <> ОтношениеКВоинскомуУчету ИЛИ
		ДатаИНомерПриказаОПризывеПриОткрытии <> ДатаИНомерПриказаОПризыве ИЛИ
		СрокКонтрактаПриОткрытии <> СрокКонтракта Тогда
		
		ЗаписьИзНабора.Период  						 = Период;
		ЗаписьИзНабора.Военкомат					 = Военкомат;
		ЗаписьИзНабора.ВоенкоматФМП					 = ВоенкоматФМП;
		ЗаписьИзНабора.ВУС							 = ВУС;
		ЗаписьИзНабора.РеквизитыВоенногоБилета		 = РеквизитыВоенногоБилета;
		ЗаписьИзНабора.Годность						 = Годность;
		ЗаписьИзНабора.ЗабронированОрганизацией		 = ЗабронированОрганизацией;
		ЗаписьИзНабора.Звание 						 = Звание;
		ЗаписьИзНабора.НаличиеМобпредписания		 = НаличиеМобпредписания;
		ЗаписьИзНабора.ОтношениеКВоинскойОбязанности = ОтношениеКВоинскойОбязанности;
		ЗаписьИзНабора.ОтношениеКВоинскомуУчету		 = ОтношениеКВоинскомуУчету;
		ЗаписьИзНабора.ОснованиеНегодности			 = ОснованиеНегодности;
		ЗаписьИзНабора.СпецУчет		 				 = СпецУчет;
		ЗаписьИзНабора.Группа						 = Группа;
		ЗаписьИзНабора.ГруппаДО2016					 = ГруппаДо2016;
		ЗаписьИзНабора.Категория		 			 = Категория;
		ЗаписьИзНабора.Профиль		 				 = Профиль;
		ЗаписьИзНабора.ДатаИНомерПриказаОПризыве	 = ДатаИНомерПриказаОПризыве;
		ЗаписьИзНабора.СрокКонтракта                 = СрокКонтракта;
	КонецЕсли;
	
	Закрыть();
	Оповестить("ОбновитьФорму", Новый Структура("ИмяЭлемента","ВоинскийУчет"), Справочники.ФизическиеЛица.ПустаяСсылка());
	
КонецПроцедуры

Процедура КнопкаИсторияНажатие(Элемент)
	
	ФормаРегистра = РегистрыСведений.ВоинскийУчет.ПолучитьФормуСписка();
	ФормаРегистра.РегистрСведенийСписок.Отбор.ФизЛицо.Значение 					 = ФизЛицо;
	ФормаРегистра.РегистрСведенийСписок.Отбор.ФизЛицо.ВидСравнения 				 = ВидСравнения.Равно;
	ФормаРегистра.РегистрСведенийСписок.Отбор.ФизЛицо.Использование 			 = Истина;
	ФормаРегистра.ЭлементыФормы.РегистрСведенийСписок.НачальноеОтображениеСписка = НачальноеОтображениеСписка.Конец;
	
	ФормаРегистра.Открыть();
	
КонецПроцедуры

Процедура ОтношениеКВоинскомуУчетуПриИзменении(Элемент)
	
	УстановитьДоступность();
	
КонецПроцедуры

Процедура УстановитьДоступность()

	Состав = Звание.Состав; 
	
    Офицер		= (Состав = Перечисления.СоставыВоеннослужащих.МладшиеОфицеры
					или Состав = Перечисления.СоставыВоеннослужащих.СтаршиеОфицеры
					или Состав = Перечисления.СоставыВоеннослужащих.ВысшиеОфицеры);
    Призывник	= (ОтношениеКВоинскойОбязанности = Перечисления.ОтношениеКВоинскойОбязанности.Призывник);
	Состоит 	= не (ОтношениеКВоинскойОбязанности = Перечисления.ОтношениеКВоинскойОбязанности.НеВоеннообязанный
					или ОтношениеКВоинскомуУчету = Перечисления.ОтношениеКВоинскомуУчету.НеСостоит);
	Снят	 	= (ОтношениеКВоинскомуУчету = Перечисления.ОтношениеКВоинскомуУчету.СнятПоВозрасту
					или ОтношениеКВоинскомуУчету = Перечисления.ОтношениеКВоинскомуУчету.СнятПоСостояниюЗдоровья);
    Годен		= Годность = Перечисления.ГодностьКВоеннойСлужбе.Годен;

	ЭлементыФормы.Годность.Доступность
		= Состоит и (не Офицер) и (не Призывник);
	ЭлементыФормы.Звание.Доступность
		= Состоит и (не Призывник);
	ЭлементыФормы.ЗабронированОрганизацией.Доступность
		= Состоит и (не Призывник);
	ЭлементыФормы.НаличиеМобпредписания.Доступность
		= Состоит и (не Призывник);
	ЭлементыФормы.Военкомат.Доступность
		= Состоит;
	ЭлементыФормы.ВоенкоматФМП.Доступность
		= Состоит;
	ЭлементыФормы.ОснованиеНегодности.Доступность
		= Состоит и (((не Офицер) и (не Годен)) или (Офицер и Снят))  и (не Призывник);
	ЭлементыФормы.ВУС.Доступность
		= Состоит и (не Призывник);
	ЭлементыФормы.СпецУчет.Доступность
		= Состоит;
	ЭлементыФормы.Группа.Доступность
		= Состоит и (не Офицер) и (не Призывник);
	ЭлементыФормы.ГруппаДо2016.Доступность
		= Состоит и (не Офицер) и (не Призывник);
	ЭлементыФормы.Категория.Доступность
		= Состоит и (не Призывник);
	ЭлементыФормы.Профиль.Доступность
		= Состоит и Офицер и (не Призывник);
	ЭлементыФормы.ДатаИНомерПриказаОПризыве.Доступность = (ОтношениеКВоинскомуУчету = Перечисления.ОтношениеКВоинскомуУчету.ПризванНаВоинскуюСлужбу
		ИЛИ ОтношениеКВоинскомуУчету = Перечисления.ОтношениеКВоинскомуУчету.СлужбаПоКонтракту);
	ЭлементыФормы.СрокКонтракта.Доступность = (ОтношениеКВоинскомуУчету = Перечисления.ОтношениеКВоинскомуУчету.СлужбаПоКонтракту);
	
КонецПроцедуры // УстановитьДоступность()

Процедура ОтношениеКВоинскойОбязанностиПриИзменении(Элемент)
	УстановитьДоступность();
КонецПроцедуры

Процедура ГодностьПриИзменении(Элемент)
	УстановитьДоступность();
КонецПроцедуры

Процедура ЗваниеПриИзменении(Элемент)
	УстановитьДоступность();
КонецПроцедуры
