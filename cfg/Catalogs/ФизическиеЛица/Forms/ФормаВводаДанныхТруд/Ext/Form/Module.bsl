////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ПрочитатьДанные()
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("РабочаяДата", ОбщегоНазначения.ПолучитьРабочуюДату());
	
	Запрос.Текст = 

	"ВЫБРАТЬ
	|	ФизическиеЛица.Ссылка,
	|	СведенияОбИнвалидностиФизлицСрезПоследних.Период,
	|	СведенияОбИнвалидностиФизлицСрезПоследних.Инвалидность,
	|	СведенияОбИнвалидностиФизлицСрезПоследних.УдостоверениеСерия,
	|	СведенияОбИнвалидностиФизлицСрезПоследних.УдостоверениеНомер,
	|	СведенияОбИнвалидностиФизлицСрезПоследних.УдостоверениеДатаВыдачи,
	|	СведенияОбИнвалидностиФизлицСрезПоследних.Группа,
	|	СведенияОбИнвалидностиФизлицСрезПоследних.Физлицо
	|ИЗ
	|	РегистрСведений.СведенияОбИнвалидностиФизлиц.СрезПоследних(&РабочаяДата, ФизЛицо = &Ссылка) КАК СведенияОбИнвалидностиФизлицСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ПО СведенияОбИнвалидностиФизлицСрезПоследних.Физлицо = ФизическиеЛица.Ссылка"	;

    Инвалидность = НСтр("ru='Ввести данные об инвалидности';uk='Ввести дані про інвалідність'");
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
	
		Если Выборка.ФизЛицо <> null Тогда
			Если Выборка.Инвалидность Тогда
				Инвалидность = 	НСтр("ru='инвалид: ';uk='інвалід: '") + Выборка.Группа + НСтр("ru=' группа';uk=' група'") 
	                        + НСтр("ru=', удостоверение серия: ';uk=', посвідчення серія: '") + Выборка.УдостоверениеСерия + НСтр("ru=', номер: ';uk=', номер: '") + Выборка.УдостоверениеНомер                                                
							+ НСтр("ru=', выдано: ';uk=', видано: '")  + Формат(Выборка.УдостоверениеДатаВыдачи,"ДФ='дд ММММ гггг';ДП='...'") + НСтр("ru=' года ';uk=' року '");
			Иначе
				Инвалидность = НСтр("ru='Не является инвалидом';uk='Не є інвалідом'");
			КонецЕсли;					
		КонецЕсли;
	
	КонецЕсли; 
	
	Запрос.Текст = 

	"ВЫБРАТЬ
	|	ФизическиеЛица.Ссылка,
	|	СведенияОПенсионерахСрезПоследних.Период,
	|	СведенияОПенсионерахСрезПоследних.Пенсионер,
	|	СведенияОПенсионерахСрезПоследних.СвидетельствоСерия,
	|	СведенияОПенсионерахСрезПоследних.СвидетельствоНомер,
	|	СведенияОПенсионерахСрезПоследних.СвидетельствоДатаВыдачи,
	|	СведенияОПенсионерахСрезПоследних.Физлицо
	|ИЗ
	|	РегистрСведений.СведенияОПенсионерах.СрезПоследних(&РабочаяДата, ФизЛицо = &Ссылка) КАК СведенияОПенсионерахСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ПО СведенияОПенсионерахСрезПоследних.Физлицо = ФизическиеЛица.Ссылка"	;

    Пенсионер = НСтр("ru='Ввести данные о пенсионере';uk='Ввести дані про пенсіонера'");
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
	
		Если Выборка.ФизЛицо <> null Тогда
			Если Выборка.Пенсионер Тогда
				Пенсионер = 	НСтр("ru='пенсионер:';uk='пенсіонер:'") 
	                        + НСтр("ru=' свидетельство серия: ';uk=' свідоцтво серія: '") + Выборка.СвидетельствоСерия + НСтр("ru=', номер: ';uk=', номер: '") + Выборка.СвидетельствоНомер                                                
							+ НСтр("ru=', выдано: ';uk=', видано: '")  + Формат(Выборка.СвидетельствоДатаВыдачи,"ДФ='дд ММММ гггг';ДП='...'") + НСтр("ru=' года ';uk=' року '");
			Иначе
				Пенсионер = НСтр("ru='Не является пенсионером';uk='Не є пенсіонером'");
			КонецЕсли;					
		КонецЕсли;
	
	КонецЕсли; 
	Запрос.Текст = 

	"ВЫБРАТЬ
	|	ФизическиеЛица.Ссылка,
	|	СведенияОЛицахСДополнительнымиГарантиямиСрезПоследних.Период,
	|	СведенияОЛицахСДополнительнымиГарантиямиСрезПоследних.НаличиеГарантий,
	|	СведенияОЛицахСДополнительнымиГарантиямиСрезПоследних.ВидГарантии,
	|	СведенияОЛицахСДополнительнымиГарантиямиСрезПоследних.Физлицо
	|ИЗ
	|	РегистрСведений.СведенияОЛицахСДополнительнымиГарантиями.СрезПоследних(&РабочаяДата, ФизЛицо = &Ссылка) КАК СведенияОЛицахСДополнительнымиГарантиямиСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ПО СведенияОЛицахСДополнительнымиГарантиямиСрезПоследних.Физлицо = ФизическиеЛица.Ссылка"	;

    НаличиеГарантий = НСтр("ru='Ввести данные о наличии гарантий';uk='Ввести дані про наявність гарантій'");
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
	
		Если Выборка.ФизЛицо <> null Тогда
			Если Выборка.НаличиеГарантий Тогда
				НаличиеГарантий = 	НСтр("ru='Имеет дополнительную гарантию: ';uk='Має додаткову гарантію: '") + Выборка.ВидГарантии;
			Иначе
				НаличиеГарантий = НСтр("ru='Не имеет дополнительных гарантий';uk='Не має додаткових гарантій'");
			КонецЕсли;					
		КонецЕсли;
	
	КонецЕсли; 


КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()
	
	ПрочитатьДанные();
	Заголовок = НСтр("ru='Трудовая деятельность';uk='Трудова діяльність'");
	
	УстановитьРежимРедактированияСтажа();
	
КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновитьФорму" и (Источник = Ссылка или (ТипЗнч(Источник) = Тип("СправочникСсылка.ФизическиеЛица") и Источник.Пустая())) Тогда
		ИмяОбновляемогоЭлемента = Параметр.ИмяЭлемента;

		Если ИмяОбновляемогоЭлемента = "Инвалидность" Тогда
			
			ПрочитатьДанные();
			Если Инвалидность = НСтр("ru='инвалид:  группа, удостоверение серия: , номер: , выдано:  года';uk='інвалід: група, посвідчення серія: , номер: , видано: року'") Тогда
				Инвалидность = НСтр("ru='Ввести данные об инвалидности';uk='Ввести дані про інвалідність'");
			КонецЕсли;
			
		ИначеЕсли ИмяОбновляемогоЭлемента = "Пенсионер" Тогда
			
			ПрочитатьДанные();
			Если Пенсионер = НСтр("ru='пенсионер: свидетельство серия: , номер: , выдано:  года';uk='пенсіонер: посвідчення серія: , номер: , видано:  року'") Тогда
				Пенсионер = НСтр("ru='Ввести данные о пенсионере';uk='Ввести дані про пенсіонера'");
			КонецЕсли;	
			
		ИначеЕсли ИмяОбновляемогоЭлемента = "Стаж" Тогда
			УстановитьРежимРедактированияСтажа();
		ИначеЕсли ИмяОбновляемогоЭлемента = "НаличиеГарантий" Тогда
			ПрочитатьДанные();
			Если НаличиеГарантий = НСтр("ru='вид гарантии: ';uk='вид гарантії: '") Тогда
				НаличиеГарантий = НСтр("ru='Ввести данные о дополнительных гарантиях';uk='Ввести дані про додаткові гарантії'");
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура ИнвалидностьНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ФормаРегистра = РегистрыСведений.СведенияОбИнвалидностиФизлиц.ПолучитьФорму("ФормаЗаписиДополнительная", ЭтаФорма);
	ФормаРегистра.Физлицо  = Ссылка;
	
	ТаблицаРегистра = РегистрыСведений.СведенияОбИнвалидностиФизлиц.СрезПоследних(ОбщегоНазначения.ПолучитьРабочуюДату(), Новый Структура("ФизЛицо",Ссылка));
	
	Если ТаблицаРегистра.Количество() > 0 Тогда
		
		ФормаРегистра.Период  			  		= ТаблицаРегистра[0].Период;
		ФормаРегистра.Группа			  		= ТаблицаРегистра[0].Группа;
		ФормаРегистра.УдостоверениеДатаВыдачи   = ТаблицаРегистра[0].УдостоверениеДатаВыдачи;
		ФормаРегистра.Инвалидность		  		= ТаблицаРегистра[0].Инвалидность;
		ФормаРегистра.УдостоверениеНомер	    = ТаблицаРегистра[0].УдостоверениеНомер;
		ФормаРегистра.УдостоверениеСерия        = ТаблицаРегистра[0].УдостоверениеСерия;
		ФормаРегистра.Комментарий				= ТаблицаРегистра[0].Комментарий;
		
	Иначе
		ФормаРегистра.Период = '19000101';
	КонецЕсли;
	
	ФормаРегистра.Открыть();
		
КонецПроцедуры

Процедура ПенсионерНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ФормаРегистра = РегистрыСведений.СведенияОПенсионерах.ПолучитьФорму("ФормаЗаписиДополнительная", ЭтаФорма);
	ФормаРегистра.Физлицо  = Ссылка;
	
	ТаблицаРегистра = РегистрыСведений.СведенияОПенсионерах.СрезПоследних(ОбщегоНазначения.ПолучитьРабочуюДату(), Новый Структура("ФизЛицо",Ссылка));
	
	Если ТаблицаРегистра.Количество() > 0 Тогда
		
		ФормаРегистра.Период  			  		= ТаблицаРегистра[0].Период;
		ФормаРегистра.СвидетельствоДатаВыдачи   = ТаблицаРегистра[0].СвидетельствоДатаВыдачи;
		ФормаРегистра.Пенсионер			  		= ТаблицаРегистра[0].Пенсионер;
		ФормаРегистра.СвидетельствоНомер	    = ТаблицаРегистра[0].СвидетельствоНомер;
		ФормаРегистра.СвидетельствоСерия        = ТаблицаРегистра[0].СвидетельствоСерия;
		ФормаРегистра.Комментарий				= ТаблицаРегистра[0].Комментарий;
		
	Иначе
		ФормаРегистра.Период = '19000101';
	КонецЕсли;
	
	ФормаРегистра.Открыть();
	
КонецПроцедуры

Процедура НаличиеГарантийНачалоВыбора(Элемент, СтандартнаяОбработка) 
	
	ФормаРегистра = РегистрыСведений.СведенияОЛицахСДополнительнымиГарантиями.ПолучитьФорму("ФормаЗаписиДополнительная", ЭтаФорма);
	ФормаРегистра.Физлицо  = Ссылка;
	
	ТаблицаРегистра = РегистрыСведений.СведенияОЛицахСДополнительнымиГарантиями.СрезПоследних(ОбщегоНазначения.ПолучитьРабочуюДату(), Новый Структура("ФизЛицо",Ссылка));
	
	Если ТаблицаРегистра.Количество() > 0 Тогда
		
		ФормаРегистра.Период  			  		= ТаблицаРегистра[0].Период;
		ФормаРегистра.НаличиеГарантий	  		= ТаблицаРегистра[0].НаличиеГарантий;
		ФормаРегистра.ВидГарантии		  		= ТаблицаРегистра[0].ВидГарантии;
		ФормаРегистра.Комментарий				= ТаблицаРегистра[0].Комментарий;
		
	Иначе
		ФормаРегистра.Период = '19000101';
	КонецЕсли;
	
	ФормаРегистра.Открыть();
КонецПроцедуры

Процедура ЗаполнитьНачальныеСведенияОСтажеНажатие(Элемент) 
	
	Если  		ЭлементыФормы.ЗаполнитьНачальныеСведенияОСтаже.Заголовок = НСтр("ru='Заполнить начальные сведения о стаже';uk='Заповнити початкові відомості про стаж'") Тогда
			
		Запись = РегистрыСведений.НачальныеСведенияОСтажеРаботниковОрганизации.СоздатьМенеджерЗаписи();
		Запись.ФизЛицо = Ссылка;
		Запись.РежимНастройкиЗаписи = Истина;
		Форма = Запись.ПолучитьФорму("ФормаЗаписи", ЭтаФорма);
		Записать();
		
		Форма.ПересчитатьСтаж(Истина);

		Форма.Открыть();
	Иначе
		Форма = РегистрыСведений.НачальныеСведенияОСтажеРаботниковОрганизации.ПолучитьФормуСписка();
		Форма.Отбор.Физлицо.Значение = Ссылка;
		Форма.Отбор.ФизЛицо.Использование = Истина;
		Форма.Отбор.ФизЛицо.ВидСравнения = ВидСравнения.Равно;
		Форма.Открыть();
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ТрудоваяДеятельностьПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	ДатаНачала = Элемент.ТекущаяСтрока.ДатаНачала;
	ДатаОкончания = Элемент.ТекущаяСтрока.ДатаОкончания;
	Если ДатаОкончания  < ДатаНачала Тогда
		ОбщегоНазначения.СообщитьОбОшибке (НСтр("ru='Дата окончания должа быть больше даты начала';uk='Дата закінчення повинна бути більше дати початку'"),,,СтатусСообщения.Важное);
		Отказ = ИСтина;
	КонецЕсли;
	
	
	//Проверка на пересеченность дат;
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("тзТрудоваяДеятельность", ТрудоваяДеятельность);
	Запрос.УстановитьПараметр("ТекущаяДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ТекущаяДатаОкончания", ДатаОкончания);
	
	Запрос.УстановитьПараметр("начала", "начала");
	Запрос.УстановитьПараметр("окончания", "окончания");
	Запрос.УстановитьПараметр("пусто", "");
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

	Запрос.Текст = "
	|ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ ВТТрудоваяДеятельность
	|ИЗ
	|	&тзТрудоваяДеятельность КАК ТрудоваяДеятельность
	|ГДЕ
	|	(ТрудоваяДеятельность.ДатаНачала < &ТекущаяДатаНачала
	| 	И &ТекущаяДатаНачала < ТрудоваяДеятельность.ДатаОкончания)
	|	ИЛИ
	|	(ТрудоваяДеятельность.ДатаНачала < &ТекущаяДатаОкончания
	| 	И &ТекущаяДатаОкончания < ТрудоваяДеятельность.ДатаОкончания)
	|";
	
	Запрос.Выполнить();
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТрудоваяДеятельность.НомерСтроки,
	|	ТрудоваяДеятельность.ДатаНачала,
	|	ТрудоваяДеятельность.ДатаОкончания		
	|ИЗ
	|	ВТТрудоваяДеятельность КАК ТрудоваяДеятельность";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл 
		ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru='Пересечение дат. В строчке № ';uk='Перетин дат. У рядку № '")  +Выборка.НомерСтроки + НСтр("ru=' находятся даты, в интервал между которыми попадает введенный промежуток  ';uk=' знаходяться дати, в інтервал між якими потрапляє введений проміжок '"),, , СтатусСообщения.Важное );
		Отказ= Истина;
	КонецЦикла
	 	
	//ФизЛицо.ПолучитьФорму("ФормаВводаДанныхТруд", ЭтаФорма).Открыть();
КонецПроцедуры

//В данной процедуре устанавливается режим редактирования стажа
//если у работника нет записей о начальном стаже то выдается запись с возможностью ее заполнения
//если же есть запись то выдается список, со всеми записями о стаже
Процедура УстановитьРежимРедактированияСтажа()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Физлицо",Ссылка);
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ВидСтажа
	|ИЗ
	|	РегистрСведений.НачальныеСведенияОСтажеРаботниковОрганизации КАК НачальныеСведенияОСтаже	
	|ГДЕ
	|	НачальныеСведенияОСтаже.ФизЛицо = &ФизЛицо
	|";
	
	Если Запрос.Выполнить().Пустой() Тогда 
		ЭлементыФормы.ЗаполнитьНачальныеСведенияОСтаже.Заголовок = НСтр("ru='Заполнить начальные сведения о стаже';uk='Заповнити початкові відомості про стаж'")
	Иначе
		ЭлементыФормы.ЗаполнитьНачальныеСведенияОСтаже.Заголовок = НСтр("ru='Редактировать информацию о стаже';uk='Редагувати інформацію про стаж'")
	КонецЕсли;
КонецПроцедуры








