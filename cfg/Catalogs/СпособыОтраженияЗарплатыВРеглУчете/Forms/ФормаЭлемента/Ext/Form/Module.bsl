////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мСтароеНаименование; //запоминаем наименование способа которое было при открытии формы
Перем мСведенияОСчетах;  // для получения сведений о счетах на время работы формы
Перем мСведенияОСтатьяхЗатрат;  // для получения сведений о статьях затрат на время работы формы
Перем мСпискВыбораВНД;
Перем ЭтоВзносы;
Перем ЭтоВзносыФОТ;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Устанавливает типы субконто при изменении счета
//
// Параметры
//  Счет  – <ПланыСчетов. .Ссылка> – Счет изменившийся
//  Суфикс- <Строка> – Суфикс реквизитов
//
Процедура ПриИзмененииСчета(Счет, ДтКт)

	ВидыСубконтоСчета = Счет.ВидыСубконто;

	Для Ном = 1 по 3 Цикл
		Если Ном <= ВидыСубконтоСчета.Количество() и ЗначениеЗаполнено(Счет) и
			ВидыСубконтоСчета[Ном-1].ВидСубконто.ТипЗначения.СодержитТип(ТипЗнч(ЭтотОбъект["Субконто"+ДтКт+Ном])) Тогда
			// Без изменений
		ИначеЕсли Ном <= ВидыСубконтоСчета.Количество() тогда
			ЭтотОбъект["Субконто"+ДтКт+Ном] = Новый(ВидыСубконтоСчета[Ном-1].ВидСубконто.ТипЗначения.Типы()[0]);
		ИначеЕсли  ЭтотОбъект["Субконто"+ДтКт+Ном] <> Неопределено Тогда
			ЭтотОбъект["Субконто"+ДтКт+Ном] = Неопределено;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры // ПриИзмененииСчета()

Процедура УстановитьВидимостьСубконто(Счет, ДтКт)
	
	ВидыСубконтоСчета = Счет.ВидыСубконто;
	КоличествоСубконто = ВидыСубконтоСчета.Количество();
	Для Ном = 1 по 3 Цикл
		
		Если Ном <= КоличествоСубконто и ЗначениеЗаполнено(Счет) Тогда
			
			Если ВидыСубконтоСчета[Ном-1].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации Тогда
				СтрокаНадпись = "Работник:";
				ЭлементыФормы["Субконто"+ДтКт+Ном].Видимость          = Истина;
				ЭлементыФормы["Текст"+ДтКт+Ном].Видимость          	  = Истина;
			ИначеЕсли ВидыСубконтоСчета[Ном-1].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Подразделения Тогда
				СтрокаНадпись = "Подразделение:";
				ЭлементыФормы["Субконто"+ДтКт+Ном].Видимость          = Истина;
				ЭлементыФормы["Текст"+ДтКт+Ном].Видимость          	  = Истина;
			ИначеЕсли ВидыСубконтоСчета[Ном-1].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ИсполнительныеДокументы Тогда
				СтрокаНадпись = "Исп. документ:";
				ЭлементыФормы["Субконто"+ДтКт+Ном].Видимость          = Истина;
				ЭлементыФормы["Текст"+ДтКт+Ном].Видимость          	  = Истина;
			ИначеЕсли ВидыСубконтоСчета[Ном-1].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Налоги 
				И (ЭтоВзносы или ЭтоВзносыФОТ)Тогда
				СтрокаНадпись = "Налог:";
				ЭлементыФормы["Субконто"+ДтКт+Ном].Видимость          = Истина;
				ЭлементыФормы["Текст"+ДтКт+Ном].Видимость          	  = Истина;
			ИначеЕсли ВидыСубконтоСчета[Ном-1].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиНалоговыхДеклараций 
				И (ЭтоВзносы или ЭтоВзносыФОТ)Тогда
				СтрокаНадпись = "Статья нал. декларации:";
				ЭлементыФормы["Субконто"+ДтКт+Ном].Видимость          = Истина;
				ЭлементыФормы["Текст"+ДтКт+Ном].Видимость          	  = Истина;				
			ИначеЕсли ВидыСубконтоСчета[Ном-1].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат 
				И ЭтоВзносыФОТ Тогда
				СтрокаНадпись = "Статьи затрат:";
				ЭлементыФормы["Субконто"+ДтКт+Ном].Видимость          = Истина;
				ЭлементыФормы["Текст"+ДтКт+Ном].Видимость          	  = Истина;
			ИначеЕсли ВидыСубконтоСчета[Ном-1].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат 
				И ДтКт = "Дт"
				И Ссылка = Справочники.СпособыОтраженияЗарплатыВРеглУчете.ИспользованиеРезерваОтпусков Тогда
				СтрокаНадпись = "Статьи затрат:";
				ЭлементыФормы["Субконто"+ДтКт+Ном].Видимость          = Истина;
				ЭлементыФормы["Текст"+ДтКт+Ном].Видимость          	  = Истина;	
			Иначе
				СтрокаНадпись = Строка(ВидыСубконтоСчета[Ном-1].ВидСубконто)+":";
				ЭлементыФормы["Субконто"+ДтКт+Ном].Видимость          = Истина;
				ЭлементыФормы["Текст"+ДтКт+Ном].Видимость          	  = Ложь;
			КонецЕсли;
			
			ЭлементыФормы["НадписьСубконто"+ДтКт+Ном].Заголовок = СтрокаНадпись;
			ЭлементыФормы["НадписьСубконто"+ДтКт+Ном].Видимость = Истина;
			
		Иначе
			ЭлементыФормы["НадписьСубконто"+ДтКт+Ном].Видимость   = Ложь;
			ЭлементыФормы["Субконто"+ДтКт+Ном].Видимость          = Ложь;
			ЭлементыФормы["Текст"+ДтКт+Ном].Видимость          	  = Ложь;
		КонецЕсли;
		
	КонецЦикла;
		
КонецПроцедуры

Процедура УстановитьДоступностьНалоговоеНазначение()
	
	СчетЗатрат = ЗначениеЗаполнено(СчетДт) И
				(СчетДт.ПринадлежитЭлементу(Планысчетов.Хозрасчетный.ЗатратыПоЭлементам) 
		         ИЛИ СчетДт.ПринадлежитЭлементу(Планысчетов.Хозрасчетный.ЗатратыДеятельности));
				 
	ЭлементыФормы.НалоговоеНазначение.Доступность = СчетЗатрат;
	
	Если НЕ СчетЗатрат И ЗначениеЗаполнено(НалоговоеНазначение) Тогда
		НалоговоеНазначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка();
	КонецЕсли;
	
	Если СчетЗатрат И (СчетДт = ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы
		ИЛИ СчетДт.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы)) Тогда
		ЭлементыФормы.фНалоговоеНазначениеНДС.Доступность = Истина;
	Иначе
		ЭлементыФормы.фНалоговоеНазначениеНДС.Доступность = Ложь;
		Если ЗначениеЗаполнено(НалоговоеНазначениеНДС) 
			ИЛИ ЗначениеЗаполнено(фНалоговоеНазначениеНДС)  Тогда 
			фНалоговоеНазначениеНДС = Справочники.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка();
			НалоговоеНазначениеНДС  = Справочники.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка();
		КонецЕсли;	
	КонецЕсли;
	
	Если НЕ СчетЗатрат Тогда
		Если ТипЗнч(СубконтоДт1) = Тип("СправочникСсылка.НоменклатурныеГруппы")
			И ЗначениеЗаполнено(СубконтоДт1) Тогда
			фНалоговоеНазначениеНДС = СубконтоДт1.НалоговоеНазначениеВПроизводстве;
		КонецЕсли;
		Если ТипЗнч(СубконтоДт2) = Тип("СправочникСсылка.НоменклатурныеГруппы")
			И ЗначениеЗаполнено(СубконтоДт2) Тогда
			фНалоговоеНазначениеНДС = СубконтоДт2.НалоговоеНазначениеВПроизводстве;
		КонецЕсли;	
		Если ТипЗнч(СубконтоДт3) = Тип("СправочникСсылка.НоменклатурныеГруппы")
			И ЗначениеЗаполнено(СубконтоДт3) Тогда
			фНалоговоеНазначениеНДС = СубконтоДт3.НалоговоеНазначениеВПроизводстве;
		КонецЕсли;
		
		Если ТипЗнч(СубконтоДт1) = Тип("СправочникСсылка.ОбъектыСтроительства")
			И ЗначениеЗаполнено(СубконтоДт1) Тогда
			фНалоговоеНазначениеНДС = СубконтоДт1.НалоговоеНазначение;
		КонецЕсли;
		Если ТипЗнч(СубконтоДт2) = Тип("СправочникСсылка.ОбъектыСтроительства")
			И ЗначениеЗаполнено(СубконтоДт2) Тогда
			фНалоговоеНазначениеНДС = СубконтоДт2.НалоговоеНазначение;
		КонецЕсли;	
		Если ТипЗнч(СубконтоДт3) = Тип("СправочникСсылка.ОбъектыСтроительства")
			И ЗначениеЗаполнено(СубконтоДт3) Тогда
			фНалоговоеНазначениеНДС = СубконтоДт3.НалоговоеНазначение;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры	
	
Процедура ОбработатьИзменениеСчета(Счет, ДтКт)
	
	ПриИзмененииСчета(Счет, ДтКт);
	УстановитьВидимостьСубконто(Счет, ДтКт);

КонецПроцедуры

// Функция формирует наименование способа отражения
// Возвращаемое значение:
//   <Строка>   – наименование способа отражения
Функция ПолучитьНаименованиеСпособаОтражения()

	НаименовниеДебета = "";
	СубконтоДебета = "";
	Если ЗначениеЗаполнено(СчетДт) Тогда
		ВидыСубконтоСчета = СчетДт.ВидыСубконто;
		Для Ном = 1 по ВидыСубконтоСчета.Количество() Цикл
			Если ЗначениеЗаполнено(ЭтотОбъект["СубконтоДт"+Ном]) Тогда
				СубконтоДебета = СубконтоДебета + "<" + ЭтотОбъект["СубконтоДт"+Ном] + "> ";	
			ИначеЕсли ВидыСубконтоСчета[Ном-1].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации Тогда
				//пропускаем
			ИначеЕсли ВидыСубконтоСчета[Ном-1].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Подразделения Тогда	
				СубконтоДебета = СубконтоДебета + "<подб. авт.> ";
			Иначе
				СубконтоДебета = СубконтоДебета + "<...> ";
			КонецЕсли;	
		КонецЦикла;
		НаименовниеДебета = "Дт" + СчетДт + " " + СубконтоДебета;
	КонецЕсли;
	
	НаименовниеКредита = "";
	СубконтоКредита = "";
	Если ЗначениеЗаполнено(СчетКт) Тогда
		ВидыСубконтоСчета = СчетКт.ВидыСубконто;
		Для Ном = 1 по ВидыСубконтоСчета.Количество() Цикл
			Если ЗначениеЗаполнено(ЭтотОбъект["СубконтоКт"+Ном]) Тогда
				СубконтоКредита = СубконтоКредита + "<" + ЭтотОбъект["СубконтоКт"+Ном] + "> ";	
			ИначеЕсли ВидыСубконтоСчета[Ном-1].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации Тогда
				//пропускаем
			ИначеЕсли ВидыСубконтоСчета[Ном-1].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Подразделения Тогда	
				СубконтоКредита = СубконтоКредита + "<подб. авт.> ";
			Иначе
				СубконтоКредита = СубконтоКредита + "<...> ";
			КонецЕсли;	
		КонецЦикла;
		НаименовниеКредита = "Кт" + СчетКт + " " + СубконтоКредита;
	КонецЕсли;
	
	Возврат СОКРЛП(НаименовниеДебета + " " + НаименовниеКредита);


КонецФункции // ПолучитьНаименованиеСпособаОтражения()

Процедура ОткрытьФормуВыбораЗначенияСубконто(ВидыСубконтоСчета, НомерСубконто, ВладелецФормы)
	
	ФормаВыбора = Справочники.Субконто.ПолучитьФормуВыбора( ,ВладелецФормы, );
	ФормаВыбора.Отбор.Владелец.Установить(ВидыСубконтоСчета[НомерСубконто-1].ВидСубконто);
	ФормаВыбора.Открыть();	
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()
	
	мСтароеНаименование = Наименование;
	
	Если Не ЭтоНовый() Тогда
		ЭтоСпособНеОтражатьВБухучете 			  = Ссылка = Справочники.СпособыОтраженияЗарплатыВРеглУчете.НеОтражатьВБухучете;
		ЭтоСпособРаспределятьПоБазовымНачислениям = Ссылка = Справочники.СпособыОтраженияЗарплатыВРеглУчете.РаспределятьПоБазовымНачислениям;
		ЭтоСпособРаспределятьПоСдельному		  = Ссылка = Справочники.СпособыОтраженияЗарплатыВРеглУчете.РаспределятьПоСдельному;
		ЭлементыФормы.Наименование.ТолькоПросмотр = Ссылка.Предопределенный;
		ЭлементыФормы.Наименование.КнопкаСпискаВыбора = Не Ссылка.Предопределенный;
	Иначе
		ЭтоСпособНеОтражатьВБухучете 			  = Ложь;
		ЭтоСпособРаспределятьПоБазовымНачислениям = Ложь;
		ЭтоСпособРаспределятьПоСдельному = Ложь;
	КонецЕсли;
	
	Если Ссылка = Справочники.СпособыОтраженияЗарплатыВРеглУчете.ОтражениеЕСВ
	 или Ссылка = Справочники.СпособыОтраженияЗарплатыВРеглУчете.ОтражениеЕСВОсновнойЗаработок
	 Тогда
		ЭтоВзносы = Истина;
	Иначе
		ЭтоВзносы = Ложь;
	КонецЕсли;
	
	Если Ссылка = Справочники.СпособыОтраженияЗарплатыВРеглУчете.ОтражениеЕСВФОТ
	 Тогда
		ЭтоВзносыФОТ = Истина;
	Иначе
		ЭтоВзносыФОТ = Ложь;
	КонецЕсли;
	
	Если ЭтоСпособНеОтражатьВБухучете Тогда
		ЭлементыФормы.Панель.ТекущаяСтраница = ЭлементыФормы.Панель.Страницы.НеОтражатьВБухучете;
	ИначеЕсли ЭтоСпособРаспределятьПоБазовымНачислениям Тогда
		ЭлементыФормы.Панель.ТекущаяСтраница = ЭлементыФормы.Панель.Страницы.РаспределятьПоБазовымНачислениям;
	ИначеЕсли ЭтоСпособРаспределятьПоСдельному Тогда
		ЭлементыФормы.Панель.ТекущаяСтраница = ЭлементыФормы.Панель.Страницы.РаспределятьПоСдельному;	
	Иначе
		ЭлементыФормы.Панель.ТекущаяСтраница = ЭлементыФормы.Панель.Страницы.НастройкаСпособаОтражения;
		УстановитьВидимостьСубконто(СчетДт,   "Дт");
		УстановитьВидимостьСубконто(СчетКт,   "Кт");
		ТекущийЭлемент = ЭлементыФормы.СчетДт;
		
		Если ЭтоВзносы или ЭтоВзносыФОТ Тогда
			ЭлементыФормы.РамкаДополнительно.Видимость = Ложь;
			ЭлементыФормы.ВзносыОсновногоНачисления.Видимость = Ложь;
			ЭлементыФормы.СпособОтраженияЕСВФОТ.Видимость = Ложь;
			ЭлементыФормы.ТекстСпособОтраженияЕСВФОТ.Видимость = Ложь;
		КонецЕсли;	
			
	КонецЕсли;
	
	Если НЕ УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОтражениеЗарплатыДо01042011") Тогда
		ЭлементыФормы.НадписьНалоговоеНазначение1.Видимость = Ложь;
		ЭлементыФормы.НалоговоеНазначение1.Видимость = Ложь;
		ЭлементыФормы.НадписьСтатьяВаловыхРасходов.Видимость = Ложь;
		ЭлементыФормы.СтатьяВаловыхРасходов.Видимость = Ложь;
	КонецЕсли;
	
	фНалоговоеНазначениеНДС = НалоговоеНазначениеНДС;
	УстановитьДоступностьНалоговоеНазначение();
		
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ПустаяСтрока(Наименование) Тогда
		Наименование = ПолучитьНаименованиеСпособаОтражения();
	КонецЕсли;	
	
КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	Если ЭлементыФормы.ТекстСпособОтраженияЕСВФОТ.Видимость Тогда
		
		Если НЕ ВзносыОсновногоНачисления Тогда
			ЭлементыФормы.ТекстСпособОтраженияЕСВФОТ.Заголовок = НСтр("ru='< Для ЕСВ ФОТ будет применен этот же способ отражения >';uk='< Для ЄСВ ФОП буде застосований цей же спосіб відображення >'");
		ИначеЕсли НЕ ЗначениеЗаполнено(СпособОтраженияЕСВФОТ) Тогда
			ЭлементыФормы.ТекстСпособОтраженияЕСВФОТ.Заголовок = НСтр("ru='< Для ЕСВ ФОТ будет применен способ отражения основного заработка сотрудника >';uk='< Для ЄСВ ФОП буде застосований спосіб відображення основного заробітку співробітника >'");
		Иначе
			ЭлементыФормы.ТекстСпособОтраженияЕСВФОТ.Заголовок = НСтр("ru='< Для ЕСВ ФОТ будет применен указанный способ отражения >';uk='< Для ЄСВ ФОП буде застосований зазначений спосіб відображення >'");
		КонецЕсли;	
		
	КонецЕсли;	
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура НаименованиеНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	СписокВозможныхЗначений = Новый СписокЗначений;
	НаименованиеДтКт = "Дт" + СчетДт + " Кт" + СчетКт;
	СписокВозможныхЗначений.Добавить(НаименованиеДтКт);
	
	НаименованиеПоДтКт = ПолучитьНаименованиеСпособаОтражения();
	Если НаименованиеДтКт <> НаименованиеПоДтКт Тогда
		СписокВозможныхЗначений.Добавить(НаименованиеПоДтКт);
	КОнецЕсли;
	
	Если НаименованиеДтКт <> мСтароеНаименование и  НаименованиеПоДтКт <> мСтароеНаименование и ЗначениеЗаполнено(мСтароеНаименование) Тогда
		СписокВозможныхЗначений.Добавить(мСтароеНаименование);
	КонецЕсли;	
	
	Элемент.СписокВыбора = СписокВозможныхЗначений;
	
КонецПроцедуры

Процедура СчетДтОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка = БухгалтерскийУчет.СчетМожноИспользоватьВПроводках(ВыбранноеЗначение)
КонецПроцедуры

Процедура СчетДтПриИзменении(Элемент)
	
	ОбработатьИзменениеСчета(Элемент.Значение, "Дт");
	УстановитьДоступностьНалоговоеНазначение();
	
КонецПроцедуры

Процедура СчетКтОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка = БухгалтерскийУчет.СчетМожноИспользоватьВПроводках(ВыбранноеЗначение)
КонецПроцедуры

Процедура СчетКтПриИзменении(Элемент)
	
	ОбработатьИзменениеСчета(Элемент.Значение, "Кт");
КонецПроцедуры   

Процедура СубконтоБухучетаПриИзменении(Элемент)
	
	ДтКт = Сред(Элемент.Имя,9,2);
	Если Элемент.Значение = Неопределено Тогда
		ОбработатьИзменениеСчета(?(ДтКт = "Дт", СчетДт, СчетКт), ДтКт);
	Иначе
	КонецЕсли;
	УстановитьВидимостьСубконто(?(ДтКт = "Дт", СчетДт, СчетКт), ДтКт);
	УстановитьДоступностьНалоговоеНазначение();
	
КонецПроцедуры

Процедура СубконтоБухучетаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	Если ТипЗнч(Элемент.Значение) = Тип("СправочникСсылка.Субконто") Тогда
		
		СтандартнаяОбработка = Ложь;

		ДтКт = Сред(Элемент.Имя,9,2);
		НомерСубконто = Прав(Элемент.Имя,1);
		Если ДтКт = "Дт" Тогда
			ВидыСубконтоСчета = СчетДт.ВидыСубконто;
		Иначе	
			ВидыСубконтоСчета = СчетКт.ВидыСубконто;
		КонецЕсли;
		
		ОткрытьФормуВыбораЗначенияСубконто(ВидыСубконтоСчета, НомерСубконто, Элемент);
		
	КонецЕсли;
	
КонецПроцедуры


Процедура СтатьяВаловыхРасходовНачалоВыбора(Элемент, СтандартнаяОбработка)
	НазваниеНалоговойДекларации = Перечисления.ВидыНалоговыхДеклараций.ДекларацияОПрибыли;      
	РаботаСДиалогами.НачалоВыбораСтатьяНалоговойДекларации(Элемент, СтандартнаяОбработка, НазваниеНалоговойДекларации);
КонецПроцедуры

Процедура НалоговоеНазначениеНачалоВыбора(Элемент, СтандартнаяОбработка)
	РаботаСДиалогами.НачалоВыбораЗначенияНалоговоеНазначение(Элемент, СтандартнаяОбработка,Перечисления.ГруппыНалоговыхНазначений.НалоговыеНазначенияДоходовИЗатрат);
КонецПроцедуры

Процедура НалоговоеНазначениеАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	РаботаСДиалогами.АвтоПодборТекстаНалоговоеНазначение(ЭтаФорма, Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка, Перечисления.ГруппыНалоговыхНазначений.НалоговыеНазначенияДоходовИЗатрат);
КонецПроцедуры

Процедура НалоговоеНазначениеОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	РаботаСДиалогами.ОкончаниеВводаТекстаНалоговоеНазначение(Элемент, Текст, Значение, СтандартнаяОбработка, Перечисления.ГруппыНалоговыхНазначений.НалоговыеНазначенияДоходовИЗатрат)
КонецПроцедуры

Процедура НалоговоеНазначениеНДСНачалоВыбора(Элемент, СтандартнаяОбработка)
	РаботаСДиалогами.НачалоВыбораЗначенияНалоговоеНазначение(Элемент, СтандартнаяОбработка,Перечисления.ГруппыНалоговыхНазначений.НалоговыеНазначенияАктивовИВзаиморасчетовПоНДС);
КонецПроцедуры

Процедура НалоговоеНазначениеНДСАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	РаботаСДиалогами.АвтоПодборТекстаНалоговоеНазначение(ЭтаФорма, Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка, Перечисления.ГруппыНалоговыхНазначений.НалоговыеНазначенияАктивовИВзаиморасчетовПоНДС);
КонецПроцедуры

Процедура НалоговоеНазначениеНДСОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	РаботаСДиалогами.ОкончаниеВводаТекстаНалоговоеНазначение(Элемент, Текст, Значение, СтандартнаяОбработка, Перечисления.ГруппыНалоговыхНазначений.НалоговыеНазначенияАктивовИВзаиморасчетовПоНДС)
КонецПроцедуры

Процедура фНалоговоеНазначениеНДСПриИзменении(Элемент)
	
	НалоговоеНазначениеНДС = фНалоговоеНазначениеНДС;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

мСведенияОСчетах = Новый Соответствие;
мСведенияОСтатьяхЗатрат = Новый Соответствие;

мСпискВыбораВНД = Новый СписокЗначений;
мСпискВыбораВНД.Добавить(Справочники.ВидыНалоговойДеятельности.НеОблагаемая);
мСпискВыбораВНД.Добавить(Справочники.ВидыНалоговойДеятельности.ОблагаемаяПоОбычнойСтавке);


