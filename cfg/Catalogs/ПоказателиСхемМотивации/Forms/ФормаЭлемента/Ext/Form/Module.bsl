Перем НовыйОбъект;
Перем мПредопределенныеПоказатели;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Функция ПроверкаНаДублированиеИдентификатора(Отказ)

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ПоказателиСхемМотивации.Идентификатор
	|ИЗ
	|	Справочник.ПоказателиСхемМотивации КАК ПоказателиСхемМотивации
	|ГДЕ
	|	ПоказателиСхемМотивации.Идентификатор = &Идентификатор
	|	И ПоказателиСхемМотивации.Ссылка <> &Ссылка");
	
	Запрос.УстановитьПараметр("Идентификатор", Идентификатор);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Отказ = Выборка.Количество()>0;
	
	Если Отказ Тогда
		ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru='Показатель с таким идентификатором уже существует!';uk='Показник з таким ідентифікатором вже існує!'"), Отказ);
	КонецЕсли;
	
	Возврат Отказ;
	
КонецФункции

Процедура ПроверитьЗаполнениеПоказателя(Отказ)
	
	Если НЕ ЗначениеЗаполнено(Наименование) Тогда
		Отказ = Истина;
		ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru='Необходимо задать наименование показателя!';uk='Необхідно вказати найменування показника!'"), Отказ);
	КонецЕсли;
		
	Если НЕ ЗначениеЗаполнено(Идентификатор) Тогда
		Отказ = Истина;
		ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru='Необходимо задать идентификатор показателя!';uk='Необхідно задати ідентифікатор показника!'"), Отказ);
	Иначе
		Разделители	= " .,+,-,/,*,?,=,<,>,(,)%!@#$%&*""№:;{}[]?()\|/`~'^_";
		Для НомСимвола = 1 По СтрДлина(Идентификатор) Цикл
			Символ = Сред(Идентификатор,НомСимвола,1);
			НомерСимвола = Найти(Разделители, Символ);
			Если НомерСимвола <> 0 Тогда
				Отказ = Истина;
				ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru='Идентификатор показателя не должен содержать символ: ""';uk='Ідентифікатор показника не повинен містити символ: ""'")+Сред(Разделители,НомерСимвола,1) + """", Отказ);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если Не Предопределенный Тогда
		
		Если НЕ ЗначениеЗаполнено(ТипПоказателя) Тогда
			Отказ = Истина;
			ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru='Необходимо задать тип показателя!';uk='Необхідно задати тип показника!'"), Отказ);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ВозможностьИзменения) И НЕ (ТипПоказателя = Перечисления.ТипыПоказателейСхемМотивации.ОценочнаяШкалаПроцентная 
			или	ТипПоказателя = Перечисления.ТипыПоказателейСхемМотивации.ОценочнаяШкалаЧисловая) Тогда
			Отказ = Истина;
			ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru='Необходимо задать порядок ввода показателя!';uk='Необхідно встановити порядок введення показника!'"), Отказ);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ВидПоказателя) Тогда
			Отказ = Истина;
			ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru='Необходимо задать назначение показателя!';uk='Необхідно задати призначення показника!'"), Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
	
КонецПроцедуры //ПроверитьЗаполнениеПоказателя

Процедура ПолучитьИдентификатор(СтрНаименование)
	
	Разделители	=  " .,+,-,/,*,?,=,<,>,(,)%!@#$%&*""№:;{}[]?()\|/`~'^_";
	
	Идентификатор = "";
	БылСпецСимвол = Ложь;
	Для НомСимвола = 1 По СтрДлина(СтрНаименование) Цикл
		Символ = Сред(СтрНаименование,НомСимвола,1);
		Если Найти(Разделители, Символ) <> 0 Тогда
			БылСпецСимвол = Истина;
		ИначеЕсли БылСпецСимвол Тогда
			БылСпецСимвол = Ложь;
			Идентификатор = Идентификатор + ВРег(Символ);
		Иначе
			Идентификатор = Идентификатор + Символ;		
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры //ПолучитьИдентификатор

// Процедура заполняет список предопределенных показателей, по которым потом будет устанавливаться отбор с видом сравнения
//			НеВСписке в форме выбора показателей
//
Процедура ЗапомнитьПредопределенныеПоказатели()
	
	Запрос = Новый Запрос;
	
	мПредопределенныеПоказатели = Новый СписокЗначений;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПоказателиСхемМотивации.Ссылка
	|ИЗ
	|	Справочник.ПоказателиСхемМотивации КАК ПоказателиСхемМотивации
	|ГДЕ
	|	ПоказателиСхемМотивации.Предопределенный
	|	ИЛИ ПоказателиСхемМотивации.ТипПоказателя = Значение(Перечисление.ТипыПоказателейСхемМотивации.ОценочнаяШкалаПроцентная)
	|	ИЛИ ПоказателиСхемМотивации.ТипПоказателя = Значение(Перечисление.ТипыПоказателейСхемМотивации.ОценочнаяШкалаЧисловая)";
	
		
	Запрос.Текст = ТекстЗапроса;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		мПредопределенныеПоказатели.Добавить(Выборка.Ссылка);
	КонецЦикла;
	мПредопределенныеПоказатели.Добавить(Ссылка);
	
	
КонецПроцедуры //ЗапомнитьПредопределенныеПоказатели

Процедура УстановитьДоступныеДляВводаНазначения()
	
	// Доступные значения реквизита "ВозможностьИзменения"
	СписокВозможностейИзменения = Новый СписокЗначений;
	СписокВозможностейИзменения.Добавить(Перечисления.ИзменениеПоказателейСхемМотивации.ВиденНоНеРедактируетсяПриРасчете);
	СписокВозможностейИзменения.Добавить(Перечисления.ИзменениеПоказателейСхемМотивации.ИзменяетсяПриРасчете);
	
	Если ВидПоказателя <> Перечисления.ВидыПоказателейСхемМотивации.Индивидуальный Тогда
		СписокВозможностейИзменения.Добавить(Перечисления.ИзменениеПоказателейСхемМотивации.Периодически);
	Иначе
		СписокВозможностейИзменения.Добавить(Перечисления.ИзменениеПоказателейСхемМотивации.НеИзменяется);
	КонецЕсли;
	
	ЭлементыФормы.ВозможностьИзменения.ДоступныеЗначения = СписокВозможностейИзменения;

КонецПроцедуры

Функция ЭтоШкала()
	
	Возврат ТипПоказателя = Перечисления.ТипыПоказателейСхемМотивации.ОценочнаяШкалаЧисловая Или ТипПоказателя = Перечисления.ТипыПоказателейСхемМотивации.ОценочнаяШкалаПроцентная;
	
КонецФункции

Процедура ПроверкаТарифнойСтавки()
	
	ПоказательЭтоШкала = ЭтоШкала();
	
	Если ТарифнаяСтавка И ВозможностьИзменения <> Перечисления.ИзменениеПоказателейСхемМотивации.НеИзменяется ИЛИ ПоказательЭтоШкала Или ТипПоказателя = Перечисления.ТипыПоказателейСхемМотивации.Процентный Тогда
		ТарифнаяСтавка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура УстановитьДоступностьЭУ()
	
	ПоказательЭтоШкала = ЭтоШкала();
						
	ЭлементыФормы.ТипПоказателя.ТолькоПросмотр				= Предопределенный;
	ЭлементыФормы.ТипПоказателя.АвтоОтметкаНезаполненного	= Не (Предопределенный Или ЗначениеЗаполнено(ТипПоказателя));
	ЭлементыФормы.ТипПоказателя.ОтметкаНезаполненного		= Не (Предопределенный Или ЗначениеЗаполнено(ТипПоказателя));
	
	ЭлементыФормы.ВидПоказателя.ТолькоПросмотр				= Предопределенный Или ПоказательЭтоШкала;
	ЭлементыФормы.ВидПоказателя.АвтоОтметкаНезаполненного	= Не ПоказательЭтоШкала;	
	ЭлементыФормы.ВидПоказателя.ОтметкаНезаполненного		= Не (ПоказательЭтоШкала Или ЗначениеЗаполнено(ВидПоказателя) Или Предопределенный);
	
	ЭлементыФормы.ВозможностьИзменения.ТолькоПросмотр			= Предопределенный Или ПоказательЭтоШкала;
	ЭлементыФормы.ВозможностьИзменения.АвтоОтметкаНезаполненного= Не ПоказательЭтоШкала;
	ЭлементыФормы.ВозможностьИзменения.ОтметкаНезаполненного	= Не (ПоказательЭтоШкала Или ЗначениеЗаполнено(ВозможностьИзменения) Или Предопределенный);

	ЭлементыФормы.ПанельДанных.Страницы.АнализПоказателей.Видимость= Не Предопределенный И Не ПоказательЭтоШкала;
	
	ЭлементыФормы.Переключатель1.Доступность = ПоказательЭффективности;
	ЭлементыФормы.Переключатель2.Доступность = ПоказательЭффективности;
	ЭлементыФормы.ФактическийПоказатель.ТолькоПросмотр = (Не ПлановыйПоказатель);
	
	ЭлементыФормы.ПанельДанных.Страницы.Использование.Видимость = Предопределенный Или (ВозможностьИзменения = Перечисления.ИзменениеПоказателейСхемМотивации.НеИзменяется И Не (ПоказательЭтоШкала Или ТипПоказателя = Перечисления.ТипыПоказателейСхемМотивации.Процентный));
	ЭлементыФормы.ТарифнаяСтавка.Доступность = Не Предопределенный;
	
	ЭлементыФормы.ПанельДанных.Страницы.ШкалаОценки.Видимость = ПоказательЭтоШкала;
	
	ЭлементыФормы.ПоказательЭффективности.Доступность = (ТипПоказателя<>Перечисления.ТипыПоказателейСхемМотивации.ТарифныйРазряд);

	
КонецПроцедуры //УстановитьДоступностьЭУ

Процедура УстановитьВозможностьИзменения(Значение)
	
	Если (Значение = Перечисления.ВидыПоказателейСхемМотивации.Общий Или Значение = Перечисления.ВидыПоказателейСхемМотивации.ПоПодразделению) И
	ВозможностьИзменения <> Перечисления.ИзменениеПоказателейСхемМотивации.ВиденНоНеРедактируетсяПриРасчете Тогда
		ВозможностьИзменения = Перечисления.ИзменениеПоказателейСхемМотивации.ВиденНоНеРедактируетсяПриРасчете;
	КонецЕсли;
	
	УстановитьДоступностьЭУ();
	
КонецПроцедуры //СоставитьСписокДоступныхЗначений

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()
	
	
	НовыйОбъект = Ложь;
	ПлановыйПоказатель = ЗначениеЗаполнено(ФактическийПоказатель);
	
	УстановитьДоступностьЭУ();
	
	СоставШкалы.Отбор.ШкалаОценкиПоказателя.Значение = Ссылка;
	СоставШкалы.Отбор.ШкалаОценкиПоказателя.Использование = Истина;	
	СоставШкалы.Прочитать();
	
	Если ПоказательЭффективности Тогда
		Расшифровка = НСтр("ru='Данный показатель будет включён в отчёт ""Анализ показателей""';uk='Даний показник буде включений у звіт ""Аналіз показників""'")
	Иначе
		Расшифровка = НСтр("ru='Данный показатель предназначен только для расчета зарплаты';uk='Даний показник призначений тільки для розрахунку зарплати'");
	КонецЕсли;
    ЭлементыФормы.НадписьРасшифровкаПоказательЭффективности.Заголовок = Расшифровка;

	Если ТарифнаяСтавка Тогда
		Расшифровка = НСтр("ru='Однажды введенное в кадровом документе значение такого показателя может быть использовано несколькими плановыми начислениями (удержаниями) работника';uk='Одного разу введене в кадровому документі значення такого показника може бути використане кількома плановими нарахуваннями (утриманнями) працівника'")
	ИначеЕсли Не Предопределенный Тогда 
		Расшифровка = НСтр("ru='Если в начислении (удержании) для данного показателя указано, что его нужно запрашивать при вводе, то значение показателя используется только тем начислением (удержанием), для которого оно установлено кадровым документом.';uk='Якщо у нарахуванні (утриманні) для даного показника зазначено, що його потрібно запитувати при введенні, то значення показника використовується тільки тим нарахуванням (утриманням), для якого воно встановлено кадровим документом.'") + Символы.ПС + НСтр("ru='Если же в начислении (удержании) для данного показателя указано, что его не нужно запрашивать при вводе, то показатель будет браться из тех кадровых документов, в которых есть начисление, где данный показатель запрашивается';uk='Якщо ж у нарахуванні (утриманні) для даного показника зазначено, що його не потрібно запитувати при введенні, то показник буде братися з тих кадрових документів, в яких є нарахування, де даний показник запитується'");		
	Иначе
		Расшифровка = НСтр("ru='Значение показателя рассчитывается автоматически для каждой строки начислений (удержаний)';uk='Значення показника розраховується автоматично для кожного рядка нарахувань (утримань)'")
	КонецЕсли;
    ЭлементыФормы.НадписьРасшифровкаТарифнаяСтавка.Заголовок = Расшифровка;
	
	УстановитьДоступныеДляВводаНазначения();

	
КонецПроцедуры

Процедура ОбработкаЗаписиНовогоОбъекта(Объект, Источник)
	мСтатусРедактирования = "НовыйОбъект";
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если СоставШкалы.Модифицированность() Тогда
		СоставШкалы.Отбор.ШкалаОценкиПоказателя.Значение = Ссылка;
		Для Каждого Строка Из СоставШкалы Цикл
			Строка.ШкалаОценкиПоказателя = Ссылка;
			Строка.НомерСтрокиШкалы = СоставШкалы.Индекс(Строка) + 1;
		КонецЦикла;
		
		СоставШкалы.Записать();
	КонецЕсли;
	
	ПроверитьЗаполнениеПоказателя(Отказ);
	
	Если Не Отказ Тогда
		ПроверкаНаДублированиеИдентификатора(Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеЗаписи()
	
	Оповестить("ЗаписанНовыйПоказатель");
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	НовыйОбъект =  ЭтоНовый();

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
//  ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ПОЛЕЙ

Процедура НаименованиеПриИзменении(Элемент)
	ПолучитьИдентификатор(Элемент.Значение);	
КонецПроцедуры

Процедура ТипПоказателяПриИзменении(Элемент)
	
	Если (ТипПоказателя = Перечисления.ТипыПоказателейСхемМотивации.ОценочнаяШкалаЧисловая) Или (ТипПоказателя = Перечисления.ТипыПоказателейСхемМотивации.ОценочнаяШкалаПроцентная) Тогда
		ВозможностьИзменения = Перечисления.ИзменениеПоказателейСхемМотивации.НеИзменяется;
		ВидПоказателя = Перечисления.ВидыПоказателейСхемМотивации.Индивидуальный;		
		ПоказательЭффективности = Ложь;
	КонецЕсли;
	
	Если Не (ТипПоказателя = Перечисления.ТипыПоказателейСхемМотивации.Денежный или ТипПоказателя = Перечисления.ТипыПоказателейСхемМотивации.Процентный или ТипПоказателя = Перечисления.ТипыПоказателейСхемМотивации.Числовой) Тогда
		ПоказательЭффективности = Ложь;
	КонецЕсли;
		
	ПроверкаТарифнойСтавки();
	
	УстановитьДоступностьЭУ();
	
КонецПроцедуры

Процедура ВидПоказателяПриИзменении(Элемент)
	
	Если ВидПоказателя = Перечисления.ВидыПоказателейСхемМотивации.Индивидуальный И		
		ВозможностьИзменения = Перечисления.ИзменениеПоказателейСхемМотивации.Периодически Тогда
		ВозможностьИзменения = Перечисления.ИзменениеПоказателейСхемМотивации.ВиденНоНеРедактируетсяПриРасчете;
	Иначе
		ФактическийПоказатель = Справочники.ПоказателиСхемМотивации.ПустаяСсылка();
		ПлановыйПоказатель	= Ложь;
	КонецЕсли;
	УстановитьВозможностьИзменения(Элемент.Значение);
	УстановитьДоступныеДляВводаНазначения();
	
	ПроверкаТарифнойСтавки();

КонецПроцедуры

Процедура ВозможностьИзмененияПриИзменении(Элемент)
	
	Если ВозможностьИзменения = Перечисления.ИзменениеПоказателейСхемМотивации.ВиденНоНеРедактируетсяПриРасчете Тогда
		
		ФактическийПоказатель = Перечисления.ИзменениеПоказателейСхемМотивации.ПустаяСсылка();
		ПлановыйПоказатель	= Ложь;
		
	КонецЕсли;
	
	УстановитьДоступностьЭУ();
	
КонецПроцедуры

Процедура ПоказательЭффективностиПриИзменении(Элемент)
	Если ПоказательЭффективности Тогда
		Расшифровка = НСтр("ru='Данный показатель будет включён в отчёт ""Анализ показателей""';uk='Даний показник буде включений у звіт ""Аналіз показників""'")
	Иначе
		ФактическийПоказатель = Справочники.ПоказателиСхемМотивации.ПустаяСсылка();
		ПлановыйПоказатель = Ложь;
		Расшифровка = НСтр("ru='Данный показатель предназначен только для расчета зарплаты';uk='Даний показник призначений тільки для розрахунку зарплати'");
		Если ПлановыйПоказатель Тогда
			ПлановыйПоказатель = Ложь;
			ФактическийПоказатель = "";
		КонецЕсли;
	КонецЕсли;
    ЭлементыФормы.НадписьРасшифровкаПоказательЭффективности.Заголовок = Расшифровка;
	УстановитьДоступностьЭУ();
КонецПроцедуры

Процедура Переключатель1ПриИзменении(Элемент)
	ФактическийПоказатель = Перечисления.ИзменениеПоказателейСхемМотивации.ПустаяСсылка();
	УстановитьДоступностьЭУ();
КонецПроцедуры

Процедура ФактическийПоказательНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ФормаВыбора = Справочники.ПоказателиСхемМотивации.ПолучитьФормуВыбора();
	
	ФормаВыбора.Отбор.ФактическийПоказатель.Использование	= Истина;
	ФормаВыбора.Отбор.ФактическийПоказатель.ВидСравнения	= ВидСравнения.Равно;
	ФормаВыбора.Отбор.ФактическийПоказатель.Значение		= Справочники.ПоказателиСхемМотивации.ПустаяСсылка();
	
	ФормаВыбора.Отбор.ВозможностьИзменения.Использование	= Истина;
	ФормаВыбора.Отбор.ВозможностьИзменения.ВидСравнения		= ВидСравнения.Равно;
	ФормаВыбора.Отбор.ВозможностьИзменения.Значение			= Перечисления.ИзменениеПоказателейСхемМотивации.ВиденНоНеРедактируетсяПриРасчете;
		
	Если мПредопределенныеПоказатели = Неопределено Тогда
		ЗапомнитьПредопределенныеПоказатели();
	КонецЕсли;
	
	ФормаВыбора.Отбор.Ссылка.Использование	= Истина;
	ФормаВыбора.Отбор.Ссылка.ВидСравнения	= ВидСравнения.НеВСписке;
	ФормаВыбора.Отбор.Ссылка.Значение		= мПредопределенныеПоказатели;
	
	ВыбранноеЗначение = ФормаВыбора.ОткрытьМодально();
	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Элемент.Значение = ВыбранноеЗначение;
	КонецЕсли;
	
КонецПроцедуры

Процедура ТарифнаяСтавкаПриИзменении(Элемент)
	Если ТарифнаяСтавка Тогда
		Расшифровка = НСтр("ru='Однажды введенное в кадровом документе значение такого показателя может быть использовано несколькими плановыми начислениями (удержаниями) работника';uk='Одного разу введене в кадровому документі значення такого показника може бути використане кількома плановими нарахуваннями (утриманнями) працівника'")
	Иначе 
		Расшифровка = НСтр("ru='Если в начислении (удержании) для данного показателя указано, что его нужно запрашивать при вводе, то значение показателя используется только тем начислением (удержанием), для которого оно установлено кадровым документом.';uk='Якщо у нарахуванні (утриманні) для даного показника зазначено, що його потрібно запитувати при введенні, то значення показника використовується тільки тим нарахуванням (утриманням), для якого воно встановлено кадровим документом.'") + Символы.ПС + НСтр("ru='Если же в начислении (удержании) для данного показателя указано, что его не нужно запрашивать при вводе, то показатель будет браться из тех кадровых документов, в которых есть начисление, где данный показатель запрашивается';uk='Якщо ж у нарахуванні (утриманні) для даного показника зазначено, що його не потрібно запитувати при введенні, то показник буде братися з тих кадрових документів, в яких є нарахування, де даний показник запитується'");		
	КонецЕсли;
    ЭлементыФормы.НадписьРасшифровкаТарифнаяСтавка.Заголовок = Расшифровка;
КонецПроцедуры


