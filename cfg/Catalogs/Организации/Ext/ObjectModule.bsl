Перем ПрошлыйИзмененныйГоловнаяОрганизация;

// Обработчик события "ПередЗаписью" Объекта
//
Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЭтоНовый() И ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо И ЮрФизЛицо <> Ссылка.ЮрФизЛицо Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
		                      |	КОЛИЧЕСТВО(ИСТИНА) КАК КоличествоПодчиненных
		                      |ИЗ
		                      |	Справочник.Организации КАК Организации
		                      |ГДЕ
		                      |	Организации.ГоловнаяОрганизация = &ГоловнаяОрганизация");
		Запрос.УстановитьПараметр("ГоловнаяОрганизация", Ссылка);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Если ЗначениеЗаполнено(Выборка.КоличествоПодчиненных) Тогда
				Сообщить(НСтр("ru='Текущая организация является головной для других организаций из справочника."
"Физическое лицо не может являться головной организацией!';uk='Поточна організація є головною для інших організацій з довідника."
"Фізична особа не може бути головною організацією!'"), СтатусСообщения.Важное);
				Отказ = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		ПрошлыйИзмененныйГоловнаяОрганизация = ?(Не ЭтоНовый() и Не Ссылка.ГоловнаяОрганизация = ГоловнаяОрганизация, Ссылка.ГоловнаяОрганизация, Неопределено);
		НастройкаПравДоступа.ПередЗаписьюНовогоОбъектаСПравамиДоступаПользователей(ЭтотОбъект, Отказ, ГоловнаяОрганизация);
	КонецЕсли;
	
	// очистка неиспользуемых реквизитов
	Если НЕ Отказ Тогда
		Если НЕ ЗначениеЗаполнено(ЮрФизЛицо) Тогда
			ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо;
		КонецЕсли;
		
		Если ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо Тогда
			ГоловнаяОрганизация 			= Неопределено;
		ИначеЕсли ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо Тогда
			ИндивидуальныйПредприниматель 	= Неопределено;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если НЕ ОбменДанными.Загрузка Тогда
		НастройкаПравДоступа.ОбновитьПраваДоступаКИерархическимОбъектамПриНеобходимости(Ссылка,ПрошлыйИзмененныйГоловнаяОрганизация, Отказ);
	КонецЕсли;
	
КонецПроцедуры
