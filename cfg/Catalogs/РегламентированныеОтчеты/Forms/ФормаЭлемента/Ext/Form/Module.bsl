
Перем мВнешнийОтчетИспользовать;
Перем мВнешнийОтчетХранилище;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()

	Если Не ПустаяСтрока(ИсточникОтчета) Тогда
		Если Метаданные.Отчеты.Найти(ИсточникОтчета) <> Неопределено Тогда
			// Открывается элемент справочника, имеющий ссылку на ОтчетОбъект.
			// Считаем, что регламентированные отчеты распространяются фирмой 1С и
			// запрещаем редактирование названия отчета в поле ввода "Файл".

			ЭлементыФормы.ИсточникОтчета.Доступность = Ложь;
		КонецЕсли;
	КонецЕсли;
	ВнешнийОтчетУправлениеДоступностью();
	Если НЕ (ВнешнийОтчетХранилище = Неопределено ИЛИ ВнешнийОтчетХранилище.Получить() = Неопределено) Тогда
		ИсточникОтчетаФайл = НСтр("ru='Отчет загружен в ИБ';uk='Звіт завантажений в ІБ'");
	КонецЕсли;
	мВнешнийОтчетИспользовать = ВнешнийОтчетИспользовать;
	мВнешнийОтчетХранилище = ВнешнийОтчетХранилище;
		
КонецПроцедуры // ПриОткрытии()

// Процедура - обработчик события "ПередЗаписью" формы.
//
Процедура ПередЗаписью(Отказ)
	
	Если ПустаяСтрока(ИсточникОтчета) Тогда
		Отказ = Истина;
		Предупреждение(НСтр("ru='Укажите наименование объекта!';uk=""Укажіть найменування об'єкта!"""));
		Возврат;
	КонецЕсли;

	Если ОпределитьТипОтчета(ИсточникОтчета, , Истина) = 0 И НЕ ВнешнийОтчетИспользовать Тогда

		Отказ = Истина;

	КонецЕсли;

	Если ЭтоНовый() Тогда

		ГенерироватьНовыйКод();

	КонецЕсли;
	
	Если ВнешнийОтчетИспользовать И (ВнешнийОтчетХранилище = Неопределено ИЛИ ВнешнийОтчетХранилище.Получить() = Неопределено) Тогда
		Предупреждение(НСтр("ru='Внешний отчет отсутствует в ИБ! Загрузите внешний отчет в ИБ или уберите признак использования внешнего отчета!';uk='Зовнішній звіт відсутній в ІБ! Завантажте зовнішній звіт в ІБ або заберіть ознаку використання зовнішнього звіту!'"));
		Отказ = Истина;
		Возврат;
	КонецЕсли;

КонецПроцедуры // ПередЗаписью()


///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ДИАЛОГА

// Процедура - обработчик события "НачалоВыбора" поля ввода "ИсточникОтчета".
// Вызывает диалог выбора файла внешней обработки.
//
Процедура ИсточникОтчетаНачалоВыбора(Элемент, СтандартнаяОбработка)

	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Заголовок = НСтр("ru='Выберите файл внешнего отчета';uk='Виберіть файл зовнішнього звіту'");
	Диалог.Фильтр    = НСтр("ru='Внешняя обработка (*.erf)|*.erf|Табличный документ (*.mxl)|*.mxl|Текстовый документ (*.txt)|*.txt';uk='Зовнішня обробка (*.erf)|*.erf|Табличний документ (*.mxl)|*.mxl|Текстовий документ (*.txt)|*.txt'");

	Если Не ПустаяСтрока(ИсточникОтчета) Тогда

		ФайлВнешОтчета = Новый Файл(ИсточникОтчета);

		Если ФайлВнешОтчета.Существует() Тогда
			Каталог        = ФайлВнешОтчета.Путь;
			Диалог.Каталог = Каталог;
		КонецЕсли;
	КонецЕсли;

	Если Диалог.Выбрать() Тогда
		ИсточникОтчета = Диалог.ПолноеИмяФайла;
	КонецЕсли;

КонецПроцедуры // ИсточникОтчетаНачалоВыбора()
 
// Процедура - обработчик события НачалоВыбора поля ввода ИсточникОтчетаФайл.
// Открывает диалог для выбора файла внешнего регламентированного отчета, 
// проверяет отчет на соответствие текущему элементу справочника и загружает его в ИБ.
Процедура ИсточникОтчетаФайлНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Заголовок = НСтр("ru='Выберите внешний отчет';uk='Виберіть зовнішній звіт'");
	Диалог.МножественныйВыбор = Ложь;
	Диалог.ПроверятьСуществованиеФайла = Истина;
	Диалог.Фильтр = НСтр("ru='Внешний отчет (*.erf)|*.erf';uk='Зовнішній звіт (*.erf)|*.erf'");
	Если НЕ Диалог.Выбрать() Тогда
		Возврат;
	КонецЕсли;
	Если ВнешнийОтчетХранилище <> Неопределено И ВнешнийОтчетХранилище.Получить() <> Неопределено Тогда
		Если  Вопрос(НСтр("ru='Заменить текущий отчет?';uk='Замінити поточний звіт?'"), РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	Состояние(НСтр("ru='Проверка внешнего отчета...';uk='Перевірка зовнішнього звіту...'"));
	Попытка
		ОбъектОтчет = ВнешниеОтчеты.Создать(Диалог.ПолноеИмяФайла);
	Исключение
		Состояние();
		Сообщить(НСтр("ru='Выбранный файл не является файлом внешнего отчета!';uk='Обраний файл не є файлом зовнішнього звіту!'"));
		Возврат;
	КонецПопытки;
	
	Если ОбъектОтчет.Метаданные().Имя <> ИсточникОтчета И НЕ ПустаяСтрока(ИсточникОтчета) И
			Вопрос(НСтр("ru='Несоответствие между текущим элементом и выбранным отчетом!"
"Не рекомендуется сопоставлять выбранный отчет текущему элементу!"
"Это может привести к неправильной работе программы!"
"Продолжить?';uk='Невідповідність між поточним елементом і обраним звітом!"
"Не рекомендується зіставляти обраний звіт поточному елементу!"
"Це може призвести до неправильної роботи програми!"
"Продовжити?'"), РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет) = КодВозвратаДиалога.Нет Тогда
			
			Возврат;
			
	КонецЕсли;
		
	Попытка
		ОбъектДляХранилища = Новый ДвоичныеДанные(Диалог.ПолноеИмяФайла);
	Исключение
		Предупреждение(НСтр("ru='Не удалось загрузить внешний отчет!';uk='Не вдалося завантажити зовнішній звіт!'"));
		Возврат;
	КонецПопытки;
	ВнешнийОтчетХранилище = Новый ХранилищеЗначения(ОбъектДляХранилища, Новый СжатиеДанных(9));
	Если ПустаяСтрока(ИсточникОтчета) Тогда
		ИсточникОтчета = ОбъектОтчет.Метаданные().Имя;
	КонецЕсли;
	Если ПустаяСтрока(Наименование) Тогда
		Наименование = ИсточникОтчета;
	КонецЕсли;
	ИсточникОтчетаФайл = Диалог.ПолноеИмяФайла;
	ВнешнийОтчетУправлениеДоступностью();
		
КонецПроцедуры

// Процедура - обработчик события Очистка поля ввода ИсточникОтчетаФайл.
// Удаляет внешний отчет из ИБ.
Процедура ИсточникОтчетаФайлОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ВнешнийОтчетХранилище = Неопределено ИЛИ ВнешнийОтчетХранилище.Получить() = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если Вопрос(НСтр("ru='Удалить хранящийся в информационной базе отчет?';uk='Видалити звіт, що зберігається в інформаційній базі?'"), РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	ВнешнийОтчетХранилище = Неопределено;
	ВнешнийОтчетУправлениеДоступностью();
	Если ВнешнийОтчетХранилище = Неопределено ИЛИ ВнешнийОтчетХранилище.Получить() = Неопределено Тогда
		ИсточникОтчетаФайл = "";
	КонецЕсли;
	Предупреждение(НСтр("ru='Отчет удален из ИБ.';uk='Звіт видалено з ІБ.'"));	
	
КонецПроцедуры

// Процедура управляет доступностью элементов управления, зависящих от признака использования внешнего
// отчета и наличия отчета в ИБ.
// Параметры:
//		Нет.
Процедура ВнешнийОтчетУправлениеДоступностью()
	
	ЭлементыФормы.ИсточникОтчетаФайл.Доступность = ВнешнийОтчетИспользовать;
	ЭлементыФормы.ИсточникОтчета.Доступность = НЕ ВнешнийОтчетИспользовать;
	Если Не ПустаяСтрока(ИсточникОтчета) Тогда
		Если Метаданные.Отчеты.Найти(ИсточникОтчета) <> Неопределено Тогда
			// Открывается элемент справочника, имеющий ссылку на ОтчетОбъект.
			// Считаем, что регламентированные отчеты распространяются фирмой 1С и
			// запрещаем редактирование названия отчета в поле ввода "Файл".
			ЭлементыФормы.ИсточникОтчета.Доступность = Ложь;
		КонецЕсли;
	КонецЕсли;
	ЭлементыФормы.КнопкаСохранитьВнешнийОтчет.Доступность = НЕ (ВнешнийОтчетХранилище = Неопределено ИЛИ ВнешнийОтчетХранилище.Получить() = Неопределено);
	
КонецПроцедуры

// Процедура - обработчик события ПриНажатии кнопки КнопкаСохранитьВнешнийОтчет.
// Сохраняет внешний регламентированный отчет, хранящийся в ИБ, в указанный пользователем файл.
Процедура КнопкаСохранитьВнешнийОтчетНажатие(Элемент)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	Диалог.Заголовок = НСтр("ru='Укажите файл для сохранения';uk='Укажіть файл для збереження'");
	Диалог.МножественныйВыбор = Ложь;
	Диалог.ПроверятьСуществованиеФайла = Истина;
	Диалог.Расширение = "erf";
	Диалог.Фильтр = НСтр("ru='Внешняя обработка (*.erf)|*.erf';uk='Зовнішня обробка (*.erf)|*.erf'");
	
	состояние(НСтр("ru='Получение имени отчета...';uk=""Одержання ім'я звіту..."""));
	Попытка
		ВремФайл = ПолучитьИмяВременногоФайла();
		ВнешнийОтчетХранилище.Получить().Записать(ВремФайл);
		Диалог.ПолноеИмяФайла = ВнешниеОтчеты.Создать(ВремФайл).Метаданные().Имя + ".erf";
	Исключение
		Диалог.ПолноеИмяФайла = ?(ПустаяСтрока(ИсточникОтчета), "", ИсточникОтчета + ".erf");
	Конецпопытки;
	состояние();
	Если НЕ Диалог.Выбрать() Тогда
		Возврат;
	КонецЕсли;
	Попытка
		ВнешнийОтчетХранилище.Получить().Записать(Диалог.ПолноеИмяФайла);
	Исключение
		Предупреждение(НСтр("ru='Не удалось сохранить отчет:';uk='Не вдалося зберегти звіт:'") + Символы.ПС + ОписаниеОшибки());
		Возврат;
	КонецПопытки;
	Предупреждение(НСтр("ru='Отчет успешно выгружен в файл ';uk='Звіт успішно вивантажений у файл '") + Диалог.ПолноеИмяФайла);
	
КонецПроцедуры

// Процедура - обработчик события ПриЗаписи формы.
// В зависимости от изменения настроек использования внешнего регламентированного отчета
// и наличия информации об отчете в кэше регламентированных отчетов, выдает (или не выдает) предупреждение 
// о вступлении изменений в силу только после перезапуска программы.
Процедура ПриЗаписи(Отказ)
	
	Если НЕ (ВнешнийОтчетХранилище = Неопределено ИЛИ ВнешнийОтчетХранилище.Получить() = Неопределено) Тогда
		ИсточникОтчетаФайл = НСтр("ru='Отчет загружен в ИБ';uk='Звіт завантажений в ІБ'");
	Иначе
		ИсточникОтчетаФайл = "";
	КонецЕсли;
	
	ИзмененПризнакИспользованияВнешнегоОтчета = (ВнешнийОтчетИспользовать <> мВнешнийОтчетИспользовать);
	ИзмененВнешнийОтчетХранилище = (ВнешнийОтчетХранилище <> мВнешнийОтчетХранилище);
	
	мВнешнийОтчетИспользовать = ВнешнийОтчетИспользовать;
	мВнешнийОтчетХранилище = ВнешнийОтчетХранилище;
	Оповестить("Обновить дерево отчетов", "Обновить дерево отчетов", ЭтаФорма);
	Если НЕ ИзмененВнешнийОтчетХранилище И НЕ ИзмененПризнакИспользованияВнешнегоОтчета Тогда
		Возврат;
	ИначеЕсли ИзмененВнешнийОтчетХранилище И НЕ ИзмененПризнакИспользованияВнешнегоОтчета Тогда
		Предупреждение(НСтр("ru='Был загружен новый внешний отчет!';uk='Був завантажений новий зовнішній звіт!'"));
	ИначеЕсли НЕ ИзмененВнешнийОтчетХранилище И ИзмененПризнакИспользованияВнешнегоОтчета Тогда
		Предупреждение(НСтр("ru='Был изменен признак использования внешнего отчета!';uk='Була змінена ознака використання зовнішнього звіту!'"));
	ИначеЕсли ИзмененВнешнийОтчетХранилище И ИзмененПризнакИспользованияВнешнегоОтчета Тогда
		Предупреждение(НСтр("ru='Был изменен признак использования внешнего отчета и загружен новый внешний отчет!';uk='Була змінена ознака використання зовнішнього звіту й завантажений новий зовнішній звіт!'"));
	КонецЕсли;
		
КонецПроцедуры

// Процедура - обработчик события ПриИзменении переключателя ВнешнийОтчетИспользовать1.
Процедура ВнешнийОтчетИспользовать1ПриИзменении(Элемент)
	
	ВнешнийОтчетУправлениеДоступностью();
	
КонецПроцедуры
