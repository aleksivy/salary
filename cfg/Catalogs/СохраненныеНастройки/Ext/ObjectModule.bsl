////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУДЛЯ

Перем СтруктураРеквизитов Экспорт;

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ОБЪЕКТА

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Сообщение = "";
	
	ПроверитьОбязательныеРеквизиты(ЭтотОбъект, Отказ, Сообщение);
	
	Если Отказ Тогда
		Сообщить(НСтр("ru='Настройка формы ""';uk='Настройка форми ""'") + Наименование + НСтр("ru='"" не может быть записана:';uk='"" не може бути записана:'") + Сообщение, СтатусСообщения.Важное);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТИРУЕМЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ОБЪЕКТА

// Функция определяет набор реквизитов, которые должны быть заполнены обязательно.
//
// Параметры:
//  Нет.
//
// Возвращаемое значение:
//  Структура, в качестве ключей элементов содержит имена реквизитов.
//
Функция ОбязательныеРеквизиты() Экспорт

	СписокИмен = "Владелец, Наименование, ";
	
	Если НЕ ЭтоГруппа Тогда
		СписокИмен = СписокИмен + "НастраиваемыйОбъект, "
	КонецЕсли;

	Возврат Новый Структура(СписокИмен);

КонецФункции

// Проверяет обязательные реквизиты объекта.
// У объекта должен быть определен экспортируемый метод ОбязательныеРеквизиты().
// У объекта должена быть определена экспортируемая переменная СтруктураРеквизитов.
//
// Параметры:
//  Объект    - объект, реквизиты которого проверяются.
//  Отказ     - Истина, если проверка выявила проблемы. В противном случае не меняется.
//              В параметр удобно передавать параметр Отказ обработчика ПередЗаписью.
//  Сообщение - строка, в которую будут дописаны "замечания", выявленные при проверке.
//              Сформированная таким образом строка может использоваться в вызывающей
//              процедуре в качестве сообщения или предупреждения.
//
Процедура ПроверитьОбязательныеРеквизиты(Объект, Отказ, Сообщение = "", ВлияющиеРеквизиты = "") Экспорт

	Для каждого ЭлементСтруктуры Из Объект.ОбязательныеРеквизиты() Цикл
		ИмяРеквизита = ЭлементСтруктуры.Ключ;

		#Если Клиент Тогда
			Если СохранениеНастроек.ПустоеЗначениеЗначения(Объект[ИмяРеквизита]) Тогда
				СохранениеНастроек.ОтказПриИзмененииРеквизитов(Объект, ИмяРеквизита + ", " + ВлияющиеРеквизиты, Отказ);
				Сообщение = Сообщение + Символы.ПС + НСтр("ru='- Не указано значение реквизита ""';uk='- Не зазначене значення реквізиту ""'") + Объект.СтруктураРеквизитов[ИмяРеквизита] + """.";
			КонецЕсли;
		#КонецЕсли
	КонецЦикла;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// РАЗДЕЛ ОСНОВНОЙ ПРОГРАММЫ

// Проверка возможности записи.

// Представления реквизитов.

СтруктураРеквизитов = Новый Структура();

СтруктураРеквизитов.Вставить("ПометкаУдаления", "Пометка удаления");
СтруктураРеквизитов.Вставить("Владелец",        "Пользователь-владелец");
СтруктураРеквизитов.Вставить("Родитель",        "Группа настроек");
СтруктураРеквизитов.Вставить("Наименование",    "Наименование настройки");

Для каждого Реквизит Из Метаданные.Справочники.СохраненныеНастройки.Реквизиты Цикл
	СтруктураРеквизитов.Вставить(Реквизит.Имя, Реквизит.Представление());
КонецЦикла;
