 
Перем НомераИзмененныхСтрок;  // Хранит номера строк, веса в которых изменены пользователем 

////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Процедура итерационным способом распределяет веса
// Веса, введенные пользователем, не изменяются.
// Процедура работет, если пользователь ввел весов на сумму меньшую 100.
// В ряде случаев процедура снимает пометку с кнопки автоматического распределения весов.
//
// Параметры
//  НЕТ
//
Процедура КорректировкаВесов()
	
	// Создадим таблицу корректировки
	// | Номер строки | нормированный вес | текущий вес | заполнение |
	
	ТабКорректировки = новый ТаблицаЗначений;
	ТабКорректировки.Колонки.Добавить("НомерСтроки");
	ТабКорректировки.Колонки.Добавить("НомированныйВес");
	ТабКорректировки.Колонки.Добавить("ТекущийВес");
	ТабКорректировки.Колонки.Добавить("Заполнение");
	
	РазмерВведеныхПроценов = 0;         // Количество процентов, которые введены пользователем
	РазмерКорректируемыхПроцентов = 0;  // Размер распределяемых процентов
	КоличествоИзмененныхСтрок = 0;      // Количество строк, в которых пользователь внес данные
	
	Для каждого строкаТЧ из ИзучаемыеКомпетенции Цикл
		
		Если НомераИзмененныхСтрок[строкаТЧ.НомерСтроки] = Неопределено Тогда
			СтрокаТАбКорректировки = ТабКорректировки.Добавить();
			СтрокаТАбКорректировки.НомерСтроки = строкаТЧ.НомерСтроки;
			СтрокаТАбКорректировки.НомированныйВес = строкаТЧ.Вес;
			СтрокаТАбКорректировки.ТекущийВес = 0.00000000;
			СтрокаТАбКорректировки.Заполнение = 0.00000000;
			
			РазмерКорректируемыхПроцентов = РазмерКорректируемыхПроцентов + строкаТЧ.Вес;
			КоличествоИзмененныхСтрок = КоличествоИзмененныхСтрок + 1;
		Иначе
			РазмерВведеныхПроценов = РазмерВведеныхПроценов + строкаТЧ.Вес;	
		КонецЕсли;
		
	КонецЦикла;
	
	// Если нет ни одной строки для коррекции - отключить коррекцию
	Если ТабКорректировки.Количество() < 1 Тогда
		ЭлементыФормы.КоманднаяПанель1.Кнопки.КоррекцияВесов.Пометка = Ложь;
		Возврат;
	КонецЕсли;
	
	// нормирование 
	Если  РазмерКорректируемыхПроцентов = 0 Тогда
		Для Каждого СтрокиТБ из ТабКорректировки Цикл
			СтрокиТБ.НомированныйВес = 0;	
		КонецЦикла;		
	Иначе
		Для Каждого СтрокиТБ из ТабКорректировки Цикл
			СтрокиТБ.НомированныйВес = СтрокиТБ.НомированныйВес / РазмерКорректируемыхПроцентов;	
		КонецЦикла;
	КонецЕсли;
	
	РаспределяемыйВес = 100 - РазмерВведеныхПроценов; // Сколько процентов надо распределить 
	
	// Если граничный случай - процентов меньше, чем строк. Минимальный процент - 1%
	КоличествоСтрок = ИзучаемыеКомпетенции.Количество() - КоличествоИзмененныхСтрок;
	Если РаспределяемыйВес < КоличествоСтрок Тогда
		ЭлементыФормы.КоманднаяПанель1.Кнопки.КоррекцияВесов.Пометка = Ложь;
		Возврат	
	КонецЕсли;
	
	// Цикл распределения 
	// ПозицияРаспределения - счетчик итераций
	
	Для  ПозицияРаспределения = 1 по РаспределяемыйВес Цикл
		
		// Найти максимальный разрыв в распределении
		НомерСтрокиДобавления = 0;
		МаксимальныйРазрыв = 1;
		
		Для Индекс = 0 По ТабКорректировки.Количество() - 1 Цикл
			
			СтрокиТБ = ТабКорректировки[Индекс];
			ТекущийРазрыв = СтрокиТБ.ТекущийВес - СтрокиТБ.НомированныйВес;
			
			Если ТекущийРазрыв <= МаксимальныйРазрыв Тогда
				НомерСтрокиДобавления = Индекс; 
				МаксимальныйРазрыв = ТекущийРазрыв;
			КонецЕсли;
			
		КонецЦикла;
		
		// Добавить
		СтрокиТБ = ТабКорректировки[НомерСтрокиДобавления];
		СтрокиТБ.Заполнение = СтрокиТБ.Заполнение + 1;
		
		// Пересчитать	
		Для Каждого СтрокиТБ Из ТабКорректировки Цикл
			СтрокиТБ.ТекущийВес = СтрокиТБ.Заполнение / (ПозицияРаспределения);	
		КонецЦикла;
		
	КонецЦикла;
	
	// Заполнить таблицу весов
	Для Каждого СтрокиТБ Из ТабКорректировки Цикл
		СтрокаТЧ = ИзучаемыеКомпетенции[СтрокиТБ.НомерСтроки - 1 ];
		СтрокаТЧ.Вес = СтрокиТБ.Заполнение;
	КонецЦикла;
	
КонецПроцедуры // КорректировкаВесов()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()
	
	НомераИзмененныхСтрок = новый Соответствие;
	
КонецПроцедуры
             
Процедура ПередЗаписью(Отказ)
	
	// Проверка ввода наименования
	Если НЕ ЗначениеЗаполнено(Наименование) Тогда 
		Сообщить(НСтр("ru='Не введено наименование занятия. Введите наименование';uk='Не введено найменування заняття. Введіть найменування'"),СтатусСообщения.ОченьВажное);
		Отказ = Истина;
	КонецЕсли;
	
	// Проверка ввода компетенции
	Для каждого строкаТЧ из ИзучаемыеКомпетенции Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаТЧ.Компетенция) Тогда 
			НомерСтроки = СтрокаТЧ.НомерСтроки;
			Сообщить("В строке №" + Строка(НомерСтроки) + НСтр("ru=' не введена компетенция. Введите компетенцию';uk=' не введена компетенція. Введіть компетенцію'"));	
			Отказ = Истина;	
		КонецЕсли;
	КонецЦикла;
	
	// Проверка вводв валюты
	Если ЗатратыНаОдногоОбучающегося > 0 И НЕ ЗначениеЗаполнено(Валюта) Тогда 
		Сообщить(НСтр("ru='Не выбрана валюта затрат. Выберите валюту.';uk='Не обрана валюта витрат. Виберіть валюту.'"),СтатусСообщения.ОченьВажное);
		Отказ = Истина;
	КонецЕсли;
	
	// Если затраты = 0 , и валюта пуста - указать управленческую валюту
	Если НЕ ЗначениеЗаполнено(Валюта) Тогда 
		Валюта = Константы.ВалютаУправленческогоУчета.Получить();	
	КонецЕсли;

	// Проверка превышения процентов
	Если ИзучаемыеКомпетенции.Итог("Вес") > 100 Тогда
		
		НомераИзмененныхСтрок.Очистить();
		ОтветНаВопрос = Вопрос(НСтр("ru='Сумма весов изучения компетенций превышает 100%. Скорректировать веса автоматически перед сохранением?';uk='Сума ваг вивчення компетенцій перевищує 100%. Скорегувати ваги автоматично перед збереженням?'"), РежимДиалогаВопрос.ОКОтмена);
		Если ОтветНаВопрос = КодВозвратаДиалога.ОК Тогда
			КорректировкаВесов();
		Иначе
			СтраницаКомпетенций = ЭлементыФормы.Панель1.Страницы.Страница2;
			ЭлементыФормы.Панель1.ТекущаяСтраница = СтраницаКомпетенций; 
			// Включить помощника
			ЭлементыФормы.КоманднаяПанель1.Кнопки.КоррекцияВесов.Пометка = Истина;
			Отказ = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ФОРМЫ

Процедура ДлительностьКурсаПредставлениеРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь; 
	ДлительностьКурса = ДлительностьКурса + Направление * 0.25;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Расчет времени курса, заполнение компетенций.
//
Процедура ОсновныеДействияФормыДействие(Кнопка)
	
	// Если не заполнены занятия - возврат
	Если ЗанятияКурса.Количество() < 1 Тогда
		Возврат;
	КонецЕсли;
	
	// Предупреждение - все будет перерассчитано
	ОтветНаВопрос = Вопрос(НСтр("ru='Будут пересчитаны: длительность курса, набор компетенций и их веса!';uk='Будуть перераховані: тривалість курсу, набір компетенцій і їх ваги!'") + Символы.ПС + "Продолжить?", РежимДиалогаВопрос.ОКОтмена);
	Если ОтветНаВопрос <> КодВозвратаДиалога.ОК Тогда
		Возврат
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ЗанятияКурса",ЗанятияКурса.ВыгрузитьКолонку("Занятие"));
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(Занятия.ДлительностьЗанятия) КАК ОбщееВремя
	|ИЗ
	|	Справочник.ЗанятияКурсовОбучения КАК Занятия
	|ГДЕ
	|	Занятия.Ссылка В(&ЗанятияКурса)";
	Выборка= Запрос.Выполнить().Выбрать();
	ОбщееВремя = 0;
	Если Выборка.Следующий() Тогда
		ОбщееВремя = Выборка.ОбщееВремя
	КонецЕсли;
	ДлительностьКурса = ОбщееВремя;
	
	Запрос.УстановитьПараметр("ОбщееВремя",ОбщееВремя);
	Запрос.Текст =  
	"ВЫБРАТЬ
	|	ЗанятияИзучаемыеКомпетенции.Компетенция,
	|	ЗанятияИзучаемыеКомпетенции.Вес * ВЫБОР
	|		КОГДА &ОбщееВремя = 0
	|			ТОГДА 1
	|		ИНАЧЕ ЗанятияИзучаемыеКомпетенции.Ссылка.ДлительностьЗанятия / &ОбщееВремя
	|	КОНЕЦ КАК Вес
	|ИЗ
	|	Справочник.ЗанятияКурсовОбучения.ИзучаемыеКомпетенции КАК ЗанятияИзучаемыеКомпетенции
	|ГДЕ
	|	ЗанятияИзучаемыеКомпетенции.Ссылка В(&ЗанятияКурса)";
	
	ИзучаемыеКомпетенции.Загрузить(Запрос.Выполнить().Выгрузить());
	
	// Корректировка весов
    // Удалить все зарегистрированные изменения весов
	// т.к. строки удаляются.
	НомераИзмененныхСтрок.Очистить();
	
	КорректировкаВесов();
	
КонецПроцедуры

Процедура ОсновныеДействияФормыПечать(Кнопка)

	Отказ = Ложь;
	
	Если Модифицированность() Тогда
		Если Вопрос(НСтр("ru='Данные еще не записаны! Записать?';uk='Дані ще не записані! Записати?'"), РежимДиалогаВопрос.ОКОтмена,, КодВозвратаДиалога.ОК,) = КодВозвратаДиалога.ОК Тогда
			Отказ = Не ЗаписатьВФорме();
		Иначе
			Возврат
		КонецЕсли;
	КонецЕсли;

	Если Не Отказ Тогда
		Печать(); 
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОЙ ЧАСТИ

// Процедура вызывается при изменении веса в ТЧ 
Процедура ИзучаемыеКомпетенцииВесПриИзменении(Элемент)
	
	Если ЭлементыФормы.КоманднаяПанель1.Кнопки.КоррекцияВесов.Пометка Тогда 
	// скорректировать
		КорректировкаВесов();
	КонецЕсли;
	
КонецПроцедуры

// Процедура вызывается при измении веса в ТЧ
//
Процедура ИзучаемыеКомпетенцииВесОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	НомераИзмененныхСтрок.Вставить(ЭлементыФормы.ИзучаемыеКомпетенции.ТекущаяСтрока.НомерСтроки,Истина);	
	
КонецПроцедуры

Процедура ИзучаемыеКомпетенцииПослеУдаления(Элемент)
	
	// Удалить все зарегистрированные изменения весов
	// т.к. строки сдвигаются.
	НомераИзмененныхСтрок.Очистить();
	
	Если ЭлементыФормы.КоманднаяПанель1.Кнопки.КоррекцияВесов.Пометка Тогда 
		// скорректировать
		КорректировкаВесов();
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ТЧ

Процедура КоманднаяПанель1КоррекцияВесов(Кнопка)
	
	Кнопка.Пометка = НЕ Кнопка.Пометка;
	
	Если Кнопка.Пометка Тогда 
	// скорректировать
		КорректировкаВесов();
	КонецЕсли;
	
КонецПроцедуры


