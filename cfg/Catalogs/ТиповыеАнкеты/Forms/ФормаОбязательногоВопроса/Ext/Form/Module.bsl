////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем ПолныйСписокУсловий;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Процедура УстановитьДоступность()
	
	Если Обязательный = Перечисления.ОбязательностьЗаполненияОтветаНаВопрос.НеОбязателенКЗаполнению или
		 Обязательный = Перечисления.ОбязательностьЗаполненияОтветаНаВопрос.ОбязателенКЗаполнению тогда
		 ЭлементыФормы.Надпись1.Доступность 	 = Ложь;
		 ЭлементыФормы.Надпись2.Доступность 	 = Ложь;
		 ЭлементыФормы.ВопросУсловия.Доступность = Ложь;
		 ЭлементыФормы.УсловиеОтвета.Доступность = Ложь;
		 ЭлементыФормы.Ответ.Доступность         = Ложь;
	Иначе
		 ЭлементыФормы.Надпись1.Доступность 	 = Истина;
		 ЭлементыФормы.Надпись2.Доступность 	 = Истина;
		 ЭлементыФормы.ВопросУсловия.Доступность = Истина;
		 ЭлементыФормы.УсловиеОтвета.Доступность = Истина;
		 ЭлементыФормы.Ответ.Доступность         = Истина;
	КонецЕсли;
	 
КонецПроцедуры

Процедура УстановитьВидимость()
	
	Если УсловиеОтвета = 0 ИЛИ 
		 УсловиеОтвета = 1 ИЛИ 
		 УсловиеОтвета = 8 ИЛИ 
		 УсловиеОтвета = 9 тогда
 		ЭлементыФормы.Ответ.Видимость = Ложь;
		ЭлементыФормы.СписокЗначенийОтвета.Видимость = Ложь;
		Если УсловиеОтвета = 8 ИЛИ 
		     УсловиеОтвета = 9 тогда
			 ЭлементыФормы.СписокЗначенийОтвета.Видимость = Истина;
		КонецЕсли;
	Иначе
		ЭлементыФормы.Ответ.Видимость 					= Истина;
		ЭлементыФормы.СписокЗначенийОтвета.Видимость 	= Ложь;
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьСписокУсловий(ТипОтвета)
	
	СписокУсловий = Новый СписокЗначений;
	
	Если Строка(ТипОтвета) = "Строка" тогда
		СписокУсловий.Добавить(ПолныйСписокУсловий[0].Значение, ПолныйСписокУсловий[0].Представление);
		СписокУсловий.Добавить(ПолныйСписокУсловий[1].Значение, ПолныйСписокУсловий[1].Представление);
	ИначеЕсли Строка(ТипОтвета) = "Число" тогда
		СписокУсловий.Добавить(ПолныйСписокУсловий[4].Значение, ПолныйСписокУсловий[4].Представление);
		СписокУсловий.Добавить(ПолныйСписокУсловий[5].Значение, ПолныйСписокУсловий[5].Представление);
		СписокУсловий.Добавить(ПолныйСписокУсловий[6].Значение, ПолныйСписокУсловий[6].Представление);
		СписокУсловий.Добавить(ПолныйСписокУсловий[7].Значение, ПолныйСписокУсловий[7].Представление);
	ИначеЕсли Строка(ТипОтвета) = "Дата" тогда
		СписокУсловий.Добавить(ПолныйСписокУсловий[4].Значение, ПолныйСписокУсловий[4].Представление);
		СписокУсловий.Добавить(ПолныйСписокУсловий[5].Значение, ПолныйСписокУсловий[5].Представление);
		СписокУсловий.Добавить(ПолныйСписокУсловий[6].Значение, ПолныйСписокУсловий[6].Представление);
		СписокУсловий.Добавить(ПолныйСписокУсловий[7].Значение, ПолныйСписокУсловий[7].Представление);
	ИначеЕсли Строка(ТипОтвета) = "Булево" тогда
		СписокУсловий.Добавить(ПолныйСписокУсловий[2].Значение, ПолныйСписокУсловий[2].Представление);
		СписокУсловий.Добавить(ПолныйСписокУсловий[3].Значение, ПолныйСписокУсловий[3].Представление);
	Иначе // иначе это либо справочник, либо вариант ответа
		СписокУсловий.Добавить(ПолныйСписокУсловий[0].Значение, ПолныйСписокУсловий[0].Представление);
		СписокУсловий.Добавить(ПолныйСписокУсловий[1].Значение, ПолныйСписокУсловий[1].Представление);
		СписокУсловий.Добавить(ПолныйСписокУсловий[2].Значение, ПолныйСписокУсловий[2].Представление);
		СписокУсловий.Добавить(ПолныйСписокУсловий[3].Значение, ПолныйСписокУсловий[3].Представление);
		СписокУсловий.Добавить(ПолныйСписокУсловий[8].Значение, ПолныйСписокУсловий[8].Представление);
		СписокУсловий.Добавить(ПолныйСписокУсловий[9].Значение, ПолныйСписокУсловий[9].Представление);
	КонецЕсли;
	
	Возврат СписокУсловий;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()
	
	Если НЕ ЗначениеЗаполнено(Обязательный) тогда
		Обязательный = Перечисления.ОбязательностьЗаполненияОтветаНаВопрос.НеОбязателенКЗаполнению;
	КонецЕсли;
	ЭлементыФормы.Надпись1.Заголовок = НСтр("ru='Ответ на вопрос ""';uk='Відповідь на питання ""'") + ВопросИсходный + НСтр("ru='"" обязателен к заполнению при условии, что на вопрос ';uk='"" обов''язковий до заповнення за умови, що на питання '");
	ЭлементыФормы.Надпись3.Заголовок = НСтр("ru='Ответ на вопрос ""';uk='Відповідь на питання ""'") + ВопросИсходный + """ ...";
	УсловиеОтветаДо = УсловиеОтвета;
	ЭлементыФормы.УсловиеОтвета.СписокВыбора = ПолучитьСписокУсловий(ВопросУсловия.ТипЗначения);
	УсловиеОтвета = УсловиеОтветаДо;
	УстановитьДоступность();
	УстановитьВидимость();
	ЭлементыФормы.СписокЗначенийОтвета.ОтборСтрок.ВопросВладелец.Значение 		= ВопросИсходный;
	ЭлементыФормы.СписокЗначенийОтвета.ОтборСтрок.ВопросВладелец.Использование 	= Истина;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

Процедура ОсновныеДействияФормыОК(Кнопка)
	
	Закрыть("ОК");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура ОбязательныйПриИзменении(Элемент)
	
	 УстановитьДоступность()
	 
КонецПроцедуры

Процедура ВопросУсловияНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВыбранноеЗначение	 = СписокВопросовДляВыбора.ВыбратьЭлемент(НСтр("ru='Выберите вопрос';uk='Виберіть запитання'"), Элемент.Значение);
	Если ВыбранноеЗначение <> Неопределено тогда
		Элемент.Значение 	 = ВыбранноеЗначение.Значение;
		Ответ = Элемент.Значение.ТипЗначения.ПривестиЗначение();
		Если Элемент.Значение.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ВариантыОтветовОпросов")) Тогда
			ЭлементыФормы.Ответ.ВыборПоВладельцу = Элемент.Значение;
		КонецЕсли;                                     
		ЭлементыФормы.УсловиеОтвета.СписокВыбора = ПолучитьСписокУсловий(ВопросУсловия.ТипЗначения);
		ЭлементыФормы.СписокЗначенийОтвета.ОтборСтрок.ВопросВладелец.Значение 		= ВопросИсходный;
		ЭлементыФормы.СписокЗначенийОтвета.ОтборСтрок.ВопросВладелец.Использование 	= Истина;
		УсловиеОтвета = "";
		УстановитьВидимость();
	КонецЕсли;
	
КонецПроцедуры

Процедура УсловиеОтветаПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ <Наименование>

Процедура СписокЗначенийОтветаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока тогда
		Элемент.ТекущиеДанные.ЗначениеСписка = ВопросУсловия.ТипЗначения.ПривестиЗначение();
		Элемент.ТекущиеДанные.ВопросВладелец = ВопросИсходный;
	КонецЕсли;
	
КонецПроцедуры

Процедура СписокЗначенийОтветаПередНачаломДобавления(Элемент, Отказ, Копирование)
	Если НЕ ЗначениеЗаполнено(ВопросУсловия) тогда
		Сообщить(НСтр("ru='Выберите вопрос условия';uk='Виберіть запитання умови'"));
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

ПолныйСписокУсловий = ЭлементыФормы.УсловиеОтвета.СписокВыбора.Скопировать();

