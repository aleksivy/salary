////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мОбработкаПоискаПоСтроке;
Перем мТекстПоискаПоСтроке;
Перем мПоследнееЗначениеЭлементаПоискаПоСтроке;

Перем мСписокДоступныхЗаписей;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция ПроверкаПередОтправкой() Экспорт

	ЗначениеВозврата = Истина;

	Если Получатели.Количество() = 0 тогда
		Сообщить(НСтр("ru='Не указан ни один получатель письма!';uk='Не вказаний жоден одержувач листа!'"));
		ЗначениеВозврата = Ложь;
	КонецЕсли;
	Если	НЕ ЗначениеЗаполнено(ЭлектронныйАдресОтветов)	тогда
		Сообщить(НСтр("ru='Не указан e-mail ответов!';uk='Не вказаний e-mail відповідей!'"));
		Возврат Ложь;
	КонецЕсли;
	Для каждого Получатель из Получатели Цикл
		Если НЕ ЗначениеЗаполнено(Получатель.Получатель) тогда
			Если Анкета.ЗагружатьОбъекты тогда
				Сообщить(НСтр("ru='Укажите e-mail для получателя ';uk='Вкажіть e-mail для одержувача '")+Получатель.Объект);
			Иначе
				Сообщить(НСтр("ru='Укажите e-mail для получателя';uk='Вкажіть e-mail для одержувача'"));
			КонецЕсли;
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ЗначениеВозврата;

КонецФункции // ПроверкаДокументаПередОтправкой()

Процедура ОтправитьАнкету() Экспорт
	
	Если НЕ ПроверкаПередОтправкой() тогда
		Возврат;
	КонецЕсли;
	Если НЕ Константы.ИспользованиеВстроенногоПочтовогоКлиента.Получить() тогда
		ПочтаОбъект = Новый Почта;
		ПочтаОбъект.Подключиться();
		
		Для каждого ПолучательПисьма из Получатели Цикл
			
			// сформируем вложение html
			ОпрашиваемоеЛицо = ПолучательПисьма.Объект;
			Если НЕ Анкета.ПолучитьОбъект().СформироватьВложение(ОпрашиваемоеЛицо, ЭлектронныйАдресОтветов) тогда
				Сообщить(НСтр("ru='Анкета не отправлена!';uk='Анкета не відправлена!'"), СтатусСообщения.Важное);
				Возврат;
			КонецЕсли;
			
			ЭлектронноеПисьмо       = Новый ПочтовоеСообщение;
			ЭлектронноеПисьмо.Тема  = Анкета.Наименование + ". "+?(Анкета.Адресная, ?(НЕ ЗначениеЗаполнено(ПолучательПисьма.Объект), "", ПолучательПисьма.Объект.Наименование), "");
			ЭлектронноеПисьмо.Текст = ТекстПисьма;

			ЭлектронноеПисьмо.Получатели.Добавить(ПолучательПисьма.Получатель);

			Для каждого Вложение Из Вложения Цикл
				ЭлектронноеПисьмо.Вложения.Добавить(Вложение.Вложение.Получить(), Вложение.ИмяФайла);
			КонецЦикла;
			// после того, как записали все вложения, еще добавим вложение анкеты
			ИмяФайла = Анкета.ПолучитьОбъект().ПолучитьИмяФайлаАнкеты();
			ЭлектронноеПисьмо.Вложения.Добавить(Новый ДвоичныеДанные(КаталогВременныхФайлов()+ИмяФайла), ИмяФайла);

			ПочтаОбъект.Послать(ЭлектронноеПисьмо, СУведомлениемОПолучении);
			
		КонецЦикла;
		
		ПочтаОбъект.Отключиться();
	Иначе
		
		Если НЕ ЗначениеЗаполнено(УчетнаяЗаписьДляОтправки) Тогда
			Предупреждение(НСтр("ru='Не задана учетная запись для отправки писем.';uk='Не заданий обліковий запис для відправки листів.'"));
			Возврат;
		КонецЕсли;
		
		ЭлектронныеПисьма = Новый Соответствие();
		
		// отправляем при помощи встроенного почтового клиента
		Для каждого ПолучательПисьма из Получатели Цикл
			
			Состояние(НСтр("ru='Формируются электронные письма с анкетами ';uk='Формуються електронні листи з анкетами '") + Строка(Получатели.Индекс(ПолучательПисьма) + 1) + НСтр("ru=' из ';uk=' з '") + Получатели.Количество());
			
			Если НЕ ЗначениеЗаполнено(ПолучательПисьма.Получатель) Тогда
				Продолжить;
			КонецЕсли; 
			
			// сформируем вложение html
			ОпрашиваемоеЛицо = ПолучательПисьма.Объект;
			Если НЕ Анкета.ПолучитьОбъект().СформироватьВложение(ОпрашиваемоеЛицо, ?(ТипЗнч(ЭлектронныйАдресОтветов) = Тип("СправочникСсылка.УчетныеЗаписиЭлектроннойПочты"), ЭлектронныйАдресОтветов.АдресЭлектроннойПочты, ЭлектронныйАдресОтветов)) тогда
				Сообщить(НСтр("ru='Анкета не сформирована!';uk='Анкета не сформована!'"), СтатусСообщения.Важное);
				Продолжить;;
			КонецЕсли;
			
			СтруктураПараметров = Новый Структура();
			СтруктураПараметров.Вставить("УчетнаяЗапись", УчетнаяЗаписьДляОтправки);
			СтруктураПараметров.Вставить("Тема", (Анкета.Наименование + ". "+?(Анкета.Адресная, ?(НЕ ЗначениеЗаполнено(ПолучательПисьма.Объект), "", ПолучательПисьма.Объект.Наименование), "")));
			СтруктураПараметров.Вставить("Тело", ТекстПисьма);
			
			СписокКому = Новый СписокЗначений;
			СписокКому.Добавить(ПолучательПисьма.Получатель, ?(НЕ ЗначениеЗаполнено(ПолучательПисьма.Объект), ПолучательПисьма.Получатель, СокрЛП(ПолучательПисьма.Объект)));
			СтруктураПараметров.Вставить("Кому", СписокКому);
			
			ИмяФайла = Анкета.ПолучитьОбъект().ПолучитьИмяФайлаАнкеты();
			СписокФайловВложений = Новый СписокЗначений;
			СтруктураВложения = Новый Структура("ВидДанных, ИмяФайла, Наименование, Хранилище", Перечисления.ВидыДополнительнойИнформацииОбъектов.Файл,
												ИмяФайла, ИмяФайла, (КаталогВременныхФайлов() + ИмяФайла));
			СписокФайловВложений.Добавить(СтруктураВложения);
			
			Для каждого Вложение Из Вложения Цикл
				СтруктураВложения = Новый Структура("ВидДанных, ИмяФайла, Наименование, Хранилище", Перечисления.ВидыДополнительнойИнформацииОбъектов.Файл,
													Вложение.ИмяФайла, Вложение.ИмяФайла, Вложение.Вложение);
				СписокФайловВложений.Добавить(СтруктураВложения);
			КонецЦикла;
			СтруктураПараметров.Вставить("СписокФайловВложений", СписокФайловВложений);
			
			НачатьТранзакцию();
			
			СтруктураПисьма = УправлениеЭлектроннойПочтой.НаписатьПисьмо(глЗначениеПеременной("глТекущийПользователь"),СтруктураПараметров,,,,,, Истина, Ложь);
			
			Если ТипЗнч(СтруктураПисьма) <> Тип("Структура") Тогда
				ОтменитьТранзакцию();
				ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru='Письмо получателю ';uk='Лист одержувачу '") + ?(НЕ ЗначениеЗаполнено(ПолучательПисьма.Объект), ПолучательПисьма.Получатель, СокрЛП(ПолучательПисьма.Объект)) + НСтр("ru=' не отправлено.';uk=' не відправлено.'"));
				Если ТипЗнч(СтруктураПисьма) = Тип("Строка") Тогда
					ОбщегоНазначения.СообщитьОбОшибке(СтруктураПисьма);
				КонецЕсли; 
				Продолжить;
			Иначе
				ЗафиксироватьТранзакцию();
				ЭлектронныеПисьма.Вставить(СтруктураПисьма.ПисьмоСсылка);
			КонецЕсли; 
			
		КонецЦикла;
		
		УправлениеЭлектроннойПочтой.ОтправитьПисьма(ЭлектронныеПисьма, глЗначениеПеременной("глСоответствиеТекстовЭлектронныхПисем"));
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	мСписокДоступныхЗаписей = УправлениеЭлектроннойПочтой.ПроверитьУчетныеЗаписиДляОтправкиПисем(Отказ);
	
	Если НЕ Отказ Тогда
		ЭлементыФормы.УчетнаяЗаписьДляОтправки.СписокВыбора = мСписокДоступныхЗаписей;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ЭлементыФормы.ЭлектронныйАдресОтветов.ОграничениеТипа = Новый ОписаниеТипов("Строка");
	ЭлементыФормы.ЭлектронныйАдресОтветов.ВыбиратьТип = Ложь;
	
	Если НЕ Константы.ИспользованиеВстроенногоПочтовогоКлиента.Получить() Тогда
		ВосстановленноеЗначение = ВосстановитьЗначение("АдресЭлектроннойПочтыОтветовСтандартныйКлиент");
		Если ТипЗнч(ВосстановленноеЗначение) = Тип("Строка") Тогда
			ЭлектронныйАдресОтветов = ВосстановленноеЗначение;
		Иначе
			ЭлектронныйАдресОтветов = "";
		КонецЕсли;
		ЭлементыФормы.ПанельАдресовЭлектроннойПочты.ТекущаяСтраница = ЭлементыФормы.ПанельАдресовЭлектроннойПочты.Страницы.ВнешнийПочтовыйКлиент;
	Иначе
		ВосстановленноеЗначение = ВосстановитьЗначение("УчетнаяЗаписьДляОтправки");
		Если ТипЗнч(ВосстановленноеЗначение) = Тип("СправочникСсылка.УчетныеЗаписиЭлектроннойПочты") И ВосстановленноеЗначение.ПолучитьОбъект() <> Неопределено Тогда
			УчетнаяЗаписьДляОтправки = ВосстановленноеЗначение;
		Иначе
			УчетнаяЗаписьДляОтправки = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяУчетнаяЗапись");
		КонецЕсли;
		Если мСписокДоступныхЗаписей.НайтиПоЗначению(УчетнаяЗаписьДляОтправки) = Неопределено Тогда
			УчетнаяЗаписьДляОтправки = мСписокДоступныхЗаписей[0].Значение;
		КонецЕсли;
		ЭлементыФормы.ПанельАдресовЭлектроннойПочты.ТекущаяСтраница = ЭлементыФормы.ПанельАдресовЭлектроннойПочты.Страницы.ВстроенныйПочтовыйКлиент;
		ВосстановленноеЗначение = ВосстановитьЗначение("АдресЭлектроннойПочтыОтветовВстроенныйКлиент");
		Если (ТипЗнч(ВосстановленноеЗначение) = Тип("СправочникСсылка.УчетныеЗаписиЭлектроннойПочты") И ВосстановленноеЗначение.ПолучитьОбъект() <> Неопределено)
		 ИЛИ ТипЗнч(ВосстановленноеЗначение) = Тип("Строка") Тогда
			ЭлектронныйАдресОтветов = ВосстановленноеЗначение;
		КонецЕсли;
		Если ЭлектронныйАдресОтветов = Неопределено Тогда
			ЭлектронныйАдресОтветов = Справочники.УчетныеЗаписиЭлектроннойПочты.ПустаяСсылка();
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ЭлектронныйАдресОтветов) И ЗначениеЗаполнено(УчетнаяЗаписьДляОтправки) Тогда
			ЭлектронныйАдресОтветов = УчетнаяЗаписьДляОтправки;
		КонецЕсли; 
	КонецЕсли; 
	
	Вложения.Колонки.Вставить(0, "Вложение", Новый ОписаниеТипов("ХранилищеЗначения"), "Вложение");
	ЭлементыФормы.Вложения.СоздатьКолонки();
	ЭлементыФормы.Вложения.Колонки[0].Видимость = Ложь;
	ТекстПисьма = НСтр("ru='Правила работы с анкетой:"
"Прежде всего следует сохранить приложенный файл с расширением .ank у себя на диске."
"Для того, что бы заполнить анкету необходимо запустить Internet Explorer. "
"После чего войти в меню ""Файл"", выбрать пункт ""Открыть"", найти файл, который только что был сохранен, и открыть его."
"В появляющихся диалогах следует отвечать Да/Yes."
"После того, как анкета заполнена можно отправить ее по почте, если доступна соответствующая кнопка."
"Если кнопка отправки недоступна, то следует сохранить ответы в каталог, предварительно указав путь, и отправить получившийся файл"
"по почте на требуемый электронный адрес.';uk='Правила роботи з анкетою:"
"Насамперед слід зберегти файл з розширенням .ank, що додаєтсья, у себе на диску."
"Для того, що б заповнити анкету необхідно запустити Internet Explorer. "
"Після чого увійти в меню ""Файл"", виберіть пункт ""Відкрити"", знайти файл, який тільки що був збережений, і відкрити його."
"У діалогах, що з''являються, слід відповідати Так/Yes."
"Після того, як анкета заповнена можна надіслати її поштою, якщо доступна відповідна кнопка."
"Якщо кнопка відправки недоступна, то слід зберегти відповіді в каталог, попередньо вказавши шлях, і відправити отриманий файл"
"поштою на необхідну електронну адресу.'");
	АнкетаПриИзменении(ЭлементыФормы.Анкета);
	
	мПоследнееЗначениеЭлементаПоискаПоСтроке = ЭлектронныйАдресОтветов;
	
КонецПроцедуры

Процедура ПриЗакрытии()
	
	Если НЕ Константы.ИспользованиеВстроенногоПочтовогоКлиента.Получить() Тогда
		СохранитьЗначение("АдресЭлектроннойПочтыОтветовСтандартныйКлиент", ЭлектронныйАдресОтветов);
	Иначе
		СохранитьЗначение("АдресЭлектроннойПочтыОтветовВстроенныйКлиент", ЭлектронныйАдресОтветов);
		СохранитьЗначение("УчетнаяЗаписьДляОтправки", УчетнаяЗаписьДляОтправки);
	КонецЕсли; 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура, осуществляющая подключение к почтовому клиенту и отправку почты через него
//
// Параметры: 
//  кнопка - элемент управления
//
// Возвращаемое значение:
//  Нет.
//
Процедура ОсновныеДействияФормыОтправить(Кнопка)

	ОтправитьАнкету();

КонецПроцедуры

// Процедура, автоматического создания XML,XSL -> HTML файла анкеты для его 
// вложения в рассылку
//
// Параметры: 
//  кнопка - элемент управления
//
// Возвращаемое значение:
//  Нет.
//
Процедура КоманднаяПанель1СформироватьВложение(Кнопка) Экспорт
	
 	Анкета.ПолучитьОбъект().СформироватьВложение();
	
КонецПроцедуры

Процедура ПроведениеПоКнопкеОК(Кнопка)
	
	ОтправитьАнкету();
	///Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
	Закрыть();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура АнкетаПриИзменении(Элемент)
	
	// при изменении анкеты установим тип получателя
	Если НЕ ЗначениеЗаполнено(Анкета.ВидСправочникаДляЗагрузки) и Анкета.ЗагружатьОбъекты тогда
		Сообщить(НСтр("ru='В анкете не указан справочник для загрузки объектов!';uk=""В анкеті не зазначений довідник для завантаження об'єктів!"""));
		Возврат;
	КонецЕсли;
	
	Если НЕ Анкета.Адресная тогда
		// если анкета не адресная, тогда оствим одну колонку и выйдем
		ЭлементыФормы.Получатели.СоздатьКолонки();
		ЭлементыФормы.Получатели.Колонки[0].Видимость = Ложь;
		Возврат;
	Иначе
		ТипСправочникаПолучателя = Новый ОписаниеТипов("");
		Если Анкета.ВидСправочникаДляЗагрузки = Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.ФизическиеЛица тогда
			ТипСправочникаПолучателя = Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица")
		ИначеЕсли Анкета.ВидСправочникаДляЗагрузки = Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.Контрагенты тогда
			ТипСправочникаПолучателя = Новый ОписаниеТипов("СправочникСсылка.Контрагенты")
		КонецЕсли;
		Получатели.Колонки.Удалить(0);
		Получатели.Колонки.Вставить(0, "Объект", ТипСправочникаПолучателя, "Получатель", 10);
	КонецЕсли;
	ЭлементыФормы.Получатели.СоздатьКолонки();
	Если ТипСправочникаПолучателя <> Новый ОписаниеТипов("") тогда
		ЭлементыФормы.Получатели.Колонки[1].ТолькоПросмотр = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура УчетнаяЗаписьДляОтправкиОчистка(Элемент, СтандартнаяОбработка)
	
	Отказ = Истина;
	
КонецПроцедуры

Процедура ЭлектронныйАдресОтветовВстроенныйПочтовыйКлиентОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Элемент.Значение = Справочники.УчетныеЗаписиЭлектроннойПочты.ПустаяСсылка();
	
КонецПроцедуры

Процедура ЭлектронныйАдресОтветовВстроенныйПочтовыйКлиентАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	ПроцедурыПоискаПоСтроке.АвтоПодборТекстаВЭлементеУправления(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка, Новый Структура, Тип("СправочникСсылка.УчетныеЗаписиЭлектроннойПочты"));
	
КонецПроцедуры

Процедура ЭлектронныйАдресОтветовВстроенныйПочтовыйКлиентОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	ПроцедурыПоискаПоСтроке.ОкончаниеВводаТекстаВЭлементеУправления(Элемент, Текст, Значение, СтандартнаяОбработка, Новый Структура, ЭтаФорма, Тип("СправочникСсылка.УчетныеЗаписиЭлектроннойПочты"), мОбработкаПоискаПоСтроке, мТекстПоискаПоСтроке, мПоследнееЗначениеЭлементаПоискаПоСтроке);
	
КонецПроцедуры

Процедура ЭлектронныйАдресОтветовВстроенныйПочтовыйКлиентПриИзменении(Элемент)
	
	мПоследнееЗначениеЭлементаПоискаПоСтроке = Элемент.Значение;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ Получатели

Процедура ПолучателиПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если Элемент.Колонки.Количество() < 2 тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Объект", ДанныеСтроки.Объект);
	Запрос.УстановитьПараметр("Тип"   , Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	КонтактнаяИнформация.Представление
	|ИЗ
	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ
	|	КонтактнаяИнформация.Объект = &Объект
	|	И
	|	КонтактнаяИнформация.Тип = &Тип
	|";
	
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
	
	Если ТаблицаЗапроса.Количество() > 0 Тогда
		ДанныеСтроки.Получатель = ТаблицаЗапроса[0].Представление;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ Вложения

// Обработчик события при начале редактирования строки табличной части
//
// Параметры: 
//  Элемент 	- 	элемент управления табличное поле
//	НоваяСтрока	-	добавляемая строка
//
// Возвращаемое значение:
//  Нет.
//
Процедура ВложенияПриНачалеРедактирования(Элемент, НоваяСтрока)

	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);

	ДиалогОткрытияФайла.Заголовок      = НСтр("ru='Выберите файл вложения';uk='Виберіть файл вкладення'");
	ДиалогОткрытияФайла.ПолноеИмяФайла = "";
	ДиалогОткрытияФайла.Фильтр         = НСтр("ru='Все файлы  (*.*)|*.*';uk='Усі файли (*.*)|*.*'");
	ДиалогОткрытияФайла.ПредварительныйПросмотр = Истина;

	Если ДиалогОткрытияФайла.Выбрать() Тогда

		Попытка
			ВыбранныйФайл = Новый ДвоичныеДанные(ДиалогОткрытияФайла.ПолноеИмяФайла);
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;

		Элемент.ТекущаяСтрока.Вложение = Новый ХранилищеЗначения(ВыбранныйФайл);
		ФайлНаДиске = Новый Файл(ДиалогОткрытияФайла.ПолноеИмяФайла);

		Элемент.ТекущаяСтрока.ИмяФайла = ФайлНаДиске.Имя;

	Иначе
		Отказ = Истина;
		Возврат;
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

мОбработкаПоискаПоСтроке = Ложь;
мТекстПоискаПоСтроке = "";
мПоследнееЗначениеЭлементаПоискаПоСтроке = Неопределено;
