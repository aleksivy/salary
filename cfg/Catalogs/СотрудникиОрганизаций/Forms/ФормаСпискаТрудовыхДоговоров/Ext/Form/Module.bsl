////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Процедура УстановитьЗаголовкиОрганизацийВФорме()
	
	ЭлементыФормы.ОрганизацияФлаг.Заголовок = ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Организация:");
	ЭлементыФормы.СправочникСписок.Колонки.ОбособленноеПодразделение.ТекстШапки = ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Организация");
	
КонецПроцедуры // УстановитьЗаголовкиОрганизацийВФорме()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

//  Процедура печатает выбранный документ 
// Печатается та форма, которая была отпечатана при нажатии в документе кнопки
// печати по умолчанию
//
Процедура ДействияФормыДействиеПечать(Кнопка)
	
	Сотрудник = ЭлементыФормы.СправочникСписок.ТекущаяСтрока;
	Если Сотрудник = Неопределено Или Сотрудник.ЭтоГруппа тогда
		Возврат
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокументИзФормыСписка(Сотрудник.ПолучитьОбъект());

КонецПроцедуры // ДействияФормыДействиеПечать()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	СправочникСписок.Отбор.ВидДоговора.ВидСравнения = ВидСравнения.ВСписке;
	
	СписокЗначенийДляОтбора = Новый СписокЗначений;
	СписокЗначенийДляОтбора.Добавить(Перечисления.ВидыДоговоровСФизЛицами.ТрудовойДоговор);

	СправочникСписок.Отбор.ВидДоговора.Значение = СписокЗначенийДляОтбора;
	СправочникСписок.Отбор.ВидДоговора.Использование = Истина;
	
	РаботаСДиалогами.ЗаполнениеОтбораПоОрганизацииПоУмолчанию(ЭтаФорма, Отбор.Организация, ЭлементыФормы.Организация, НеОпределено, Ложь, глЗначениеПеременной("глТекущийПользователь"));
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	УстановитьЗаголовкиОрганизацийВФорме();
	
КонецПроцедуры
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура ОрганизацияПриИзменении(Элемент)
	
	Если Элемент.Значение = Неопределено Тогда
		Элемент.Значение = Справочники.Организации.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры

Процедура СправочникСписокПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ФормаСотрудника = ТекущиеДанные.Ссылка.ПолучитьФорму("ФормаЭлемента", Элемент, ТекущиеДанные.Ссылка);
	ФормаСотрудника.ОткрытьКакТрудовойДоговор = Истина;
	ФормаСотрудника.Открыть();
	
КонецПроцедуры

Процедура СправочникСписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа)
	
	Если Не ЭтоГруппа Тогда
		
		ВидДоговораСотрудника = Перечисления.ВидыДоговоровСФизЛицами.ТрудовойДоговор;
		ОрганизацияСотрудника = Справочники.Организации.ПустаяСсылка();
		
		Если ТипЗнч(СправочникСписок.Отбор.Организация.Значение) = Тип("СправочникСсылка.Организации") 
			и СправочникСписок.Отбор.Организация.Использование
			и СправочникСписок.Отбор.Организация.ВидСравнения = ВидСравнения.Равно Тогда
			ОрганизацияСотрудника = СправочникСписок.Отбор.Организация.Значение;
		КонецЕсли;
		
		// проверим какую форму надо использовать
		ИспользоватьПомощника = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ИспользоватьПомощникаПриемаНаРаботу");
		Если ИспользоватьПомощника Тогда
			Форма = Справочники.СотрудникиОрганизаций.ПолучитьФормуНовогоЭлемента("ФормаПомощник", Элемент);
			Отказ = истина;
		Иначе
			Форма = Справочники.СотрудникиОрганизаций.ПолучитьФормуНовогоЭлемента(,Элемент);
		КонецЕсли;
		
		Если Форма.Открыта() Тогда
			// просто активизируем уже открытую форму
			Форма.Активизировать();
			Возврат;
		КонецЕсли;
		
		Форма.Организация = ОрганизацияСотрудника;
		Форма.ВидДоговора = ВидДоговораСотрудника;
		Форма.Родитель = Родитель;
		Форма.Открыть();
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

СправочникСписок.Порядок.Установить("ДатаДоговора");

