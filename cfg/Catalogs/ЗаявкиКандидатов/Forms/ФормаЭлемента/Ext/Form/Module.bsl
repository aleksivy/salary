////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мОбновлятьВладельца;

Перем мРежимНабораПерсонала;

// Переменные механизма поиска по подстроке
Перем мОбработкаТайпинга;
Перем мТекстТайпинга;
Перем мПоследнееЗначениеЭлементаТайпинга;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Процедура ПриИзмененииВакансии()
	
	ЭлементыФормы.Должность.ТолькоПросмотр					= Не Вакансия.Пустая();
	ЭлементыФормы.Подразделение.ТолькоПросмотр				= Не Вакансия.Пустая();
	ЭлементыФормы.ПодразделениеОрганизации.ТолькоПросмотр	= Не Вакансия.Пустая();
	ЭлементыФормы.Организация.ТолькоПросмотр				= Не Вакансия.Пустая();
	
КонецПроцедуры

Функция ПолучитьСтруктуруПараметровТайпинга()
	
	СтруктураПараметров = Новый Структура("Закрыта", Ложь);
	
	Возврат СтруктураПараметров;

КонецФункции // ПолучитьСтруктуруПараметровТайпинга()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()
	
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Код);
	
	мРежимНабораПерсонала = Константы.РежимНабораПерсонала.Получить();
	Если мРежимНабораПерсонала.Пустая() Тогда
		мРежимНабораПерсонала	= Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоЦентрамОтветственности;
	КонецЕсли;
	
	Если ЭтоНовый() Тогда
		
		Если Не ЗначениеЗаполнено(ДатаОткрытия) Тогда
			ДатаОткрытия			= РабочаяДата;
		КонецЕсли;
		Если Важность.Пустая() Тогда
			Важность				= Перечисления.Важность.Средняя;
		КонецЕсли;
		
		Если Не Вакансия.Пустая() Тогда
			Должность		= Вакансия.Должность;
			Подразделение	= Вакансия.Подразделение;
			Организация		= Вакансия.Организация;
		КонецЕсли;
		
		Если мРежимНабораПерсонала = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоЦентрамОтветственности Тогда
			Если Подразделение = Неопределено ИЛИ Подразделение.Пустая() Тогда
				Подразделение = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновноеПодразделение");
			КонецЕсли;
		Иначе
			Если Подразделение = Неопределено ИЛИ Подразделение.Пустая() Тогда
				Подразделение	= УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновноеПодразделениеОрганизации");
				Организация		= Подразделение.Владелец;
			КонецЕсли;
			Если Организация.Пустая() Тогда
				Если Подразделение.Пустая() Тогда
					Организация		= УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");
				Иначе
					Организация		= Подразделение.Владелец;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если Ответственный.Пустая() Тогда
			Ответственный	= УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнойОтветственный");
		КонецЕсли;
	КонецЕсли;
	
	ПриИзмененииВакансии();
	
	Если мРежимНабораПерсонала = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
		ЭлементыФормы.ПанельРежимНабораПерсонала.ТекущаяСтраница = ЭлементыФормы.ПанельРежимНабораПерсонала.Страницы.ПоСтруктуреЮридическихЛиц;
	Иначе
		ЭлементыФормы.ПанельРежимНабораПерсонала.ТекущаяСтраница = ЭлементыФормы.ПанельРежимНабораПерсонала.Страницы.ПоЦентрамОтветственности;
	КонецЕсли;
	
	//СтруктураРеквизитов = Новый Структура;
	//СтруктураРеквизитов.Вставить("Наименование");
	//СтруктураРеквизитов.Вставить("Состояние");
	
	Если Закрыта Тогда
		ТекущийЭлемент = ЭлементыФормы.РезультатЗакрытия;
	//ИначеЕсли Не РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма, СтруктураРеквизитов) Тогда
	//	ТекущийЭлемент = ЭлементыФормы.Комментарий;
	Иначе
		РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если Модифицированность И ВладелецФормы <> Неопределено И НЕ ЭтоНовый() Тогда
		мОбновлятьВладельца = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеЗаписи()
	
	Оповестить("ЗаписанаЗаявкаКандидата");
	
КонецПроцедуры

Процедура ПриЗакрытии()
	
	Если мОбновлятьВладельца Тогда
		ОповеститьОЗаписиНовогоОбъекта(Ссылка);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

Процедура ДействияФормыФайлы(Кнопка)

	Отказ = Ложь;

	Если ЭтоНовый() Тогда
		ТекстВопроса = НСтр("ru='Перед вводом файлов и изображений необходимо записать элемент. Записать?';uk='Перед введенням файлів і зображень необхідно записати елемент. Записати?'");
		Ответ  = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Если Ответ = КодВозвратаДиалога.ОК Тогда
			Отказ = Не ЗаписатьВФорме();
		Иначе
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;

	Если НЕ Отказ Тогда
		СтруктураДляСпискаИзображдений = Новый Структура("ОтборОбъектИспользование, ОтборОбъектЗначение, ДоступностьОтбораОбъекта, ВидимостьКолонкиОбъекта", Истина, Ссылка, Ложь, Ложь);
		СтруктураДляСпискаДополнительныхФайлов = Новый Структура("ОтборОбъектИспользование, ОтборОбъектЗначение, ДоступностьОтбораОбъекта, ВидимостьКолонкиОбъекта", Истина, Ссылка, Ложь, Ложь);
		ОбязательныеОтборы = Новый Структура("Объект", Ссылка);
		
		РаботаСФайлами.ОткрытьФормуСпискаФайловИИзображений(СтруктураДляСпискаИзображдений, СтруктураДляСпискаДополнительныхФайлов, ОбязательныеОтборы, ЭтаФорма);
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура ПодразделениеОчистка(Элемент, СтандартнаяОбработка)
	
	Если мРежимНабораПерсонала = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
		Если ТипЗнч(Подразделение) <> Тип("СправочникСсылка.ПодразделенияОрганизаций") Тогда
			Подразделение = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
		КонецЕсли;
	Иначе
		Если ТипЗнч(Подразделение) <> Тип("СправочникСсылка.Подразделения") Тогда
			Подразделение = Справочники.Подразделения.ПустаяСсылка();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПодразделениеОрганизацииПриИзменении(Элемент)
	
	Если Не Подразделение.Пустая() И Организация.Пустая() Тогда
		Организация = Подразделение.Владелец;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВакансияПриИзменении(Элемент)
	
	ПриИзмененииВакансии();
	
	Если Не Вакансия.Пустая() Тогда
		Должность		= Вакансия.Должность;
		Подразделение	= Вакансия.Подразделение;
		Организация		= Вакансия.Организация;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ЗаписанаВакансия" И Источник = ЭтаФорма Тогда
		Должность		= Вакансия.Должность;
		Подразделение	= Вакансия.Подразделение;
		Организация		= Вакансия.Организация;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВакансияОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Элемент.Значение.ПолучитьФорму(, ЭтаФорма, ЭтотОбъект).Открыть();
	
КонецПроцедуры

Процедура ВакансияНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Форма = Справочники.Вакансии.ПолучитьФормуВыбора(, Элемент, Ссылка);
	Форма.НачальноеЗначениеВыбора	= Элемент.Значение;
	Форма.СправочникСписок.Отбор.Закрыта.Установить(Ложь);
	Форма.Открыть();
	
КонецПроцедуры

Процедура ВакансияАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	ПроцедурыПоискаПоСтроке.АвтоПодборТекстаВЭлементеУправления(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка, ПолучитьСтруктуруПараметровТайпинга(), Тип("СправочникСсылка.Вакансии"));
	
КонецПроцедуры

Процедура ВакансияОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	ПроцедурыПоискаПоСтроке.ОкончаниеВводаТекстаВЭлементеУправления(Элемент, Текст, Значение, СтандартнаяОбработка, ПолучитьСтруктуруПараметровТайпинга(), ЭтаФорма, Тип("СправочникСсылка.Вакансии"), мОбработкаТайпинга, мТекстТайпинга, мПоследнееЗначениеЭлементаТайпинга, Ложь);
	
КонецПроцедуры

Процедура ДействияФормыРедактироватьКод(Кнопка)
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Код);
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

мОбновлятьВладельца = Ложь;
