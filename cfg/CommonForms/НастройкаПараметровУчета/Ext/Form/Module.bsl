////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ

// Содержит структура с исходными данными (до открытия) формы
Перем мЗначенияИсходные;

// Содержит структура с измененными данными формы
Перем мЗначенияВФорме;

///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Функция преобразовывает таблицу значений в хранилище значения
//
// Параметры
//  Шаблоны – таблица значений
//
// Возвращаемое значение:
//   Хранилище значений
//
Функция ПолучитьШаблоныНомеров(Шаблоны)

	ТаблицаСоответствий = Новый Соответствие;

	Для каждого СтрокаШаблонов Из Шаблоны Цикл

		Если ПустаяСтрока(СтрокаШаблонов.ШаблоныТелефонныхНомеров) Тогда
			Продолжить;
		КонецЕсли;

		ТаблицаСоответствий.Вставить(СтрЧислоВхождений(СокрЛП(СтрокаШаблонов.ШаблоныТелефонныхНомеров),"9"),СокрЛП(СтрокаШаблонов.ШаблоныТелефонныхНомеров));

	КонецЦикла;

	Возврат Новый ХранилищеЗначения(ТаблицаСоответствий);

КонецФункции // ПолучитьШаблоныНомеров()

// Процедура преобразовывает хранилище значений в таблицу значений 
//
// Параметры
//  Шаблоны – хранилище значений
//
// Возвращаемое значение:
//   НЕТ
//
Процедура ПолучитьТаблицуШаблоновТелефонов(Шаблоны)

	Если ТипЗнч(Шаблоны) <> Тип("ХранилищеЗначения") Тогда
		Возврат;
	КонецЕсли;

	СтруктураШаблонов = Шаблоны.Получить();

	ШаблоныТелефонов.Очистить();

	Если ТипЗнч(СтруктураШаблонов) = Тип("Соответствие") Тогда

		Для Индекс = 1 По 50 Цикл //думаю, больше 50-ти значных номеров не может быть

			НайденныйШаблон = СтруктураШаблонов.Получить(Индекс);

			Если НайденныйШаблон <> Неопределено Тогда

				СтрокаШаблонов = ШаблоныТелефонов.Добавить();
				СтрокаШаблонов.ШаблоныТелефонныхНомеров = НайденныйШаблон;

			КонецЕсли;

		КонецЦикла;

	КонецЕсли;

КонецПроцедуры

// Процедура проверяет возможность редактирования валюты
// регламентированного учета
//
Процедура ПроверкаДоступностиВалютыУчета();

	Если НЕ ПравоДоступа("Изменение", Метаданные.Константы.ВалютаРегламентированногоУчета)
		 ИЛИ НЕ ПравоДоступа("Изменение", Метаданные.Константы.ВалютаУправленческогоУчета)
		 Тогда
		// Если нет прав на изменение хотя бы одной константы - закрываем доступ на все
		ЭлементыФормы.ВалютаРегламентированногоУчета.ТолькоПросмотр = Истина;
		ЭлементыФормы.ВалютаУправленческогоУчета.ТолькоПросмотр     = Истина;
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;	
	Для каждого Док из Метаданные.Документы Цикл
		Если Док.Имя = "УстановкаСоответствияСчетовБУиНУ" или Док.Имя = "УстановкаСоответствияСчетовБУиМСФО" Тогда
			Продолжить;
		КонецЕсли;
		
		Запрос.Текст = Запрос.Текст + ?(Запрос.Текст = "","", "ОБЪЕДИНИТЬ ВСЕ") + "
		|
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	Документ." + Док.Имя + ".Ссылка
		|   ГДЕ Документ." + Док.Имя + ".Проведен
		|";
		
	КонецЦикла;
	
	Попытка
		РезультатЗапроса = Запрос.Выполнить();
		ЕстьДокументы = НЕ РезультатЗапроса.Пустой();
	Исключение
		ЕстьДокументы = Истина;
	КонецПопытки;
	
	ЭлементыФормы.ВалютаРегламентированногоУчета.ТолькоПросмотр = ЕстьДокументы;
	ЭлементыФормы.ВалютаУправленческогоУчета.ТолькоПросмотр     = ЕстьДокументы;

	Если ЕстьДокументы Тогда
		ЭлементыФормы.ТекстВажнойНадписи.Заголовок = НСтр("ru='После ввода документов валюты учета изменять нельзя.';uk='Після введення документів валюти обліку змінювати не можна.'");
	Иначе
		ЭлементыФормы.ТекстВажнойНадписи.Заголовок = НСтр("ru='Валюты учета можно изменять пока не введены документы.';uk='Валюти обліку можна змінювати поки не введені документи.'");
	КонецЕсли;

КонецПроцедуры // ПроверкаДоступностиВалютыУчета()


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПриОткрытии" формы.
// 
Процедура ПриОткрытии()

	ПолучитьТаблицуШаблоновТелефонов(КонстантыНабор.ШаблоныТелефонныхНомеров);

	ПроверкаДоступностиВалютыУчета();

	ЭтаИнформационнаяБазаФайловая = ОпределитьЭтаИнформационнаяБазаФайловая();
	ЭлементыФормы.ПроверятьРазницуВоВремениССервером.Видимость    = Не ЭтаИнформационнаяБазаФайловая;
	
	Этаформа.Модифицированность = Ложь;

КонецПроцедуры

// Процедура - обработчик события "ПриЗаписи" формы.
// 
Процедура ПриЗаписи(Отказ)
	
	ПроверитьПодключениеОбработчикаОжидания();
    ПолныеПрава.УстановитьПараметрГраницыЗапретаИзмененияДанных();
	
КонецПроцедуры

// Процедура - обработчик события "ПередЗаписью" формы.
// 
Процедура ПередЗаписью(Отказ)
	
	КонстантыНабор.ШаблоныТелефонныхНомеров = ПолучитьШаблоныНомеров(ШаблоныТелефонов);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура КаталогДополнительнойИнформацииОткрытие(Элемент, СтандартнаяОбработка)

	ЗапуститьПриложение(Элемент.Значение);
	
КонецПроцедуры

Процедура КаталогДополнительнойИнформацииНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	РаботаСФайлами.ВыбратьКаталог(Элемент.Значение);
	
КонецПроцедуры

