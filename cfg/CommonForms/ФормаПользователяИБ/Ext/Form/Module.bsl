
// Признак изменение пароля пользователя ИБ
Перем мМенялиПароль;

// Переменная хранит обладает ли пользователь правами администрирования или нет
Перем мЕстьПраваАдминистрирования;

Перем мЗакрытиеФормыИнициированоПользователем;

Перем мФормаМодифицирована;

// Процедура устанавливает доступность элементов формы, в зависимости от режима "Аутентификаци" 
Процедура УстановитьДоступностьАутентификаций()
	
	ЭлементыФормы.Пароль.Доступность              			= АутентификацияСтандартная;
	ЭлементыФормы.НадписьПарольПользователяИБ.Доступность 	= АутентификацияСтандартная;

	ЭлементыФормы.ПодтверждениеПароля.Доступность 			= АутентификацияСтандартная;
	ЭлементыФормы.НадписьПодтверждениеПароляИБ.Доступность	= АутентификацияСтандартная;

	ЭлементыФормы.ПользовательОС.Доступность 				= АутентификацияОС;
	ЭлементыФормы.НадписьПользовательОС.Доступность 		= АутентификацияОС;
	
КонецПроцедуры

// нажатие на ОК в форме пользователя ИБ
Процедура ОсновныеДействияФормыОК(Кнопка)
	
	РезультатЗаписи = ЗаписатьПользователя();
	
	Если РезультатЗаписи = Истина Тогда
		
		мЗакрытиеФормыИнициированоПользователем = Истина;
		ЭтаФорма.Закрыть(Истина);	
		
	КонецЕсли;
	
КонецПроцедуры

// отмена
Процедура ОсновныеДействияФормыОтмена(Кнопка)
	
	мЗакрытиеФормыИнициированоПользователем = Истина;
	ЭтаФорма.Закрыть(Ложь);
	
КонецПроцедуры


// Процедура заполняет информацию о пользователе ИБ
Процедура ОбновитьДанныеПользователяИБ(ПользовательНастроек, Знач ОтображатьИмя = Истина)
	
	Если ПользовательНастроек = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ОтображатьИмя Тогда
		
		Имя = ПользовательНастроек.Имя;
		ПолноеИмя = ПользовательНастроек.ПолноеИмя;
		
	КонецЕсли;
	
	Язык = ПользовательНастроек.Язык;
	ОсновнойИнтерфейс = ПользовательНастроек.ОсновнойИнтерфейс;
	
	АутентификацияСтандартная = ПользовательНастроек.АутентификацияСтандартная;
	мМенялиПароль = Ложь;
	
	Если ПользовательНастроек.ПарольУстановлен Тогда
		Пароль = "************";
		ПодтверждениеПароля = "************";
	Иначе
		Пароль = "";
		ПодтверждениеПароля = "";
	КонецЕсли; 

	Попытка
		ПользовательОС = ПользовательНастроек.ПользовательОС;
	Исключение
		ПользовательОС = "<Неверные данные>";
	КонецПопытки; 

 	ПоказыватьВСпискеВыбора = ПользовательНастроек.ПоказыватьВСпискеВыбора;
	АутентификацияОС = ПользовательНастроек.АутентификацияОС;
	
	Для Каждого СтрокаСпискаДоступныхРолей Из СписокДоступныхРолейПользователяИБ Цикл
		СтрокаСпискаДоступныхРолей.Пометка = ПользовательНастроек.Роли.Содержит(СтрокаСпискаДоступныхРолей.Значение);
	КонецЦикла; 
	
	УстановитьДоступностьАутентификаций();
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ ДЛЯ РАБОТЫ С ИНФОРМАЦИЕЙ О ПОЛЬЗОВАТЕЛЕ ИБ

// Процедура - обработчик "При изменении" АутентификацияСтандартная
Процедура АутентификацияСтандартнаяПриИзменении(Элемент)
	
	УстановитьДоступностьАутентификаций();
	
КонецПроцедуры

// Процедура - обработчик "При изменении" АутентификацияОС
Процедура АутентификацияОСПриИзменении(Элемент)
	
	УстановитьДоступностьАутентификаций();
	
КонецПроцедуры

// Процедура - обработчик "При изменении" Пароль
Процедура ПарольПриИзменении(Элемент)
	
	мМенялиПароль = Истина;
	
КонецПроцедуры

// Процедура - обработчик "При изменении" ПодтверждениеПароля
Процедура ПодтверждениеПароляПриИзменении(Элемент)
	
	мМенялиПароль = Истина;
	
КонецПроцедуры



// Процедура заполняет списки выбора атрибутов для пользователя ИБ
Процедура ИнициализироватьЭлементыРедактированияПользователяИБ()
	
	//Язык
	СписокВыбораЯзыка = ЭлементыФормы.Язык.СписокВыбора;
	Для Каждого мЯзык Из Метаданные.Языки Цикл
		СписокВыбораЯзыка.Добавить(мЯзык, мЯзык.Синоним);
	КонецЦикла; 
			
	//Интерфейс
	СписокВыбораИнтерфейса = ЭлементыФормы.ОсновнойИнтерфейс.СписокВыбора;
	Для Каждого мИнтерфейс Из Метаданные.Интерфейсы Цикл
		СписокВыбораИнтерфейса.Добавить(мИнтерфейс, мИнтерфейс.Синоним);
	КонецЦикла; 

	//Роль
	Для Каждого мРоль Из Метаданные.Роли Цикл
		СтрокаСписокаДоступныхРолей = СписокДоступныхРолейПользователяИБ.Добавить();
		СтрокаСписокаДоступныхРолей.Представление = мРоль.Представление();
		СтрокаСписокаДоступныхРолей.Значение = мРоль;
	КонецЦикла; 
	
КонецПроцедуры

// Процедура выполняет запись пользователя ИБ
Функция ЗаписатьПользователя()
	
	Если ПользовательИБ = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Имя = СокрЛП(Имя);
	
	Если НЕ ЗначениеЗаполнено(Имя) Тогда
		
		ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru='Не заполнено имя пользователя базы данных!';uk=""Не заповнене ім'я користувача бази даних!"""));
		Возврат Ложь;
		
	КонецЕсли;
	
	//проверим что бы было указано то что нужно
	Если АутентификацияОС
		И ПустаяСтрока(ПользовательОС) Тогда
		
		ОбщегоНазначения.СообщитьОбОшибке("Укажите пользователя Windows или запретите Windows-аутентификацию!");
		Возврат Ложь;
		
	КонецЕсли;
	
	ПользовательИБ.Имя = Имя;
	ПользовательИБ.ПолноеИмя = ПолноеИмя;
	ПользовательИБ.ПользовательОС = ПользовательОС;
	Если мМенялиПароль = Истина Тогда
		
		Если Пароль <> ПодтверждениеПароля Тогда
			ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru='Пароль и подтверждение пароля не совпадают!!!';uk='Пароль і підтвердження пароля не збігаються!!!'")); 
			Возврат Ложь;
		КонецЕсли;
			
		ПользовательИБ.Пароль = Пароль;
		
	КонецЕсли; 
	
	ПользовательИБ.АутентификацияСтандартная = АутентификацияСтандартная;
	ПользовательИБ.ПоказыватьВСпискеВыбора = ПоказыватьВСпискеВыбора;
	ПользовательИБ.АутентификацияОС = АутентификацияОС;
	ПользовательИБ.Язык = Язык;
	ПользовательИБ.ОсновнойИнтерфейс = ОсновнойИнтерфейс;
	
	// Роли сохраняем
	Для Каждого СтрокаСпискаДоступныхРолей Из СписокДоступныхРолейПользователяИБ Цикл
		
		мРоль = СтрокаСпискаДоступныхРолей.Значение;
		СодержитРоль = ПользовательИБ.Роли.Содержит(мРоль);
		Если СодержитРоль И Не СтрокаСпискаДоступныхРолей.Пометка Тогда
			ПользовательИБ.Роли.Удалить(мРоль);
		ИначеЕсли Не СодержитРоль И СтрокаСпискаДоступныхРолей.Пометка Тогда
			ПользовательИБ.Роли.Добавить(мРоль);
		КонецЕсли; 
	
	КонецЦикла;
	
	//сначала пытаемся пользователя из справочника поменять
	Если Пользователь <> Неопределено Тогда
		
		СтароеИмяПользователя = СокрЛП(Пользователь.Код);
		Если СтароеИмяПользователя <> Имя Тогда
			
			Пользователь.Код = Имя;
			
			Попытка
		
				Пользователь.Записать();
				
			Исключение
				
				ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru='Ошибка при изменении элемента ""';uk='Помилка при зміні елемента ""'") + СтароеИмяПользователя + НСтр("ru='"" справочника ""Пользователи"". ';uk='"" довідника ""Користувачі"". '") + ОписаниеОшибки());
				Возврат Ложь;
						
			КонецПопытки;
			
		КонецЕсли;
		
	КонецЕсли;
	
	// запись пользователя ИБ
	Попытка
		
		ПользовательИБ.Записать();
		
	Исключение
		
		ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru='Ошибка при сохранении данных пользователя ИБ. ';uk='Помилка при збереженні даних користувача ІБ. '") + ОписаниеОшибки());
		Возврат Ложь;
				
	КонецПопытки;
	
	// удачно записан пользователь ИБ
	Оповестить("ИзмененПользовательИБ", ПользовательИБ, ЭтаФорма); 
	
	Возврат Истина;
		
КонецФункции

//Процедура - обаботчик события, при нажатии на кнопку "Снять флажки" Командной панели "КоманднаяПанельСпискаДоступныхРолей"
Процедура КоманднаяПанельСпискаДоступныхРолейСнятьФлажки(Кнопка)
	
	СписокДоступныхРолейПользователяИБ.ЗаполнитьЗначения(0, "Пометка");
	
КонецПроцедуры

//Процедура - обаботчик события, при нажатии на кнопку "Установить флажки" Командной панели "КоманднаяПанельСпискаДоступныхРолей"
Процедура КоманднаяПанельСпискаДоступныхРолейУстановитьФлажки(Кнопка)
	
	СписокДоступныхРолейПользователяИБ.ЗаполнитьЗначения(1, "Пометка");
	
КонецПроцедуры

//Процедура - обработчик события "НачалоВыбора" в: Поле ввода "Язык"
Процедура ЯзыкНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	СписокВыбора = Элемент.СписокВыбора.Скопировать();
	РезультатВыбора = СписокВыбора.ВыбратьЭлемент(НСтр("ru='Выберите язык';uk='Виберіть мову'"), Элемент.Значение);
	Если РезультатВыбора <> Неопределено Тогда
		Элемент.Значение = РезультатВыбора.Значение;
	КонецЕсли; 
	
КонецПроцедуры

//Процедура - обработчик события "НачалоВыбора" в: Поле ввода "ОсновнойИнтерфейс"
Процедура ОсновнойИнтерфейсНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	СписокВыбора = Элемент.СписокВыбора.Скопировать();
	РезультатВыбора = СписокВыбора.ВыбратьЭлемент(НСтр("ru='Выберите основной интерфейс';uk='Виберіть основний інтерфейс'"), Элемент.Значение);
	Если РезультатВыбора <> Неопределено Тогда
		Элемент.Значение = РезультатВыбора.Значение;
	КонецЕсли; 
	
КонецПроцедуры

//Процедура - обработчик события "НачалоВыбора" в: Поле ввода "ПользовательОС"
Процедура ПользовательОСНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ФормаВыбораПользователяWindows = ПолучитьОбщуюФорму("ФормаВыбораПользователяWindows", ЭтаФорма);
	ФормаВыбораПользователяWindows.ВыбранныйПользовательWindows = ПользовательОС;
	Результат = ФормаВыбораПользователяWindows.ОткрытьМодально();
	Если Результат <> Неопределено Тогда
		ПользовательОС = Результат;
	КонецЕсли; 
	
КонецПроцедуры

//Процедура - обаботчик события, "При изменении" у имени пользователя ИБ
Процедура ИмяПриИзменении(Элемент)
	
	Элемент.Значение = СокрЛП(Имя);
	
	// полное имя пользователя ИБ тоже ставим если оно пустое
	Если НЕ ЗначениеЗаполнено(ПолноеИмя) Тогда
		ПолноеИмя = Элемент.Значение
	КонецЕсли;
	
КонецПроцедуры

// перед открытием
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ИнициализироватьЭлементыРедактированияПользователяИБ();
	
	Если ПользовательДляКопированияНастроек = Неопределено Тогда
		ОбновитьДанныеПользователяИБ(ПользовательИБ);
	Иначе
		ОбновитьДанныеПользователяИБ(ПользовательДляКопированияНастроек, Ложь);
	КонецЕсли;
	
	ТолькоПросмотр = НЕ мЕстьПраваАдминистрирования;
	
	мФормаМодифицирована = Модифицированность;
		
КонецПроцедуры

// перед закрытием
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если мЗакрытиеФормыИнициированоПользователем Тогда
		
		мЗакрытиеФормыИнициированоПользователем = Ложь;
		Возврат;
		
	КонецЕсли;
	
	// форму принудительно пытаются закрыть	
	Если Модифицированность Тогда
		
		// есть права на изменение пользователя ИБ
		ОтветПользователя = Вопрос(НСтр("ru='Настройки пользователя ИБ были изменены. Сохранить?';uk='Нстройки користувача ІБ були змінені. Зберегти?'"), РежимДиалогаВопрос.ДаНетОтмена, ,
			КодВозвратаДиалога.Да);
			
		Если ОтветПользователя = КодВозвратаДиалога.Да Тогда
			
			// записываем внесенные изменения
			РезультатЗаписи = ЗаписатьПользователя();
			Отказ = Не РезультатЗаписи;
			
			Если Не Отказ Тогда
				мЗакрытиеФормыИнициированоПользователем = Истина;
				Закрыть(Истина);
			КонецЕсли;			
				
		ИначеЕсли ОтветПользователя = КодВозвратаДиалога.Нет Тогда	
			
			// ничего делать не надо
			
		Иначе	
			
			Отказ = Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	Модифицированность = мФормаМодифицирована;
	
КонецПроцедуры

// копирование настроек пользователя ИБ
Процедура КоманднаяПанельОбщаяСкопироватьНастройки(Кнопка)
	
	СписокВыбора = Новый СписокЗначений;
	
	Пользователи = ПользователиИнформационнойБазы.ПолучитьПользователей();
	
	Для каждого ВремПользователь Из Пользователи Цикл
		
		СписокВыбора.Добавить(ВремПользователь.Имя);
								
	КонецЦикла; 
	
	СписокВыбора.СортироватьПоЗначению();
		
	ВыбранныйПользователь = СписокВыбора.ВыбратьЭлемент(НСтр("ru='Выберите пользователя ИБ для копирования настроек';uk='Виберіть користувача ІБ для копіювання настройок'"), 
		СписокВыбора);
		
	Если ВыбранныйПользователь = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВыбранныйПользовательИБ = УправлениеПользователями.НайтиПользователяИБ(ВыбранныйПользователь.Значение);
	
	// настройки устанавливаются на форму
	ОбновитьДанныеПользователяИБ(ВыбранныйПользовательИБ, Ложь);
	
КонецПроцедуры

мЕстьПраваАдминистрирования = ПравоДоступа("Администрирование", Метаданные);

//Заполняем параметры пользователя ИБ
СписокДоступныхРолейПользователяИБ.Колонки.Добавить("Значение");
мЗакрытиеФормыИнициированоПользователем = Ложь;
ПользовательДляКопированияНастроек = Неопределено;
