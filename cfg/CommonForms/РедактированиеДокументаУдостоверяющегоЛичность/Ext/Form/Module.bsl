
Процедура ЗаписатьИзменения()

	ЗаписьИзНабора = НаборЗаписей[0];
	// Если что-то поменяли тогда запишем 
	Если ДокументВидПриОткрытии <> ДокументВид ИЛИ
		ДокументДатаВыдачиПриОткрытии <> ДокументДатаВыдачи ИЛИ
		ДокументКемВыданПриОткрытии <> ДокументКемВыдан ИЛИ
		ДокументНомерПриОткрытии <> ДокументНомер ИЛИ
		Период <> ПериодПриОткрытии ИЛИ
		ДокументСерияПриОткрытии <> ДокументСерия Тогда
		ЗаписьИзНабора.ДокументВид                      = ДокументВид;
		ЗаписьИзНабора.ДокументДатаВыдачи               = ДокументДатаВыдачи;
		ЗаписьИзНабора.ДокументКемВыдан                 = ДокументКемВыдан;
		ЗаписьИзНабора.ДокументНомер                    = ДокументНомер;
		ЗаписьИзНабора.ДокументСерия                    = ДокументСерия;
		ЗаписьИзНабора.Период                           = Период;
	КонецЕсли;
	
	Модифицированность = Ложь;
	
	Оповестить("ОбновитьУдостоверениеЛичности");

КонецПроцедуры

Процедура ПодтвердитьИзменения(Кнопка)

	ЗаписатьИзменения();
	Закрыть();
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	Если НаборЗаписей.Количество() = 0 тогда
		НаборЗаписей.Добавить();
		ЗаписьИзНабора = НаборЗаписей[0];
		ЗаписьИзНабора.ФизЛицо = ФизЛицоПриОткрытии;
		ЗаписьИзНабора.Период  = ПериодПриОткрытии;
	КонецЕсли;
	ЗаписьИзНабора                      = НаборЗаписей[0];
	ДокументВид                         = ЗаписьИзНабора.ДокументВид;
	ДокументДатаВыдачи                  = ЗаписьИзНабора.ДокументДатаВыдачи;
	ДокументКемВыдан                    = ЗаписьИзНабора.ДокументКемВыдан;
	ДокументНомер                       = ЗаписьИзНабора.ДокументНомер;
	ДокументСерия                       = ЗаписьИзНабора.ДокументСерия;
	Период                              = ?(НЕ ЗначениеЗаполнено(ЗаписьИзНабора.Период), '19000101', ЗаписьИзНабора.Период);
	ФизЛицо                             = ЗаписьИзНабора.Физлицо;
	
	Если НЕ ЗначениеЗаполнено(ФизЛицо) тогда
		ИндКнопки = ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Индекс(ЭлементыФормы.ОсновныеДействияФормы.Кнопки.КнопкаИстория);
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Удалить(ИндКнопки);
		
		ИндКнопки = ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Индекс(ЭлементыФормы.ОсновныеДействияФормы.Кнопки.РазделительИстория);
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Удалить(ИндКнопки);
	КонецЕсли;
	
КонецПроцедуры

Процедура КнопкаИсторияНажатие(Элемент)
	
	ФормаРегистра = РегистрыСведений.ПаспортныеДанныеФизЛиц.ПолучитьФормуСписка();
	ФормаРегистра.РегистрСведенийСписок.Отбор.ФизЛицо.Значение                   = ФизЛицо;
	ФормаРегистра.РегистрСведенийСписок.Отбор.ФизЛицо.ВидСравнения               = ВидСравнения.Равно;
	ФормаРегистра.РегистрСведенийСписок.Отбор.ФизЛицо.Использование              = Истина;
	ФормаРегистра.ЭлементыФормы.РегистрСведенийСписок.НачальноеОтображениеСписка = НачальноеОтображениеСписка.Конец;
	
	ФормаРегистра.Открыть();
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		ОтветНаВопрос = Вопрос(НСтр("ru='Данные были изменены. Сохранить изменения?';uk='Дані були змінені. Зберегти зміни?'"), РежимДиалогаВопрос.ДаНетОтмена);
		Если ОтветНаВопрос = КодВозвратаДиалога.Да Тогда
			ЗаписатьИзменения();
		ИначеЕсли ОтветНаВопрос = КодВозвратаДиалога.Отмена Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
