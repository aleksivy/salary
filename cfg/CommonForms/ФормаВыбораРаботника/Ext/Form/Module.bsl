////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем СтруктураПоиска;

////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ПолучитьДанные()
	
	Запрос = Новый Запрос();
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	Работники.ФизЛицо,
	|	Работники.ФизЛицо.Наименование КАК ФизЛицоНаименование
	|ИЗ
	|	РегистрСведений.Работники КАК Работники";
	   
	Если НЕ Подразделение.Пустая() Тогда
		ТекстЗапроса = ТекстЗапроса + " ГДЕ Работники.Подразделение В ИЕРАРХИИ(&Подразделение)";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизЛицоНаименование";
				   
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	СписокРаботников = Запрос.Выполнить().Выгрузить();
	
	// устанавливает текущую позицию
	СтруктураПоиска.Физлицо = ПараметрФизлицо;
	
	Строки = СписокРаботников.НайтиСтроки(СтруктураПоиска);
	Если Строки.Количество() > 0 Тогда
		ЭлементыФормы.СписокРаботников.ТекущаяСтрока = Строки[0];
	КонецЕсли;

КонецПроцедуры

Процедура ОбновитьСписок()
	
	// получить данные
	Если ЭлементыФормы.СписокРаботников.ТекущаяСтрока = НеОпределено Тогда
		ПараметрФизлицо = Справочники.ФизическиеЛица.ПустаяСсылка();
	Иначе
		ПараметрФизлицо = ЭлементыФормы.СписокРаботников.ТекущаяСтрока.Физлицо;
	КонецЕсли;
	
	ПолучитьДанные();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	СтруктураПоиска = Новый Структура("Физлицо");
	
	// получить данные
	ПолучитьДанные();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

Процедура ДействияФормыОбновитьСписок(Кнопка)
	ОбновитьСписок();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ФОРМЫ

Процедура ПодразделениеПриИзменении(Элемент)
	ОбновитьСписок();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ

Процедура РаботникиВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	Если РежимВыбора Тогда
		ВыбранныеДанные = ПроцедурыУправленияПерсоналом.СведенияПоВыбранномуРаботнику(Элемент.ТекущаяСтрока.Физлицо, ВыбираемыеДанные);
		Если ВыбранныеДанные = НеОпределено Тогда
			Сообщить(НСтр("ru='Ошибка при выборе работника';uk='Помилка при виборі працівника'"));
		Иначе
			ОповеститьОВыборе(ВыбранныеДанные);
		КонецЕсли;
		
	Иначе

		ВыбраннаяСтрока.Физлицо.ПолучитьФорму().Открыть();
	КонецЕсли;
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

Процедура СписокРаботниковПередНачаломИзменения(Элемент, Отказ)
	Элемент.ТекущаяСтрока.Физлицо.ПолучитьФорму().Открыть();
	Отказ = Истина;
	
КонецПроцедуры

Процедура СписокРаботниковПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Колонки = Элемент.Колонки;
	
	ПоказыватьКартинку = Колонки.Картинка.Видимость;
	ПоказыватьПодразделение = Колонки.Подразделение.Видимость;
	ПоказыватьДолжность = Колонки.Должность.Видимость;
	ПоказыватьСостояние = Колонки.Состояние.Видимость;
	ПоказыватьТабельныйНомер = Колонки.ТабельныйНомер.Видимость;
	
	ВиднаРассчитываемаяКолонка = ПоказыватьКартинку Или ПоказыватьПодразделение Или ПоказыватьСостояние Или ПоказыватьДолжность Или ПоказыватьТабельныйНомер;
	
	Если Не ВиднаРассчитываемаяКолонка Тогда
		Возврат
	КонецЕсли;
	
	СоответствиеРаботники	= Новый Соответствие;
	МассивФизЛиц		= Новый Массив;
	
	Для Каждого Строка Из ОформленияСтрок Цикл
		
		ДанныеСтроки = Строка.ДанныеСтроки;
		МассивФизЛиц.Добавить(ДанныеСтроки.ФизЛицо);
		СоответствиеРаботники.Вставить(ДанныеСтроки.Физлицо, Строка);
			
	КонецЦикла;
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РаботникиСрезПоследних.ФизЛицо,
	|	РаботникиСрезПоследних.ФизЛицо.Код КАК ТабельныйНомер,";
	Если ПоказыватьПодразделение Тогда
	Запрос.Текст = Запрос.Текст + "
	|	РаботникиСрезПоследних.Подразделение.Наименование КАК Подразделение,"
	КонецЕсли;
	Если ПоказыватьДолжность Тогда
	Запрос.Текст = Запрос.Текст + "
	|	РаботникиСрезПоследних.Должность.Наименование КАК Должность,"
	КонецЕсли;
	Запрос.Текст = Запрос.Текст + "
	|	РаботникиСрезПоследних.ПричинаИзмененияСостояния,
	|	ВЫБОР
	|		КОГДА РаботникиСрезПоследних.ПричинаИзмененияСостояния = &Увольнение
	|			ТОГДА ДОБАВИТЬКДАТЕ(РаботникиСрезПоследних.Период, ДЕНЬ, -1)
	|		ИНАЧЕ РаботникиСрезПоследних.Период
	|	КОНЕЦ КАК Период";
	Если ПоказыватьСостояние Тогда
	Запрос.Текст = Запрос.Текст + ",
	|	ВЫБОР
	|		КОГДА РаботникиСрезПоследних.ПричинаИзмененияСостояния = &Прием
	|			ТОГДА ВЫБОР
	|					КОГДА РаботникиСрезПоследних.Физлицо.Пол = &Женский
	|						ТОГДА ""Принята ""
	|					ИНАЧЕ ""Принят ""
	|				КОНЕЦ
	|		КОГДА РаботникиСрезПоследних.ПричинаИзмененияСостояния = &Увольнение
	|			ТОГДА ВЫБОР
	|					КОГДА РаботникиСрезПоследних.Физлицо.Пол = &Женский
	|						ТОГДА ""Уволена ""
	|					ИНАЧЕ ""Уволен ""
	|				КОНЕЦ
	|		КОГДА РаботникиСрезПоследних.ПричинаИзмененияСостояния = &Перемещение
	|			ТОГДА ВЫБОР
	|					КОГДА РаботникиСрезПоследних.Физлицо.Пол = &Женский
	|						ТОГДА ""Переведена ""
	|					ИНАЧЕ ""Переведен ""
	|				КОНЕЦ
	|		ИНАЧЕ ""Не указано ""
	|	КОНЕЦ КАК Состояние"
	КонецЕсли;
	Запрос.Текст = Запрос.Текст + "
	|ИЗ
	|	РегистрСведений.Работники.СрезПоследних(, ФизЛицо В(&ФизЛицо)) КАК РаботникиСрезПоследних";
	
	Запрос.УстановитьПараметр("Физлицо", МассивФизЛиц);
	Запрос.УстановитьПараметр("Женский", Перечисления.ПолФизическихЛиц.Женский);
	Запрос.УстановитьПараметр("Увольнение", Перечисления.ПричиныИзмененияСостояния.Увольнение);
	Запрос.УстановитьПараметр("Прием", Перечисления.ПричиныИзмененияСостояния.ПриемНаРаботу);
	Запрос.УстановитьПараметр("Перемещение", Перечисления.ПричиныИзмененияСостояния.Перемещение);
	Выборка = Запрос.Выполнить().Выбрать();
	
	// получим данные для отрисовки в ячейках
	Пока Выборка.Следующий() Цикл
		Строка = СоответствиеРаботники.Получить(Выборка.ФизЛицо);
		Если Строка = Неопределено Тогда
			Продолжить
		КонецЕсли; 
		Если ПоказыватьТабельныйНомер Тогда
			Строка.Ячейки.ТабельныйНомер.УстановитьТекст(Выборка.ТабельныйНомер);
		КонецЕсли;
		Если ПоказыватьПодразделение Тогда
			Строка.Ячейки.Подразделение.УстановитьТекст(Выборка.Подразделение);
		КонецЕсли;
		Если ПоказыватьДолжность Тогда
			Строка.Ячейки.Должность.УстановитьТекст(Выборка.Должность);
		КонецЕсли;
		Если ПоказыватьКартинку Тогда
			Строка.Ячейки.Картинка.ОтображатьКартинку = Истина;
			Строка.Ячейки.Картинка.ИндексКартинки = ?(Выборка.ПричинаИзмененияСостояния = Перечисления.ПричиныИзмененияСостояния.Увольнение, 1, 0);
		КонецЕсли;
		Если ПоказыватьСостояние Тогда
			Строка.Ячейки.Состояние.УстановитьТекст(Выборка.Состояние + Формат(Выборка.Период,"ДФ=dd.MM.yyyy"))
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры
