Перем НеИспользуемыйЦвет;
Перем ПервичнаяАктивизация;

Процедура СделатьПоляГруппировкиНедоступными()
	
	ЭлементыФормы.ПанельПолейГруппировки.ТекущаяСтраница = ЭлементыФормы.ПанельПолейГруппировки.Страницы.НедоступныеНастройки;
	УстановитьКартинкуЗакладкиПолейГруппировки(Ложь);
	
КонецПроцедуры

Процедура УстановитьКартинкуЗакладкиПолейГруппировки(Доступно)
	
	Если Не Доступно Тогда
	
		ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.ПоляГруппировки.КартинкаЗаголовка = 
			ЭлементыФормы.КартинкаПоляГруппировкиНедоступные.Картинка;
			
	Иначе
	
		ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.ПоляГруппировки.КартинкаЗаголовка = 
			ЭлементыФормы.КартинкаПоляГруппировки.Картинка;
			
	КонецЕсли;
	
КонецПроцедуры

Функция ПроверитьЛокальныеВыбранныеПоля(Элемент)
	
	Если Элемент.Выбор.Элементы.Количество() > 1 Тогда
		
		Возврат Истина;
		
	КонецЕсли;
	
	Если Элемент.Выбор.Элементы.Количество() = 0 Тогда
		
		Если ТипЗнч(Элемент) = Тип("НастройкиКомпоновкиДанных") ИЛИ
			ТипЗнч(Элемент) = Тип("НастройкиВложенногоОбъектаКомпоновкиДанных") ИЛИ
			ТипЗнч(Элемент) = Тип("ТаблицаКомпоновкиДанных") Тогда
			
			Возврат Ложь;
			
		КонецЕсли;
		
		Возврат Истина;
		
	КонецЕсли;
			
	Если Элемент.Выбор.Элементы.Количество() = 1 Тогда
		
		Если ТипЗнч(Элемент.Выбор.Элементы[0]) = Тип("АвтоВыбранноеПолеКомпоновкиДанных") И 
			Элемент.Выбор.Элементы[0].Использование Тогда
			
			Возврат Ложь;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Процедура ПроверитьИВключитьЛокальныеВыбранныеПоля(Строка)
	
	Если ПроверитьЛокальныеВыбранныеПоля(ЭлементыФормы.Структура.ТекущаяСтрока) Тогда
				
		ЛокальныеВыбранныеПоля = Истина;
		ЭлементыФормы.ПанельВыбранныхПолей.ТекущаяСтраница = 
			ЭлементыФормы.ПанельВыбранныхПолей.Страницы.Настройки;
			
	Иначе
			
		ЛокальныеВыбранныеПоля = Ложь;
		ЭлементыФормы.ПанельВыбранныхПолей.ТекущаяСтраница = 
			ЭлементыФормы.ПанельВыбранныхПолей.Страницы.ОтключенныеНастройки;
			
	КонецЕсли;
		
	УстановитьКартинкуЗакладкиВыбранныхПолей(Истина, ЛокальныеВыбранныеПоля);
			
	ЭлементыФормы.ЛокальныеВыбранныеПоля.Доступность = Истина;
	ЭлементыФормы.ЛокальныеВыбранныеПоля.Видимость = Истина;
		
КонецПроцедуры

Процедура СделатьВыбранныеПоляНедоступными()
	
		ЭлементыФормы.ПанельВыбранныхПолей.ТекущаяСтраница = ЭлементыФормы.ПанельВыбранныхПолей.Страницы.НедоступныеНастройки;
		ЭлементыФормы.ЛокальныеВыбранныеПоля.Доступность = Ложь;
		ЭлементыФормы.ЛокальныеВыбранныеПоля.Видимость = Истина;
		ЛокальныеВыбранныеПоля = Ложь;
		УстановитьКартинкуЗакладкиВыбранныхПолей(Ложь, Ложь);
		
КонецПроцедуры
		
Процедура УстановитьКартинкуЗакладкиВыбранныхПолей(Доступно, Локально)
	
	Если Не Доступно Тогда
	
		ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.Выбор.КартинкаЗаголовка = 
			ЭлементыФормы.КартинкаВыборНедоступный.Картинка;
			
	ИначеЕсли Локально Тогда
		
		ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.Выбор.КартинкаЗаголовка = 
			ЭлементыФормы.КартинкаВыборЛокальный.Картинка;
			
	Иначе
	
		ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.Выбор.КартинкаЗаголовка = 
			ЭлементыФормы.КартинкаВыбор.Картинка;
			
	КонецЕсли;
	
КонецПроцедуры
	
Функция ПроверитьЛокальныйОтбор(Элемент)
		
	// Если есть хоть один элемент
	
	Возврат Элемент.Отбор.Элементы.Количество() <> 0;
	
КонецФункции

Процедура ПроверитьИВключитьЛокальныйОтбор(Строка)
	
	Если ПроверитьЛокальныйОтбор(ЭлементыФормы.Структура.ТекущаяСтрока) Тогда
				
		ЛокальныйОтбор = Истина;
		ЭлементыФормы.ПанельОтбора.ТекущаяСтраница = 
			ЭлементыФормы.ПанельОтбора.Страницы.Настройки;
			
	Иначе
			
		ЛокальныйОтбор = Ложь;
		ЭлементыФормы.ПанельОтбора.ТекущаяСтраница = 
			ЭлементыФормы.ПанельОтбора.Страницы.ОтключенныеНастройки;
			
	КонецЕсли;
	УстановитьКартинкуЗакладкиОтбора(Истина, ЛокальныйОтбор);
			
	ЭлементыФормы.ЛокальныйОтбор.Доступность = Истина;
	ЭлементыФормы.ЛокальныйОтбор.Видимость = Истина;
		
КонецПроцедуры

Процедура СделатьОтборНедоступным()
	
	ЭлементыФормы.ПанельОтбора.ТекущаяСтраница = ЭлементыФормы.ПанельОтбора.Страницы.НедоступныеНастройки;
	ЭлементыФормы.ЛокальныйОтбор.Доступность = Ложь;
	ЭлементыФормы.ЛокальныйОтбор.Видимость = Истина;
	ЛокальныйОтбор = Ложь;
	УстановитьКартинкуЗакладкиОтбора(Ложь, Ложь);
		
КонецПроцедуры

Процедура УстановитьКартинкуЗакладкиОтбора(Доступно, Локально)
	
	Если Не Доступно Тогда
		
		ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.Отбор.КартинкаЗаголовка = 
			ЭлементыФормы.КартинкаОтборНедоступный.Картинка;
		
	ИначеЕсли Локально Тогда
		
		ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.Отбор.КартинкаЗаголовка = 
			ЭлементыФормы.КартинкаОтборЛокальный.Картинка;
		
	Иначе
		
		ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.Отбор.КартинкаЗаголовка = 
			ЭлементыФормы.КартинкаОтбор.Картинка;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПроверитьЛокальныйПорядок(Элемент)
	
	Если Элемент.Порядок.Элементы.Количество() > 1 Тогда
		
		Возврат Истина;
		
	КонецЕсли;
	
	Если Элемент.Порядок.Элементы.Количество() = 0 Тогда
		
		Если ТипЗнч(Элемент) = Тип("НастройкиКомпоновкиДанных") ИЛИ
			ТипЗнч(Элемент) = Тип("НастройкиВложенногоОбъектаКомпоновкиДанных") Тогда
			
			Возврат Ложь;
			
		КонецЕсли;
		
		Возврат Истина;
		
	КонецЕсли;
			
	Если Элемент.Порядок.Элементы.Количество() = 1 Тогда
		
		Если ТипЗнч(Элемент.Порядок.Элементы[0]) = Тип("АвтоЭлементПорядкаКомпоновкиДанных") И 
			Элемент.Порядок.Элементы[0].Использование Тогда
			
			Возврат Ложь;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Процедура ПроверитьИВключитьЛокальныйПорядок(Строка)
	
	Если ПроверитьЛокальныйПорядок(ЭлементыФормы.Структура.ТекущаяСтрока) Тогда
				
		ЛокальныйПорядок = Истина;
		ЭлементыФормы.ПанельПорядка.ТекущаяСтраница = 
			ЭлементыФормы.ПанельПорядка.Страницы.Настройки;
			
	Иначе
			
		ЛокальныйПорядок = Ложь;
		ЭлементыФормы.ПанельПорядка.ТекущаяСтраница = 
			ЭлементыФормы.ПанельПорядка.Страницы.ОтключенныеНастройки;
			
	КонецЕсли;
	УстановитьКартинкуЗакладкиПорядка(Истина, ЛокальныйПорядок);
			
	ЭлементыФормы.ЛокальныйПорядок.Доступность = Истина;
	ЭлементыФормы.ЛокальныйПорядок.Видимость = Истина;
		
КонецПроцедуры

Процедура СделатьПорядокНедоступным()
	
	ЭлементыФормы.ПанельПорядка.ТекущаяСтраница = ЭлементыФормы.ПанельПорядка.Страницы.НедоступныеНастройки;
	ЭлементыФормы.ЛокальныйПорядок.Доступность = Ложь;
	ЭлементыФормы.ЛокальныйПорядок.Видимость = Истина;
	ЛокальныйПорядок = Ложь;
	УстановитьКартинкуЗакладкиПорядка(Ложь, Ложь);
		
КонецПроцедуры

Процедура УстановитьКартинкуЗакладкиПорядка(Доступно, Локально)
	
	Если Не Доступно Тогда
		
		ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.Порядок.КартинкаЗаголовка = 
			ЭлементыФормы.КартинкаПорядокНедоступный.Картинка;
			
	ИначеЕсли Локально Тогда
		
		ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.Порядок.КартинкаЗаголовка = 
			ЭлементыФормы.КартинкаПорядокЛокальный.Картинка;
			
	Иначе
		
		ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.Порядок.КартинкаЗаголовка = 
			ЭлементыФормы.КартинкаПорядок.Картинка;
			
	КонецЕсли;
	
КонецПроцедуры

Функция ПроверитьЛокальноеУсловноеОформление(Элемент)
	
	// Если есть хоть один элемент
	Возврат Элемент.УсловноеОформление.Элементы.Количество() <> 0;
	
КонецФункции

Процедура ПроверитьИВключитьЛокальноеУсловноеОформление(Строка)
	
	Если ПроверитьЛокальноеУсловноеОформление(ЭлементыФормы.Структура.ТекущаяСтрока) Тогда
				
		ЛокальноеУсловноеОформление = Истина;
		ЭлементыФормы.ПанельУсловногоОформления.ТекущаяСтраница = 
			ЭлементыФормы.ПанельУсловногоОформления.Страницы.Настройки;
			
	Иначе
			
		ЛокальноеУсловноеОформление = Ложь;
		ЭлементыФормы.ПанельУсловногоОформления.ТекущаяСтраница = 
			ЭлементыФормы.ПанельУсловногоОформления.Страницы.ОтключенныеНастройки;
			
	КонецЕсли;
	УстановитьКартинкуЗакладкиУсловногоОформления(Истина, ЛокальноеУсловноеОформление);
			
	ЭлементыФормы.ЛокальноеУсловноеОформление.Доступность = Истина;
	ЭлементыФормы.ЛокальноеУсловноеОформление.Видимость = Истина;
		
КонецПроцедуры

Процедура СделатьУсловноеОформлениеНедоступным()
	
	ЭлементыФормы.ПанельУсловногоОформления.ТекущаяСтраница = ЭлементыФормы.ПанельУсловногоОформления.Страницы.НедоступныеНастройки;
	ЭлементыФормы.ЛокальноеУсловноеОформление.Доступность = Ложь;
	ЭлементыФормы.ЛокальноеУсловноеОформление.Видимость = Истина;
	ЛокальноеУсловноеОформление = Ложь;
	УстановитьКартинкуЗакладкиУсловногоОформления(Ложь, Ложь);
		
КонецПроцедуры

Процедура УстановитьКартинкуЗакладкиУсловногоОформления(Доступно, Локально)
	
	Если Не Доступно Тогда
		
		ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.УсловноеОформление.КартинкаЗаголовка = 
			ЭлементыФормы.КартинкаУсловноеОформлениеНедоступное.Картинка;
			
	ИначеЕсли Локально Тогда
		
		ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.УсловноеОформление.КартинкаЗаголовка = 
			ЭлементыФормы.КартинкаУсловноеОформлениеЛокальное.Картинка;
	Иначе
		
		ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.УсловноеОформление.КартинкаЗаголовка = 
			ЭлементыФормы.КартинкаУсловноеОформление.Картинка;
			
	КонецЕсли;
	
КонецПроцедуры

Функция ПроверитьЛокальныеПараметрыВывода(Элемент)
	
	// Локальные если есть хоть один используемый параметр. Использование не распространяется на дочерние.
	
	Элементы = Элемент;
	
	Если ТипЗнч(Элемент) = Тип("НастройкиКомпоновкиДанных") ИЛИ
		ТипЗнч(Элемент) = Тип("НастройкиВложенногоОбъектаКомпоновкиДанных") ИЛИ
		ТипЗнч(Элемент) = Тип("ГруппировкаКомпоновкиДанных") ИЛИ
		ТипЗнч(Элемент) = Тип("ГруппировкаТаблицыКомпоновкиДанных") ИЛИ
		ТипЗнч(Элемент) = Тип("ГруппировкаДиаграммыКомпоновкиДанных") ИЛИ
		ТипЗнч(Элемент) = Тип("ТаблицаКомпоновкиДанных") ИЛИ
		ТипЗнч(Элемент) = Тип("ДиаграммаКомпоновкиДанных") Тогда
		
		Элементы = Элемент.ПараметрыВывода.Элементы;
		
	КонецЕсли;
		
	Для Каждого ТекЭлемент Из Элементы Цикл
			
		Если ТекЭлемент.Использование Тогда
			
			Возврат Истина;
			
		КонецЕсли;
		
		Если ПроверитьЛокальныеПараметрыВывода(ТекЭлемент.ЗначенияВложенныхПараметров) Тогда
			
			Возврат Истина;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

Процедура ПроверитьИВключитьЛокальныеПараметрыВывода(Строка)
	
	Если ПроверитьЛокальныеПараметрыВывода(ЭлементыФормы.Структура.ТекущаяСтрока) Тогда
				
		ЛокальныеПараметрыВывода = Истина;
		ЭлементыФормы.ПанельПараметровВывода.ТекущаяСтраница = 
			ЭлементыФормы.ПанельПараметровВывода.Страницы.Настройки;
			
	Иначе
			
		ЛокальныеПараметрыВывода = Ложь;
		ЭлементыФормы.ПанельПараметровВывода.ТекущаяСтраница = 
			ЭлементыФормы.ПанельПараметровВывода.Страницы.ОтключенныеНастройки;
			
	КонецЕсли;
	УстановитьКартинкуЗакладкиПараметровВывода(Истина, ЛокальныеПараметрыВывода);
			
	ЭлементыФормы.ЛокальныеПараметрыВывода.Доступность = Истина;
	ЭлементыФормы.ЛокальныеПараметрыВывода.Видимость = Истина;
		
КонецПроцедуры

Процедура СдалатьПараметрыВыводаНедоступными()
	
	ЭлементыФормы.ПанельПараметровВывода.ТекущаяСтраница = ЭлементыФормы.ПанельПараметровВывода.Страницы.НедоступныеНастройки;
	ЭлементыФормы.ЛокальныеПараметрыВывода.Доступность = Ложь;
	ЭлементыФормы.ЛокальныеПараметрыВывода.Видимость = Истина;
	ЛокальныеПараметрыВывода = Ложь;
	УстановитьКартинкуЗакладкиПараметровВывода(Ложь, Ложь);
	
КонецПроцедуры

Процедура УстановитьКартинкуЗакладкиПараметровВывода(Доступно, Локально)
	
	Если Не Доступно Тогда
			
		ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.ПараметрыВывода.КартинкаЗаголовка = 
			ЭлементыФормы.КартинкаПараметрыВыводаНедоступные.Картинка;
		
	ИначеЕсли Локально Тогда
		
		ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.ПараметрыВывода.КартинкаЗаголовка = 
			ЭлементыФормы.КартинкаПараметрыВыводаЛокальные.Картинка;
		
	Иначе
			
		ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.ПараметрыВывода.КартинкаЗаголовка = 
			ЭлементыФормы.КартинкаПараметрыВывода.Картинка;
		
	КонецЕсли;
	
КонецПроцедуры
		
Процедура УстановитьДоступностьНастроек()
	
	Если ТипЗнч(ЭлементыФормы.Структура.ТекущаяСтрока) = Тип("КоллекцияЭлементовСтруктурыДиаграммыКомпоновкиДанных") ИЛИ
		 ТипЗнч(ЭлементыФормы.Структура.ТекущаяСтрока) = Тип("КоллекцияЭлементовСтруктурыТаблицыКомпоновкиДанных") Тогда
		 // Для строк и т.п. не доступно ничего
		 
		СделатьПоляГруппировкиНедоступными();
		СделатьВыбранныеПоляНедоступными();
		СделатьОтборНедоступным();
		СделатьПорядокНедоступным();
		СделатьУсловноеОформлениеНедоступным();
		СдалатьПараметрыВыводаНедоступными();
		
	КонецЕсли;
	
	Если ТипЗнч(ЭлементыФормы.Структура.ТекущаяСтрока) = Тип("НастройкиКомпоновкиДанных") ИЛИ
		ТипЗнч(ЭлементыФормы.Структура.ТекущаяСтрока) = Тип("НастройкиВложенногоОбъектаКомпоновкиДанных") Тогда
		
		СделатьПоляГруппировкиНедоступными();
		
		ЭлементыФормы.ПанельВыбранныхПолей.ТекущаяСтраница = ЭлементыФормы.ПанельВыбранныхПолей.Страницы.Настройки;
		ЭлементыФормы.ЛокальныеВыбранныеПоля.Доступность = Ложь;
		ЭлементыФормы.ЛокальныеВыбранныеПоля.Видимость = Ложь;
		ЛокальныеВыбранныеПоля = Истина;
		УстановитьКартинкуЗакладкиВыбранныхПолей(Истина, Ложь);
		
		ЭлементыФормы.ПанельОтбора.ТекущаяСтраница = ЭлементыФормы.ПанельОтбора.Страницы.Настройки;
		ЭлементыФормы.ЛокальныйОтбор.Доступность = Ложь;
		ЭлементыФормы.ЛокальныйОтбор.Видимость = Ложь;
		ЛокальныйОтбор = Истина;
		УстановитьКартинкуЗакладкиОтбора(Истина, Ложь);
		
		ЭлементыФормы.ПанельПорядка.ТекущаяСтраница = ЭлементыФормы.ПанельПорядка.Страницы.Настройки;
		ЭлементыФормы.ЛокальныйПорядок.Доступность = Ложь;
		ЭлементыФормы.ЛокальныйПорядок.Видимость = Ложь;
		ЛокальныйПорядок = Истина;
		УстановитьКартинкуЗакладкиПорядка(Истина, Ложь);
		
		ЭлементыФормы.ПанельУсловногоОформления.ТекущаяСтраница = ЭлементыФормы.ПанельУсловногоОформления.Страницы.Настройки;
		ЭлементыФормы.ЛокальноеУсловноеОформление.Доступность = Ложь;
		ЭлементыФормы.ЛокальноеУсловноеОформление.Видимость = Ложь;
		ЛокальноеУсловноеОформление = Истина;
		УстановитьКартинкуЗакладкиУсловногоОформления(Истина, Ложь);
		
		ЭлементыФормы.ПанельПараметровВывода.ТекущаяСтраница = ЭлементыФормы.ПанельПараметровВывода.Страницы.Настройки;
		ЭлементыФормы.ЛокальныеПараметрыВывода.Доступность = Ложь;
		ЭлементыФормы.ЛокальныеПараметрыВывода.Видимость = Ложь;
		ЛокальныеПараметрыВывода = Истина;
		УстановитьКартинкуЗакладкиПараметровВывода(Истина, Ложь);
		
	КонецЕсли;
			
	Если ТипЗнч(ЭлементыФормы.Структура.ТекущаяСтрока) = Тип("ГруппировкаКомпоновкиДанных") ИЛИ
		ТипЗнч(ЭлементыФормы.Структура.ТекущаяСтрока) = Тип("ГруппировкаТаблицыКомпоновкиДанных") ИЛИ
		ТипЗнч(ЭлементыФормы.Структура.ТекущаяСтрока) = Тип("ГруппировкаДиаграммыКомпоновкиДанных") Тогда
		 
		ЭлементыФормы.ПанельПолейГруппировки.ТекущаяСтраница = ЭлементыФормы.ПанельПолейГруппировки.Страницы.Настройки;
		УстановитьКартинкуЗакладкиПолейГруппировки(Истина);
			
		ПроверитьИВключитьЛокальныеВыбранныеПоля(ЭлементыФормы.Структура.ТекущаяСтрока);
		ПроверитьИВключитьЛокальныйОтбор(ЭлементыФормы.Структура.ТекущаяСтрока);
		ПроверитьИВключитьЛокальныйПорядок(ЭлементыФормы.Структура.ТекущаяСтрока);
		ПроверитьИВключитьЛокальноеУсловноеОформление(ЭлементыФормы.Структура.ТекущаяСтрока);
		ПроверитьИВключитьЛокальныеПараметрыВывода(ЭлементыФормы.Структура.ТекущаяСтрока);
		
	КонецЕсли;
	
	
	Если ТипЗнч(ЭлементыФормы.Структура.ТекущаяСтрока) = Тип("ТаблицаКомпоновкиДанных") ИЛИ
		ТипЗнч(ЭлементыФормы.Структура.ТекущаяСтрока) = Тип("ДиаграммаКомпоновкиДанных") Тогда
		
		СделатьПоляГруппировкиНедоступными();
		ПроверитьИВключитьЛокальныеВыбранныеПоля(ЭлементыФормы.Структура.ТекущаяСтрока);
		СделатьОтборНедоступным();
		СделатьПорядокНедоступным();
		ПроверитьИВключитьЛокальноеУсловноеОформление(ЭлементыФормы.Структура.ТекущаяСтрока);
		ПроверитьИВключитьЛокальныеПараметрыВывода(ЭлементыФормы.Структура.ТекущаяСтрока);
		
	КонецЕсли;
	
	УстановитьРежимРедактированияТекущихНастроек();
	
КонецПроцедуры

Процедура УстановитьРежимРедактированияТекущихНастроек()
	
	Если ЭлементыФормы.ПанельНастройкиЭлемента.ТекущаяСтраница = 
		ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.ПараметрыДанных ИЛИ 
		ЭлементыФормы.ПанельНастройкиЭлемента.ТекущаяСтраница = 
		ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.ПользовательскиеПоля Тогда
		
		ЭлементыФормы.Структура.ПодробнаяНастройка = Ложь;
		
	Иначе
		
		ЭлементыФормы.Структура.ПодробнаяНастройка = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОсновныеДействияФормыОсновныеДействияФормыОК(Кнопка)
	
	Закрыть(Истина);
	
КонецПроцедуры

Процедура СкрытьНеИспользуемыеУзелИДочерниеКоллекция(КоллекцияУзлов)
	
	Для Каждого Узел Из КоллекцияУзлов Цикл
		
		СкрытьНеИспользуемыеУзелИДочерние(Узел);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СкрытьНеИспользуемыеУзелИДочерние(Узел)
	
	Если ТипЗнч(Узел) = Тип("НастройкиКомпоновкиДанных") Тогда
		
		ЭлементыФормы.Структура.Развернуть(Узел);
		СкрытьНеИспользуемыеУзелИДочерниеКоллекция(Узел.Структура);
		
	ИначеЕсли ТипЗнч(Узел) = Тип("НастройкиВложенногоОбъектаКомпоновкиДанных") Тогда
		
		Если Не Узел.Использование Тогда
			
			ЭлементыФормы.Структура.Свернуть(Узел);
			
		Иначе
			
			ЭлементыФормы.Структура.Развернуть(Узел);
			
		КонецЕсли;
		
		СкрытьНеИспользуемыеУзелИДочерниеКоллекция(Узел.Настройки.Структура);

		
	ИначеЕсли ТипЗнч(Узел) = Тип("ТаблицаКомпоновкиДанных") Тогда
		
		ЭлементыФормы.Структура.Развернуть(Узел.Строки);
		СкрытьНеИспользуемыеУзелИДочерниеКоллекция(Узел.Строки);
		ЭлементыФормы.Структура.Развернуть(Узел.Колонки);
		СкрытьНеИспользуемыеУзелИДочерниеКоллекция(Узел.Колонки);
		
		Если Не Узел.Использование Тогда
			
			ЭлементыФормы.Структура.Свернуть(Узел);
			
		Иначе
			
			ЭлементыФормы.Структура.Развернуть(Узел);
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Узел) = Тип("ГруппировкаКомпоновкиДанных") ИЛИ
		ТипЗнч(Узел) = Тип("ГруппировкаТаблицыКомпоновкиДанных") ИЛИ
		ТипЗнч(Узел) = Тип("ГруппировкаДиаграммыКомпоновкиДанных") Тогда
		
		СкрытьНеИспользуемыеУзелИДочерниеКоллекция(Узел.Структура);
		
		Если Не Узел.Использование Тогда
			
			ЭлементыФормы.Структура.Свернуть(Узел);
			
		Иначе
			
			ЭлементыФормы.Структура.Развернуть(Узел);
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Узел) = Тип("ДиаграммаКомпоновкиДанных") Тогда
		
		ЭлементыФормы.Структура.Развернуть(Узел.Серии);
		СкрытьНеИспользуемыеУзелИДочерниеКоллекция(Узел.Серии);
		ЭлементыФормы.Структура.Развернуть(Узел.Точки);
		СкрытьНеИспользуемыеУзелИДочерниеКоллекция(Узел.Точки);
		
		Если Не Узел.Использование Тогда
			
			ЭлементыФормы.Структура.Свернуть(Узел);
			
		Иначе
			
			ЭлементыФормы.Структура.Развернуть(Узел);
			
		КонецЕсли;
		
	КонецЕсли;
		
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ЭлементыФормы.ФормироватьПриОткрытии.Видимость = Не ОсновнаяНастройка;
	СкрытьНеИспользуемыеУзелИДочерние(КомпоновщикНастроек.Настройки);
	
КонецПроцедуры

Процедура СтруктураПриАктивизацииЯчейки(Элемент)
	
	Перем ВыбраннаяСтраница;
	
	Если ЭлементыФормы.Структура.ТекущаяКолонка = ЭлементыФормы.Структура.Колонки.Выбор Тогда
		
		ВыбраннаяСтраница = ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.Выбор;
		
	ИначеЕсли ЭлементыФормы.Структура.ТекущаяКолонка = ЭлементыФормы.Структура.Колонки.Отбор Тогда
		
		ВыбраннаяСтраница = ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.Отбор;
		
	ИначеЕсли ЭлементыФормы.Структура.ТекущаяКолонка = ЭлементыФормы.Структура.Колонки.Порядок Тогда
		
		ВыбраннаяСтраница = ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.Порядок;
		
	ИначеЕсли ЭлементыФормы.Структура.ТекущаяКолонка = ЭлементыФормы.Структура.Колонки.УсловноеОформление Тогда
		
		ВыбраннаяСтраница = ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.УсловноеОформление;
		
	ИначеЕсли ЭлементыФормы.Структура.ТекущаяКолонка = ЭлементыФормы.Структура.Колонки.ПараметрыВывода Тогда
		
		ВыбраннаяСтраница = ЭлементыФормы.ПанельНастройкиЭлемента.Страницы.ПараметрыВывода;
		
	КонецЕсли;
	
	Если ВыбраннаяСтраница <> Неопределено Тогда
		
		ЭлементыФормы.ПанельНастройкиЭлемента.ТекущаяСтраница = ВыбраннаяСтраница;
		
	КонецЕсли;
	
	ВключитьТекстТабличныхПолей();
			
КонецПроцедуры

Процедура ВключитьТекстТабличныхПолей()

	Если СтрокаИспользуется(ЭлементыФормы.Структура.ТекущаяСтрока) Тогда
			
		Цвет = Новый Цвет();
			
	Иначе
			
		Цвет = НеИспользуемыйЦвет;
			
	КонецЕсли;

	ЭлементыФормы.ПараметрыДанных.ЦветТекстаПоля = Цвет;
	ЭлементыФормы.ПараметрыВывода.ЦветТекстаПоля = Цвет;
	ЭлементыФормы.Выбор.ЦветТекстаПоля = Цвет;
	ЭлементыФормы.Отбор.ЦветТекстаПоля = Цвет;
	ЭлементыФормы.Порядок.ЦветТекстаПоля = Цвет;
	ЭлементыФормы.ПользовательскиеПоля.ЦветТекстаПоля = Цвет;
	ЭлементыФормы.ПоляГруппировки.ЦветТекстаПоля = Цвет;
	ЭлементыФормы.УсловноеОформление.ЦветТекстаПоля = Цвет;
	ЭлементыФормы.ДоступныеПоляВыбора.ЦветТекстаПоля = Цвет;
	ЭлементыФормы.ДоступныеПоляОтбора.ЦветТекстаПоля = Цвет;
	ЭлементыФормы.ДоступныеПоляПолейГруппировок.ЦветТекстаПоля = Цвет;
	ЭлементыФормы.ДоступныеПоляПорядка.ЦветТекстаПоля = Цвет;
	
КонецПроцедуры

Процедура УсловноеОформлениеПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ДанныеСтроки.Поля.Элементы.Количество() = 0 Тогда
		
		ОформлениеСтроки.Ячейки.ОбластиДляКраткогоОтображенияЭлемента.Текст = НСтр("ru='<Все поля>';uk='<Всі поля>'");
		ОформлениеСтроки.Ячейки.ОбластиДляПодробногоОтображенияЭлемента.Текст = НСтр("ru='<Все поля>';uk='<Всі поля>'");
		
	КонецЕсли;
		
	Если ДанныеСтроки.Отбор.Элементы.Количество() = 0 Тогда
		
		ОформлениеСтроки.Ячейки.ОтборДляКраткогоОтображенияЭлемента.Текст = НСтр("ru='<Без условия>';uk='<Без умови>'");
		ОформлениеСтроки.Ячейки.ОтборДляПодробногоОтображенияЭлемента.Текст = НСтр("ru='<Без условия>';uk='<Без умови>'");
		
	КонецЕсли;
	
	ЦветФона = ДанныеСтроки.Оформление.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ЦветФона"));
	Если ЦветФона.Использование Тогда
		
		ОформлениеСтроки.ЦветФона = ЦветФона.Значение;
		
	КонецЕсли;
	
	ЦветТекста = ДанныеСтроки.Оформление.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ЦветТекста"));
	Если ЦветТекста.Использование Тогда
		
		ОформлениеСтроки.ЦветТекста = ЦветТекста.Значение;
		
	КонецЕсли;
	
	Шрифт = ДанныеСтроки.Оформление.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Шрифт"));
	Если Шрифт.Использование Тогда
		
		ОформлениеСтроки.Шрифт = Шрифт.Значение;
		
	КонецЕсли;
	
	Текст = ДанныеСтроки.Оформление.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Текст"));
	Если Текст.Использование Тогда
		
		ОформлениеСтроки.Ячейки.ОформлениеДляКраткогоОтображенияЭлемента.Текст = Текст.Значение;
		ОформлениеСтроки.Ячейки.ОформлениеДляПодробногоОтображенияЭлемента.Текст = Текст.Значение;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СтруктураНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	
	Если Элемент.ТекущаяКолонка <> Элемент.Колонки.Заголовок Тогда 
		
		СтандартнаяОбработка = Ложь;
	
	КонецЕсли;
	
КонецПроцедуры

Процедура СтруктураПриИзмененииФлажка(Элемент, Колонка)
	
	Если Не Элемент.ТекущаяСтрока.Использование Тогда
		
		Элемент.Свернуть(Элемент.ТекущаяСтрока);
		
	Иначе 
		
		Элемент.Развернуть(Элемент.ТекущаяСтрока);
		
	КонецЕсли;
	
	ВключитьТекстТабличныхПолей();
	
КонецПроцедуры

Функция СтрокаИспользуется(Знач Стр)

	Если ТипЗнч(Стр) = Тип("КоллекцияЭлементовСтруктурыДиаграммыКомпоновкиДанных") ИЛИ
		ТипЗнч(Стр) = Тип("КоллекцияЭлементовСтруктурыТаблицыКомпоновкиДанных") Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Используется = Истина;
			
	Пока Используется И Стр <> Неопределено Цикл
				
		Попытка 
			
			Используется = Стр.Использование;
					
		Исключение
			
		КонецПопытки;
				
		Попытка 
			
			Стр = Стр.Родитель;
			
		Исключение
			
			Прервать;
			
		КонецПопытки;
				
	КонецЦикла;
	
	Возврат Используется;
			
КонецФункции

Процедура СтруктураПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Для Каждого Оформление Из ОформленияСтрок Цикл
		
		Если ТипЗнч(Оформление.ДанныеСтроки.Строка) = Тип("КоллекцияЭлементовСтруктурыДиаграммыКомпоновкиДанных") ИЛИ
			 ТипЗнч(Оформление.ДанныеСтроки.Строка) = Тип("КоллекцияЭлементовСтруктурыТаблицыКомпоновкиДанных") ИЛИ
			 ТипЗнч(Оформление.ДанныеСтроки.Строка) = Тип("НастройкиКомпоновкиДанных") Тогда
			 
			Если ТипЗнч(Оформление.ДанныеСтроки.Строка) = Тип("КоллекцияЭлементовСтруктурыДиаграммыКомпоновкиДанных") ИЛИ
				 ТипЗнч(Оформление.ДанныеСтроки.Строка) = Тип("КоллекцияЭлементовСтруктурыТаблицыКомпоновкиДанных") Тогда
				 
				Оформление.ЦветТекста = Новый Цвет(96, 96, 96);
				
			КонецЕсли;
			
		Иначе
			
			Если НЕ СтрокаИспользуется(Оформление.ДанныеСтроки.Строка) Тогда
				// Элемент не используется - выделим его серым цветом
				
				Оформление.ЦветТекста = НеИспользуемыйЦвет;
				
			КонецЕсли
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура РаскраскаНедоступныхПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Для Каждого Оформление Из ОформленияСтрок Цикл
		
		Если Не СтрокаИспользуется(Оформление.ДанныеСтроки) Тогда
			
			Оформление.ЦветТекста = НеИспользуемыйЦвет;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СтруктураПриАктивизацииСтроки(Элемент)
	
	УстановитьДоступностьНастроек();
	
	// Удалим выделение с полей упорядочивания
	ЭлементыФормы.Порядок.ВыделенныеСтроки.Очистить();
	ПервичнаяАктивизация = Истина;
	
КонецПроцедуры

Процедура ЛокальныеВыбранныеПоляПриИзменении(Элемент)
	
	Если Элемент.Значение Тогда
		// Включили локальные настройки
		ЭлементыФормы.ПанельВыбранныхПолей.ТекущаяСтраница = ЭлементыФормы.ПанельВыбранныхПолей.Страницы.Настройки;
			
	Иначе
		// Выключили локальные настройки
		ЭлементыФормы.ПанельВыбранныхПолей.ТекущаяСтраница = ЭлементыФормы.ПанельВыбранныхПолей.Страницы.ОтключенныеНастройки;
		ЭлементыФормы.Структура.ТекущаяСтрока.Выбор.Элементы.Очистить();
		ЭлементыФормы.Структура.ТекущаяСтрока.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
		
	КонецЕсли;
	УстановитьКартинкуЗакладкиВыбранныхПолей(Истина, Элемент.Значение);
	
КонецПроцедуры

Процедура ПанельНастройкиЭлементаПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	УстановитьРежимРедактированияТекущихНастроек();
	
КонецПроцедуры

Процедура ЛокальныйОтборПриИзменении(Элемент)
	
	Если Элемент.Значение Тогда
		// Включили локальные настройки
		ЭлементыФормы.ПанельОтбора.ТекущаяСтраница = ЭлементыФормы.ПанельОтбора.Страницы.Настройки;
			
	Иначе
		// Выключили локальные настройки
		ЭлементыФормы.ПанельОтбора.ТекущаяСтраница = ЭлементыФормы.ПанельОтбора.Страницы.ОтключенныеНастройки;
		ЭлементыФормы.Структура.ТекущаяСтрока.Отбор.Элементы.Очистить();
		
	КонецЕсли;
	
	УстановитьКартинкуЗакладкиОтбора(Истина, Элемент.Значение);
	
КонецПроцедуры

Процедура ЛокальныйПорядокПриИзменении(Элемент)
	
	Если Элемент.Значение Тогда
		// Включили локальные настройки
		ЭлементыФормы.ПанельПорядка.ТекущаяСтраница = ЭлементыФормы.ПанельПорядка.Страницы.Настройки;
			
	Иначе
		// Выключили локальные настройки
		ЭлементыФормы.ПанельПорядка.ТекущаяСтраница = ЭлементыФормы.ПанельПорядка.Страницы.ОтключенныеНастройки;
		ЭлементыФормы.Структура.ТекущаяСтрока.Порядок.Элементы.Очистить();
		ЭлементыФормы.Структура.ТекущаяСтрока.Порядок.Элементы.Добавить(Тип("АвтоЭлементПорядкаКомпоновкиДанных"));
		
	КонецЕсли;
	УстановитьКартинкуЗакладкиПорядка(Истина, Элемент.Значение);
	
КонецПроцедуры

Процедура ЛокальноеУсловноеОформлениеПриИзменении(Элемент)
	
	Если Элемент.Значение Тогда
		// Включили локальные настройки
		ЭлементыФормы.ПанельУсловногоОформления.ТекущаяСтраница = ЭлементыФормы.ПанельУсловногоОформления.Страницы.Настройки;
			
	Иначе
		// Выключили локальные настройки
		ЭлементыФормы.ПанельУсловногоОформления.ТекущаяСтраница = ЭлементыФормы.ПанельУсловногоОформления.Страницы.ОтключенныеНастройки;
		ЭлементыФормы.Структура.ТекущаяСтрока.УсловноеОформление.Элементы.Очистить();
		
	КонецЕсли;
	УстановитьКартинкуЗакладкиУсловногоОформления(Истина, Элемент.Значение);
	
КонецПроцедуры

Процедура ОтключитьЛокальныеПараметрыВывода(Элементы)
	
	Для Каждого ТекЭлемент Из Элементы Цикл
			
		ТекЭлемент.Использование = Ложь;
		ОтключитьЛокальныеПараметрыВывода(ТекЭлемент.ЗначенияВложенныхПараметров);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЛокальныеПараметрыВыводаПриИзменении(Элемент)
	
	Если Элемент.Значение Тогда
		// Включили локальные настройки
		ЭлементыФормы.ПанельПараметровВывода.ТекущаяСтраница = ЭлементыФормы.ПанельПараметровВывода.Страницы.Настройки;
			
	Иначе
		// Выключили локальные настройки
		ЭлементыФормы.ПанельПараметровВывода.ТекущаяСтраница = ЭлементыФормы.ПанельПараметровВывода.Страницы.ОтключенныеНастройки;
		ОтключитьЛокальныеПараметрыВывода(ЭлементыФормы.Структура.ТекущаяСтрока.ПараметрыВывода.Элементы);
		
	КонецЕсли;
	УстановитьКартинкуЗакладкиПараметровВывода(Истина, Элемент.Значение);
	
КонецПроцедуры

Функция НайтиТаблицуИлиДиаграмму(ТекущийЭлементНастроек, Стр)
	
	Если ТипЗнч(ТекущийЭлементНастроек) = Тип("ТаблицаКомпоновкиДанных") Тогда
		
		Если ТекущийЭлементНастроек.Строки = Стр ИЛИ 
			ТекущийЭлементНастроек.Колонки = Стр Тогда
			
			Возврат ТекущийЭлементНастроек;
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ТекущийЭлементНастроек) = Тип("ДиаграммаКомпоновкиДанных") Тогда
		
		Если ТекущийЭлементНастроек.Серии = Стр ИЛИ 
			ТекущийЭлементНастроек.Точки = Стр Тогда
			
			Возврат ТекущийЭлементНастроек;
			
		КонецЕсли;
		
	Иначе
		
		Если ТипЗнч(ТекущийЭлементНастроек) = Тип("НастройкиВложенногоОбъектаКомпоновкиДанных") Тогда
			
			Структура = ТекущийЭлементНастроек.Настройки.Структура;
			
		Иначе
			
			Структура = ТекущийЭлементНастроек.Структура;
			
		КонецЕсли;
		
		Для Каждого Элемент Из Структура Цикл
			
			НайденныйЭлемент = НайтиТаблицуИлиДиаграмму(Элемент, Стр);
			
			Если НайденныйЭлемент <> Неопределено Тогда
				
				Возврат НайденныйЭлемент;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Процедура ПерейтиКОтчету()
	
	Стр = ЭлементыФормы.Структура.ТекущаяСтрока;

	Если ТипЗнч(Стр) = Тип("КоллекцияЭлементовСтруктурыДиаграммыКомпоновкиДанных") ИЛИ
		ТипЗнч(Стр) = Тип("КоллекцияЭлементовСтруктурыТаблицыКомпоновкиДанных") Тогда
		
		Стр = НайтиТаблицуИлиДиаграмму(КомпоновщикНастроек.Настройки, Стр);
		
	КонецЕсли;
		
	Пока Стр <> Неопределено Цикл
		
		Если ТипЗнч(Стр) = Тип("НастройкиКомпоновкиДанных") ИЛИ
			ТипЗнч(Стр) = Тип("НастройкиВложенногоОбъектаКомпоновкиДанных") Тогда
			
			Прервать;
			
		КонецЕсли;
		
		Стр = Стр.Родитель;
		
	КонецЦикла;
	
	Если Стр <> Неопределено Тогда
	
		ЭлементыФормы.Структура.ТекущаяСтрока = Стр;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПереходКВыбраннымПолямОтчетаНажатие(Элемент)
	
	ПерейтиКОтчету();
	
КонецПроцедуры

Процедура ДоступныеПоляПорядкаОбработкаВыбора()
	
	ПервичнаяАктивизация = Ложь;

	Если ЭлементыФормы.Порядок.ВыделенныеСтроки.Количество() = 0 Тогда 
		
		ИндексВставки = 0;
		
	Иначе
		
		ИндексВставки = ЭлементыФормы.Структура.ТекущаяСтрока.Порядок.Элементы.Индекс(ЭлементыФормы.Порядок.ТекущаяСтрока) + 1;
		
	КонецЕсли;
	
	Для Каждого Строка Из ЭлементыФормы.ДоступныеПоляПорядка.ВыделенныеСтроки Цикл
		
		ДобавленныйЭлемент = 
			ЭлементыФормы.Структура.ТекущаяСтрока.Порядок.Элементы.Вставить(ИндексВставки, Тип("ЭлементПорядкаКомпоновкиДанных"));
			
		ДобавленныйЭлемент.Поле = Строка.Поле;
		
	КонецЦикла;
	
	Если ДобавленныйЭлемент <> Неопределено Тогда
		
		ЭлементыФормы.Порядок.ТекущаяСтрока = ДобавленныйЭлемент;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДоступныеПоляПорядкаВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДоступныеПоляПорядкаОбработкаВыбора();
	
КонецПроцедуры

Процедура ПорядокПриАктивизацииСтроки(Элемент)
	
	Если ПервичнаяАктивизация Тогда 
		
		Элемент.ВыделенныеСтроки.Очистить();
		ПервичнаяАктивизация = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанель6Действие(Кнопка)
	
	ДоступныеПоляПорядкаОбработкаВыбора();

КонецПроцедуры

Процедура ПараметрыВыводаПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Для Каждого Оформление Из ОформленияСтрок Цикл
		
		Если Оформление.ДанныеСтроки.Использование Тогда
			
			Оформление.Шрифт = Новый Шрифт(Оформление.Шрифт, , , Истина);
			
		КонецЕсли;
		
	КонецЦикла;
		
КонецПроцедуры

Процедура ДоступныеПоляВыбораПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		
		Если Не ОформлениеСтроки.ДанныеСтроки.Ресурс И Не ОформлениеСтроки.ДанныеСтроки.Папка Тогда
			
			Типы = ОформлениеСтроки.ДанныеСтроки.Тип.Типы();
			
			Если Типы.Количество() = 1 Тогда
				
				Если Типы[0] = Тип("Число") Тогда 
					
					ОформлениеСтроки.Ячейки.Заголовок.ИндексКартинки = 0;
					
				ИначеЕсли Типы[0] = Тип("Строка") Тогда 
					
					ОформлениеСтроки.Ячейки.Заголовок.ИндексКартинки = 1;
					
				ИначеЕсли Типы[0] = Тип("Дата") Тогда 
					
					ОформлениеСтроки.Ячейки.Заголовок.ИндексКартинки = 2;
					
				ИначеЕсли Типы[0] = Тип("Булево") Тогда 
					
					ОформлениеСтроки.Ячейки.Заголовок.ИндексКартинки = 3;
					
				ИначеЕсли Найти(Строка(Типы[0]), "Справочник") <> 0 Тогда 
					
					ОформлениеСтроки.Ячейки.Заголовок.ИндексКартинки = 7;
					
				ИначеЕсли Найти(Строка(Типы[0]), "Документ") <> 0 Тогда 
					
					ОформлениеСтроки.Ячейки.Заголовок.ИндексКартинки = 8;
					
				ИначеЕсли Найти(Строка(Типы[0]), "Перечисление") <> 0 Тогда 
					
					ОформлениеСтроки.Ячейки.Заголовок.ИндексКартинки = 9;
					
				ИначеЕсли Найти(Строка(Типы[0]), "План видов хар") <> 0 Тогда 
					
					ОформлениеСтроки.Ячейки.Заголовок.ИндексКартинки = 10;
					
				ИначеЕсли Найти(Строка(Типы[0]), "План счетов") <> 0 Тогда 
					
					ОформлениеСтроки.Ячейки.Заголовок.ИндексКартинки = 11;
					
				ИначеЕсли Найти(Строка(Типы[0]), "План видов рас") <> 0 Тогда 
					
					ОформлениеСтроки.Ячейки.Заголовок.ИндексКартинки = 12;
					
				ИначеЕсли Найти(Строка(Типы[0]), "Бизнес процесс") <> 0 Тогда 
					
					ОформлениеСтроки.Ячейки.Заголовок.ИндексКартинки = 13;
					
				ИначеЕсли Найти(Строка(Типы[0]), "Точка маршрута") <> 0 Тогда 
					
					ОформлениеСтроки.Ячейки.Заголовок.ИндексКартинки = 14;
					
				ИначеЕсли Найти(Строка(Типы[0]), "Задача") <> 0 Тогда 
					
					ОформлениеСтроки.Ячейки.Заголовок.ИндексКартинки = 15;
					
				Иначе
					
					ОформлениеСтроки.Ячейки.Заголовок.ИндексКартинки = 16;
					
				КонецЕсли;
				
			Иначе
				
				ОформлениеСтроки.Ячейки.Заголовок.ИндексКартинки = 16;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры


НеИспользуемыйЦвет = Новый Цвет(153, 153, 153);
ЭлементыФормы.Структура.НачальноеОтображениеДерева = НачальноеОтображениеДерева.НеРаскрывать;
