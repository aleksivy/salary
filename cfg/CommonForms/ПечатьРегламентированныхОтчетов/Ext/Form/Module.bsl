Перем СписокПечатаемыхЛистов Экспорт;
Перем ПоследнийРедактируемыйТабличныйДокумент;
Перем ВидПечати Экспорт;

// Выводит на печать все табличные документы из списка, вызывается при
// попытке открытия формы с параметром ВидПечати = "Печатать сразу"
Процедура ПечататьСразу()
	Для Каждого Эл Из СписокПечатаемыхЛистов Цикл
		Эл.ТабличныйДокумент.КоличествоЭкземпляров = 1;
		Эл.ТабличныйДокумент.ЭкземпляровНаСтранице = 1;
		Эл.ТабличныйДокумент.Напечатать(Истина);
	КонецЦикла;
КонецПроцедуры

Процедура ПриОткрытии()
	// Инициализируем начальные установки
	Заголовок = КлючУникальности.Заголовок + " - предварительный просмотр";
	КоличествоКопий     = ВосстановитьЗначение("ПредпросмотрРегламентированнойОтчетностиКоличествоКопий");
	РазобратьПоКопиям   = ВосстановитьЗначение("ПредпросмотрРегламентированнойОтчетностиРазобратьПоКопиям");
	ОтображатьСетку     = ВосстановитьЗначение("ПредпросмотрРегламентированнойОтчетностиОтображатьСетку");
	ОтображатьЗаголовки = ВосстановитьЗначение("ПредпросмотрРегламентированнойОтчетностиОтображатьЗаголовки");
	Если РазобратьПоКопиям = Неопределено Тогда
		РазобратьПоКопиям = Истина;
	КонецЕсли;
	Если ОтображатьСетку = Неопределено Тогда
		ОтображатьСетку = Ложь;
	КонецЕсли;
	Если ОтображатьЗаголовки = Неопределено Тогда
		ОтображатьЗаголовки = Ложь;
	КонецЕсли;
	ПоследнийРедактируемыйТабличныйДокумент = Неопределено;
	
	// заполняем список печатаемых листов на основании промежуточной переменной СписокПечатаемыхЛистов
	СписокЛистов.Очистить();
	Для Каждого Сч Из СписокПечатаемыхЛистов Цикл
		НовСтр = СписокЛистов.Добавить();
		НовСтр.Пом = Истина;
		НовСтр.Наименование = Сч.Наименование;
		НовСтр.ТабличныйДокумент = Сч.ТабличныйДокумент;
	КонецЦикла;
	
	СписокЛистовПриИзмененииФлажка(Неопределено, Неопределено);
	КоличествоКопийПриИзменении(Неопределено);
	ПриИзмененииОпцийТаблицы(Неопределено);
	
КонецПроцедуры

// Процедура по нажатию на кнопку Печать
// выводит на принтер выбранные табличные документы в соответствии с выбранными
// параметрами печати
Процедура ОсновныеДействияФормыПечать(Кнопка)
	ЗафиксироватьИзмененияТабличногоДокумента();
	Если РазобратьПоКопиям Тогда
		Для Сч = 1 По КоличествоКопий Цикл
			Для Каждого Эл из СписокЛистов Цикл
				Если НЕ Эл.Пом Тогда
					Продолжить;
				КонецЕсли;
				Эл.ТабличныйДокумент.КоличествоЭкземпляров = 1;
				Эл.ТабличныйДокумент.ЭкземпляровНаСтранице = 1;
				Эл.ТабличныйДокумент.Напечатать();
			КонецЦикла;
		КонецЦикла;
	Иначе
		Для Каждого Эл из СписокЛистов Цикл
			Если НЕ Эл.Пом Тогда
				Продолжить;
			КонецЕсли;
			Для Сч = 1 По КоличествоКопий Цикл
				Эл.ТабличныйДокумент.КоличествоЭкземпляров = 1;
				Эл.ТабличныйДокумент.ЭкземпляровНаСтранице = 1;
				Эл.ТабличныйДокумент.Напечатать();
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

// Возвращает общее количество выбранных из списка печатаемых листов
Функция КоличествоВыбранныхТабличныхДокументов()
	Кол = 0;
	Для Каждого Стр Из СписокЛистов Цикл
		Если Стр.Пом Тогда
			Кол = Кол + 1;
		КонецЕсли;
	КонецЦикла;
	Возврат Кол;
КонецФункции

// Формирует текст подсказки, отображаемый на нижней панели действий
Процедура СписокЛистовПриИзмененииФлажка(Элемент, Колонка)

	Перем КоличествоТаблДок, КоличествоЛистовВсего, КоличествоЛистовТребуется;
	Перем ТекстЛистовВсего, ТекстЛистовТребуется;

	КоличествоТаблДок = КоличествоВыбранныхТабличныхДокументов();
	КоличествоЛистовВсего = СписокЛистов.Количество();
	КоличествоЛистовТребуется = КоличествоТаблДок * КоличествоКопий;

	ТекстЛистовВсего = СтрЗаменить(ЧислоПрописью(КоличествоЛистовВсего, "НП=Истина, НД=Ложь", "листа, листов, листов, м, , , , ,0"),
	                               ЧислоПрописью(КоличествоЛистовВсего, "НП=Ложь, НД=Ложь", " , , , , , , , ,0"),
	                               "");

	ТекстЛистовТребуется = СтрЗаменить(ЧислоПрописью(КоличествоЛистовТребуется, "НП=Истина, НД=Ложь", "лист, листа, листов, м, , , , ,0"),
	                                   ЧислоПрописью(КоличествоЛистовТребуется, "НП=Ложь, НД=Ложь", " , , , , , , , ,0"),
	                                   "");

	ТекстСтатистики = "Выбрано " + КоличествоТаблДок + " из " + СписокЛистов.Количество() + " " + ТекстЛистовВсего +". "
	                + "Для печати требуется " + КоличествоЛистовТребуется + " " + ТекстЛистовТребуется +" бумаги.";

КонецПроцедуры

// Снимает пометки с элементов списка печатаемых листов
Процедура КнопкаРаспометитьВсеНажатие(Элемент)
	Для Каждого Эл Из СписокЛистов Цикл
		Эл.Пом = Ложь;
	КонецЦикла;
	СписокЛистовПриИзмененииФлажка(Неопределено, Неопределено);
КонецПроцедуры

// Устанавливает пометки у элементов списка печатаемых листов
Процедура КнопкаПометитьВсеНажатие(Элемент)
	Для Каждого Эл Из СписокЛистов Цикл
		Эл.Пом = Истина;
	КонецЦикла;
	СписокЛистовПриИзмененииФлажка(Неопределено, Неопределено);
КонецПроцедуры

// Сохраняет изменения, произведенные в табличном документе "выбранный лист"
Процедура ЗафиксироватьИзмененияТабличногоДокумента()
	Если ПоследнийРедактируемыйТабличныйДокумент <> Неопределено Тогда
		ПоследнийРедактируемыйТабличныйДокумент.ТабличныйДокумент.Очистить();
		ПоследнийРедактируемыйТабличныйДокумент.ТабличныйДокумент.Вывести(ЭлементыФормы.ИтоговаяТаблица);
	КонецЕсли;
КонецПроцедуры

// Выводит в табличный документ "выбранный лист" табличный документ, соответствующей текущей 
// выбранной строке списка "Печатаемые листы"
Процедура СписокЛистовПриАктивизацииСтроки(Элемент)
	ЗафиксироватьИзмененияТабличногоДокумента();
	ЭлементыФормы.ИтоговаяТаблица.Очистить();
	ЭлементыФормы.ИтоговаяТаблица.Вывести(ЭлементыФормы.СписокЛистов.ТекущаяСтрока.ТабличныйДокумент);
	ЭлементыФормы.ИтоговаяТаблица.ОриентацияСтраницы = ЭлементыФормы.СписокЛистов.ТекущаяСтрока.ТабличныйДокумент.ОриентацияСтраницы;
	ЭлементыФормы.ИтоговаяТаблица.АвтоМасштаб = ЭлементыФормы.СписокЛистов.ТекущаяСтрока.ТабличныйДокумент.АвтоМасштаб;
	Если НЕ ЭлементыФормы.ИтоговаяТаблица.АвтоМасштаб Тогда
		ЭлементыФормы.ИтоговаяТаблица.МасштабПечати = ЭлементыФормы.СписокЛистов.ТекущаяСтрока.ТабличныйДокумент.МасштабПечати;
	КонецЕсли;
	ПоследнийРедактируемыйТабличныйДокумент = ЭлементыФормы.СписокЛистов.ТекущаяСтрока;
КонецПроцедуры

// Запрещаем интерактивное удаление строк из таблицы "Печатаемые листы"
Процедура СписокЛистовПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

// Запрещаем интерактивное добавление строк в таблицу "Печатаемые листы"
Процедура СписокЛистовПередНачаломДобавления(Элемент, Отказ, Копирование)
	Отказ = Истина;
КонецПроцедуры

// Перемещает текущую строку таблицы "Печатаемые листы" вниз на одну позицию
Процедура КнопкаПереместитьВнизНажатие(Элемент)
	Если СписокЛистов.Индекс(ЭлементыФормы.СписокЛистов.ТекущаяСтрока) <> СписокЛистов.Количество() - 1 Тогда
		СписокЛистов.Сдвинуть(ЭлементыФормы.СписокЛистов.ТекущаяСтрока, 1);
	КонецЕсли;
	СписокЛистовПриАктивизацииСтроки(Неопределено);
КонецПроцедуры

// Перемещает текущую строку таблицы "Печатаемые листы" вверх на одну позицию
Процедура КнопкаПереместитьВверхНажатие(Элемент)
	Если СписокЛистов.Индекс(ЭлементыФормы.СписокЛистов.ТекущаяСтрока) <> 0 Тогда
		СписокЛистов.Сдвинуть(ЭлементыФормы.СписокЛистов.ТекущаяСтрока, -1);
	КонецЕсли;
	СписокЛистовПриАктивизацииСтроки(Неопределено);
КонецПроцедуры

// Делает активным следующую строку таблицы "Печатаемые листы"
Процедура КнопкаСледующийНажатие(Элемент)
	Если СписокЛистов.Индекс(ЭлементыФормы.СписокЛистов.ТекущаяСтрока) <> СписокЛистов.Количество() - 1 Тогда
		ЭлементыФормы.СписокЛистов.ТекущаяСтрока = СписокЛистов.Получить(СписокЛистов.Индекс(ЭлементыФормы.СписокЛистов.ТекущаяСтрока) + 1);
	КонецЕсли;
	СписокЛистовПриАктивизацииСтроки(Неопределено);
КонецПроцедуры

// Делает активным предыдущую строку таблицы "Печатаемые листы"
Процедура КнопкаПредыдущийНажатие(Элемент)
	Если СписокЛистов.Индекс(ЭлементыФормы.СписокЛистов.ТекущаяСтрока) <> 0 Тогда
		ЭлементыФормы.СписокЛистов.ТекущаяСтрока = СписокЛистов.Получить(СписокЛистов.Индекс(ЭлементыФормы.СписокЛистов.ТекущаяСтрока) - 1);
	КонецЕсли;
	СписокЛистовПриАктивизацииСтроки(Неопределено);
КонецПроцедуры

// Регулирует доступность флажка "разобрать по копиям" и обновляет текст подсказки
// на нижней панели действий формы при изменении параметра печати "Количество копий"
Процедура КоличествоКопийПриИзменении(Элемент)
	Если КоличествоКопий = 0 ИЛИ КоличествоКопий = Неопределено Тогда
		КоличествоКопий = 1;
	КонецЕсли;
	Если КоличествоКопий <> 1 Тогда
		ЭлементыФормы.РазобратьПоКопиям.Доступность = Истина;
	Иначе
		ЭлементыФормы.РазобратьПоКопиям.Доступность = Ложь;
	КонецЕсли;
	СписокЛистовПриИзмененииФлажка(Неопределено, Неопределено);
КонецПроцедуры

Процедура ПриЗакрытии()
	// сохраняем параметры отображения таблицы и параметры печати
	СохранитьЗначение("ПредпросмотрРегламентированнойОтчетностиКоличествоКопий", КоличествоКопий);
	СохранитьЗначение("ПредпросмотрРегламентированнойОтчетностиРазобратьПоКопиям", РазобратьПоКопиям);
	СохранитьЗначение("ПредпросмотрРегламентированнойОтчетностиОтображатьСетку", ОтображатьСетку);
	СохранитьЗначение("ПредпросмотрРегламентированнойОтчетностиОтображатьЗаголовки", ОтображатьЗаголовки);
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	Если СписокПечатаемыхЛистов.Количество() = 0 Тогда
		Предупреждение("Не выбраны листы для вывода на печать!");
		Отказ = Истина;
	КонецЕсли;
	Если ВидПечати = "ПечататьСразу" Тогда
		ПечататьСразу();
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

// Устанавливает опции таблицы "выбранный лист"
Процедура ПриИзмененииОпцийТаблицы(Элемент)
	ЭлементыФормы.ИтоговаяТаблица.ОтображатьЗаголовки = ОтображатьЗаголовки;
	ЭлементыФормы.ИтоговаяТаблица.ОтображатьСетку = ОтображатьСетку;
КонецПроцедуры


// Активизирует окно, из которого была вызвана печать. Если окно уже закрыто, то
// выдается соответствующее сообщение
Процедура ОсновныеДействияФормыАктивизироватьРодительскийОтчет(Кнопка)
	Попытка
		КлючУникальности.Активизировать();
	Исключение
		Предупреждение("Не удалось активизировать родительский отчет!");
	КонецПопытки;
КонецПроцедуры

СписокПечатаемыхЛистов = Новый ТаблицаЗначений;
СписокПечатаемыхЛистов.Колонки.Добавить("Наименование");
СписокПечатаемыхЛистов.Колонки.Добавить("ТабличныйДокумент");
ЭлементыФормы.ИтоговаяТаблица.АвтоМасштаб = Истина;
ЭлементыФормы.ИтоговаяТаблица.ЧерноБелаяПечать = Истина;
