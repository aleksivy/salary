////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем СтруктураПоиска;

////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ПолучитьДанные()
	
	ПустаяДата = Дата("00010101");
	Запрос = Новый Запрос();
	
	ТекстУсловияОрганизации = "";
	ТекстУсловияОрганизацииСрез = ""; 
	ТекстУсловияПодразделение = ""; 
	ТекстУсловияПодразделениеДоговориники = ""; 
	Если ЗначениеЗаполнено(Организация) Тогда
		ТекстУсловияОрганизацииСрез = " И Организация = &ГоловнаяОрганизация";
		ТекстУсловияОрганизации = " И РаботникиОрганизаций.Организация = &ГоловнаяОрганизация";
		Запрос.УстановитьПараметр("ГоловнаяОрганизация", Организация);
	КонецЕсли;
	Если НЕ ПодразделениеОрганизации.Пустая() Тогда
		ТекстУсловияПодразделение = " И РаботникиОрганизаций.ПодразделениеОрганизации В ИЕРАРХИИ (&ПодразделениеОрганизации)";
		ТекстУсловияПодразделениеДоговориники = " И РаботникиОрганизаций.Договор.ПодразделениеОрганизации В ИЕРАРХИИ (&ПодразделениеОрганизации)";
	КонецЕсли;
	
	
	ТекстЗапросаРеквизиты = "
	|	РаботникиОрганизаций.Сотрудник.Физлицо                     КАК Физлицо,
	|	РаботникиОрганизаций.Сотрудник.Физлицо.Наименование        КАК ФизлицоНаименование,
	|	РаботникиОрганизаций.ПодразделениеОрганизации              КАК ПодразделениеОрганизации,
	|	РаботникиОрганизаций.ПодразделениеОрганизации.Наименование КАК ПодразделениеОрганизацииНаименование,
	|	РаботникиОрганизаций.Должность                             КАК Должность,
	|	РаботникиОрганизаций.Должность.Наименование                КАК ДолжностьНаименование,
	|	РаботникиОрганизаций.Сотрудник.Код                         КАК ТабельныйНомер,
	|	РаботникиОрганизаций.ЗанимаемыхСтавок                      КАК ЗанимаемыхСтавок,
	|	РаботникиОрганизаций.ГрафикРаботы                          КАК ГрафикРаботы
	|";
	
	ТекстЗапросаДанныеПустойПериод = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ " + ТекстЗапросаРеквизиты + "
	|ИЗ  РегистрСведений.РаботникиОрганизаций.СрезПоследних(, Активность = ИСТИНА " + ТекстУсловияОрганизацииСрез + " ) КАК РаботникиОрганизаций
	|ГДЕ РаботникиОрганизаций.ЗанимаемыхСтавок > 0
	|  " + ТекстУсловияПодразделение + "
	|";
	
	ТекстЗапросаДанныеНачПериода = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ " + ТекстЗапросаРеквизиты + "
	|ИЗ  РегистрСведений.РаботникиОрганизаций.СрезПоследних(&НачПериода, Активность = ИСТИНА " + ТекстУсловияОрганизацииСрез + " ) КАК РаботникиОрганизаций
	|ГДЕ РаботникиОрганизаций.ЗанимаемыхСтавок > 0
	|  " + ТекстУсловияПодразделение + "
	|";
	
	ТекстЗапросаДанныеНачПериодаКонПериода = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ " + ТекстЗапросаРеквизиты + "
	|ИЗ  РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|ГДЕ РаботникиОрганизаций.ЗанимаемыхСтавок > 0
	|	И	РаботникиОрганизаций.Период >= &НачПериода
	|	И	РаботникиОрганизаций.Период <= &КонПериода
	|   И	РаботникиОрганизаций.Активность = ИСТИНА 
	|  " + ТекстУсловияОрганизации + "
	|  " + ТекстУсловияПодразделение + "
	|"; 
	
	Если НачПериода = ПустаяДата И КонПериода = ПустаяДата Тогда
		ТекстЗапроса = 	ТекстЗапросаДанныеПустойПериод
	ИначеЕсли НачПериода <> ПустаяДата И КонПериода <> ПустаяДата Тогда
		ТекстЗапроса = 	ТекстЗапросаДанныеНачПериода  + "
		|
		|ОБЪЕДИНИТЬ
		|"+ТекстЗапросаДанныеНачПериодаКонПериода;
	ИначеЕсли НачПериода <> ПустаяДата Тогда
		ТекстЗапроса = 	ТекстЗапросаДанныеНачПериода;
	Иначе
		ТекстЗапроса = 	ТекстЗапросаДанныеНачПериодаКонПериода;
	КонецЕсли;
	
	
	ТекстЗапроса = ТекстЗапроса + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизлицоНаименование";
	
	Запрос.Текст = ТекстЗапроса;
		
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПустойПриказ", Документы.ПриемНаРаботуВОрганизацию.ПустаяСсылка());
	Если ЗначениеЗаполнено(Организация) Тогда
		Запрос.УстановитьПараметр("ГоловнаяОрганизация", Организация);
	КонецЕсли;
	Запрос.УстановитьПараметр("ПодразделениеОрганизации", ПодразделениеОрганизации);
	Запрос.УстановитьПараметр("ПустаяОрганизация", Справочники.Организации.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяДолжность", Справочники.ДолжностиОрганизаций.ПустаяСсылка());
	Запрос.УстановитьПараметр("НачПериода", НачПериода);
	Запрос.УстановитьПараметр("КонПериода", КонПериода);
	СписокРаботниковОрганизации = Запрос.Выполнить().Выгрузить();

	// устанавливает текущую позицию
	СтруктураПоиска = Новый Структура("Физлицо");
	СтруктураПоиска.Физлицо = ПараметрФизлицо;
	
	Строки = СписокРаботниковОрганизации.НайтиСтроки(СтруктураПоиска);
	Если Строки.Количество() > 0 Тогда
		ЭлементыФормы.СписокРаботниковОрганизации.ТекущаяСтрока = Строки[0];
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	Если ПараметрУникальность Тогда
		СтруктураПоиска = Новый Структура("Физлицо");
	Иначе
		СтруктураПоиска = Новый Структура("Физлицо, Приказ"); 
	КонецЕсли;
	
	// получить данные
	ПолучитьДанные();
	
	// сформировать колонки табличного поля
	КолонкаТабельныйНомер = ЭлементыФормы.СписокРаботниковОрганизации.Колонки.Добавить("ТабельныйНомер", "Табельный №");
	КолонкаТабельныйНомер.Данные = "ТабельныйНомер";
	ЭлементыФормы.СписокРаботниковОрганизации.ТекущаяКолонка = КолонкаТабельныйНомер;
	
	КолонкаФизлицо = ЭлементыФормы.СписокРаботниковОрганизации.Колонки.Добавить("ФизлицоНаименование", "Работник");
	КолонкаФизлицо.Данные = "ФизлицоНаименование";
	
	КолонкаПодразделениеОрганизации = ЭлементыФормы.СписокРаботниковОрганизации.Колонки.Добавить("ПодразделениеОрганизацииНаименование", "Подразделение");
	КолонкаПодразделениеОрганизации.Данные = "ПодразделениеОрганизацииНаименование";
	
	КолонкаДолжность = ЭлементыФормы.СписокРаботниковОрганизации.Колонки.Добавить("ДолжностьНаименование", "Должность");
	КолонкаДолжность.Данные = "ДолжностьНаименование";
	
	КолонкаГрафикРаботы = ЭлементыФормы.СписокРаботниковОрганизации.Колонки.Добавить("ГрафикРаботы", "ГрафикРаботы");
	КолонкаГрафикРаботы.Данные = "ГрафикРаботы";
	
	КолонкаПриказ = ЭлементыФормы.СписокРаботниковОрганизации.Колонки.Добавить("Приказ", "Приказ");
	КолонкаПриказ.Данные = "Приказ";
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

Процедура ДействияФормыОбновитьСписок(Кнопка)
	// получить данные
	Если ЭлементыФормы.СписокРаботниковОрганизации.ТекущаяСтрока = НеОпределено Тогда
		ПараметрФизлицо = Справочники.ФизическиеЛица.ПустаяСсылка();
		ПараметрПриказ = Документы.ПриемНаРаботуВОрганизацию.ПустаяСсылка();
		
	Иначе
		ПараметрФизлицо = ЭлементыФормы.СписокРаботниковОрганизации.ТекущаяСтрока.Физлицо;
		ПараметрПриказ = ЭлементыФормы.СписокРаботниковОрганизации.ТекущаяСтрока.Приказ;
		
	КонецЕсли;
	
	ПолучитьДанные();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ФОРМЫ

Процедура ОрганизацияПриИзменении(Элемент)
	ПолучитьДанные();
	
КонецПроцедуры

Процедура ПодразделениеОрганизацииПриИзменении(Элемент)
	// получить данные
	Если ЭлементыФормы.СписокРаботниковОрганизации.ТекущаяСтрока = НеОпределено Тогда
		ПараметрФизлицо = Справочники.ФизическиеЛица.ПустаяСсылка();
		ПараметрПриказ = Документы.ПриемНаРаботуВОрганизацию.ПустаяСсылка();
		
	Иначе
		ПараметрФизлицо = ЭлементыФормы.СписокРаботниковОрганизации.ТекущаяСтрока.Физлицо;
	КонецЕсли;
	
	ПолучитьДанные();
	
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.Редактировать();
	НачПериода = НастройкаПериода.ПолучитьДатуНачала();
	КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
		
	// получить данные
	ПолучитьДанные();
КонецПроцедуры

Процедура НачПериодаПриИзменении(Элемент)
		
	// получить данные
	ПолучитьДанные();

КонецПроцедуры

Процедура КонПериодаПриИзменении(Элемент)
			
	// получить данные
	ПолучитьДанные();

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ

Процедура СписокРаботниковОрганизацииВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	////Если РежимВыбора Тогда
	////	
	////	ВыбранныйНаборДанных = Новый Структура("Физлицо
	////	|, Приказ
	////	|, ПодразделениеОрганизации
	////	|, Должность
	////	|, ТабельныйНомер
	////	|, ЗанимаемыхСтавок
	////	|, ГрафикРаботы"
	////	, Элемент.ТекущаяСтрока.Физлицо
	////	, Элемент.ТекущаяСтрока.Приказ
	////	, Элемент.ТекущиеДанные.ПодразделениеОрганизации
	////	, Элемент.ТекущиеДанные.Должность
	////	, Элемент.ТекущиеДанные.ТабельныйНомер
	////	, Элемент.ТекущиеДанные.ЗанимаемыхСтавок
	////	, Элемент.ТекущиеДанные.ГрафикРаботы);
	////	
	////	ОповеститьОВыборе(ВыбранныйНаборДанных);
	////Иначе
	////	ВыбраннаяСтрока.Физлицо.ПолучитьФорму().Открыть();
	////КонецЕсли;
	////СтандартнаяОбработка = Ложь;
	
	Если РежимВыбора Тогда
		
		ПриказПустаяСсылка = Документы.ПриемНаРаботуВОрганизацию.ПустаяСсылка();
		Подразделение = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
		Должность = Справочники.ДолжностиОрганизаций.ПустаяСсылка();
		ВыбранныйНаборДанных = Новый Структура("Физлицо, ПодразделениеОрганизации, Должность, ГрафикРаботы, ТабельныйНомер",Элемент.ТекущаяСтрока.Физлицо, Элемент.ТекущаяСтрока.ПодразделениеОрганизации, Элемент.ТекущаяСтрока.Должность, Элемент.ТекущаяСтрока.ГрафикРаботы, Элемент.ТекущаяСтрока.ТабельныйНомер);
		ОповеститьОВыборе(ВыбранныйНаборДанных);
	Иначе
		ВыбраннаяСтрока.Физлицо.ПолучитьФорму().Открыть();
	КонецЕсли;
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

Процедура СписокРаботниковОрганизацииПередНачаломИзменения(Элемент, Отказ)
	Элемент.ТекущаяСтрока.Физлицо.ПолучитьФорму().Открыть();
	Отказ = Истина;
КонецПроцедуры




