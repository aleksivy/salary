////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мТекущаяДатаДокумента;				// Хранит последнюю установленную дату документа - для проверки перехода документа в другой период
Перем мДеревоМакетов;						// Хранит дерево макетов печатных форм
Перем мПодменюПечати;						// Хранит элемент управления подменю печати
Перем мПечатьПоУмолчанию;					// Хранит элемент управления кнопку печать по умолчанию
Перем мКнопкиЗаполненияТЧ;					// Хранит дерево кнопок подменю заполнение ТЧ

// Хранит ссылку на головную организацию
Перем мГоловнаяОрганизация;
// Массив ЭУ видимостью которых необходимо управлять в зависимости от учетной политики по персоналу
Перем мМассивЭУ;


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура формирует текстовое описание способа отражения в бухучете
Процедура ОбновитьПредставлениеСпособаОтраженияВБухучете()


КонецПроцедуры

// Процедура обрабатывает изменение сотрудника
Процедура ОбработатьИзменениеСотрудника()

	ЗаполнитьЗначенияСвойств(ЭтотОбъект,Сотрудник,"ВидДоговора,ФизЛицо");
	
	Если Не ЗначениеЗаполнено(ХарактерОплаты) Тогда
		ХарактерОплаты = Перечисления.ХарактерВыплатыПоДоговору.Ежемесячно;
	КонецЕсли;
	
	Если ХарактерОплаты = Перечисления.ХарактерВыплатыПоДоговору.ПоСдельномуНаряду Тогда
		ВидРасчета = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.СдельнаяОплатаГПХ;
	Иначе
		Если ВидДоговора = Перечисления.ВидыДоговоровСФизЛицами.Авторский Тогда
			ВидРасчета = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.АвторскоеВознаграждение;
		ИначеЕсли ЗначениеЗаполнено(Сотрудник.ОсновноеНазначение) Тогда
			ВидРасчета = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ДоговорПодряда;
		Иначе
			ВидРасчета = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ДоговорПодрядаСПД;
		КонецЕсли;
	КонецЕсли;
	

КонецПроцедуры // ОбработатьИзменениеСотрудника()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура устанавливает подменю "Печать" и кнопку "Печать по умолчанию" при необходимости
//
Процедура УстановитьКнопкиПечати()
	
	ФормированиеПечатныхФорм.СоздатьКнопкиПечати(ЭтотОбъект, ЭтаФорма);	
	
КонецПроцедуры

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// Установка кнопок печати
	УстановитьКнопкиПечати();
	
КонецПроцедуры // ПередОткрытием()

// Процедура - обработчик события "ПриОткрытии" формы
//
Процедура ПриОткрытии()

	Если ЭтоНовый() Тогда
		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект);
		
		Если Не ЗначениеЗаполнено(ХарактерОплаты) Тогда
			ХарактерОплаты = Перечисления.ХарактерВыплатыПоДоговору.Ежемесячно;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ВидРасчета) Тогда
			ВидРасчета = ПланыВидоврасчета.ОсновныеНачисленияОрганизаций.ДоговорПодрядаСПД;
		КонецЕсли;
	Иначе 
		// Установить доступность формы с учетом даты запрета редактирования	
		РаботаСДиалогами.УстановитьДоступностьФормыДляРедактирования(ЭтотОбъект, ЭтаФорма);
	КонецЕсли;
	
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);

	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);

	// Запомнить текущие значения реквизитов формы.
	мТекущаяДатаДокумента = Дата;
	
	// Установить активный реквизит.
	РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма);
	
	// Получим и запомним ссылку на головную организацию
	мГоловнаяОрганизация = ОбщегоНазначения.ГоловнаяОрганизация(Организация);

	// Установим видимость реквизитов в зависимости от уч.политики по персоналу организаций
	мМассивЭУ = Новый Массив();
	мМассивЭУ.Добавить(ЭлементыФормы.ВалютаДокумента);
	мМассивЭУ.Добавить(ЭлементыФормы.НадписьВалютаДокумента);
	РаботаСДиалогами.УстановитьВидимостьЭУПоУчетнойПолитикеПоПерсоналу(мМассивЭУ,глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"),Организация);

	ОбновитьПредставлениеСпособаОтраженияВБухучете();
	
КонецПроцедуры

// Процедура - обработчик события "ПослеЗаписи" формы.
//
Процедура ПослеЗаписи()

	// Установка кнопок печати
	УстановитьКнопкиПечати();
	// Вывести в заголовке формы статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
	Оповестить("ОбновитьДоступностьРеквизитов");
	
КонецПроцедуры

// Процедура - обработчик события "ОбработкаВыбора" формы.
//
Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	Если ТипЗнч(ЗначениеВыбора) = Тип("ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций") Тогда	
		ВидРасчета = ЗначениеВыбора;
	ИначеЕсли ТипЗнч(ЗначениеВыбора) = Тип("СправочникСсылка.СотрудникиОрганизаций") Тогда	
		Сотрудник = ЗначениеВыбора;
		ВидДоговора = Сотрудник.ВидДоговора;
		ОбработатьИзменениеСотрудника();
	КонецЕсли
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	РаботаСДиалогами.НапечататьДвиженияДокумента(Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

// Процедура - обработчик события "ПриИзменении" поля ввода даты документа
//
Процедура ДатаПриИзменении(Элемент = Неопределено)

	РаботаСДиалогами.ПроверитьНомерДокумента(ДокументОбъект, мТекущаяДатаДокумента);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);

	мТекущаяДатаДокумента = Дата;
	
КонецПроцедуры // ДатаПриИзменении

// Процедура - обработчик события "ПриИзменении" поля ввода организации.
//
Процедура ОрганизацияПриИзменении(Элемент)

	Если Не ПустаяСтрока(Номер) Тогда
		МеханизмНумерацииОбъектов.СброситьУстановленныйКодНомерОбъекта(ЭтотОбъект, "Номер", ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	КонецЕсли;
	
	ЗаполнениеДокументов.ПриИзмененииЗначенияОрганизации(ЭтотОбъект);
	
	// Получим и запомним ссылку на головную организацию
	мГоловнаяОрганизация = ОбщегоНазначения.ГоловнаяОрганизация(Организация);
	
	РаботаСДиалогами.УстановитьВидимостьЭУПоУчетнойПолитикеПоПерсоналу(мМассивЭУ,глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"),Организация);

КонецПроцедуры // ОрганизацияПриИзменении()

// Процедура - обработчик события "ПриИзменении" ЭУ Сотрудник
Процедура СотрудникПриИзменении(Элемент)
	
	ОбработатьИзменениеСотрудника();
	
КонецПроцедуры


Процедура СотрудникНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ПроцедурыУправленияПерсоналом.ОткрытьФормуВыбораСотрудникаОрганизации(Элемент, Ссылка, Истина, Дата, Организация, 2, СтандартнаяОбработка, Элемент.Значение);
	
КонецПроцедуры

Процедура СотрудникАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	ТекстАвтоПодбора = ПроцедурыУправленияПерсоналом.ПодобратьФИОРаботникаКандидата(СтандартнаяОбработка, "Договорники", Текст, Организация);

КонецПроцедуры

Процедура СотрудникОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	Значение = ПроцедурыУправленияПерсоналом.ПодобратьСписокРаботниковКандидатов(СтандартнаяОбработка, "Договорники", Текст, Элемент.Значение, Организация);
	
КонецПроцедуры

Процедура ХарактерОплатыПриИзменении(Элемент)
	
	Если ХарактерОплаты = Перечисления.ХарактерВыплатыПоДоговору.ПоСдельномуНаряду Тогда
		ВидРасчета = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.СдельнаяОплатаГПХ;
	Иначе
		Если ЗначениеЗаполнено(Сотрудник.ОсновноеНазначение) Тогда
			ВидРасчета = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ДоговорПодряда;
		Иначе
			ВидРасчета = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ДоговорПодрядаСПД;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события "НачалоВыбора" поля ввода вида расчета
Процедура ВидРасчетаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

	//Предложим для выбора список расчетов, имеющих способ расчета, соответствующий указанной форме оплаты
	ФормаВыбораВидаРасчета = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПолучитьФормуВыбора("ФормаВыбора", ЭтаФорма, "дляДокументаДоговорНаВыполнениеРаботСФизЛицом");
	
	ФормаВыбораВидаРасчета.НачальноеЗначениеВыбора = Элемент.Значение;
	
	Если ХарактерОплаты = Перечисления.ХарактерВыплатыПоДоговору.ПоСдельномуНаряду Тогда
		ФормаВыбораВидаРасчета.Отбор.СпособРасчета.Значение = Перечисления.СпособыРасчетаОплатыТруда.СдельныйЗаработок;
	Иначе
	    ФормаВыбораВидаРасчета.Отбор.СпособРасчета.Значение = Перечисления.СпособыРасчетаОплатыТруда.ПоДоговоруФиксированнойСуммой;
	КонецЕсли;	
	ФормаВыбораВидаРасчета.Отбор.СпособРасчета.ВидСравнения = ВидСравнения.Равно;
	ФормаВыбораВидаРасчета.Отбор.СпособРасчета.Использование = Истина;

	ФормаВыбораВидаРасчета.Открыть();

КонецПроцедуры

// Процедура - обработчик события "ОкончаниеВводаТекста" поля ввода вида расчета
Процедура ВидРасчетаОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	Если ХарактерОплаты = Перечисления.ХарактерВыплатыПоДоговору.ПоСдельномуНаряду Тогда
		Способ = Перечисления.СпособыРасчетаОплатыТруда.СдельныйЗаработок;
	Иначе
	    Способ = Перечисления.СпособыРасчетаОплатыТруда.ПоДоговоруФиксированнойСуммой;
	КонецЕсли;	
	
	Значение = ПроцедурыПоискаПоСтроке.ПолучитьСписокВидовРасчетаПоПервымСимволамИмениРасчета(Текст, "ОсновныеНачисленияОрганизаций", "СпособРасчета = &СпособРасчета", Новый Структура("СпособРасчета", Способ));
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода СпособОтраженияВБухучете
Процедура СпособОтраженияВБухучетеПриИзменении(Элемент)
	ОбновитьПредставлениеСпособаОтраженияВБухучете();
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)

	РаботаСДиалогами.ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура выполняет открытие формы работы с категориями документа
//
Процедура ДействияФормыДействиеОткрытьКатегории(Кнопка)

	РаботаСДиалогами.ОткрытьКатегорииДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура вызова структуры подчиненности документа
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
Процедура ОсновныеДействияФормыПечатьПоУмолчанию(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать"
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Установить печать по умолчанию"
//
Процедура ОсновныеДействияФормыУстановитьПечатьПоУмолчанию(Кнопка)
	
	Если УниверсальныеМеханизмы.НазначитьКнопкуПечатиПоУмолчанию(мДеревоМакетов, Метаданные().Имя) Тогда
		
		УстановитьКнопкиПечати();
		
	КонецЕсли; 
	
	
КонецПроцедуры

// Процедура разрешения/запрещения редактирования номера документа
Процедура ДействияФормыРедактироватьНомер(Кнопка)
	
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
			
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ



