Процедура СоздатьДБФ_ПУМБ( птзСотрудники, пБанк, пСуммаВыгружено = 0 )
	// Сформируем структуру файла ДБФ
	лБазаДБФ = Новый XBase;
	лБазаДБФ.Поля.Добавить("TNUM",		"N",	 10,	0);
	лБазаДБФ.Поля.Добавить("MFO",		"N",	  8,	0);
	лБазаДБФ.Поля.Добавить("ACCOUNT",	"N",	 14,	0);   
	лБазаДБФ.Поля.Добавить("LASTNAME",	"S",	254,	0);
	лБазаДБФ.Поля.Добавить("FIRSTNAME",	"S",	254,	0);  
	лБазаДБФ.Поля.Добавить("SURNAME",	"S",	254,	0); 
	лБазаДБФ.Поля.Добавить("AMOUNT",	"N",	 12,	2);

	// Создадим файл ДБФ
	лИмяФайла = ПапкаДляДБФ + "pumb.dbf";
	лБазаДБФ.СоздатьФайл( лИмяФайла );
	Если Не лБазаДБФ.Открыта() Тогда лБазаДБФ.ОткрытьФайл( лИмяФайла ); КонецЕсли;
	
	// Заполним файл ДБФ записями
	лНом = 0;
	Для каждого лСотрудник Из птзСотрудники Цикл
		Если Не (лСотрудник.Банк = пБанк) Тогда Продолжить; КонецЕсли;
		лНом = лНом + 1;
		лБазаДБФ.Добавить();
		лБазаДБФ.TNUM		= лНом;
		лБазаДБФ.MFO		= лСотрудник.МФО;
		лБазаДБФ.ACCOUNT	= лСотрудник.НомерСчетаКарточки;
		лБазаДБФ.LASTNAME	= лСотрудник.Фамилия;
		лБазаДБФ.FIRSTNAME	= лСотрудник.Имя;
		лБазаДБФ.SURNAME	= лСотрудник.Отчество;
		лБазаДБФ.AMOUNT		= лСотрудник.Сумма;
		лБазаДБФ.Записать();
		пСуммаВыгружено = пСуммаВыгружено + лСотрудник.Сумма;
	КонецЦикла;
	Сообщить("Успешно создан файл выгрузики в банк - "+пБанк+". Он находится : "+СокрЛП(лИмяФайла)+"");
КонецПроцедуры

Процедура СоздатьДБФ_УкрСибБанк( птзСотрудники, пБанк, пСуммаВыгружено = 0 )
	// Сформируем структуру файла ДБФ
	лБазаДБФ = Новый XBase;
	лБазаДБФ.Поля.Добавить("TRAN_DATE",	"D",	  ,	 );
	лБазаДБФ.Поля.Добавить("SLIP_NR",	"N",	12,	0);
	лБазаДБФ.Поля.Добавить("TRAN_TYPE",	"N",	 5,	0); 
	лБазаДБФ.Поля.Добавить("CARD_ACCT",	"S",	29,	0); 
	лБазаДБФ.Поля.Добавить("AMOUNT",	"N",	12,	2);
	лБазаДБФ.Поля.Добавить("CURRENCY",	"S",	 3,	0);
	лБазаДБФ.Поля.Добавить("OPERATOR",	"S",	25,	0);
	
	// Создадим файл ДБФ
	лИмяФайла = ПапкаДляДБФ + "kvp.dbf";
	лБазаДБФ.СоздатьФайл( лИмяФайла );
	Если Не лБазаДБФ.Открыта() Тогда лБазаДБФ.ОткрытьФайл( лИмяФайла ); КонецЕсли;
	
	// Заполним файл ДБФ записями
	лНом = 0;
	Для каждого лСотрудник Из птзСотрудники Цикл
		Если Не (лСотрудник.Банк = пБанк) Тогда Продолжить; КонецЕсли;
		лНом = лНом + 1;
		лБазаДБФ.Добавить();
		лБазаДБФ.TRAN_DATE	= лСотрудник.ДатаТранзакции;
		лБазаДБФ.SLIP_NR	= лНом;
		лБазаДБФ.TRAN_TYPE	= лСотрудник.ТипТранзакции;
		лБазаДБФ.CARD_ACCT	= лСотрудник.НомерСчетаКарточки;
		лБазаДБФ.AMOUNT		= лСотрудник.Сумма;
		лБазаДБФ.CURRENCY	= лСотрудник.Валюта;
		лБазаДБФ.OPERATOR	= лСотрудник.Оператор;
		лБазаДБФ.Записать();
		пСуммаВыгружено = пСуммаВыгружено + лСотрудник.Сумма;
	КонецЦикла;
	Сообщить("Успешно создан файл выгрузики в банк - "+пБанк+". Он находится : "+СокрЛП(лИмяФайла)+"");
КонецПроцедуры


Процедура ВыгрузитьВБанк(Кнопка)
	Если Не ЗначениеЗаполнено(ПапкаДляДБФ) Тогда 
		Предупреждение ("Не указана папка для выгрузки файлов банка!"); 
		Возврат;
	КонецЕсли;
	
	Если (ВидВыплаты = Справочники.ВидыВыплат.Депоненты) или (ВидВыплаты = Справочники.ВидыВыплат.Дивиденды) или 
		(ВидВыплаты = Справочники.ВидыВыплат.ЗакрытиеПериода) или (ВидВыплаты = Справочники.ВидыВыплат.НДФЛБезВыплатыЗарплаты) или
		(ВидВыплаты = Справочники.ВидыВыплат.НДФЛКонтрагентам) или (ВидВыплаты = Справочники.ВидыВыплат.ОчереднаяВзносы) или 
		(ВидВыплаты = Справочники.ВидыВыплат.ОчереднаяПогашениеДолговВзносы) Тогда
		Предупреждение ("Для выбранного вида выплаты dbf Файл не формируется!"); 
		Возврат;
	КонецЕсли;	
	
	// Формируем ТЗ с необходимой информацией
	лтзСотрудники = Новый ТаблицаЗначений;
	лтзСотрудники.Колонки.Добавить("Банк",			 	 Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	лтзСотрудники.Колонки.Добавить("ДатаТранзакции", 	 Новый ОписаниеТипов("Дата"));
	лтзСотрудники.Колонки.Добавить("ТипТранзакции", 	 ОбщегоНазначения.ПолучитьОписаниеТиповЧисла( 5,0));
	лтзСотрудники.Колонки.Добавить("НомерСчетаКарточки", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки( 29, ДопустимаяДлина.Переменная)));
	лтзСотрудники.Колонки.Добавить("Сумма", 			 ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(12,2));
	лтзСотрудники.Колонки.Добавить("МФО", 				 ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(08,0));
	лтзСотрудники.Колонки.Добавить("Валюта", 			 Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(  3, ДопустимаяДлина.Фиксированная)));
	лтзСотрудники.Колонки.Добавить("Оператор", 			 Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки( 25, ДопустимаяДлина.Фиксированная)));
	лтзСотрудники.Колонки.Добавить("Фамилия", 			 Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254, ДопустимаяДлина.Фиксированная)));
	лтзСотрудники.Колонки.Добавить("Имя", 				 Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254, ДопустимаяДлина.Фиксированная)));
	лтзСотрудники.Колонки.Добавить("Отчество", 			 Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254, ДопустимаяДлина.Фиксированная)));
	
	Для каждого лСтрока Из ВыплатаЗаработнойПлаты Цикл
		// Строки с 0-й суммой не выгружаем
		Если лСтрока.Сумма = 0 Тогда Продолжить; КонецЕсли;
		
		// Проверим корректность Сотрудника по ИНН
		лИНН = лСтрока.Сотрудник.Физлицо.КодПоДРФО;
		Если Не ЗначениеЗаполнено(лИНН) Тогда Сообщить("Не указан код ИНН у сотрудника - "+лСтрока.Сотрудник); Возврат; КонецЕсли;
		
		// Определим ФИО сотрудника
		лРег = РегистрыСведений.ФИОФизЛиц.СрезПоследних(Дата, Новый Структура("ФизЛицо", лСтрока.Сотрудник.Физлицо) );
		Если Не лРег.Количество()=1 Тогда
			лФИО = лСтрока.Сотрудник.Физлицо.Наименование;
			лФамилия  = ОбщегоНазначения.ВыделитьСлово(лФИО);
			лИмя      = ОбщегоНазначения.ВыделитьСлово(лФИО);
			лОтчество = ОбщегоНазначения.ВыделитьСлово(лФИО);
		Иначе
			лФамилия  = лРег[0].Фамилия;
			лИмя      = лРег[0].Имя;
			лОтчество = лРег[0].Отчество;
		КонецЕсли;
		
		
		лНовыйСотрудник = лтзСотрудники.Добавить();
		лНовыйСотрудник.Банк				= лСтрока.Банк;
		лНовыйСотрудник.ДатаТранзакции		= Дата;
		лНовыйСотрудник.НомерСчетаКарточки	= СокрЛП(лСтрока.НомерКарточки);
		лНовыйСотрудник.Сумма				= лСтрока.Сумма;
		лНовыйСотрудник.МФО					= "334851";
		лНовыйСотрудник.Фамилия				= лФамилия;
		лНовыйСотрудник.Имя					= лИмя;
		лНовыйСотрудник.Отчество			= лОтчество;
		лНовыйСотрудник.ТипТранзакции		= 20;
		лНовыйСотрудник.Оператор			= СокрЛП(Константы.ггуУкрСибБанкОператор.Получить()); // "ANTONOVA/KOZLOVA"
		лНовыйСотрудник.Валюта				= "UAH"
	КонецЦикла;
	
	// На основе сформированной ТЗ создаем DBF-файлы
	лтзБанки = лтзСотрудники.Скопировать(, "Банк");
	лтзБанки.Свернуть("Банк", "");
	лСуммаВыгружено = 0;
	Для каждого лСтрока Из лтзБанки Цикл
		лБанк = лСтрока.Банк;
		Если 		(лБанк.Наименование = "УкрСибБанк") и ((лБанк.Код = "000000001")) Тогда
			СоздатьДБФ_УкрСибБанк( лтзСотрудники, лБанк, лСуммаВыгружено );
		ИначеЕсли 	(лБанк.Наименование = "ПУМБ") и ((лБанк.Код = "000000002")) Тогда
			СоздатьДБФ_ПУМБ( лтзСотрудники, лБанк, лСуммаВыгружено );
		КонецЕсли;
	КонецЦикла;
	Если Не лСуммаВыгружено = ВыплатаЗаработнойПлаты.Итог("Сумма") Тогда
		Сообщить("Сумма для выгрузки в банки - "+ВыплатаЗаработнойПлаты.Итог("Сумма")+", а выгружено на сумму - "+лСуммаВыгружено);
	КонецЕсли;
КонецПроцедуры

Процедура УстановитьДоступность()
	Если АвтоЗаполнение Тогда
		ЭлементыФормы.ВыплатаЗаработнойПлаты.ТолькоПросмотр = Истина;
	Иначе
		ЭлементыФормы.ВыплатаЗаработнойПлаты.ТолькоПросмотр = Ложь;
	КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьТЧ(Кнопка)
	
	Если ВыплатаЗаработнойПлаты.Количество() > 0 Тогда
		ТекстВопроса = "Перед заполнением табличная часть будет очищена. Заполнить?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да,);
		Если Ответ <> КодВозвратаДиалога.Да Тогда Возврат; КонецЕсли;
		ВыплатаЗаработнойПлаты.Очистить();
	КонецЕсли;
	лЗапрос = Новый Запрос;
	лЗапрос.УстановитьПараметр("Организация", Организация);
	лЗапрос.УстановитьПараметр("Дата", Дата);
	лЗапрос.Текст =
	"ВЫБРАТЬ
	|	ДокТЧ.Ссылка,
	|	ДокТЧ.Сотрудник,
	|	ДокТЧ.Банк КАК Банк,
	|	ДокТЧ.НомерКарточки КАК НомерКарточки,
	|	ДокТЧ.Сумма КАК Сумма
	|ИЗ
	|	Документ.ЗарплатаКВыплатеОрганизаций.РаботникиОрганизации КАК ДокТЧ
	|ГДЕ
	|	ДокТЧ.СпособВыплаты = ЗНАЧЕНИЕ(Перечисление.СпособыВыплатыЗарплаты.ЧерезБанк)
	|	И ДокТЧ.Ссылка.Организация = &Организация
	|";
	Если ЗначениеЗаполнено(ПодразделениеОрганизации) Тогда
		лЗапрос.УстановитьПараметр("ПодразделениеОрганизации", ПодразделениеОрганизации);
		лЗапрос.Текст = лЗапрос.Текст + "
		|	И ДокТЧ.Сотрудник.ТекущееПодразделениеОрганизации В ИЕРАРХИИ(&ПодразделениеОрганизации)
		|";
	КонецЕсли;
	Если ЗначениеЗаполнено(ДокументОснование) Тогда
		лЗапрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
		лЗапрос.Текст = лЗапрос.Текст + "
		|	И ДокТЧ.Ссылка = &ДокументОснование
		|";
	Иначе
		лЗапрос.Текст = лЗапрос.Текст + "
		|	И НАЧАЛОПЕРИОДА(ДокТЧ.Ссылка.Дата, ДЕНЬ) = НАЧАЛОПЕРИОДА(&Дата, ДЕНЬ)
		|";
	КонецЕсли;
	Если ЗначениеЗаполнено(Банк) Тогда
		лЗапрос.УстановитьПараметр("Банк", Банк);
		лЗапрос.Текст = лЗапрос.Текст + "
		|	И ДокТЧ.Банк = &Банк
		|";
	КонецЕсли;
	лтзРез = лЗапрос.Выполнить().Выгрузить();
	Для каждого лСтрока Из лтзРез Цикл лСтрока.НомерКарточки = СокрЛП(лСтрока.НомерКарточки); КонецЦикла;
	лтзРез.Свернуть("Сотрудник, Банк, НомерКарточки", "Сумма");
	лтзРез.Сортировать("Сотрудник, Банк, НомерКарточки");
	
	ВыплатаЗаработнойПлаты.Загрузить( лтзРез );
	СуммаДокумента = ВыплатаЗаработнойПлаты.Итог("Сумма");
	АвтоЗаполнение = Истина;
	УстановитьДоступность();
КонецПроцедуры

Процедура ВыплатаЗаработнойПлатыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	лСумма = ВыплатаЗаработнойПлаты.Итог("Сумма");
	Если Не СуммаДокумента = лСумма Тогда СуммаДокумента = лСумма; КонецЕсли;
КонецПроцедуры

Процедура ПодразделениеОрганизацииПриИзменении(Элемент)
	Если ВыплатаЗаработнойПлаты.Количество() > 0 Тогда
		ТекстВопроса = "Перед изменением табличная часть будет очищена. Продолжить?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да,);
		Если Ответ <> КодВозвратаДиалога.Да Тогда Возврат; КонецЕсли;
		ВыплатаЗаработнойПлаты.Очистить();
	КонецЕсли;
КонецПроцедуры

Процедура БанкПриИзменении(Элемент)
	Если ВыплатаЗаработнойПлаты.Количество() > 0 Тогда
		ТекстВопроса = "Перед изменением табличная часть будет очищена. Продолжить?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да,);
		Если Ответ <> КодВозвратаДиалога.Да Тогда Возврат; КонецЕсли;
		ВыплатаЗаработнойПлаты.Очистить();
	КонецЕсли;
КонецПроцедуры

Процедура ДокументОснованиеПриИзменении(Элемент)
	Если ВыплатаЗаработнойПлаты.Количество() > 0 Тогда
		ТекстВопроса = "Перед изменением табличная часть будет очищена. Продолжить?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да,);
		Если Ответ <> КодВозвратаДиалога.Да Тогда Возврат; КонецЕсли;
		ВыплатаЗаработнойПлаты.Очистить();
	КонецЕсли;
КонецПроцедуры

Процедура ПриОткрытии()
	Если Не ЗначениеЗаполнено(ПапкаДляДБФ) Тогда ПапкаДляДБФ = "D:\"; КонецЕсли;
	
	УстановитьДоступность();
КонецПроцедуры

Процедура АвтоЗаполнениеПриИзменении(Элемент)
	УстановитьДоступность();
КонецПроцедуры

Процедура ВыплатаЗаработнойПлатыСотрудникПриИзменении(Элемент)
	лСтрока = ЭлементыФормы.ВыплатаЗаработнойПлаты.ТекущаяСтрока;
	лСотрудник = лСтрока.Сотрудник;
	лБанкДляВыплат = лСотрудник.БанкДляВыплат;
	лЗапрос = Новый Запрос;
	лЗапрос.УстановитьПараметр("Организация", Организация);
	лЗапрос.УстановитьПараметр("Дата", Дата);
	лЗапрос.УстановитьПараметр("Сотрудник", лСотрудник);
	лЗапрос.Текст =
	"ВЫБРАТЬ
	|	Рег.Банк,
	|	Рег.НомерКарточки
	|ИЗ
	|	РегистрСведений.ПараметрыВыплатыЗПРаботников.СрезПоследних(
	|			&Дата,
	|			Организация = &Организация
	|				И СпособВыплаты = ЗНАЧЕНИЕ(Перечисление.СпособыВыплатыЗарплаты.ЧерезБанк)
	|				И Сотрудник = &Сотрудник) КАК Рег
	|";
	лтзРез = лЗапрос.Выполнить().Выгрузить();
	Если лтзРез.Количество()=0 Тогда
		лСтрока.Банк			= Справочники.Контрагенты.ПустаяСсылка();
		лСтрока.НомерКарточки 	= "";
	ИначеЕсли лтзРез.Количество()=1 Тогда
		лСтрока.Банк			= лтзРез[0].Банк;
		лСтрока.НомерКарточки 	= СокрЛП(лтзРез[0].НомерКарточки);
	Иначе
		лНеНайдено = Истина;
		Для каждого лСтрока2 Из лтзРез Цикл
			Если лСтрока2.Банк = лБанкДляВыплат Тогда
				лНеНайдено = Ложь;
				лСтрока.Банк			= лСтрока2.Банк;
				лСтрока.НомерКарточки 	= СокрЛП(лСтрока2.НомерКарточки);
			КонецЕсли;
		КонецЦикла;
		Если лНеНайдено Тогда
			лСтрока.Банк			= лтзРез[0].Банк;
			лСтрока.НомерКарточки 	= СокрЛП(лтзРез[0].НомерКарточки);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ВыплатаЗаработнойПлатыПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	Если ОтменаРедактирования Тогда Возврат; КонецЕсли;
	лСтрока = ЭлементыФормы.ВыплатаЗаработнойПлаты.ТекущаяСтрока;
	Если Не ЗначениеЗаполнено(лСтрока.Банк) или Не ЗначениеЗаполнено(лСтрока.НомерКарточки) Тогда
		Отказ = Истина;
		Сообщить("Не найдена информация о банковской карточке для сотрудника - "+лСтрока.Сотрудник);
	КонецЕсли;
КонецПроцедуры

Процедура ПапкаДляДБФНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДиалогВыбора.Заголовок="Выберите папку для сохранения DBF-файлов для банков";
	Если Не ЗначениеЗаполнено(ПапкаДляДБФ) Тогда ПапкаДляДБФ = "D:\"; КонецЕсли;
	Если ЗначениеЗаполнено(ПапкаДляДБФ) Тогда
		лСтарыйКаталог = Новый Файл(ПапкаДляДБФ);
		Если лСтарыйКаталог.Существует() Тогда
			Если лСтарыйКаталог.ЭтоФайл() Тогда
				ДиалогВыбора.Каталог = лСтарыйКаталог.Путь;
			ИначеЕсли лСтарыйКаталог.ЭтоКаталог() Тогда
				ДиалогВыбора.Каталог = лСтарыйКаталог.ПолноеИмя;
			КонецЕсли;
		Иначе
			лСтарыйКаталог = Новый Файл(лСтарыйКаталог.Путь);
			Если лСтарыйКаталог.Существует() Тогда
				Если лСтарыйКаталог.ЭтоФайл() Тогда
					ДиалогВыбора.Каталог = лСтарыйКаталог.Путь;
				ИначеЕсли лСтарыйКаталог.ЭтоКаталог() Тогда
					ДиалогВыбора.Каталог = лСтарыйКаталог.ПолноеИмя;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если ДиалогВыбора.Выбрать() Тогда
		ПапкаДляДБФ = ДиалогВыбора.Каталог;
		Если Не Прав(ПапкаДляДБФ, 1)="\" Тогда ПапкаДляДБФ = ПапкаДляДБФ + "\"; КонецЕсли;
	КонецЕсли;
КонецПроцедуры
