////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
Перем мТекущаяДатаДокумента;
Перем мТекущийКонтрагент;

// Хранит дерево макетов печатных форм
Перем мДеревоМакетов;

// Хранит элемент управления подменю печати
Перем мПодменюПечати;

// Хранит элемент управления кнопку печать по умолчанию
Перем мПечатьПоУмолчанию;

// Хранит дерево кнопок подменю заполнение ТЧ
Перем мКнопкиЗаполненияТЧ;

Перем мДатаНачалаПериода, мДатаКонцаПериода;


// Процедура устанавливает подменю "Заполнить" в командных панелях ТЧ документа при необходимости
//
Процедура УстановитьКнопкиПодменюЗаполненияТЧ();
	
	мКнопкиЗаполненияТЧ = УниверсальныеМеханизмы.ПолучитьДеревоКнопокЗаполненияТабличныхЧастей(Ссылка,Новый Действие("НажатиеНаДополнительнуюКнопкуЗаполненияТЧ"));
	
	СоответствиеТЧ = Новый Соответствие;
	СоответствиеТЧ.Вставить(ЭлементыФормы.НДФЛ,ЭлементыФормы.КоманднаяПанельНДФЛ);
	
	УниверсальныеМеханизмы.СформироватьПодменюЗаполненияТЧПоДеревуКнопок(мКнопкиЗаполненияТЧ,СоответствиеТЧ);
	
КонецПроцедуры // УстановитьКнопкиПодменюЗаполненияТЧ();

// Процедура устанавливает подменю "Печать" и кнопку "Печать по умолчанию" при необходимости
//
Процедура УстановитьКнопкиПечати()
	
	ФормированиеПечатныхФорм.СоздатьКнопкиПечати(ЭтотОбъект, ЭтаФорма);	
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// Установка кнопок печати
	УстановитьКнопкиПечати();
	
	// Установка кнопок заполнение ТЧ
	УстановитьКнопкиПодменюЗаполненияТЧ();
	
КонецПроцедуры // ПередОткрытием()

// Процедура - обработчик события "ПриОткрытии" формы
//
Процедура ПриОткрытии()

	Если ЭтоНовый() Тогда
		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект);
	Иначе 
		// Установить доступность формы с учетом даты запрета редактирования	
		РаботаСДиалогами.УстановитьДоступностьФормыДляРедактирования(ЭтотОбъект, ЭтаФорма);
	КонецЕсли;	

	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);
	
	СтруктураКолонок = Новый Структура();

	// Вывести в заголовке формы вид операции и статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);

	// Запомнить текущие значения реквизитов формы.
	мТекущаяДатаДокумента        = Дата;

	// Установить активный реквизит.
	РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма);
	
	мДатаНачалаПериода = НачалоКвартала(ПериодРегистрации);
	мДатаКонцаПериода  = КонецКвартала(ПериодРегистрации);
	ПоказатьПериод();


КонецПроцедуры

// Процедура - обработчик события "ПослеЗаписи" формы.
//
Процедура ПослеЗаписи()
	
	// Установка кнопок печати
	УстановитьКнопкиПечати();
	
	// Вывести в заголовке формы статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

// Процедура - обработчик события "ПриИзменении" поля ввода даты документа
//
Процедура ДатаПриИзменении(Элемент = Неопределено)

	РаботаСДиалогами.ПроверитьНомерДокумента(ДокументОбъект, мТекущаяДатаДокумента);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);

	мТекущаяДатаДокумента = Дата;

КонецПроцедуры // ДатаПриИзменении

// Процедура - обработчик события "ПриИзменении" поля ввода организации.
//
Процедура ОрганизацияПриИзменении(Элемент)

	Если Не ПустаяСтрока(Номер) Тогда
		МеханизмНумерацииОбъектов.СброситьУстановленныйКодНомерОбъекта(ЭтотОбъект, "Номер", ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	КонецЕсли;

КонецПроцедуры // ОрганизацияПриИзменении()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

Процедура ДействияФормыОчистить(Кнопка)
	
	Если	НДФЛ.Количество() = 0 Тогда
	    Возврат
	КонецЕсли; 
	
	ТекстВопроса = НСтр("ru='Табличные части будет очищены. Продолжить?';uk='Табличні частини буде очищені. Продовжити?'");
	Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да,);
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли; 
	
	НДФЛ.Очистить();
	
КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	РаботаСДиалогами.НапечататьДвиженияДокумента(Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

// Процедура - обработчик нажатия на любую из дополнительных кнопок по заполнению ТЧ
//
Процедура НажатиеНаДополнительнуюКнопкуЗаполненияТЧ(Кнопка)
	
	УниверсальныеМеханизмы.ОбработатьНажатиеНаДополнительнуюКнопкуЗаполненияТЧ(мКнопкиЗаполненияТЧ.Строки.Найти(Кнопка.Имя,"Имя",Истина),ЭтотОбъект);
	
КонецПроцедуры // НажатиеНаДополнительнуюКнопкуЗаполненияТЧ()

// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
Процедура ОсновныеДействияФормыПечатьПоУмолчанию(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры // ОсновныеДействияФормыПечатьПоУмолчанию()

// Процедура - обработчик нажатия на кнопку "Печать"
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры // ОсновныеДействияФормыПечать()

// Процедура - обработчик нажатия на кнопку "Установить печать по умолчанию"
//
Процедура ОсновныеДействияФормыУстановитьПечатьПоУмолчанию(Кнопка)
	
	Если УниверсальныеМеханизмы.НазначитьКнопкуПечатиПоУмолчанию(мДеревоМакетов, Метаданные().Имя) Тогда
		
		УстановитьКнопкиПечати();
		
	КонецЕсли;
	
КонецПроцедуры // ОсновныеДействияФормыУстановитьПечатьПоУмолчанию()

// Процедура разрешения/запрещения редактирования номера документа
Процедура ДействияФормыРедактироватьНомер(Кнопка)
	
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
			
КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ НДФЛ

Процедура НДФЛОрганизацииПриАктивизацииСтроки(Элемент)

	ТекущаяСтрока = Элемент.ТекущаяСтрока;
	
	Если ТекущаяСтрока = Неопределено Тогда
		мТекущееФизЛицо = Неопределено;
		Возврат;
	КонецЕсли;
	
	// запомним текущего сотрудника
	мТекущийКонтрагент = ТекущаяСтрока.Контрагент;
	
	ЭлементыФормы.НДФЛ.ОтборСтрок.Контрагент.Значение	= мТекущийКонтрагент;
	
КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОЙ ЧАСТИ
	
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)

	РаботаСДиалогами.ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура выполняет открытие формы работы с категориями документа
//
Процедура ДействияФормыДействиеОткрытьКатегории(Кнопка)

	РаботаСДиалогами.ОткрытьКатегорииДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

Процедура ДействияФормыЗаполнитьАлименты(Кнопка)
	
	Если НДФЛ.Количество() > 0 Тогда
		
		ТекстВопроса = НСтр("ru='Табличные части будут очищены. Продолжить?';uk='Табличні частини будуть очищені. Продовжити?'");
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да,);
		
		Если Ответ <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли; 
	КонецЕсли;
	
	НДФЛ.Очистить();
	
	ЗаполнитьАлименты();
	
КонецПроцедуры

Процедура НДФЛПриПолученииДанных(Элемент, ОформленияСтрок)

	МассивКонтрагентов = Новый Массив;
	Для Каждого СтрокаТабличнойЧасти Из ОформленияСтрок Цикл
		МассивКонтрагентов.Добавить(СтрокаТабличнойЧасти.ДанныеСтроки.Контрагент);
	КонецЦикла;

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("парамМассивКонтрагентов", МассивКонтрагентов);
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Контрагенты.КодПоЕДРПОУ КАК КодПоЕДРПОУ,
	|	Контрагенты.Ссылка КАК Контрагент
	|ИЗ Справочник.Контрагенты КАК Контрагенты
	|ГДЕ Контрагенты.Ссылка В(&парамМассивКонтрагентов)
	|";
	
	Запрос.Текст = ТекстЗапроса;
	
	ТабельныеНомера = Новый Соответствие;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ТабельныеНомера[Выборка.Контрагент] = Выборка.КодПоЕДРПОУ;
	КонецЦикла; 
	
	Для Каждого СтрокаТабличнойЧасти Из ОформленияСтрок Цикл
		КодПоЕДРПОУ = ТабельныеНомера[СтрокаТабличнойЧасти.Ячейки.Контрагент.Значение];
		СтрокаТабличнойЧасти.Ячейки.ЕДРПОУСтрока.УстановитьТекст(КодПоЕДРПОУ);
	КонецЦикла;

КонецПроцедуры


Процедура НДФЛДоходПриИзменении(Элемент)
	
	ТекущаяСторока =  ЭлементыФормы.НДФЛ.ТекущаяСтрока;
	
	Если ТекущаяСторока.ВидДохода = Справочники.ВидыДоходовНДФЛ.Код42 Тогда
		Отбор = Новый Структура("ВидСтавки", ?(ТекущаяСторока.Контрагент.НеЯвляетсяРезидентом, Перечисления.ВидыСтавокНДФЛ.Двойная, Перечисления.ВидыСтавокНДФЛ.Основная));
		СтавкаНДФЛ = РегистрыСведений.СтавкиНДФЛ.ПолучитьПоследнее(ПериодРегистрации, Отбор).Ставка;
		
		ТекущаяСторока.Налог = ТекущаяСторока.Доход * СтавкаНДФЛ;
	КонецЕсли;
	
КонецПроцедуры


Процедура НДФЛПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		ЭлементыФормы.НДФЛ.ТекущаяСтрока.ВидДохода = Справочники.ВидыДоходовНДФЛ.Код42;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПоказатьПериод()

	СтрПериодОтчета = ПредставлениеПериода(мДатаНачалаПериода, мДатаКонцаПериода, "ФП = Истина" );
	
	// Покажем период в диалоге
	СтрокаПериод = СтрПериодОтчета;

КонецПроцедуры // ПоказатьПериод()

Процедура ИзменитьПериод(Шаг)

	мДатаКонцаПериода  = КонецКвартала(ДобавитьМесяц(мДатаКонцаПериода, Шаг*3));
	мДатаНачалаПериода = НачалоКвартала(мДатаКонцаПериода);
	ПериодРегистрации = мДатаНачалаПериода;
	ПоказатьПериод();

КонецПроцедуры // ИзменитьПериод()

Процедура НадписьПериодРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ИзменитьПериод(Направление);

КонецПроцедуры


