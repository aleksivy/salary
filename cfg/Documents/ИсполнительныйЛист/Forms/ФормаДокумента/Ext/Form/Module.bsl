Перем мТекущаяДатаДокумента; // Хранит последнюю установленную дату документа - для проверки перехода документа в другой период

// Хранит дерево макетов печатных форм
Перем мДеревоМакетов;

// Хранит элемент управления подменю печати
Перем мПодменюПечати;

// Хранит элемент управления кнопку печать по умолчанию
Перем мПечатьПоУмолчанию;

// Хранит дерево кнопок подменю заполнение ТЧ
Перем мКнопкиЗаполненияТЧ;


////////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Процедура устанавливает подменю "Заполнить" в командных панелях ТЧ документа при необходимости
//
Процедура УстановитьКнопкиПодменюЗаполненияТЧ();
	
	мКнопкиЗаполненияТЧ = УниверсальныеМеханизмы.ПолучитьДеревоКнопокЗаполненияТабличныхЧастей(Ссылка,Новый Действие("НажатиеНаДополнительнуюКнопкуЗаполненияТЧ"));
	
	СоответствиеТЧ = Новый Соответствие;
	СоответствиеТЧ.Вставить(ЭлементыФормы.Дети,ЭлементыФормы.КоманднаяПанельДети);
	
	УниверсальныеМеханизмы.СформироватьПодменюЗаполненияТЧПоДеревуКнопок(мКнопкиЗаполненияТЧ,СоответствиеТЧ);
	
КонецПроцедуры

// Процедура устанавливает подменю "Печать" и кнопку "Печать по умолчанию" при необходимости
//
Процедура УстановитьКнопкиПечати()
	
	ФормированиеПечатныхФорм.СоздатьКнопкиПечати(ЭтотОбъект, ЭтаФорма);	
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// Установка кнопок печати
	УстановитьКнопкиПечати();
	
	// Установка кнопок заполнение ТЧ
	УстановитьКнопкиПодменюЗаполненияТЧ();
	
	
КонецПроцедуры // ПередОткрытием()

// Процедура - обработчик события "ПриОткрытии" формы
//
Процедура ПриОткрытии()

	Если ЭтоНовый() Тогда
		
		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект);

		Если НЕ ЗначениеЗаполнено(ВидИсполнительногоДокумента) Тогда
			ВидИсполнительногоДокумента = ЭлементыФормы.ВидИсполнительногоДокумента.СписокВыбора[0];
			СпособРасчетаИЛ = 1;// Процентом
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ДатаДействия) Тогда
			ДатаДействия = НачалоМесяца(ТекущаяДата());
		КонецЕсли;
		
    	ЭлементыФормы.СпособПеречисления.Значение = Перечисления.СпособыПеречисленияСуммПоИсполнительнымЛистам.ЧерезКассу;
	Иначе 
		// Установить доступность формы с учетом даты запрета редактирования	
		РаботаСДиалогами.УстановитьДоступностьФормыДляРедактирования(ЭтотОбъект, ЭтаФорма);
	КонецЕсли;	
	
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);
	
	// Вывести в заголовке формы вид операции.
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);

	// Запомнить текущие значения реквизитов формы.
	мТекущаяДатаДокумента        = Дата;

	// Установить активный реквизит.
	РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма);	
	
	// Видимость ТЧ Дети и ее командной панели
	УстановитьДоступностьОтВидаДокумента();
	
	УстановитьВидимостьОтСпособаПеречисления();
КонецПроцедуры

// Процедура - обработчик события "ПослеЗаписи" формы.
//
Процедура ПослеЗаписи()
	
	// Установка кнопок печати
	УстановитьКнопкиПечати();

	// Вывести в заголовке формы вид операции и статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
КонецПроцедуры

// Процедура - обработчик события "ОбработкаВыбора" формы
Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)

	Если ТипЗнч(ЗначениеВыбора) = Тип("Структура") Тогда
		Физлицо = ЗначениеВыбора.Физлицо;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНОЙ ПАНЕЛИ ФОРМЫ

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	РаботаСДиалогами.НапечататьДвиженияДокумента(Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

// Процедура - обработчик нажатия на любую из дополнительных кнопок по заполнению ТЧ
//
Процедура НажатиеНаДополнительнуюКнопкуЗаполненияТЧ(Кнопка)
	
	УниверсальныеМеханизмы.ОбработатьНажатиеНаДополнительнуюКнопкуЗаполненияТЧ(мКнопкиЗаполненияТЧ.Строки.Найти(Кнопка.Имя,"Имя",Истина),ЭтотОбъект);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
Процедура ОсновныеДействияФормыПечатьПоУмолчанию(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать"
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Установить печать по умолчанию"
//
Процедура ОсновныеДействияФормыУстановитьПечатьПоУмолчанию(Кнопка)
	
	Если УниверсальныеМеханизмы.НазначитьКнопкуПечатиПоУмолчанию(мДеревоМакетов, Метаданные().Имя) Тогда
		
		УстановитьКнопкиПечати();
		
	КонецЕсли; 
	
	
КонецПроцедуры

// Процедура разрешения/запрещения редактирования номера документа
Процедура ДействияФормыРедактироватьНомер(Кнопка)
	
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
			
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

// Процедура - обработчик события "ПриИзменении" поля ввода даты документа
//
Процедура ДатаПриИзменении(Элемент = Неопределено)

	РаботаСДиалогами.ПроверитьНомерДокумента(ДокументОбъект, мТекущаяДатаДокумента);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);

	мТекущаяДатаДокумента = Дата;

КонецПроцедуры // ДатаПриИзменении

// Процедура - обработчик события "ПриИзменении" поля ввода организации.
//
Процедура ОрганизацияПриИзменении(Элемент)

	Если Не ПустаяСтрока(Номер) Тогда
		МеханизмНумерацииОбъектов.СброситьУстановленныйКодНомерОбъекта(ЭтотОбъект, "Номер", ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	КонецЕсли;
	
	ЗаполнениеДокументов.ПриИзмененииЗначенияОрганизации(ЭтотОбъект);


КонецПроцедуры // ОрганизацияПриИзменении()


Процедура СотрудникНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ПроцедурыУправленияПерсоналом.ОткрытьФормуВыбораСотрудникаОрганизации(Элемент, Ссылка, Истина, Дата, Организация, 1, СтандартнаяОбработка, Элемент.Значение);
	
КонецПроцедуры

Процедура СотрудникАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	ТекстАвтоПодбора = ПроцедурыУправленияПерсоналом.ПодобратьФИОРаботникаКандидата(СтандартнаяОбработка, "РаботникиОрганизации", Текст, Организация);
	
КонецПроцедуры

Процедура СотрудникОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	Значение = ПроцедурыУправленияПерсоналом.ПодобратьСписокРаботниковКандидатов(СтандартнаяОбработка, "РаботникиОрганизации", Текст, Элемент.Значение, Организация);
	
КонецПроцедуры

Процедура СотрудникПриИзменении(Элемент)
	
	Если ВидИсполнительногоДокумента = ЭлементыФормы.ВидИсполнительногоДокумента.СписокВыбора[1].Значение Тогда
		ЗаполнитьДетей();
	КонецЕсли;	
	
КонецПроцедуры

Процедура ЗаполнитьДетей()
	
	Дети.Очистить();
	СоставСемьи = Сотрудник.ФизЛицо.СоставСемьи;
	Для каждого СтрокаСоставСемьи Из Сотрудник.ФизЛицо.СоставСемьи Цикл
		
		СтрокаДети = Дети.Добавить();
		СтрокаДети.ФизЛицо = СтрокаСоставСемьи.ФизЛицо;
		СтрокаДети.ГодОкончания = Год(ДобавитьМесяц(СтрокаСоставСемьи.ФизЛицо.ДатаРождения, 18*12));
		
	КонецЦикла;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)

	РаботаСДиалогами.ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура выполняет открытие формы работы с категориями документа
//
Процедура ДействияФормыДействиеОткрытьКатегории(Кнопка)

	РаботаСДиалогами.ОткрытьКатегорииДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

Процедура ВидИсполнительногоДокументаПриИзменении(Элемент)
	УстановитьДоступностьОтВидаДокумента();
	ПриИзмененииСпособРасчета();
	Если ВидИсполнительногоДокумента = ЭлементыФормы.ВидИсполнительногоДокумента.СписокВыбора[1].Значение Тогда
		ЗаполнитьДетей();
	Иначе
		ИндексацияАлиментов = Ложь;
		НачалоИндексации = Неопределено;
	КонецЕсли;	
КонецПроцедуры

Процедура СпособПеречисленияПриИзменении(Элемент)
	УстановитьВидимостьОтСпособаПеречисления();
КонецПроцедуры

Процедура СчетКонтрагентаНачалоВыбора(Элемент, СтандартнаяОбработка)
	Если НЕ Получатель.Пустая() Тогда
		Элемент.ВыборПоВладельцу = Получатель;	
	КонецЕсли; 
КонецПроцедуры


Процедура УстановитьВидимостьОтСпособаПеречисления()
	ВидимостьТарифаПочты = ЭлементыФормы.СпособПеречисления.Значение = Перечисления.СпособыПеречисленияСуммПоИсполнительнымЛистам.ПочтовымПереводом;
	ВидимостьСчетаКонтрагента = ЭлементыФормы.СпособПеречисления.Значение = Перечисления.СпособыПеречисленияСуммПоИсполнительнымЛистам.ЧерезБанк;
	ЭлементыФормы.СчетКонтрагента.Видимость = ВидимостьСчетаКонтрагента;
	ЭлементыФормы.НадписьСчетКонтрагента.Видимость = ВидимостьСчетаКонтрагента;
	ЭлементыФормы.ТарифПочты.Видимость = ВидимостьТарифаПочты;
	ЭлементыФормы.НадписьТарифПочты.Видимость = ВидимостьТарифаПочты;
КонецПроцедуры

Процедура УстановитьДоступностьОтВидаДокумента()
	
	ДоступностьДети = ВидИсполнительногоДокумента = ЭлементыФормы.ВидИсполнительногоДокумента.СписокВыбора[1].Значение;
	ЭлементыФормы.Дети.Видимость = ДоступностьДети;
	ЭлементыФормы.РамкаДети.Видимость = ДоступностьДети;
	ЭлементыФормы.ПометкаУвеличиватьДоМинимума.Видимость = ДоступностьДети;
	ЭлементыФормы.КоманднаяПанельДети.Видимость = ДоступностьДети;	
	ЭлементыФормы.Дети.ОтборСтрок.Физлицо.Использование = НЕ ДоступностьДети;
	
	ЭлементыФормы.ИндексацияАлиментов.Доступность =  ДоступностьДети;
	ЭлементыФормы.НачалоИндексации.Доступность =  ДоступностьДети;
	
КонецПроцедуры 

Процедура СпособРасчетаИЛПриИзменении(Элемент)
	
	ПриИзмененииСпособРасчета();
	
КонецПроцедуры

Процедура ПриИзмененииСпособРасчета()
	
	Если СпособРасчетаИЛ = 1 Тогда
		
		ЭлементыФормы.НадписьРазмер.Видимость = Ложь;
		ЭлементыФормы.НадписьПроцент.Видимость = Истина;
		ЭлементыФормы.Размер.МаксимальноеЗначение = 100.00;
		Если Размер > 100 Тогда
		   Размер = 100;		
	    КонецЕсли;
		
		
		Если ВидИсполнительногоДокумента <> ЭлементыФормы.ВидИсполнительногоДокумента.СписокВыбора[1].Значение Тогда
			ЭлементыФормы.ПометкаУвеличиватьДоМинимума.Видимость = Ложь;
			ЭлементыФормы.ПометкаУвеличиватьДоМинимума.Значение = Ложь;
		Иначе
			ЭлементыФормы.ПометкаУвеличиватьДоМинимума.Видимость = Истина;
			ЭлементыФормы.ПометкаУвеличиватьДоМинимума.Значение = Истина;
		КонецЕсли;
	   
	
	Иначе                                                
		
		ЭлементыФормы.НадписьРазмер.Видимость = Истина;
		ЭлементыФормы.НадписьПроцент.Видимость = Ложь;
		ЭлементыФормы.Размер.МаксимальноеЗначение = 99999999.99;
		
		ЭлементыФормы.ПометкаУвеличиватьДоМинимума.Видимость = Ложь;
		Если ПометкаУвеличиватьДоМинимума Тогда
			ЭлементыФормы.ПометкаУвеличиватьДоМинимума.Значение = Ложь;
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры



 ЭлементыФормы.Дети.ОтборСтрок.Физлицо.Значение = Справочники.ФизическиеЛица.ПустаяСсылка();
