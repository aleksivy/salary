////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мТекущаяДатаДокумента; // Хранит последнюю установленную дату документа - для проверки перехода документа в другой период
Перем мСведенияОСчетах;  // для получения сведений о счетах на время работы формы
Перем мСведенияОСтатьяхЗатрат;  // для получения сведений о статьях затрат на время работы формы

// для синхронизации строк табличных полей
Перем мСинхронизируемыеТабличныеЧасти;
Перем мТекущееФизЛицо;
Перем мСпискВыбораВНД;
Перем мФизЛицо;

// Хранит дерево макетов печатных форм
Перем мДеревоМакетов;

// Хранит элемент управления подменю печати
Перем мПодменюПечати;

// Хранит элемент управления кнопку печать по умолчанию
Перем мПечатьПоУмолчанию;

// Хранит дерево кнопок подменю заполнение ТЧ
Перем мКнопкиЗаполненияТЧ;

////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ

// Процедура устанавливает подменю "Заполнить" в командных панелях ТЧ документа при необходимости
//
Процедура УстановитьКнопкиПодменюЗаполненияТЧ()
	
	мКнопкиЗаполненияТЧ = УниверсальныеМеханизмы.ПолучитьДеревоКнопокЗаполненияТабличныхЧастей(Ссылка,Новый Действие("НажатиеНаДополнительнуюКнопкуЗаполненияТЧ"));
	
	СоответствиеТЧ = Новый Соответствие;
	СоответствиеТЧ.Вставить(ЭлементыФормы.ОтражениеВУчете,ЭлементыФормы.ОтражениеВУчетеПанель);
	
	УниверсальныеМеханизмы.СформироватьПодменюЗаполненияТЧПоДеревуКнопок(мКнопкиЗаполненияТЧ,СоответствиеТЧ);
	
КонецПроцедуры // УстановитьКнопкиПодменюЗаполненияТЧ()

// Процедура устанавливает подменю "Печать" и кнопку "Печать по умолчанию" при необходимости
//
Процедура УстановитьКнопкиПечати()
	
	ФормированиеПечатныхФорм.СоздатьКнопкиПечати(ЭтотОбъект, ЭтаФорма);	
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// Установка кнопок печати
	УстановитьКнопкиПечати();
	
	// Установка кнопок заполнение ТЧ
	УстановитьКнопкиПодменюЗаполненияТЧ();
	
КонецПроцедуры // ПередОткрытием()

// Процедура - обработчик события "ПриОткрытии" формы
//
Процедура ПриОткрытии()

	Если ЭтоНовый() Тогда
		
		Если НЕ ЗначениеЗаполнено(ПараметрОснование) И НЕ ЗначениеЗаполнено(ПараметрОбъектКопирования) Тогда
			// Заполнить реквизиты значениями по умолчанию.
			ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ПараметрОбъектКопирования) Тогда
        	СпособОтраженияВБухучете = Справочники.СпособыОтраженияЗарплатыВРеглУчете.КоммунальныйНалог
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СтавкаКоммунальногоНалога) И Не ЗначениеЗаполнено(НеоблагаемыйМинимум) Тогда
			ПроведениеРасчетов.ОпределитьРегламентированныеПараметрыДляРасчетаКоммунальногоНалога(СтавкаКоммунальногоНалога, НеоблагаемыйМинимум, ПериодРегистрации, Организация);
		КонецЕсли;
		
		Если ПроведениеРасчетов.ИспользуетсяНК(Дата) Тогда
			Предупреждение(НСтр("ru='С 01.01.2011 г. коммунальный налог отменен и документ больше не используется';uk='З 01.01.2011 комунальний податок скасовано і документ більше не використовується'"),10);
		КонецЕсли;	
	Иначе 
		// Установить доступность формы с учетом даты запрета редактирования	
		РаботаСДиалогами.УстановитьДоступностьФормыДляРедактирования(ЭтотОбъект, ЭтаФорма);
	КонецЕсли;	
	
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы1.Кнопки.Подменю,ЭлементыФормы.Номер);
	
	СтруктураКолонок = Новый Структура();

	// Установить колонки, видимостью которых пользователь управлять не может.
	СтруктураКолонок.Вставить("СчетДт");
	СтруктураКолонок.Вставить("СчетКт");
 	СтруктураКолонок.Вставить("Сумма");

	// Установить ограничение - изменять видимость колонок табличной части
	ОбработкаТабличныхЧастей.УстановитьИзменятьВидимостьКолонокТабЧасти(ЭлементыФормы.ОтражениеВУчете.Колонки, СтруктураКолонок);

	// Вывести в заголовке формы статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);

	// Запомнить текущие значения реквизитов формы.
	мТекущаяДатаДокумента        = Дата;

	// Установить активный реквизит.
	РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура - обработчик события "ПослеЗаписи" формы.
//
Процедура ПослеЗаписи()
	
	// Установка кнопок печати
	УстановитьКнопкиПечати();
	
	// Вывести в заголовке формы статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)

	РаботаСДиалогами.ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура выполняет открытие формы работы с категориями документа
//
Процедура ДействияФормыДействиеОткрытьКатегории(Кнопка)

	РаботаСДиалогами.ОткрытьКатегорииДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

Процедура ДействияФормыЗаполнить(Кнопка)
	
	НачалоПериода	= ПериодРегистрации;
	КонецПериода	= КонецМесяца(ПериодРегистрации);
	тбЧисленностьССЧ = ПроведениеРасчетов.ПолучитьСреднююЧисленность(НачалоПериода, КонецПериода,  "ССЧ", "МЕСЯЦ", Организация, "ШТАТ");
	Численность  = 0;
	Для каждого СтрЧисленностьССЧ  Из тбЧисленностьССЧ Цикл
		Численность = Численность + ?(СтрЧисленностьССЧ.Средняя = Неопределено,0,СтрЧисленностьССЧ.Средняя);
	КонецЦикла;
	СреднесписочнаяЧисленность = Численность;
	СформироватьПроводки(Ложь); 


КонецПроцедуры // ДействияФормыЗаполнить

Процедура ДействияФормыОчистить(Кнопка)
	
	ТекстВопроса = НСтр("ru='Табличные части будут очищены. Продолжить?';uk='Табличні частини будуть очищені. Продовжити?'");
	Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да,);
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли; 
	
	ОтражениеВУчете.Очистить();
		
КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	РаботаСДиалогами.НапечататьДвиженияДокумента(Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

// Процедура разрешения/запрещения редактирования номера документа
//
Процедура ДействияФормыРедактироватьНомер(Кнопка)
	
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы1.Кнопки.Подменю, ЭлементыФормы.Номер);
			
КонецПроцедуры

// Процедура - обработчик нажатия на любую из дополнительных кнопок по заполнению ТЧ
//
Процедура НажатиеНаДополнительнуюКнопкуЗаполненияТЧ(Кнопка)
	
	УниверсальныеМеханизмы.ОбработатьНажатиеНаДополнительнуюКнопкуЗаполненияТЧ(мКнопкиЗаполненияТЧ.Строки.Найти(Кнопка.Имя,"Имя",Истина),ЭтотОбъект);
	
КонецПроцедуры // НажатиеНаДополнительнуюКнопкуЗаполненияТЧ()

// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
Процедура ОсновныеДействияФормыПечатьПоУмолчанию(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры // ОсновныеДействияФормыПечатьПоУмолчанию()

// Процедура - обработчик нажатия на кнопку "Печать"
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры // ОсновныеДействияФормыПечать()

// Процедура - обработчик нажатия на кнопку "Установить печать по умолчанию"
//
Процедура ОсновныеДействияФормыУстановитьПечатьПоУмолчанию(Кнопка)
	
	Если УниверсальныеМеханизмы.НазначитьКнопкуПечатиПоУмолчанию(мДеревоМакетов, Метаданные().Имя) Тогда
		УстановитьКнопкиПечати();
	КонецЕсли;
	
КонецПроцедуры // ОсновныеДействияФормыУстановитьПечатьПоУмолчанию()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

// Процедура - обработчик события "ПриИзменении" поля ввода даты документа
//
Процедура ДатаПриИзменении(Элемент = Неопределено)

	РаботаСДиалогами.ПроверитьНомерДокумента(ЭтотОбъект, мТекущаяДатаДокумента);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы1.Кнопки.Подменю, ЭлементыФормы.Номер);

	мТекущаяДатаДокумента = Дата;

КонецПроцедуры // ДатаПриИзменении

// Процедура - обработчик события "ПриИзменении" поля ввода организации.
//
Процедура ОрганизацияПриИзменении(Элемент)
	
    Если Не ПустаяСтрока(Номер) Тогда
		МеханизмНумерацииОбъектов.СброситьУстановленныйКодНомерОбъекта(ЭтотОбъект, "Номер", ЭлементыФормы.ДействияФормы1.Кнопки.Подменю, ЭлементыФормы.Номер);
	КонецЕсли;
	
КонецПроцедуры // ОрганизацияПриИзменении()

// Процедура - обработчик события "Регулирование" поля ввода периода регистрации.
//
Процедура ПериодРегистрацииРегулирование(Элемент, Направление, СтандартнаяОбработка)
	Если Направление = 1 Тогда // увеличиваем значение
		ПериодРегистрации = КонецМесяца(ПериодРегистрации) + 1
	Иначе // = -1 - уменьшаем значение
		ПериодРегистрации = НачалоМесяца(ПериодРегистрации - 1)
	КонецЕсли;
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода периода регистрации.
//
Процедура ПериодРегистрацииПриИзменении(Элемент)
    ПериодРегистрации = НачалоМесяца(ПериодРегистрации)
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНОЙ ПАНЕЛИ ТАБЛИЧНОГО ПОЛЯ ОтражениеВУчете

Процедура СформироватьПроводки(НеобходимаЗапись = Истина)
	
	Если ЭтоНовый() И НеобходимаЗапись Тогда
		Если Вопрос(НСтр("ru='Сформировать проводки можно только после записи документа. Записать документ?';uk='Сформувати проводки можна тільки після запису документа. Записати документ?'"), РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
			Если Не ЗаписатьВФорме() Тогда
				Возврат;
			КонецЕсли;;
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если Проведен Тогда
		Если Вопрос(НСтр("ru='Сформировать проводки можно только после отмены проведения документа. Выполнить отмену проведения документа?';uk='Сформувати проводки можна тільки після скасування проведення документа. Виконати скасування проведення документа?'"), РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
			Если Не ЗаписатьВФорме(РежимЗаписиДокумента.ОтменаПроведения) Тогда
				Возврат;
			КонецЕсли;;
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	АвтозаполнениеПроводок();
			
КонецПроцедуры

Процедура ОтражениеВУчетеПанельСформироватьПроводки(Кнопка)
	
	СформироватьПроводки();
			
КонецПроцедуры
	
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОЙ ЧАСТИ ОтражениеВУчете 

Процедура ОтражениеВУчетеПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	СведенияОСчете = БухгалтерскийУчет.ПолучитьСведенияОСчете(мСведенияОСчетах, ДанныеСтроки.СчетДт);
	БухгалтерскийУчет.НазначитьВидимостьСубконто(ОформлениеСтроки, "Дт", СведенияОСчете);
	
	СведенияОСчете = БухгалтерскийУчет.ПолучитьСведенияОСчете(мСведенияОСчетах, ДанныеСтроки.СчетКт);
	БухгалтерскийУчет.НазначитьВидимостьСубконто(ОформлениеСтроки, "Кт", СведенияОСчете);
КонецПроцедуры

Процедура ОтражениеВУчетеСчетДтПриИзменении(Элемент)
	СведенияОСчете = БухгалтерскийУчет.ПолучитьСведенияОСчете(мСведенияОСчетах, Элемент.Значение);
	БухгалтерскийУчет.ПривестиЗначениеСубконто(ЭлементыФормы.ОтражениеВУчете, "Дт", СведенияОСчете);
КонецПроцедуры

Процедура ОтражениеВУчетеСчетКтПриИзменении(Элемент)
	СведенияОСчете = БухгалтерскийУчет.ПолучитьСведенияОСчете(мСведенияОСчетах, Элемент.Значение);
	БухгалтерскийУчет.ПривестиЗначениеСубконто(ЭлементыФормы.ОтражениеВУчете, "Кт", СведенияОСчете);
КонецПроцедуры

Процедура ОтражениеВУчетеСтатьяВаловыхРасходовНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	НазваниеНалоговойДекларации = Перечисления.ВидыНалоговыхДеклараций.ДекларацияОПрибыли;      
	РаботаСДиалогами.НачалоВыбораСтатьяНалоговойДекларации(Элемент, СтандартнаяОбработка, НазваниеНалоговойДекларации);
	
КонецПроцедуры


мСведенияОСчетах = Новый Соответствие;
мСведенияОСтатьяхЗатрат = Новый Соответствие;

мСпискВыбораВНД = Новый СписокЗначений;
мСпискВыбораВНД.Добавить(Справочники.ВидыНалоговойДеятельности.НеОблагаемая);
мСпискВыбораВНД.Добавить(Справочники.ВидыНалоговойДеятельности.ОблагаемаяПоОбычнойСтавке);
