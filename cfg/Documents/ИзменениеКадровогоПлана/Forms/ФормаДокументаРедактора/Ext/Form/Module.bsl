Перем мТекущаяДатаДокумента; // Хранит последнюю установленную дату документа - для проверки перехода документа в другой период
Перем мВалютаПоУмолчанию; // Хранит значение константы ВалютаУправленческогоУчетаКомпании - для ввода значений по умолчанию

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПриОткрытии" формы
//
Процедура ПриОткрытии()

	Если ЭтоНовый() Тогда
		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект);
        Решение = Перечисления.СостоянияОбъектов.Подготовлен;
		
	КонецЕсли;	

	СтруктураКолонок = Новый Структура();

	// Установить колонки, видимостью которых пользователь управлять не может.
	СтруктураКолонок.Вставить("Подразделение");
 	СтруктураКолонок.Вставить("Должность");

	// Установить ограничение - изменять видимость колонок табличной части РабочиеМеста
	ОбработкаТабличныхЧастей.УстановитьИзменятьВидимостьКолонокТабЧасти(ЭлементыФормы.РабочиеМеста.Колонки, СтруктураКолонок);

	// Вывести в заголовке формы вид операции и статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);

	// Запомнить текущие значения реквизитов формы.
	мТекущаяДатаДокумента = ДокументОбъект.Дата;

	// Установить активный реквизит.
	РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма);
	

КонецПроцедуры

// Процедура - обработчик события "ПослеЗаписи" формы.
//
Процедура ПослеЗаписи()
	// Вывести в заголовке формы статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	РаботаСДиалогами.НапечататьДвиженияДокумента(Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

// Обработчик события "Действие" элемента панели "Копировать" командной панели "КоманднаяПанельРабочиеМеста". 
// Копирует данные выделенной строки в интерфесном объекте "ТекущиеРабочиеМеста"
// в табличную часть документа.
//
Процедура КоманднаяПанельРабочиеМестаКопировать(Кнопка)
	
	
	Запись  = ЭлементыФормы.ТекущиеРабочиеМеста.ТекущиеДанные;
	Строка  = ЭлементыФормы.ТекущиеРабочиеМеста.ТекущаяСтрока;

	Если  Строка = неопределено Тогда 
		Вопрос(НСтр("ru='Не выбрана строка для копирования в поле ""Текущее состояние кадрового плана в подразделении"".';uk='Не обраний рядок для копіювання в полі ""Поточний стан кадрового плану у підрозділі"".'"),РежимДиалогаВопрос.ОК,,,"");
		Возврат 
	КонецЕсли;
	
	НоваяСтрока = РабочиеМеста.Добавить();

 	НоваяСтрока.Подразделение              = ЭлементыФормы.подразделения.ТекущаяСтрока;
	НоваяСтрока.Должность                  = Запись.Должность;
	НоваяСтрока.Количество          	   = Запись.Количество;
	НоваяСтрока.ПлановыеЕжемесячныеЗатраты = Запись.ПлановыеЕжемесячныеЗатраты;
	НоваяСтрока.Валюта                     = Запись.Валюта;
		
КонецПроцедуры  // КоманднаяПанельРабочиеМестаКопировать(Кнопка)

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

// Процедура выполняет алгоритм действий при изменении даты документа
//
// Параметры:
//  Элемент - элемент формы, который отображает дату документа
//
Процедура ДатаПриИзменении(Элемент = Неопределено)

	РаботаСДиалогами.ПроверитьНомерДокумента(ДокументОбъект, мТекущаяДатаДокумента);

	мТекущаяДатаДокумента = ДокументОбъект.Дата;

КонецПроцедуры // ДатаПриИзменении

// Обработчик события "ПриАктивизацииСтроки" интерфейсного объекта "Подразделения".
// обеспечивает отбор по подразделению в списке штатных единиц.
// 
// 
Процедура ПодразделенияПриАктивизацииСтроки(Элемент)
	

	Если Элемент.ТекущаяСтрока.Наименование <> "" Тогда 
		ТекущиеРабочиеМеста.Отбор.Подразделение.Значение	    = Элемент.ТекущаяСтрока;
		ТекущиеРабочиеМеста.Отбор.Решение.Значение            = Перечисления.СостоянияОбъектов.Утвержден;
		ТекущиеРабочиеМеста.Отбор.Подразделение.Использование = Истина;
    	ТекущиеРабочиеМеста.Отбор.Решение.Использование       = Истина; 
	Иначе
		ТекущиеРабочиеМеста.Отбор.Решение.Значение            = Перечисления.СостоянияОбъектов.Утвержден;
    	ТекущиеРабочиеМеста.Отбор.Решение.Использование       = Истина; 
		ТекущиеРабочиеМеста.Отбор.Подразделение.Использование = Ложь;
	КонецЕсли;
		
КонецПроцедуры // ПодразделенияПриАктивизацииСтроки(Элемент)
	
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТЧ РабочиеМеста

// Процедура обеспечивает начальное значение реквизита "КоличествоСтавок"
//
// Параметры:
//  Элемент      - табличное поле, которое отображает т.ч.
//  НоваяСтрока  - булево, признак редактирования новой строки
//  
Процедура РабочиеМестаПриНачалеРедактирования(Элемент, НоваяСтрока)
	Если НоваяСтрока Тогда
		Если НЕ ЗначениеЗаполнено(Элемент.ТекущаяСтрока.Количество) Тогда
			Элемент.ТекущаяСтрока.Количество = 1;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(Элемент.ТекущаяСтрока.Валюта) Тогда
			Элемент.ТекущаяСтрока.Валюта = мВалютаПоУмолчанию
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// Процедура обеспечивает нестандартный шаг регулирования 
//
// Параметры:
//  Элемент      - элемент формы, который отображает занимаемые ставки.
//  Направление  - число, определяет, какая из кнопок регулирования была нажата.
//  СтандартнаяОбработка - булево, признак выполнения системной обработки события.
//  
Процедура РабочиеМестаКоличествоСтавокРегулирование(Элемент, Направление, СтандартнаяОбработка)
	Если Направление = 1 Тогда // увеличиваем значение
		ЭлементыФормы.РабочиеМеста.ТекущиеДанные.Количество = ЭлементыФормы.РабочиеМеста.ТекущиеДанные.Количество + 1
	Иначе // = -1 - уменьшаем значение
		ЭлементыФормы.РабочиеМеста.ТекущиеДанные.Количество = ЭлементыФормы.РабочиеМеста.ТекущиеДанные.Количество - 1
	КонецЕсли;
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)

	РаботаСДиалогами.ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура выполняет открытие формы работы с категориями документа
//
Процедура ДействияФормыДействиеОткрытьКатегории(Кнопка)

	РаботаСДиалогами.ОткрытьКатегорииДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 

мВалютаПоУмолчанию = Константы.ВалютаУправленческогоУчета.Получить();
