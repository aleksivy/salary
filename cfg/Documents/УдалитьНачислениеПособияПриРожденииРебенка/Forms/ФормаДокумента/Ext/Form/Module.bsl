////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мТекущаяДатаДокумента; // Хранит последнюю установленную дату документа - для проверки перехода документа в другой период

////////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если ЭтоНовый() Тогда
		Отказ = Истина;
		Предупреждение(НСтр("ru='Документ больше не используется в работе';uk='Документ більше не використовуеється в роботі'"),10);
		Возврат;
	КонецЕсли;

КонецПроцедуры


// Процедура - обработчик события "ПриОткрытии" формы
//
Процедура ПриОткрытии()

	Если ЭтоНовый() Тогда
		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект);
	Иначе
		ЭлементыФормы.Ребенок.СписокВыбора = ПолучитьСписокДетейРаботника();
	КонецЕсли;	

	СтруктураКолонок = Новый Структура();

	// Установить колонки, видимостью которых пользователь управлять не может.
	СтруктураКолонок.Вставить("ФизЛицо");
 	СтруктураКолонок.Вставить("Результат");

	// Вывести в заголовке формы вид операции и статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);

	// Запомнить текущие значения реквизитов формы.
	мТекущаяДатаДокумента        = Дата;
	
	// Установить активный реквизит.
	РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры

// Процедура - обработчик события "ПослеЗаписи" формы.
//
Процедура ПослеЗаписи()
	// Вывести в заголовке формы статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Обработчик события нажатия кнопки "Рассчитать все"
Процедура ДействияФормыРассчитатьВсе(Кнопка)
	
	Отказ = Ложь;
	Если Модифицированность Тогда
		Вопрос = НСтр("ru='Для выпонения расчета необходимо записать документ. Продолжить?';uk='Для виконання розрахунку необхідно записати документ. Продовжити?'");
		
		Ответ  = Вопрос(Вопрос, РежимДиалогаВопрос.ОКОтмена);
		Если Ответ = КодВозвратаДиалога.ОК Тогда
			Отказ = Не ЗаписатьВФорме();
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли; 	
	
	Если Не Отказ Тогда
		Рассчитать();
	КонецЕсли;

КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	РаботаСДиалогами.НапечататьДвиженияДокумента(Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

// Процедура - обработчик события "ПриИзменении" поля ввода даты документа.
//
Процедура ДатаПриИзменении(Элемент)

	РаботаСДиалогами.ПроверитьНомерДокумента(ЭтотОбъект, мТекущаяДатаДокумента);

	мТекущаяДатаДокумента = Дата;

КонецПроцедуры // ДатаПриИзменении


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОЙ ЧАСТИ Начисления

// Процедура - обработчик события "НачалоВыбора" поля ввода физлица
// переопеределим выбор физлица на выбор из списка регистра сведений
//
Процедура ФизлицоНачалоВыбора(Элемент, СтандартнаяОбработка)
	ПроцедурыУправленияПерсоналом.ОткрытьФормуВыбораРаботникаОрганизации(ЭтаФорма, СтандартнаяОбработка, Ссылка, Дата, Организация, Справочники.ПодразделенияОрганизаций.ПустаяСсылка());
КонецПроцедуры

// Процедура - обработчик события "ОбработкаВыбора" формы
Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	
	Если ТипЗнч(ЗначениеВыбора) = Тип("Структура") Тогда
		
		Если Физлицо <> ЗначениеВыбора.Физлицо Тогда
			
			Физлицо = ЗначениеВыбора.Физлицо;
			Ребенок = "";
			ДатаРождения = "";
			
		КонецЕсли;
		
		ЭлементыФормы.Ребенок.СписокВыбора = ПолучитьСписокДетейРаботника();
		
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)

	РаботаСДиалогами.ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура выполняет открытие формы работы с категориями документа
//
Процедура ДействияФормыДействиеОткрытьКатегории(Кнопка)

	РаботаСДиалогами.ОткрытьКатегорииДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

           
// Процедура вызова структуры подчиненности документа
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
КонецПроцедуры

Функция  ПолучитьСписокДетейРаботника()
	
	СписокДетей = Новый СписокЗначений;
	
	Для каждого ЧленСемьи Из ФизЛицо.СоставСемьи Цикл
		
		Если ЧленСемьи.СтепеньРодства = Справочники.СтепениРодстваФизЛиц.Ребенок Тогда
			
			СписокДетей.Добавить(ЧленСемьи.ФизЛицо, ЧленСемьи.ФизЛицо);
		
		КонецЕсли;
	
	КонецЦикла; 
	
	Если СписокДетей.Количество() = 0 Тогда
	    Сообщить("У работника " + ФизЛицо + " не заполнена табличная часть ""Состав семьи""!");
	КонецЕсли;
	
	Возврат СписокДетей;
	
КонецФункции

Процедура РебенокПриИзменении(Элемент)
	
	Для каждого ЧленСемьи Из ФизЛицо.СоставСемьи Цикл
		
		Если ЧленСемьи.ФизЛицо = Ребенок Тогда
			
			ДатаРождения = ЧленСемьи.ФизЛицо.ДатаРождения;
			Прервать;
		
		КонецЕсли;
	
	КонецЦикла; 
	
КонецПроцедуры

