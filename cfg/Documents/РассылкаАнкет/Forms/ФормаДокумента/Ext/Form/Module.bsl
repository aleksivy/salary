////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мТекущаяДатаДокумента; // Хранит последнюю установленную дату документа - для проверки перехода документа в другой период

Перем мОбработкаПоискаПоСтроке;
Перем мТекстПоискаПоСтроке;
Перем мПоследнееЗначениеЭлементаПоискаПоСтроке;
Перем ЕстьФизическиеЛица;
Перем ЕстьКонтрагенты;
Перем ЕстьКонтактныеЛица;

Перем мСписокДоступныхЗаписей;

// Хранит дерево кнопок подменю заполнение ТЧ
Перем мКнопкиЗаполненияТЧ;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ОтправитьАнкету() Экспорт
	
	Если НЕ ЗначениеЗаполнено(Анкета) Тогда
		Сообщить(НСтр("ru='Не указана анкета';uk='Не зазначена анкета'"));
		Возврат;
	КонецЕсли;
	
	ИмяФайлаXSL = "style.xsl";
	НетФайлаXSL = Истина;
	
	Если Модифицированность() тогда
		Ответ = Вопрос(НСтр("ru='Перед отправкой писем необходимо записать документ рассылки. Записать?';uk='Перед відправкою листів необхідно записати документ розсилки. Записати?'"), РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Да тогда
			Записать();
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;
	Если НЕ Константы.ИспользованиеВстроенногоПочтовогоКлиента.Получить() тогда
		Если НЕ ЗначениеЗаполнено(ЭлектронныйАдресОтветов) тогда
			Сообщить("Для того, что бы сформировать HTML анкету, необходимо указать e-mail ответов");
			Возврат;
		КонецЕсли;
	Иначе
		Если НЕ ЗначениеЗаполнено(ЭлектронныйАдресОтветовВстроенныйПочтовыйКлиент) тогда
			Сообщить("Для того, что бы сформировать HTML анкету, необходимо указать e-mail ответов");
			Возврат;
		КонецЕсли;
	КонецЕсли;
	Если НЕ Константы.ИспользованиеВстроенногоПочтовогоКлиента.Получить() тогда
		ПочтаОбъект = Новый Почта;
		Попытка
			ПочтаОбъект.Подключиться();
		Исключение
			Сообщить(НСтр("ru='Не удалось подключиться к почтовому клиенту';uk='Не вдалося підключитися до поштового клієнта'"));
			Возврат;
		КонецПопытки;
		
		Для каждого ПолучательПисьма из Получатели Цикл
			
			// сформируем вложение html
			ОпрашиваемоеЛицо = ПолучательПисьма.Объект;
			АнкетаОбъект = Анкета.ПолучитьОбъект();
			Если Анкета.Адресная тогда
				Если НЕ АнкетаОбъект.СформироватьВложение(ОпрашиваемоеЛицо, ЭлектронныйАдресОтветов, Ссылка, , , НетФайлаXSL) тогда
					Сообщить(НСтр("ru='Анкета не отправлена!';uk='Анкета не відправлена!'"), СтатусСообщения.Важное);
					Возврат;
				Иначе
					НетФайлаXSL = Ложь;
				КонецЕсли;
			Иначе
				Если НЕ АнкетаОбъект.СформироватьВложение(Неопределено, ЭлектронныйАдресОтветов, Ссылка, , , НетФайлаXSL)  тогда
					Сообщить(НСтр("ru='Анкета не отправлена!';uk='Анкета не відправлена!'"), СтатусСообщения.Важное);
					Возврат;
				Иначе
					НетФайлаXSL = Ложь;
				КонецЕсли;
			КонецЕсли;
			
			ЭлектронноеПисьмо       = Новый ПочтовоеСообщение;
			ЭлектронноеПисьмо.Тема  = Анкета.Наименование + ". "+?(Анкета.Адресная, ?(НЕ ЗначениеЗаполнено(ПолучательПисьма.Объект), "", ПолучательПисьма.Объект.Наименование), "");
			ЭлектронноеПисьмо.Текст = ТекстПисьма;

			ЭлектронноеПисьмо.Получатели.Добавить(ПолучательПисьма.Получатель);

			Для каждого Вложение Из Вложения Цикл
				ЭлектронноеПисьмо.Вложения.Добавить(Вложение.Вложение.Получить(), Вложение.ИмяФайла);
			КонецЦикла;
			
			// после того, как записали все вложения, еще добавим вложение анкеты
			ИмяФайла = Анкета.ПолучитьОбъект().ПолучитьИмяФайлаАнкеты();
			ЭлектронноеПисьмо.Вложения.Добавить(Новый ДвоичныеДанные(КаталогВременныхФайлов()+ИмяФайла), ИмяФайла);
			
			// добавляем вложение XSL
			ЭлектронноеПисьмо.Вложения.Добавить(Новый ДвоичныеДанные(КаталогВременныхФайлов()+ИмяФайлаXSL), ИмяФайлаXSL);
			
			ПочтаОбъект.Послать(ЭлектронноеПисьмо, СУведомлениемОПолучении);
			
		КонецЦикла;
		
		ПочтаОбъект.Отключиться();
	Иначе
		
		Если НЕ ЗначениеЗаполнено(УчетнаяЗаписьДляОтправки) Тогда
			Предупреждение(НСтр("ru='Не задана учетная запись для отправки писем.';uk='Не заданий обліковий запис для відправки листів.'"));
			Возврат;
		КонецЕсли;
		
		ЭлектронныеПисьма = Новый Соответствие;
		
		// отправляем при помощи встроенного почтового клиента
		Для каждого ПолучательПисьма из Получатели Цикл
			
			Состояние("Формируются электронные письма с анкетами " + Строка(Получатели.Индекс(ПолучательПисьма) + 1) + НСтр("ru=' из ';uk=' з '") + Получатели.Количество());
			
			Если НЕ ЗначениеЗаполнено(ПолучательПисьма.Получатель) Тогда
				Продолжить;
			КонецЕсли; 
			
			// сформируем вложение html
			АнкетаОбъект = Анкета.ПолучитьОбъект();
			ОпрашиваемоеЛицо = ПолучательПисьма.Объект;
			Если Анкета.Адресная тогда
				Если НЕ АнкетаОбъект.СформироватьВложение(ОпрашиваемоеЛицо, ЭлектронныйАдресОтветовВстроенныйПочтовыйКлиент, Ссылка, , , НетФайлаXSL) тогда
					Сообщить(НСтр("ru='Анкета не отправлена!';uk='Анкета не відправлена!'"), СтатусСообщения.Важное);
					Возврат;
				Иначе
					НетФайлаXSL = Ложь;
				КонецЕсли;
			Иначе
				Если НЕ АнкетаОбъект.СформироватьВложение(Неопределено, ЭлектронныйАдресОтветовВстроенныйПочтовыйКлиент, Ссылка, , , НетФайлаXSL)  тогда
					Сообщить(НСтр("ru='Анкета не отправлена!';uk='Анкета не відправлена!'"), СтатусСообщения.Важное);
					Возврат;
				Иначе
					НетФайлаXSL = Ложь;
				КонецЕсли;
			КонецЕсли;
			
			СтруктураПараметров = Новый Структура();
			СтруктураПараметров.Вставить("УчетнаяЗапись", УчетнаяЗаписьДляОтправки);
			СтруктураПараметров.Вставить("Тема", (Анкета.Наименование + ". "+?(Анкета.Адресная, ?(НЕ ЗначениеЗаполнено(ПолучательПисьма.Объект), "", ПолучательПисьма.Объект.Наименование), "")));
			СтруктураПараметров.Вставить("Тело", ТекстПисьма);
			
			СписокКому = Новый СписокЗначений;
			СписокКому.Добавить(ПолучательПисьма.Получатель, ?(НЕ ЗначениеЗаполнено(ПолучательПисьма.Объект), ПолучательПисьма.Получатель, СокрЛП(ПолучательПисьма.Объект)));
			СтруктураПараметров.Вставить("Кому", СписокКому);
			
			ИмяФайла = Анкета.ПолучитьОбъект().ПолучитьИмяФайлаАнкеты();
			СписокФайловВложений = Новый СписокЗначений;
			СтруктураВложения = Новый Структура("ВидДанных, ИмяФайла, Наименование, Хранилище", Перечисления.ВидыДополнительнойИнформацииОбъектов.Файл,
												ИмяФайла, ИмяФайла, (КаталогВременныхФайлов() + ИмяФайла));
			СписокФайловВложений.Добавить(СтруктураВложения);
			
			// добавляем вложение XSL
			СтруктураВложения = Новый Структура("ВидДанных, ИмяФайла, Наименование, Хранилище", Перечисления.ВидыДополнительнойИнформацииОбъектов.Файл,
												ИмяФайлаXSL, ИмяФайлаXSL, (КаталогВременныхФайлов() + ИмяФайлаXSL));
			СписокФайловВложений.Добавить(СтруктураВложения);
			
			Для каждого Вложение Из Вложения Цикл
				СтруктураВложения = Новый Структура("ВидДанных, ИмяФайла, Наименование, Хранилище", Перечисления.ВидыДополнительнойИнформацииОбъектов.Файл,
													Вложение.ИмяФайла, Вложение.ИмяФайла, Вложение.Вложение);
				СписокФайловВложений.Добавить(СтруктураВложения);
			КонецЦикла;
			СтруктураПараметров.Вставить("СписокФайловВложений", СписокФайловВложений);
			
			НачатьТранзакцию();
			
			СтруктураПисьма = УправлениеЭлектроннойПочтой.НаписатьПисьмо(глЗначениеПеременной("глТекущийПользователь"),СтруктураПараметров,,,,,, Истина, Ложь);
			
			Если ТипЗнч(СтруктураПисьма) <> Тип("Структура") Тогда
				ОтменитьТранзакцию();
				ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru='Письмо получателю ';uk='Лист одержувачу '") + ?(НЕ ЗначениеЗаполнено(ПолучательПисьма.Объект), ПолучательПисьма.Получатель, СокрЛП(ПолучательПисьма.Объект)) + НСтр("ru=' не отправлено.';uk=' не відправлено.'"));
				Если ТипЗнч(СтруктураПисьма) = Тип("Строка") Тогда
					ОбщегоНазначения.СообщитьОбОшибке(СтруктураПисьма);
				КонецЕсли; 
				Продолжить;
			Иначе
				ЗафиксироватьТранзакцию();
				ЭлектронныеПисьма.Вставить(СтруктураПисьма.ПисьмоСсылка);
			КонецЕсли; 
			
		КонецЦикла;
		
		УправлениеЭлектроннойПочтой.ОтправитьПисьма(ЭлектронныеПисьма, глЗначениеПеременной("глСоответствиеТекстовЭлектронныхПисем"), глЗначениеПеременной("глТекущийПользователь"));
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура устанавливает подменю "Заполнить" в командных панелях ТЧ документа при необходимости
//
Процедура УстановитьКнопкиПодменюЗаполненияТЧ();
	
	мКнопкиЗаполненияТЧ = УниверсальныеМеханизмы.ПолучитьДеревоКнопокЗаполненияТабличныхЧастей(Ссылка,Новый Действие("НажатиеНаДополнительнуюКнопкуЗаполненияТЧ"));
	
	СоответствиеТЧ = Новый Соответствие;
	СоответствиеТЧ.Вставить(ЭлементыФормы.Получатели,ЭлементыФормы.КоманднаяПанель1);
	СоответствиеТЧ.Вставить(ЭлементыФормы.Вложения,ЭлементыФормы.КоманднаяПанельВложения);
	
	УниверсальныеМеханизмы.СформироватьПодменюЗаполненияТЧПоДеревуКнопок(мКнопкиЗаполненияТЧ,СоответствиеТЧ);
	
КонецПроцедуры

// Процедура - обработчик нажатия на любую из дополнительных кнопок по заполнению ТЧ
//
Процедура НажатиеНаДополнительнуюКнопкуЗаполненияТЧ(Кнопка)
	
	УниверсальныеМеханизмы.ОбработатьНажатиеНаДополнительнуюКнопкуЗаполненияТЧ(мКнопкиЗаполненияТЧ.Строки.Найти(Кнопка.Имя,"Имя",Истина),ЭтотОбъект);
	
КонецПроцедуры


Процедура ПриИзмененииАнкеты(Значение)
	
	// при изменении анкеты установим тип получателя
	Если НЕ ЗначениеЗаполнено(Анкета.ВидСправочникаДляЗагрузки) и Анкета.ЗагружатьОбъекты тогда
		Сообщить(НСтр("ru='В анкете не указан справочник для загрузки объектов!';uk=""В анкеті не зазначений довідник для завантаження об'єктів!"""));
		Возврат;
	КонецЕсли;
	
	Если Анкета.Адресная ИЛИ Анкета.ЗагружатьОбъекты тогда
		ТипСправочникаПолучателя = Новый ОписаниеТипов("");
		Если ЕстьФизическиеЛица И Анкета.ВидСправочникаДляЗагрузки = Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.ФизическиеЛица тогда
			ТипСправочникаПолучателя = Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица")
		ИначеЕсли ЕстьКонтрагенты И Анкета.ВидСправочникаДляЗагрузки = Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.Контрагенты тогда
			ТипСправочникаПолучателя = Новый ОписаниеТипов("СправочникСсылка.Контрагенты")
		КонецЕсли;
		ЭлементыФормы.Получатели.Колонки.Получатель.ЭлементУправления.ОграничениеТипа = ТипСправочникаПолучателя;
		ЭлементыФормы.Получатели.Колонки.Получатель.Видимость = Истина;
	КонецЕсли;
	Если НЕ Анкета.Адресная тогда
		// если анкета не адресная, тогда оствим одну колонку и выйдем
		//ЭлементыФормы.Получатели.СоздатьКолонки();
		ЭлементыФормы.Получатели.Колонки.Получатель.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьЭлектронныйАдресПолучателя(Объект)
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Объект", Объект);
	Запрос.УстановитьПараметр("Тип"   , Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КонтактнаяИнформация.Представление
	|ИЗ
	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ
	|	КонтактнаяИнформация.Объект = &Объект
	|	И КонтактнаяИнформация.Тип = &Тип";
	
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
	
	Если ТаблицаЗапроса.Количество() > 0 Тогда
		Возврат ТаблицаЗапроса[0].Представление;
	КонецЕсли;
	
	Возврат "";
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// Установка кнопок заполнение ТЧ
	УстановитьКнопкиПодменюЗаполненияТЧ();
	
	
КонецПроцедуры // ПередОткрытием()

Процедура ПриОткрытии()
	
	Если НЕ Константы.ИспользованиеВстроенногоПочтовогоКлиента.Получить() Тогда
		ВосстановленноеЗначение = ВосстановитьЗначение("АдресЭлектроннойПочтыОтветовСтандартныйКлиент");
		ЭлементыФормы.ПанельАдресовЭлектроннойПочты.ТекущаяСтраница = ЭлементыФормы.ПанельАдресовЭлектроннойПочты.Страницы.ВнешнийПочтовыйКлиент;
	Иначе
		ЭлементыФормы.ПанельАдресовЭлектроннойПочты.ТекущаяСтраница = ЭлементыФормы.ПанельАдресовЭлектроннойПочты.Страницы.ВстроенныйПочтовыйКлиент;
	КонецЕсли; 
	
	Если ЭтоНовый() и НЕ ЗначениеЗаполнено(ТекстПисьма) тогда
		
		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект);
		
		ТекстПисьма = "Правила работы с анкетой:
		               |Прежде всего следует сохранить приложенные файлы у себя на диске.
					   |Для того, что бы заполнить анкету необходимо открыть файл с расширением .xml в программе Internet Explorer.
					   |Для этого достаточно дважды кликнуть по нему мышкой в проводнике.
					   |В появляющихся диалогах следует отвечать Да/Yes.
					   |
					   |Внимание! Для работы страницы необходимо, чтобы в Internet Explorer было разрешено 
					   |выполнение скриптов в файлах, открываемых на компьютере локально. 
					   |Если в Ваших настройках Internet Explorer эта опция выключена, 
					   |вверху страницы появится специальная информационная панель (Information Bar), 
					   |сообщающая о том, что активная часть содержимого страницы заблокирована. 
					   |Необходимо щелкнуть левой кнопкой мыши на этой панели и в выпадающем меню выбрать пункт, 
					   |разрешающий выполнение заблокированной части страницы (Allow Blocked Content).
					   |
					   |После того, как анкета заполнена можно отправить ее по почте, если доступна соответствующая кнопка.
					   |Если кнопка отправки недоступна, то следует отправить .xml файл, в который были сохранены ответы,
					   |по почте на требуемый электронный адрес.";
					   
	Иначе 
		// Установить доступность формы с учетом даты запрета редактирования	
		РаботаСДиалогами.УстановитьДоступностьФормыДляРедактирования(ЭтотОбъект, ЭтаФорма);
	КонецЕсли;
	
	ПриИзмененииАнкеты(Анкета);
	ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ПовторнаяРассылка.Доступность = НЕ ЗначениеЗаполнено(ПервичнаяРассылка);
	ЭлементыФормы.ОсновныеДействияФормы.Кнопки.РазделительПовторнойРассылки.Доступность = НЕ ЗначениеЗаполнено(ПервичнаяРассылка);
	
	// Вывести в заголовке формы статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	
	мПоследнееЗначениеЭлементаПоискаПоСтроке = ЭлектронныйАдресОтветов;
	мТекущаяДатаДокумента = Дата;
	
	// Установить активный реквизит.
	РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма);
	
	МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияНомера(ЭлементыФормы.ДействияФормы.Кнопки.Подменю);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);
	
	// Создать кнопки печати
	ФормированиеПечатныхФорм.СоздатьКнопкиПечати(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры

// Процедура - обработчик события "ПослеЗаписи" формы.
//
Процедура ПослеЗаписи()

	// Вывести в заголовке формы вид операции и статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
КонецПроцедуры // ПослеЗаписи()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

Процедура ОсновныеДействияФормыОтправить(Кнопка)
	
	ОтправитьАнкету();
	
КонецПроцедуры

Процедура ОсновныеДействияФормыПросмотрHTML(Кнопка)
	
	Если НЕ Константы.ИспользованиеВстроенногоПочтовогоКлиента.Получить() тогда
		Если НЕ ЗначениеЗаполнено(ЭлектронныйАдресОтветов) тогда
			Сообщить("Для того, что бы сформировать HTML анкету, необходимо указать e-mail ответов");
			Возврат;
		КонецЕсли;
	Иначе
		Если НЕ ЗначениеЗаполнено(ЭлектронныйАдресОтветовВстроенныйПочтовыйКлиент) тогда
			Сообщить("Для того, что бы сформировать HTML анкету, необходимо указать e-mail ответов");
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если Анкета.Адресная тогда
		Если ЭлементыФормы.Получатели.ТекущаяСтрока = Неопределено тогда
			Сообщить("Для того, что бы сформировать HTML анкету, необходимо выбрать получателя, для которого предназначена эта анкета");
			Возврат;
		КонецЕсли;
		ОпрашиваемоеЛицо = ЭлементыФормы.Получатели.ТекущаяСтрока.Объект;
		Если НЕ ЗначениеЗаполнено(ОпрашиваемоеЛицо) тогда
			Сообщить(НСтр("ru='Не выбран получатель анкеты! Анкета не сформирована.';uk='Не вибраний одержувач анкети! Анкета не сформована.'"));
			Возврат;
		КонецЕсли;
		АнкетаОбъект = Анкета.ПолучитьОбъект();
		Если НЕ Константы.ИспользованиеВстроенногоПочтовогоКлиента.Получить() тогда
			АнкетаОбъект.СформироватьВложение(ОпрашиваемоеЛицо, ЭлектронныйАдресОтветов, Ссылка,,,Истина);
		Иначе
			АнкетаОбъект.СформироватьВложение(ОпрашиваемоеЛицо, ЭлектронныйАдресОтветовВстроенныйПочтовыйКлиент, Ссылка,,,Истина);
		КонецЕсли;
	Иначе
		АнкетаОбъект = Анкета.ПолучитьОбъект();
		Если НЕ Константы.ИспользованиеВстроенногоПочтовогоКлиента.Получить() тогда
			АнкетаОбъект.СформироватьВложение(Неопределено, ЭлектронныйАдресОтветов, Ссылка,,,Истина);
		Иначе
			АнкетаОбъект.СформироватьВложение(Неопределено, ЭлектронныйАдресОтветовВстроенныйПочтовыйКлиент, Ссылка,,,Истина);
		КонецЕсли;
	КонецЕсли;
	ИмяФайла            = АнкетаОбъект.ПолучитьИмяФайлаАнкеты();
	файлПросмотра 		= Новый ТекстовыйДокумент;
	файлПросмотра.Прочитать(КаталогВременныхФайлов() + ИмяФайла);
	файлПросмотра.Записать(КаталогВременныхФайлов() + ИмяФайла);
	ЗапуститьПриложение(КаталогВременныхФайлов() + ИмяФайла);
	
КонецПроцедуры

Процедура ОсновныеДействияФормыПовторнаяРассылка(Кнопка)
	
	ФормаПовторнойРассылки							  = Документы.РассылкаАнкет.ПолучитьФормуНовогоДокумента();
	ПовторнаяРассылка								  = ФормаПовторнойРассылки.ЭлементыФормы;
	ПовторнаяРассылка.ПервичнаяРассылка.Значение	  = Ссылка;
	ПовторнаяРассылка.Анкета.Значение				  = Анкета;
	ПовторнаяРассылка.ЭлектронныйАдресОтветов.Значение		  = ЭлектронныйАдресОтветов;
	ПовторнаяРассылка.СУведомлениемОПолучении.Значение	  	  = СУведомлениемОПолучении;
	ПовторнаяРассылка.УчетнаяЗаписьДляОтправки.Значение  	  = УчетнаяЗаписьДляОтправки;
	ПовторнаяРассылка.Получатели.Значение.Загрузить(Получатели.Выгрузить());
	ПовторнаяРассылка.Вложения.Значение.Загрузить(Вложения.Выгрузить());
	ПовторнаяРассылка.ЭлектронныйАдресОтветовВстроенныйПочтовыйКлиент.Значение	  = ЭлектронныйАдресОтветовВстроенныйПочтовыйКлиент;
	ПовторнаяРассылка.ТекстПисьма.Значение										  = ТекстПисьма;
	ФормаПовторнойРассылки.Открыть();
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать".
// Открывает форму выбора печатных форм объекта.
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ОткрытьФормуВыбораПечатныхФормОбъекта(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры // ОсновныеДействияФормыПечать() 

// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
Процедура ОсновныеДействияФормыПечатьПоУмолчанию(Кнопка)

	УниверсальныеМеханизмы.НапечататьДокументПоУмолчанию(ЭтотОбъект);

КонецПроцедуры
 

Процедура КоманднаяПанель1Подбор(Кнопка)
	
	Если ЭлементыФормы.Получатели.Колонки.Получатель.ЭлементУправления.ОграничениеТипа.Типы().Количество() <> 0 тогда
		ТипПолучателя 		= ЭлементыФормы.Получатели.Колонки.Получатель.ЭлементУправления.ОграничениеТипа.Типы()[0];
		ФормаПодбора 		= Справочники[ОбщегоНазначения.ПустоеЗначениеТипа(ТипПолучателя).Метаданные().Имя].ПолучитьФорму("ФормаВыбора", ЭлементыФормы.Получатели);
		ФормаПодбора.ЗакрыватьПриВыборе = Ложь;
		ФормаПодбора.РежимВыбора		= Истина;
		ФормаПодбора.Открыть();
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

Процедура ДействияФормыРедактироватьНомер(Кнопка)
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
КонецПроцедуры
// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)

	РаботаСДиалогами.ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура выполняет открытие формы работы с категориями документа
//
Процедура ДействияФормыДействиеОткрытьКатегории(Кнопка)

	РаботаСДиалогами.ОткрытьКатегорииДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

// Процедура - обработчик события "ПриИзменении" поля ввода даты документа
//
Процедура ДатаПриИзменении(Элемент = Неопределено)

	РаботаСДиалогами.ПроверитьНомерДокумента(ДокументОбъект, мТекущаяДатаДокумента);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);

	мТекущаяДатаДокумента = Дата;

КонецПроцедуры // ДатаПриИзменении

Процедура АнкетаПриИзменении(Элемент)
	
	ПриИзмененииАнкеты(Элемент.Значение)
	
КонецПроцедуры

Процедура ПервичнаяРассылкаПриИзменении(Элемент)
	
	ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ПовторнаяРассылка.Доступность 			= НЕ ЗначениеЗаполнено(ПервичнаяРассылка);
	ЭлементыФормы.ОсновныеДействияФормы.Кнопки.РазделительПовторнойРассылки.Доступность = НЕ ЗначениеЗаполнено(ПервичнаяРассылка);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ Получатели

Процедура ПолучателиОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	НоваяСтрокаПолучателя = Элемент.Значение.Добавить();
	НоваяСтрокаПолучателя.Объект 		= ВыбранноеЗначение;
	НоваяСтрокаПолучателя.Получатель 	= ПолучитьЭлектронныйАдресПолучателя(ВыбранноеЗначение);
	
КонецПроцедуры

Процедура ПолучателиПриНачалеРедактирования(Элемент, НоваяСтрока)
	
	Если НоваяСтрока тогда
		Если Анкета.Адресная и Элемент.ТекущаяСтрока.Объект = Неопределено тогда
			Элемент.ТекущаяСтрока.Объект = ОбщегоНазначения.ПустоеЗначениеТипа(ЭлементыФормы.Получатели.Колонки.Получатель.ЭлементУправления.ОграничениеТипа.Типы()[0])
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПолучателиПолучательПриИзменении(Элемент)
	
	ЭлементыФормы.Получатели.ТекущаяСтрока.Получатель = ПолучитьЭлектронныйАдресПолучателя(ЭлементыФормы.Получатели.ТекущаяСтрока.Объект)
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ Вложения

Процедура ВложенияПриНачалеРедактирования(Элемент, НоваяСтрока)

	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);

	ДиалогОткрытияФайла.Заголовок      = НСтр("ru='Выберите файл вложения';uk='Виберіть файл вкладення'");
	ДиалогОткрытияФайла.ПолноеИмяФайла = "";
	ДиалогОткрытияФайла.Фильтр         = НСтр("ru='Все файлы  (*.*)|*.*';uk='Усі файли (*.*)|*.*'");
	ДиалогОткрытияФайла.ПредварительныйПросмотр = Истина;

	Если ДиалогОткрытияФайла.Выбрать() Тогда

		Попытка
			ВыбранныйФайл = Новый ДвоичныеДанные(ДиалогОткрытияФайла.ПолноеИмяФайла);
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;

		Элемент.ТекущаяСтрока.Вложение = Новый ХранилищеЗначения(ВыбранныйФайл);
		ФайлНаДиске = Новый Файл(ДиалогОткрытияФайла.ПолноеИмяФайла);

		Элемент.ТекущаяСтрока.ИмяФайла = ФайлНаДиске.Имя;

	Иначе
		Отказ = Истина;
		Возврат;
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

мОбработкаПоискаПоСтроке                 = Ложь;
мТекстПоискаПоСтроке                     = "";
мПоследнееЗначениеЭлементаПоискаПоСтроке = Неопределено;

Отказ 					= Ложь;
мСписокДоступныхЗаписей = УправлениеЭлектроннойПочтой.ПроверитьУчетныеЗаписиДляОтправкиПисем(глЗначениеПеременной("глТекущийПользователь"), Отказ, Ложь);

Если НЕ Отказ Тогда
	ЭлементыФормы.УчетнаяЗаписьДляОтправки.СписокВыбора = мСписокДоступныхЗаписей;
КонецЕсли;

Попытка
	ЕстьФизическиеЛица = Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.ФизическиеЛица = Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.ФизическиеЛица;
Исключение
	ЕстьФизическиеЛица = Ложь;
КонецПопытки;

Попытка
	ЕстьКонтрагенты = Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.Контрагенты = Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.Контрагенты;
Исключение
	ЕстьКонтрагенты = Ложь;
КонецПопытки;

Попытка
	ЕстьКонтактныеЛица = Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.КонтактныеЛица = Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.КонтактныеЛица;
Исключение
	ЕстьКонтактныеЛица = Ложь;
КонецПопытки;
