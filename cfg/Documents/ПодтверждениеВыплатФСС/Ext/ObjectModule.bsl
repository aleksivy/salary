Процедура АвтозаполнениеДокумента() Экспорт
	
	Если ЭтоНовый() Тогда
		#Если Клиент Тогда
		ТекстВопроса = НСтр("ru='Перед заполнением документ необходимо записать. Продолжить?';uk='Перед заповненням документ необхідно записати. Продовжити?'");
		Если Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да,) <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;
		#КонецЕсли
		Записать();
	КонецЕсли;
	

	Запрос = ПолучитьЗапросПоДокументам();
	
	Выплаты.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

Функция ПолучитьЗапросПоДокументам()
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ЗаявлениеРасчет", ЗаявлениеРасчет);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПодтверждениеВыплатФСС.Ссылка КАК ПроведенноеПодтверждение,
	|	ПодтверждениеВыплатФСС.ЗаявлениеРасчет КАК ЗаявлениеРасчет,
	|	ВложенныйЗапрос.Сотрудник КАК Сотрудник,
	|	ВложенныйЗапрос.Документ КАК ОплаченныйДокумент
	|ПОМЕСТИТЬ ВТПроведенныеПодтверждения	
	|ИЗ
	|	Документ.ПодтверждениеВыплатФСС КАК ПодтверждениеВыплатФСС
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ПодтверждениеВыплатФССВыплаты.Сотрудник КАК Сотрудник,
	|			ПодтверждениеВыплатФССВыплаты.Документ КАК Документ,
	|			ПодтверждениеВыплатФССВыплаты.Ссылка КАК Ссылка
	|		ИЗ
	|			Документ.ПодтверждениеВыплатФСС.Выплаты КАК ПодтверждениеВыплатФССВыплаты) КАК ВложенныйЗапрос
	|		ПО ПодтверждениеВыплатФСС.Ссылка = ВложенныйЗапрос.Ссылка
	|			И (ПодтверждениеВыплатФСС.Ссылка.Проведен)
	|ГДЕ
	|   ПодтверждениеВыплатФСС.Ссылка <> &Ссылка
	|	И ПодтверждениеВыплатФСС.ЗаявлениеРасчет = &ЗаявлениеРасчет
	|	И ПодтверждениеВыплатФСС.Ссылка.Проведен
	|ИНДЕКСИРОВАТЬ ПО
	|	ЗаявлениеРасчет,
	|	Сотрудник";
	Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаявлениеРасчетВФССБольничные.Документ КАК Документ,
	|	ЗаявлениеРасчетВФССБольничные.Сотрудник КАК Сотрудник,
	|	СУММА(ЗаявлениеРасчетВФССБольничные.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТДокументы
	|ИЗ
	|	Документ.ЗаявлениеРасчетВФСС.Больничные КАК ЗаявлениеРасчетВФССБольничные
	|ГДЕ
	|	ЗаявлениеРасчетВФССБольничные.Ссылка = &ЗаявлениеРасчет
	|	И ЗаявлениеРасчетВФССБольничные.Ссылка.Организация = &Организация
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаявлениеРасчетВФССБольничные.Документ,
	|	ЗаявлениеРасчетВФССБольничные.Сотрудник
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаявлениеРасчетВФССБольничныеНС.Документ,
	|	ЗаявлениеРасчетВФССБольничныеНС.Сотрудник,
	|	СУММА(ЗаявлениеРасчетВФССБольничныеНС.Сумма)
	|ИЗ
	|	Документ.ЗаявлениеРасчетВФСС.БольничныеНС КАК ЗаявлениеРасчетВФССБольничныеНС
	|ГДЕ
	|	ЗаявлениеРасчетВФССБольничныеНС.Ссылка = &ЗаявлениеРасчет
	|	И ЗаявлениеРасчетВФССБольничныеНС.Ссылка.Организация = &Организация
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаявлениеРасчетВФССБольничныеНС.Документ,
	|	ЗаявлениеРасчетВФССБольничныеНС.Сотрудник
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаявлениеРасчетВФССДекретные.Документ,
	|	ЗаявлениеРасчетВФССДекретные.Сотрудник,
	|	СУММА(ЗаявлениеРасчетВФССДекретные.Сумма)
	|ИЗ
	|	Документ.ЗаявлениеРасчетВФСС.Декретные КАК ЗаявлениеРасчетВФССДекретные
	|ГДЕ
	|	ЗаявлениеРасчетВФССДекретные.Ссылка = &ЗаявлениеРасчет
	|	И ЗаявлениеРасчетВФССДекретные.Ссылка.Организация = &Организация
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаявлениеРасчетВФССДекретные.Документ,
	|	ЗаявлениеРасчетВФССДекретные.Сотрудник
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаявлениеРасчетВФССПособияНаПогребение.Документ,
	|	ЗаявлениеРасчетВФССПособияНаПогребение.Сотрудник,
	|	СУММА(ЗаявлениеРасчетВФССПособияНаПогребение.Сумма)
	|ИЗ
	|	Документ.ЗаявлениеРасчетВФСС.ПособияНаПогребение КАК ЗаявлениеРасчетВФССПособияНаПогребение
	|ГДЕ
	|	ЗаявлениеРасчетВФССПособияНаПогребение.Ссылка = &ЗаявлениеРасчет
	|	И ЗаявлениеРасчетВФССПособияНаПогребение.Ссылка.Организация = &Организация
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаявлениеРасчетВФССПособияНаПогребение.Документ,
	|	ЗаявлениеРасчетВФССПособияНаПогребение.Сотрудник";
	Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Документы.Документ КАК Документ,
	|	Документы.Сотрудник КАК Сотрудник,
	|	Документы.Сумма КАК Сумма
	|ИЗ
	|	ВТДокументы КАК Документы
	|ГДЕ
	|	НЕ Документы.Документ В
	|				(ВЫБРАТЬ
	|					ВТПроведенныеПодтверждения.ОплаченныйДокумент КАК Документ
	|				ИЗ
	|					ВТПроведенныеПодтверждения КАК ВТПроведенныеПодтверждения)";
	Возврат Запрос;
	
КонецФункции

Функция СформироватьЗапросДляПечати()
	Запрос = Новый Запрос;
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПодтверждениеВыплатФССВыплаты.НомерСтроки КАК НомерСтроки,
	|	ПодтверждениеВыплатФССВыплаты.Сотрудник КАК Сотрудник,
	|	ПодтверждениеВыплатФССВыплаты.Документ КАК Документ,
	|	ПодтверждениеВыплатФССВыплаты.ДатаВыплаты КАК ДатаВыплаты,
	|	ПодтверждениеВыплатФССВыплаты.Сумма КАК Сумма,
	|	ВЫБОР
	|		КОГДА ПодтверждениеВыплатФССВыплаты.Документ ССЫЛКА Документ.НачислениеПоБольничномуЛисту
	|			ТОГДА ПодтверждениеВыплатФССВыплаты.Документ.СерияБольничногоЛиста
	|		ИНАЧЕ ЕСТЬNULL(НачислениеЕдиновременныхПособийЗаСчетФССНачисления.СвидетельствоСерия,"""")
	|	КОНЕЦ КАК Серия,
	|	ВЫБОР
	|		КОГДА ПодтверждениеВыплатФССВыплаты.Документ ССЫЛКА Документ.НачислениеПоБольничномуЛисту
	|			ТОГДА ПодтверждениеВыплатФССВыплаты.Документ.НомерБольничногоЛиста
	|		ИНАЧЕ ЕСТЬNULL(НачислениеЕдиновременныхПособийЗаСчетФССНачисления.СвидетельствоНомер,"""")
	|	КОНЕЦ КАК Номер,
	|	ПодтверждениеВыплатФССВыплаты.Сотрудник.Физлицо.КодПоДРФО КАК КодПоДРФО,
	|	ПодтверждениеВыплатФССВыплаты.Сотрудник.Физлицо КАК Физлицо
	|ПОМЕСТИТЬ ВТВыплаты
	|ИЗ
	|	Документ.ПодтверждениеВыплатФСС.Выплаты КАК ПодтверждениеВыплатФССВыплаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.НачислениеЕдиновременныхПособийЗаСчетФСС.Начисления КАК НачислениеЕдиновременныхПособийЗаСчетФССНачисления
	|		ПО ПодтверждениеВыплатФССВыплаты.Документ.Ссылка = НачислениеЕдиновременныхПособийЗаСчетФССНачисления.Ссылка
	|			И ПодтверждениеВыплатФССВыплаты.Сотрудник = НачислениеЕдиновременныхПособийЗаСчетФССНачисления.Сотрудник
	|ГДЕ
	|	ПодтверждениеВыплатФССВыплаты.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ,
	|	Сотрудник";
	Запрос.Выполнить();
	
	Запрос.УстановитьПараметр("ДатаДокумента", Дата);
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ФИОФизЛицСрезПоследних.ФизЛицо 	КАК Физлицо,
	|	ФИОФизЛицСрезПоследних.Фамилия	 КАК Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя 		КАК Имя,
	|	ФИОФизЛицСрезПоследних.Отчество КАК Отчество
	|ПОМЕСТИТЬ ВТФИО
	|ИЗ
	|	РегистрСведений.ФИОФизЛиц.СрезПоследних(
	|			&ДатаДокумента,
	|			Физлицо В
	|				(ВЫБРАТЬ
	|					ВТВыплаты.Сотрудник.Физлицо
	|				ИЗ
	|					ВТВыплаты КАК ВТВыплаты)) КАК ФИОФизЛицСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо";
	Запрос.Выполнить();
	Запрос.Текст = "ВЫБРАТЬ
	|	Выплаты.НомерСтроки КАК НомерСтроки,
	|	Выплаты.Документ КАК Документ,
	|	Выплаты.ДатаВыплаты КАК ДатаВыплаты,
	|	Выплаты.Сумма КАК Сумма,
	|	Выплаты.Серия КАК Серия,
	|	Выплаты.Номер КАК Номер,
	|	Выплаты.КодПоДРФО КАК КодПоДРФО,
	|	ФИО.Фамилия КАК Фамилия,
	|	ФИО.Имя КАК Имя,
	|	ФИО.Отчество КАК Отчество
	|ИЗ
	|	ВТВыплаты КАК Выплаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИО КАК ФИО
	|		ПО Выплаты.Физлицо = ФИО.Физлицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";

	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Возврат Выборка;
КонецФункции


#Если Клиент Тогда

Функция ПечатьПриложение2() Экспорт
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	Макет = ПолучитьМакет("Уведомление");
	
	//Шапка 
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапка.Параметры.Организация = Организация.НаименованиеПолное;
	
	СписокПоказателей = Новый СписокЗначений;
	СписокПоказателей.Добавить("","КодПоЕДРПОУ");	
	ОбластьШапка.Параметры.КодПоЕДРПОУ = РегламентированнаяОтчетность.ПолучитьСведенияОбОрганизации(Организация, Дата, СписокПоказателей).КодПоЕДРПОУ;
	
	//Получим данные из РС КонтактнаяИнформация для адреса организации
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КонтактнаяИнформация.Представление КАК Адрес
	|ИЗ
	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ
	|	КонтактнаяИнформация.Объект = &Объект
	|	И КонтактнаяИнформация.Тип = &Тип
	|	И КонтактнаяИнформация.Вид = &Вид";
	
	Запрос.УстановитьПараметр("Объект", Организация);
	Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.Адрес);
	Запрос.УстановитьПараметр("Вид", Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		ОбластьШапка.Параметры.Адрес = Выборка.Адрес;	 
	КонецЕсли;
	
	//Получим данные из РС КонтактнаяИнформация для телефона организации
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КонтактнаяИнформация.Представление КАК Телефон
	|ИЗ
	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ
	|	КонтактнаяИнформация.Объект = &Объект
	|	И КонтактнаяИнформация.Тип = &Тип
	|	И КонтактнаяИнформация.Вид = &Вид";
	
	Запрос.УстановитьПараметр("Объект", Организация);
	Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.Телефон);
	Запрос.УстановитьПараметр("Вид", Справочники.ВидыКонтактнойИнформации.ТелефонОрганизации);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		ОбластьШапка.Параметры.Телефон = Выборка.Телефон;	 
	КонецЕсли;
	
	ТабДокумент.Вывести(ОбластьШапка);
	//Заголовок
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ТабДокумент.Вывести(ОбластьЗаголовок);	
	
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	
	Выборка = СформироватьЗапросДляПечати();
	Пока Выборка.Следующий() Цикл
		ОбластьСтрока.Параметры.Заполнить(Выборка);	
		ТабДокумент.Вывести(ОбластьСтрока);
	КонецЦикла;	 
	
	ОбластьПодпись = Макет.ПолучитьОбласть("Подпись");
	
	ЧислоДокумента                          = Формат(Дата,"ДФ='дд';Л=uk_UA");
    ДатаДокумента                           = Формат(Дата,"ДФ='дд ММММ ггггр.';Л=uk_UA");
	ДатаДокументаБезЧисла                   = Прав(ДатаДокумента, СтрДлина(ДатаДокумента) - 2);
	ОбластьПодпись.Параметры.ДатаДокумента 	= ЧислоДокумента + ДатаДокументаБезЧисла;

	Руководители = ФормированиеПечатныхФорм.ОтветственныеЛица(Организация, Дата);

	Если ЗначениеЗаполнено(Руководители.Руководитель) Тогда
		ОбластьПодпись.Параметры.ФИОРуководителя = Руководители.РуководительФИО.Фамилия	    + " " + Руководители.РуководительФИО.Имя	 + " " + Руководители.РуководительФИО.Отчество;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Руководители.ГлавныйБухгалтер) Тогда
		ОбластьПодпись.Параметры.ФИОБухгалтера   = Руководители.ГлавныйБухгалтерФИО.Фамилия + " " + Руководители.ГлавныйБухгалтерФИО.Имя + " " + Руководители.ГлавныйБухгалтерФИО.Отчество;
	КонецЕсли;

	ТабДокумент.Вывести(ОбластьПодпись);
	
	Возврат ТабДокумент;
	
КонецФункции

Функция Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт
	
	// Получить экземпляр документа на печать
	Если  ИмяМакета = "Уведомление" Тогда
		ТабДокумент = ПечатьПриложение2()
	КонецЕсли;
	
	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер,ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект,НСтр("ru='Подтверждение выплат ФСС';uk='Підтвердження виплат ФСС'")));
	
КонецФункции	 

Процедура ВыгрузитьВоФРЕДО() Экспорт
	
	ВерсияОтчета = "01";
	
	Если глМенеджерЗвит1С = Неопределено Тогда
	     глПодключитьМенеджерЗвит1С();
	КонецЕсли;
	
	Если глМенеджерЗвит1С = Неопределено Тогда
		Предупреждение("Не удалось подключиться к FREDO, выгрузка не выполнена!");
		Возврат;
	КонецЕсли;
	
	Если НЕ глМенеджерЗвит1С.ЗапуситьЗвит1С(Ложь, Организация) Тогда
		Предупреждение("Не удалось подключиться к FREDO, выгрузка не выполнена!");
		Возврат;
	КонецЕсли;
	
	глМенеджерЗвит1С.Компонента.Bring1CToFront();
	
	СписокПоказателей = Новый СписокЗначений;
	СписокПоказателей.Добавить("","КодПоЕДРПОУ");	
	СписокПоказателей.Добавить("","НомерФССУ");
	КодПоЕДРПОУ = РегламентированнаяОтчетность.ПолучитьСведенияОбОрганизации(Организация, Дата, СписокПоказателей).КодПоЕДРПОУ;
	КодФСС 		= РегламентированнаяОтчетность.ПолучитьСведенияОбОрганизации(Организация, Дата, СписокПоказателей).НомерФССУ;
	
	// Создаем основной документ C11002..
	ТипПериода	   = 0; 
	НомерВПериоде  = Месяц(ПериодРегистрации);
	Год			   = Год(ПериодРегистрации);
	ИмяСхемыЗвит1С = "C11002"+ВерсияОтчета;
	
	ИдГоловнойОтчет = СтрЗаменить("" + Ссылка.УникальныйИдентификатор(), "-", "");
	Попытка
		ГоловнойОтчет = глМенеджерЗвит1С.Компонента.OpenCreateReport(КодПоЕДРПОУ, ИмяСхемыЗвит1С, ТипПериода, НомерВПериоде, Год, ИдГоловнойОтчет);
	Исключение
	    Сообщить(НСтр("ru='Ошибка создания отчета ';uk='Помилка створення звіту '") + ИмяСхемыЗвит1С + ": " + ОписаниеОшибки(), СтатусСообщения.Важное);
		Сообщить(НСтр("ru='Формирование отчета прервано!';uk='Формування звіту перервано!'"), СтатусСообщения.Важное);
		Возврат;
	КонецПопытки;
	
	ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "FIRM_NAME",     Организация.НаименованиеПолное);
	ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "FIRM_EDRPOU",   КодПоЕДРПОУ);
	ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "CODE_FSSU",     КодФСС);

	//Получим данные из РС КонтактнаяИнформация для адреса организации
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КонтактнаяИнформация.Представление КАК Адрес
	|ИЗ
	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ
	|	КонтактнаяИнформация.Объект = &Объект
	|	И КонтактнаяИнформация.Тип = &Тип
	|	И КонтактнаяИнформация.Вид = &Вид";
	
	Запрос.УстановитьПараметр("Объект", Организация);
	Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.Адрес);
	Запрос.УстановитьПараметр("Вид", Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
							
	Если Выборка.Следующий() Тогда
		ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "FIRM_ADR", Выборка.Адрес);
	КонецЕсли;
							
	//Получим данные из РС КонтактнаяИнформация для телефона организации
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КонтактнаяИнформация.Представление КАК Телефон
	|ИЗ
	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ
	|	КонтактнаяИнформация.Объект = &Объект
	|	И КонтактнаяИнформация.Тип = &Тип
	|	И КонтактнаяИнформация.Вид = &Вид";
	
	Запрос.УстановитьПараметр("Объект", Организация);
	Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.Телефон);
	Запрос.УстановитьПараметр("Вид", Справочники.ВидыКонтактнойИнформации.ТелефонОрганизации);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Телефон = ФормированиеПечатныхФорм.ПолучитьТелефонДляНалоговойНакладной(Выборка.Телефон);
		ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "FIRM_TELORG", Телефон);
	КонецЕсли;
							
	Выборка = СформироватьЗапросДляПечати();
	Пока Выборка.Следующий() Цикл
		ДобавитьСтрокуВОтчетЗвит1С(ГоловнойОтчет, "TAB1");
		
		ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB1", "TAB1_A1", Выборка.НомерСтроки);
		ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB1", "TAB1_A2", Выборка.Фамилия);
		ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB1", "TAB1_A3", Выборка.Имя);
		ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB1", "TAB1_A4", Выборка.Отчество);
		ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB1", "TAB1_A5", Выборка.КодПоДРФО);
		ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB1", "TAB1_A6", Выборка.Серия);
		ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB1", "TAB1_A7", Выборка.Номер);
		ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB1", "TAB1_A8", Выборка.ДатаВыплаты);
		ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB1", "TAB1_A9", Выборка.Сумма);
	КонецЦикла;	 
	
	ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "REP_DATE", Дата);	
	
	Руководители = ФормированиеПечатныхФорм.ОтветственныеЛица(Организация, Дата);

	Если ЗначениеЗаполнено(Руководители.Руководитель) Тогда
		ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "FIRM_RUK", Руководители.РуководительФИО.Фамилия + " " + Руководители.РуководительФИО.Имя	 + " " + Руководители.РуководительФИО.Отчество);	
	КонецЕсли;

	Если ЗначениеЗаполнено(Руководители.ГлавныйБухгалтер) Тогда
		ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "FIRM_BUH", Руководители.ГлавныйБухгалтерФИО.Фамилия + " " + Руководители.ГлавныйБухгалтерФИО.Имя + " " + Руководители.ГлавныйБухгалтерФИО.Отчество);	
	КонецЕсли;

	глМенеджерЗвит1С.Компонента.SaveReportEx(ГоловнойОтчет, 1);
	
	Предупреждение("Уведомление успешно выгружено во FREDO!");
	
	глМенеджерЗвит1С.Компонента.BringZvitToFront();
	
КонецПроцедуры

Процедура ДобавитьПоказательВОтчетЗвит1С(Отчет, ИмяТаблицыЗвит1С = "", ИмяЗвит1С, Значение, ЗаписыватьПустое = Ложь)
	
	Если НЕ ЗаписыватьПустое И НЕ ЗначениеЗаполнено(Значение) Тогда
		Возврат;	
	КонецЕсли;
	
	Попытка
		Отчет.SetValue(ИмяТаблицыЗвит1С, ИмяЗвит1С, Значение); 
	Исключение
		Если глМенеджерЗвит1С.ФлагОтладки Тогда
			Сообщить("FREDO. Ошибка установки показателя (схема """+Отчет.CharCode+?(ПустаяСтрока(ИмяТаблицыЗвит1С),"",НСтр("ru='"", имя таблицы ""';uk='"", ім''я таблиці ""'")+ИмяТаблицыЗвит1С)+НСтр("ru='"", поле ""';uk='"", поле ""'")+ИмяЗвит1С+НСтр("ru='"", тип значения ""';uk='"", тип значення ""'")+ТипЗнч(Значение)+НСтр("ru='"", значение ""';uk='"", значення ""'")+ Значение+""")", СтатусСообщения.Внимание);
		КонецЕсли;
	КонецПопытки;
		
КонецПроцедуры

Процедура ДобавитьСтрокуВОтчетЗвит1С(Отчет, ИмяТаблицыЗвит1С)

	Отчет.NewRow(ИмяТаблицыЗвит1С);

КонецПроцедуры

#КонецЕсли

// Возвращает доступные варианты печати документа
//
// Вовращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	 Возврат Новый Структура("Уведомление", НСтр("ru='Уведомление';uk='Повідомлення'"));
	
 КонецФункции // ПолучитьСтруктуруПечатныхФорм()

Процедура ОбработкаЗаполнения(Основание)
	Если Не Основание = Неопределено И ТипЗнч(Основание) = Тип("Структура") Тогда
		Если Основание.Свойство("Организация") = Истина Тогда
			Организация = Основание.Организация;
		КонецЕсли;	
		Дата = ТекущаяДата();
	ИначеЕсли Не Основание = Неопределено Тогда
		Дата = ТекущаяДата();
		ПериодРегистрации = Основание.ПериодРегистрации;
		Организация = Основание.Организация;
		ЗаявлениеРасчет = Основание;
		Запрос = ПолучитьЗапросПоДокументам();
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = Выплаты.Добавить();
			НоваяСтрока.Документ = Выборка.Документ;
			НоваяСтрока.Сотрудник = Выборка.Сотрудник;
			НоваяСтрока.Сумма = Выборка.Сумма;
			Записать();
		КонецЦикла;
		Ответственный = Основание.Ответственный;
	КонецЕсли;		
	
КонецПроцедуры
 

