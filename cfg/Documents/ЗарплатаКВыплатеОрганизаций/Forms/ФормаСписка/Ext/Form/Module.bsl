// Процедура вызывается при нажатии кнопки "Печать" командной панели формы,
// вызывает печать по умолчанию для формы документа.
//
Процедура ДействияФормыДействиеПечать(Кнопка)

	Если ЭлементыФормы.Список.ТекущаяСтрока <> Неопределено Тогда

		Попытка
			УниверсальныеМеханизмы.НапечататьДокументИзФормыСписка(ЭлементыФормы.Список.ТекущаяСтрока.ПолучитьОбъект())
		Исключение
		КонецПопытки
			
	КонецЕсли;

КонецПроцедуры // ОсновныеДействияФормыДействиеПечать()


// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	//Если ЭтаФорма.ЭлементыФормы.Список.ТекущаяСтрока = Неопределено тогда
	//	Возврат
	//КонецЕсли;

	РаботаСДиалогами.НапечататьДвиженияДокумента(ЭлементыФормы.Список.ТекущиеДанные.Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

// Процедура вызывается при выборе пункта подменю "Структура подчиненности" меню "Перейти".
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	//Если ЭлементыФормы.Список.ТекущиеДанные = Неопределено тогда
	//	Возврат
	//КонецЕсли;
	
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(ЭлементыФормы.Список.ТекущиеДанные.Ссылка);
	
КонецПроцедуры

Процедура СписокПередОтменойПроведения(Элемент, Отказ)
			
	ЗапросПоПлатежнымДокументам = Новый Запрос;
	ЗапросПоПлатежнымДокументам.УстановитьПараметр("Ведомость", Элемент.ТекущиеДанные.Ссылка);
	ЗапросПоПлатежнымДокументам.УстановитьПараметр("ВыплатаРКО", Перечисления.ВидыОперацийРКО.ВыплатаЗаработнойПлатыПоВедомостям);
	ЗапросПоПлатежнымДокументам.УстановитьПараметр("ВыплатаРКОРаботнику", Перечисления.ВидыОперацийРКО.ВыплатаЗаработнойПлатыРаботнику);
	ЗапросПоПлатежнымДокументам.УстановитьПараметр("ВыплатаППИ", Перечисления.ВидыОперацийППИсходящее.ПеречислениеЗП);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СУММА(ВложенныйЗапрос.Ведомость) КАК КоличествоДокументов
	|ИЗ
	|	(ВЫБРАТЬ
	|		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РасходныйКассовыйОрдерВыплатаЗаработнойПлаты.Ведомость) КАК Ведомость
	|	ИЗ
	|		Документ.РасходныйКассовыйОрдер.ВыплатаЗаработнойПлаты КАК РасходныйКассовыйОрдерВыплатаЗаработнойПлаты
	|	
	|	ГДЕ
	|		РасходныйКассовыйОрдерВыплатаЗаработнойПлаты.Ведомость = &Ведомость И
	|		(РасходныйКассовыйОрдерВыплатаЗаработнойПлаты.Ссылка.Проведен)
	|		И РасходныйКассовыйОрдерВыплатаЗаработнойПлаты.Ссылка.ВидОперации = &ВыплатаРКО
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ
	|		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РКОРаботнику.ДокументОснование)
	|	ИЗ
	|		Документ.РасходныйКассовыйОрдер КАК РКОРаботнику
	|	ГДЕ
	|		РКОРаботнику.ДокументОснование = &Ведомость
	|		И РКОРаботнику.Проведен
	|		И РКОРаботнику.ВидОперации =&ВыплатаРКОРаботнику
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПлатежноеПоручениеИсходящее.Ведомость)
	|	ИЗ
	|		Документ.ПлатежноеПоручениеИсходящее.ВыплатаЗаработнойПлаты КАК ПлатежноеПоручениеИсходящее
	|	
	|	ГДЕ
	|		ПлатежноеПоручениеИсходящее.Ведомость = &Ведомость И
	|		(ПлатежноеПоручениеИсходящее.Ссылка.Проведен)
	|		И ПлатежноеПоручениеИсходящее.Ссылка.ВидОперации = &ВыплатаППИ) КАК ВложенныйЗапрос";
	
	ЗапросПоПлатежнымДокументам.Текст = ТекстЗапроса;
	
	РезультатЗапроса = ЗапросПоПлатежнымДокументам.Выполнить().Выбрать();
	
	Если РезультатЗапроса.Следующий() Тогда
		Если РезультатЗапроса.КоличествоДокументов > 0 Тогда
			Отказ = Истина;
			ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru='Имеются связанные платежные документы';uk='Наявні пов`язані платіжні документи'"),,,СтатусСообщения.Информация);
		КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры
