////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

// Хранит текущую дату документа - для проверки перехода документа в другой период установки номера
Перем мТекущаяДатаДокумента; 

// Хранит дерево кнопок подменю заполнение ТЧ
Перем мКнопкиЗаполненияТЧ;




////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ

// Процедура устанавливает подменю "Заполнить" в командных панелях ТЧ документа при необходимости
//
Процедура УстановитьКнопкиПодменюЗаполненияТЧ();
	
	мКнопкиЗаполненияТЧ = УниверсальныеМеханизмы.ПолучитьДеревоКнопокЗаполненияТабличныхЧастей(Ссылка,Новый Действие("НажатиеНаДополнительнуюКнопкуЗаполненияТЧ"));
	
	СоответствиеТЧ = Новый Соответствие;
	
	УниверсальныеМеханизмы.СформироватьПодменюЗаполненияТЧПоДеревуКнопок(мКнопкиЗаполненияТЧ,СоответствиеТЧ);
	
КонецПроцедуры


// Формирует закладки формы с текущими движениями сторнируемого документа.
//
Процедура ОбновитьДвиженияДокумента(ВзятьДвиженияИзДокументаОснования = Истина)

	// удаляем все страницы панели движений
	ЭлементыФормы.ДвиженияДокумента.Видимость = Ложь;
	ЭлементыФормы.ДвиженияДокумента.Страницы.Очистить();

	Если НЕ ЗначениеЗаполнено(СторнируемыйДокумент) Тогда

		// закладки не показываем
 		ЭлементыФормы.ДвиженияДокумента.ОтображениеЗакладок = ОтображениеЗакладок.НеИспользовать; 
		
		Надпись = ЭлементыФормы.Добавить(Тип("Надпись"), "Надпись", Истина, ЭлементыФормы.ДвиженияДокумента);

		Надпись.Верх   = 0;
		Надпись.Лево   = 0;
		Надпись.Ширина = ЭлементыФормы.ДвиженияДокумента.Ширина;
		Надпись.Высота = ЭлементыФормы.ДвиженияДокумента.Высота;

		// установка привязок
		Надпись.УстановитьПривязку(ГраницаЭлементаУправления.Низ,   ЭлементыФормы.ДвиженияДокумента, ГраницаЭлементаУправления.Низ);
		Надпись.УстановитьПривязку(ГраницаЭлементаУправления.Право, ЭлементыФормы.ДвиженияДокумента, ГраницаЭлементаУправления.Право);

		Надпись.Значение = НСтр("ru='Необходимо выбрать документ для сторнирования. Для этого заполните реквизит Документ';uk='Необхідно вибрати документ для сторнування. Для цього заповніть реквізит Документ'");
		Надпись.ВертикальноеПоложение = ВертикальноеПоложение.Верх;

		ЭлементыФормы.ДвиженияДокумента.Видимость = Истина;

		Для каждого Движение Из Движения Цикл
		    Движение.Очистить()
		КонецЦикла; 
		
		Возврат;

	КонецЕсли;

	МетаданныеДокумет = СторнируемыйДокумент.Метаданные();

	// закладки показываем
	ЭлементыФормы.ДвиженияДокумента.ОтображениеЗакладок = ОтображениеЗакладок.Сверху;

	Для Каждого МетаданныеРегистр Из МетаданныеДокумет.Движения Цикл

		// если документ-сторно не может иметь таких движений - это не сторнируемый регистр
		Если не Метаданные().Движения.Содержит(МетаданныеРегистр) Тогда
			Продолжить;
		КонецЕсли;

		НазваниеДвижений = МетаданныеРегистр.Представление();
		ИмяДвижений      = МетаданныеРегистр.Имя;

		// новая страница
		СтраницаДвижений = ЭлементыФормы.ДвиженияДокумента.Страницы.Добавить("Страница"+ИмяДвижений, НазваниеДвижений);

		// новое табличное поле
		ЭлементыФормы.ДвиженияДокумента.ТекущаяСтраница = СтраницаДвижений;

		ПолеДвижений = ЭлементыФормы.Добавить(Тип("ТабличноеПоле"), ИмяДвижений, Истина, ЭлементыФормы.ДвиженияДокумента);

		ПолеДвижений.Верх   = 6;
		ПолеДвижений.Лево   = 6;
		ПолеДвижений.Ширина = ЭлементыФормы.ДвиженияДокумента.Ширина - 12 - 2;
		ПолеДвижений.Высота = ЭлементыФормы.ДвиженияДокумента.Высота - 12 - 20;

		// установка привязок
		ПолеДвижений.УстановитьПривязку(ГраницаЭлементаУправления.Низ,   ЭлементыФормы.ДвиженияДокумента, ГраницаЭлементаУправления.Низ);
		ПолеДвижений.УстановитьПривязку(ГраницаЭлементаУправления.Право, ЭлементыФормы.ДвиженияДокумента, ГраницаЭлементаУправления.Право);

		ПолеДвижений.Данные = "Движения." + ИмяДвижений;

		Если ВзятьДвиженияИзДокументаОснования Тогда
			Движения[ИмяДвижений].Очистить();
			ЗаполнитьНаборЗаписей(Движения[ИмяДвижений], МетаданныеРегистр);
		Иначе	
			Движения[ИмяДвижений].Прочитать()
		КонецЕсли;

		ПолеДвижений.СоздатьКолонки();

	КонецЦикла;

	ЭлементыФормы.ДвиженияДокумента.ТекущаяСтраница = ЭлементыФормы.ДвиженияДокумента.Страницы[0];

	ЭлементыФормы.ДвиженияДокумента.Страницы.Удалить(0);
	ЭлементыФормы.ДвиженияДокумента.Видимость = Истина;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// Установка кнопок заполнение ТЧ
	УстановитьКнопкиПодменюЗаполненияТЧ();
	
	
КонецПроцедуры // ПередОткрытием()

// Процедура - обработчик события "ПриОткрытии" формы.
Процедура ПриОткрытии()

	Если ЭтоНовый() Тогда // проверить объект на то, что он еще не внесен в ИБ

		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект);
	Иначе 
		// Установить доступность формы с учетом даты запрета редактирования	
		РаботаСДиалогами.УстановитьДоступностьФормыДляРедактирования(ЭтотОбъект, ЭтаФорма);
	КонецЕсли;

	// Вывести в заголовке формы статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);

	// Запомнить текущие значения реквизитов формы.
	мТекущаяДатаДокумента = Дата;

	ОбновитьДвиженияДокумента(ЭтоНовый());

	
	МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияНомера(ЭлементыФормы.ДействияФормы.Кнопки.Подменю);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);
	
	// Создать кнопки печати
	ФормированиеПечатныхФорм.СоздатьКнопкиПечати(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры

// Процедура - обработчик события "ПослеЗаписи" формы.
Процедура ПослеЗаписи()

	// Вывести в заголовке формы статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);

	// оповестим отменяемые документы
	Оповестить("ОбновитьФорму", Новый Структура("Команда, Объект","ДоступностьОтмененногоДокумента", ?(ЗначениеЗаполнено(СторнируемыйДокумент),СторнируемыйДокумент,Неопределено)), Ссылка);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

// Процедура - обработчик события "ПриИзменении" поля ввода даты документа
//
Процедура ДатаПриИзменении(Элемент = Неопределено)

	РаботаСДиалогами.ПроверитьНомерДокумента(ДокументОбъект, мТекущаяДатаДокумента);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);

	мТекущаяДатаДокумента = Дата;

КонецПроцедуры // ДатаПриИзменении

// Процедура - обработчик события "ПриИзменении" поля ввода Сторнируемый документ
//
Процедура СторнируемыйДокументПриИзменении(Элемент)

	ОбновитьДвиженияДокумента();

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

Процедура ДействияФормыРедактироватьНомер(Кнопка)
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
КонецПроцедуры
// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)

	РаботаСДиалогами.ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура выполняет открытие формы работы с категориями документа
//
Процедура ДействияФормыДействиеОткрытьКатегории(Кнопка)

	РаботаСДиалогами.ОткрытьКатегорииДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	РаботаСДиалогами.НапечататьДвиженияДокумента(Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()
                    
// Процедура вызова структуры подчиненности документа
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
КонецПроцедуры

// Процедура - обработчик нажатия на любую из дополнительных кнопок по заполнению ТЧ
//
Процедура НажатиеНаДополнительнуюКнопкуЗаполненияТЧ(Кнопка)
	
	УниверсальныеМеханизмы.ОбработатьНажатиеНаДополнительнуюКнопкуЗаполненияТЧ(мКнопкиЗаполненияТЧ.Строки.Найти(Кнопка.Имя,"Имя",Истина),ЭтотОбъект);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать".
// Открывает форму выбора печатных форм объекта.
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ОткрытьФормуВыбораПечатныхФормОбъекта(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры // ОсновныеДействияФормыПечать() 

// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
Процедура ОсновныеДействияФормыПечатьПоУмолчанию(Кнопка)

	УниверсальныеМеханизмы.НапечататьДокументПоУмолчанию(ЭтотОбъект);

КонецПроцедуры
 

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

 

