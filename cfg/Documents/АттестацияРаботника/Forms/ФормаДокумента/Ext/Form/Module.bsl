////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мТекущаяДатаДокумента; // Хранит последнюю установленную дату документа - для проверки перехода документа в другой период

// Хранит дерево макетов печатных форм
Перем мДеревоМакетов;

// Хранит элемент управления подменю печати
Перем мПодменюПечати;

// Хранит элемент управления кнопку печать по умолчанию
Перем мПечатьПоУмолчанию;

// Хранит дерево кнопок подменю заполнение ТЧ
Перем мКнопкиЗаполненияТЧ;



////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура устанавливает подменю "Заполнить" в командных панелях ТЧ документа при необходимости
//
Процедура УстановитьКнопкиПодменюЗаполненияТЧ();
   	мКнопкиЗаполненияТЧ = УниверсальныеМеханизмы.ПолучитьДеревоКнопокЗаполненияТабличныхЧастей(Ссылка,Новый Действие("НажатиеНаДополнительнуюКнопкуЗаполненияТЧ"));

	СоответствиеТЧ = Новый Соответствие;
	СоответствиеТЧ.Вставить(ЭлементыФормы.СписокКомпетенций,ЭлементыФормы.КоманднаяПанельОценок.Кнопки.Заполнить);
	
	УниверсальныеМеханизмы.СформироватьПодменюЗаполненияТЧПоДеревуКнопок(мКнопкиЗаполненияТЧ,СоответствиеТЧ);
	
КонецПроцедуры

// Процедура устанавливает подменю "Печать" и кнопку "Печать по умолчанию" при необходимости
//
Процедура УстановитьКнопкиПечати()
	
	ФормированиеПечатныхФорм.СоздатьКнопкиПечати(ЭтотОбъект, ЭтаФорма);	
	
КонецПроцедуры

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// Установка кнопок печати
	УстановитьКнопкиПечати();
	
	// Установка кнопок заполнение ТЧ
	УстановитьКнопкиПодменюЗаполненияТЧ();
	
	
КонецПроцедуры // ПередОткрытием()

// Процедура - обработчик события "ПриОткрытии" формы
//
Процедура ПриОткрытии()
	
	Если ЭтоНовый() Тогда
		
		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект);
	Иначе 
		// Установить доступность формы с учетом даты запрета редактирования	
		РаботаСДиалогами.УстановитьДоступностьФормыДляРедактирования(ЭтотОбъект, ЭтаФорма);
	КонецЕсли;
	
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);
	
	// Вывести в заголовке формы вид операции и статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);

	// Запомнить текущие значения реквизитов формы.
	мТекущаяДатаДокумента        = Дата;

	// Установить активный реквизит.
	//Если Не РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма) Тогда
	//	ТекущийЭлемент = ЭлементыФормы.СписокКомпетенций;
	//КонецЕсли;	
	РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры // ПриОткрытии

// Процедура - обработчик события "ПослеЗаписи" формы.
//
Процедура ПослеЗаписи()

	// Установка кнопок печати
	УстановитьКнопкиПечати();
	// Вывести в заголовке формы статус документа (новый, не проведен, проведен)
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
КонецПроцедуры // ПослеЗаписи

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	РаботаСДиалогами.НапечататьДвиженияДокумента(Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

// Процедура вызова структуры подчиненности документа
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
КонецПроцедуры

// Процедура вызывается при нажатии кнопки "Анкета" командной панели "КоманднаяПанельОценок".
// Процедура отрабатывает показ типовой анкетыдля оценки компетенции.
Процедура КоманднаяПанельОценокОткрытьАнкету(Кнопка)
	
	Если ЭлементыФормы.СписокКомпетенций.ТекущаяСтрока = неопределено тогда
		Возврат
	КонецЕсли;
	
	
	ТиповаяАнкета = ЭлементыФормы.СписокКомпетенций.ТекущаяСтрока.Компетенция.ТиповаяАнкета;
	
	Если НЕ ЗначениеЗаполнено(ТиповаяАнкета) тогда
		Ответ = Вопрос (НСтр("ru='Типовая анкета не выбрана в справочнике компетенций. Открыть компетенцию?';uk='Типова анкета не обрана в довіднику компетенцій. Відкрити компетенцію?'"), РежимДиалогаВопрос.ДаНет);	
		
		Если Ответ = КодВозвратаДиалога.Да Тогда
			ЭлементыФормы.СписокКомпетенций.ТекущаяСтрока.Компетенция.ПолучитьФорму().Открыть();
		КонецЕсли;
		
		Возврат
	КонецЕсли;
	
	ТиповаяАнкета.ПолучитьФорму().Открыть();

КонецПроцедуры // КоманднаяПанельОценокОткрытьАнкету

// Процедура вызывается при нажатии кнопки "Текущая должность" командной панели "КоманднаяПанельОценок".
// Процедура дополняет  список  компетенций должностными компетенциями.
//
Процедура КоманднаяПанельОценокДействие(Кнопка)
	
	// Получить список компетенций
	Запрос = новый запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДолжностныеКомпетенцииРаботников.Компетенция
	|ИЗ
	|	РегистрСведений.ДолжностныеКомпетенцииРаботников КАК ДолжностныеКомпетенцииРаботников
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			РаботникиСрезПоследних.ФизЛицо КАК ФизЛицо,
	|			РаботникиСрезПоследних.Должность.Должность КАК Должность
	|		ИЗ
	|			РегистрСведений.Работники.СрезПоследних(, ФизЛицо = &ФизЛицо) КАК РаботникиСрезПоследних) КАК ВложенныйЗапрос
	|		ПО ДолжностныеКомпетенцииРаботников.Должность = ВложенныйЗапрос.Должность";
	
	Запрос.УстановитьПараметр("ФизЛицо",Физлицо);
	
	ВыборкаДолжностныхКомпетенций = Запрос.Выполнить().Выбрать();
	
	// Добавление отсутствующих компетенций в список.
	Пока ВыборкаДолжностныхКомпетенций.Следующий()  Цикл
		
		КомпетенцияВыборки =ВыборкаДолжностныхКомпетенций.Компетенция; 
		Если СписокКомпетенций.Найти(КомпетенцияВыборки,"Компетенция") = неопределено Тогда
			НоваяСтрока = СписокКомпетенций.Добавить();
			НоваяСтрока.Компетенция = КомпетенцияВыборки; 
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // КоманднаяПанельОценокДействие

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

// Процедура - обработчик события "ПриИзменении" поля ввода даты документа
//
Процедура ДатаПриИзменении(Элемент = Неопределено)

	РаботаСДиалогами.ПроверитьНомерДокумента(ДокументОбъект, мТекущаяДатаДокумента);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);

	мТекущаяДатаДокумента = Дата;
	
КонецПроцедуры // ДатаПриИзменении

Процедура СотрудникПриИзменении(Элемент)
	
	ФизЛицо = Элемент.Значение.ФизЛицо;
	
КонецПроцедуры

// Процедура - обработчик события "НачалоВыбора" поля ввода "Работник"
// Процедура обеспечивает подбор работников из справочника ФизЛиц.
Процедура СотрудникНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ПроцедурыУправленияПерсоналом.ОткрытьФормуВыбораСотрудника(Элемент, Ссылка, Истина, Дата, СтандартнаяОбработка, Элемент.Значение);
	
КонецПроцедуры // РаботникНачалоВыбора

// Процедура - обработчик события "НачалоВыбора" поля ввода "Работник"
// Процедура обеспечивает подбор работников из справочника ФизЛиц при вводе наименования ФизЛица.
Процедура СотрудникАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	ТекстАвтоПодбора = ПроцедурыУправленияПерсоналом.ПодобратьФИОРаботникаКандидата(СтандартнаяОбработка, "Работники", Текст);

КонецПроцедуры // РаботникАвтоПодборТекста

// Процедура - обработчик события "НачалоВыбора" поля ввода "Работник"
// Процедура обеспечивает подбор работников из справочника ФизЛиц при вводе наименования ФизЛица.
Процедура СотрудникОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	Значение = ПроцедурыУправленияПерсоналом.ПодобратьСписокРаботниковКандидатов(СтандартнаяОбработка, "Работники", Текст, Элемент.Значение);

КонецПроцедуры // РаботникОкончаниеВводаТекста

Процедура СотрудникОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Физлицо = ВыбранноеЗначение.Физлицо;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ

// Процедура - обработчик события "ПриИзменении" поля ввода "Оценка" табличного поля "СписокКомпетенций"
// Процедура устанавливает дату оценки при изменении оценки.
Процедура СписокКомпетенцийОценкаПриИзменении(Элемент)
	
    СтрокаТаблицы = ЭлементыФормы.СписокКомпетенций.ТекущаяСтрока;
	Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ДатаОценки) Тогда 
		СтрокаТаблицы.ДатаОценки = ТекущаяДата();
	КонецЕсли;

КонецПроцедуры // СписокКомпетенцийОценкаПриИзменении

// Процедура - обработчик события "ПриИзменении" поля ввода "Оценка" табличного поля "СписокКомпетенций"
// Процедура создает список оценок компетенции для выбора.
Процедура СписокКомпетенцийКомпетенцияПриИзменении(Элемент)
	
	Компетенция = ЭлементыФормы.СписокКомпетенций.ТекущаяСтрока.Компетенция;
	
	ЭлементыФормы.СписокКомпетенций.ТекущаяСтрока.Оценка = "";
	ЭлементыФормы.СписокКомпетенций.ТекущаяСтрока.ДатаОценки = "";
	
	Если  НЕ ЗначениеЗаполнено(Компетенция.Наименование) Тогда 
		Возврат
	КонецЕсли;
	
	НаборОценок = Справочники.СоставОценочныхШкалКомпетенций.Выбрать(,Компетенция.Ссылка.ШкалаОценок.Ссылка,,"Код");

	СтрокаТаблицы = ЭлементыФормы.СписокКомпетенций.ТекущаяСтрока;
	
	НаборОценокДляВыбора = новый СписокЗначений();
	
	Пока НаборОценок.Следующий() Цикл

	Значение = НаборОценок.Ссылка;
	НаборОценокДляВыбора.Добавить (Значение);
	КонецЦикла;
	
   	ЭлементыФормы.СписокКомпетенций.Колонки.Оценка.ЭлементУправления.СписокВыбора = НаборОценокДляВыбора;
	
КонецПроцедуры // СписокКомпетенцийКомпетенцияПриИзменении

// Процедура - обработчик события "ПриАктивизацииСтроки" поля ввода "Оценка" табличного поля "СписокКомпетенций"
// Процедура создает список оценок компетенции для выбора.
Процедура СписокКомпетенцийПриАктивизацииСтроки(Элемент)
	ПодключитьОбработчикОжидания("ОбработчикОжиданияСписокКомпетенцийПриАктивизацииСтроки", 0.1, Истина);			
КонецПроцедуры // СписокКомпетенцийПриАктивизацииСтроки(Элемент)

// Процедура - обрабочик ожидания для события ПриАктивизацииСтроки
// табличного поля Разделы
//
Процедура ОбработчикОжиданияСписокКомпетенцийПриАктивизацииСтроки()
	
	Если ЭлементыФормы.СписокКомпетенций.ТекущаяСтрока = неопределено Тогда
		Возврат;	
	КонецЕсли;		
	
	Компетенция = ЭлементыФормы.СписокКомпетенций.ТекущаяСтрока.Компетенция;
	НаборОценок = Справочники.СоставОценочныхШкалКомпетенций.Выбрать(,Компетенция.Ссылка.ШкалаОценок.Ссылка,,"Код");

	СтрокаТаблицы = ЭлементыФормы.СписокКомпетенций.ТекущаяСтрока;
	
	НаборОценокДляВыбора = новый СписокЗначений();
	
	Пока НаборОценок.Следующий() Цикл

	Значение = НаборОценок.Ссылка;
	НаборОценокДляВыбора.Добавить (Значение);
	КонецЦикла;

   	ЭлементыФормы.СписокКомпетенций.Колонки.Оценка.ЭлементУправления.СписокВыбора = НаборОценокДляВыбора;
КонецПроцедуры // ОбработчикОжиданияСписокКомпетенцийПриАктивизацииСтроки
	
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)

	РаботаСДиалогами.ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура выполняет открытие формы работы с категориями документа
//
Процедура ДействияФормыДействиеОткрытьКатегории(Кнопка)

	РаботаСДиалогами.ОткрытьКатегорииДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура - обработчик нажатия на любую из дополнительных кнопок по заполнению ТЧ
//
Процедура НажатиеНаДополнительнуюКнопкуЗаполненияТЧ(Кнопка)
	
	УниверсальныеМеханизмы.ОбработатьНажатиеНаДополнительнуюКнопкуЗаполненияТЧ(мКнопкиЗаполненияТЧ.Строки.Найти(Кнопка.Имя,"Имя",Истина),ЭтотОбъект);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
Процедура ОсновныеДействияФормыПечатьПоУмолчанию(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать"
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Установить печать по умолчанию"
//
Процедура ОсновныеДействияФормыУстановитьПечатьПоУмолчанию(Кнопка)
	
	Если УниверсальныеМеханизмы.НазначитьКнопкуПечатиПоУмолчанию(мДеревоМакетов, Метаданные().Имя) Тогда
		
		УстановитьКнопкиПечати();
		
	КонецЕсли; 
	
	
КонецПроцедуры

// Процедура разрешения/запрещения редактирования номера документа
Процедура ДействияФормыРедактироватьНомер(Кнопка)
	
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
			
КонецПроцедуры
