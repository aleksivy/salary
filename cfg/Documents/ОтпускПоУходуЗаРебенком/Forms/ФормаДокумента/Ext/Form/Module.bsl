////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мТекущаяДатаДокумента; // Хранит последнюю установленную дату документа - для проверки перехода документа в другой период
Перем мРазмерПособияПоУходуДо3Лет;
Перем мСведенияОВидахРасчетаОснНачислений;
Перем мДеревоМакетов;			// Хранит дерево макетов печатных форм
Перем мПодменюПечати;			// Хранит элемент управления подменю печати
Перем мПечатьПоУмолчанию;		// Хранит элемент управления кнопку печать по умолчанию

////////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ПРОЦЕДУРЫ И ФУНКЦИИ

//Считывает размеры государственных пособий в переменные модуля формы 
		
	

Процедура ОбработатьПрекращениеРасчета(Значение,ТекущаяСтрока)

	Если Значение = Перечисления.ВидыДействияСНачислением.Прекратить Тогда
		Для СчПоказателей = 1 По 6 Цикл
    	    ТекущаяСтрока["Показатель" + СчПоказателей] = 0;
			ТекущаяСтрока["Валюта" + СчПоказателей]= "";
		КонецЦикла;
	КонецЕсли; 

КонецПроцедуры

Процедура УстановитьДоступностьРазмераРасчета(Значение,Ячейка)

	Ячейка.ТолькоПросмотр = Значение = Перечисления.ВидыДействияСНачислением.НеИзменять Или Значение = Перечисления.ВидыДействияСНачислением.Прекратить

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПриОткрытии" формы
//
Процедура ПриОткрытии()

	Если ЭтоНовый() Тогда
		
		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект);
	Иначе 
		// Установить доступность формы с учетом даты запрета редактирования	
		РаботаСДиалогами.УстановитьДоступностьФормыДляРедактирования(ЭтотОбъект, ЭтаФорма);
	КонецЕсли;	

	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);

	//// Установить колонки, видимостью которых пользователь управлять не может.
	// СтруктураКолонок.Вставить("Действие");

	//// Установить ограничение - изменять видимоть колонок для таличной части Удержания
	//ОбработкаТабличныхЧастей.УстановитьИзменятьВидимостьКолонокТабЧасти(ЭлементыФормы.ПлановыеУдержания.Колонки, СтруктураКолонок);

	// Вывести в заголовке формы вид операции.
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);

	// Запомнить текущие значения реквизитов формы.
	мТекущаяДатаДокумента        = Дата;
	
	// Установить активный реквизит.
	РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма);
	
	// Считаем размеры государственных пособий
	
КонецПроцедуры

// Процедура - обработчик события "ПослеЗаписи" формы.
//
Процедура ПослеЗаписи()
	
	// Вывести в заголовке формы вид операции и статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ВНЕШНИЕ ПЕЧАТНЫЕ ФОРМЫ

//Процедура устанавливает подменю "Печать" и кнопку "Печать по умолчанию" при необходимости
//
Процедура УстановитьКнопкиПечати()
	
	ФормированиеПечатныхФорм.СоздатьКнопкиПечати(ЭтотОбъект, ЭтаФорма);	
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
Процедура ОсновныеДействияФормыПечатьПоУмолчанию(Кнопка)
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать"
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Установить печать по умолчанию"
//
Процедура ОсновныеДействияФормыУстановитьПечатьПоУмолчанию(Кнопка)
	
	Если УниверсальныеМеханизмы.НазначитьКнопкуПечатиПоУмолчанию(мДеревоМакетов, Метаданные().Имя) Тогда
		
		УстановитьКнопкиПечати();
		
	КонецЕсли; 
	
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНОЙ ПАНЕЛИ ФОРМЫ

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	РаботаСДиалогами.НапечататьДвиженияДокумента(Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

// Процедура-обработчик события нажатия кнопки "Заполнить"
Процедура ДействияФормыЗаполнить(Кнопка)
	
	Если Проведен Тогда
		Если Вопрос(НСтр("ru='Автоматически заполнить документ можно только после отмены его проведения. Выполнить отмену проведения документа?';uk='Автоматично заповнити документ можна тільки після скасування його проведення. Виконати скасування проведення документа?'"), РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
			ЗаписатьВФорме(РежимЗаписиДокумента.ОтменаПроведения);
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ОсновныеНачисления.Количество() > 0 или ПлановыеУдержания.Количество() > 0 или Взносы.Количество() > 0 или ВзносыФОТ.Количество() > 0 Тогда
		Вопрос = НСтр("ru='Существующие записи о начислениях и удержаниях будут удалены. Продолжить?';uk='Існуючі записи про нарахування та утримання будуть вилучені. Продовжити?'");
		Ответ  = Вопрос(Вопрос, РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли; 
	
	ЗаполнитьПлановыйНачисления(мРазмерПособияПоУходуДо3Лет);
	
	ЗаполнитьПлановыйУдержания();
	
	ЗаполнитьПлановыйВзносы();	
	
КонецПроцедуры

// Процедура разрешения/запрещения редактирования номера документа
Процедура ДействияФормыРедактироватьНомер(Кнопка)
	
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
			
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

// Процедура - обработчик события "ПриИзменении" поля ввода даты документа.
//
Процедура ДатаПриИзменении(Элемент)

	РаботаСДиалогами.ПроверитьНомерДокумента(ЭтотОбъект, мТекущаяДатаДокумента);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);

	мТекущаяДатаДокумента = Дата;
	
	// Считаем размеры государственных пособий

КонецПроцедуры // ДатаПриИзменении

// Процедура - обработчик события "ПриИзменении" поля ввода организации.
//
Процедура ОрганизацияПриИзменении(Элемент)
	Если Не ПустаяСтрока(Номер) Тогда
		МеханизмНумерацииОбъектов.СброситьУстановленныйКодНомерОбъекта(ЭтотОбъект, "Номер", ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	КонецЕсли;
КонецПроцедуры // ОрганизацияПриИзменении()

// Процедура - обработчик события "ПриИзменении" поля ввода начала отпуска
//
Процедура ДатаНачалаПриИзменении(Элемент)
	Если НЕ ЗначениеЗаполнено(ДатаДействия) и ЗначениеЗаполнено(Элемент.Значение) Тогда
		ДатаДействия = ДатаНачала
	КонецЕсли;
КонецПроцедуры

Процедура СотрудникНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ПроцедурыУправленияПерсоналом.ОткрытьФормуВыбораСотрудникаОрганизации(Элемент, Ссылка, Истина, Дата, Организация, 1, СтандартнаяОбработка, Элемент.Значение);
	
КонецПроцедуры

Процедура СотрудникПриИзменении(Элемент)

	ОсновныеНачисления.Очистить();
	ПлановыеУдержания.Очистить();
	Взносы.Очистить();
	ВзносыФОТ.Очистить();
	ФизЛицо = Сотрудник.Физлицо;
	
КонецПроцедуры

Процедура СотрудникАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
	ТекстАвтоПодбора = ПроцедурыУправленияПерсоналом.ПодобратьФИОРаботникаКандидата(СтандартнаяОбработка, "РаботникиОрганизации", Текст, Организация);
	
КонецПроцедуры

Процедура СотрудникОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	Значение = ПроцедурыУправленияПерсоналом.ПодобратьСписокРаботниковКандидатов(СтандартнаяОбработка, "РаботникиОрганизации", Текст, Элемент.Значение, Организация);
	
КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОЙ ЧАСТИ ОсновныеНачисления



// Процедура - обработчик события "ПриВыводеСтроки" ТЧ
//
Процедура ОсновныеНачисленияПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	

	РаботаСДиалогами.ПриВыводеСтрокиПлановыхНачисленийИУдержаний(Элемент, ОформлениеСтроки, ДанныеСтроки, мСведенияОВидахРасчетаОснНачислений, Истина);	
	
КонецПроцедуры // ОсновныеНачисленияПриВыводеСтроки()

// Процедура - обработчик события "ПриОкончанииРедактирования" ТЧ
//
Процедура ОсновныеНачисленияПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	
	Если Элемент.ТекущаяСтрока.Действие = Перечисления.ВидыДействияСНачислением.Прекратить Тогда
		Элемент.ТекущаяСтрока.Показатель1 = 0;
		Элемент.ТекущаяСтрока.Показатель2 = 0;
		Элемент.ТекущаяСтрока.Показатель3 = 0;
		Элемент.ТекущаяСтрока.Показатель4 = 0;
		Элемент.ТекущаяСтрока.Показатель5 = 0;
		Элемент.ТекущаяСтрока.Показатель6 = 0;
	КонецЕсли;
	
КонецПроцедуры // ОсновныеНачисленияПриОкончанииРедактирования()

// Процедура - обработчик события "ПриИзменении" поля ввода начисления  
//
Процедура ОсновныеНачисленияВидРасчетаПриИзменении(Элемент)
	
	СведенияОВидеРасчета = РаботаСДиалогами.ПолучитьСведенияОВидеРасчетаСхемыМотивации(мСведенияОВидахРасчетаОснНачислений, Элемент.Значение);
	ДанныеСтроки = ЭлементыФормы.ОсновныеНачисления.ТекущиеДанные;
	
	Если Не СведенияОВидеРасчета.РазмерТребуется Тогда
		ДанныеСтроки.Показатель1			= 0;
		ДанныеСтроки.ТарифныйРазряд1	= Справочники.ТарифныеРазряды.ПустаяСсылка();
	КонецЕсли;
	
	Если СведенияОВидеРасчета.НеТребуетВалюты Тогда
		ДанныеСтроки.Валюта1			= Справочники.Валюты.ПустаяСсылка();
		
	Иначе
		ИспользуютсяНачисленияВВалюте = ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуОрганизации(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), Организация, "ИспользуютсяНачисленияВВалюте");
			
		Если Не ИспользуютсяНачисленияВВалюте И ДанныеСтроки.Валюта1.Пустая() Тогда
			ДанныеСтроки.Валюта1 = мВалютаРегламентированногоУчета;
		КонецЕсли;
			
	КонецЕсли;
	
	Для СчПоказателей = 1 По 4 Цикл
		Если НЕ ЗначениеЗаполнено(ЭлементыФормы.ОсновныеНачисления.ТекущиеДанные["Валюта" + СчПоказателей]) И 
			СведенияОВидеРасчета["Валюта" + СчПоказателей + "Видимость"] Тогда
			ЭлементыФормы.ОсновныеНачисления.ТекущиеДанные["Валюта" + СчПоказателей] = мВалютаРегламентированногоУчета;
		КонецЕсли;
		Если НЕ СведенияОВидеРасчета["Валюта" + СчПоказателей + "Видимость"] Тогда
			ЭлементыФормы.ОсновныеНачисления.ТекущиеДанные["Валюта" + СчПоказателей] = Справочники.Валюты.ПустаяСсылка();
		КонецЕсли;
		Если НЕ СведенияОВидеРасчета["Показатель" + СчПоказателей + "Видимость"] Тогда
			ЭлементыФормы.ОсновныеНачисления.ТекущиеДанные["Показатель" + СчПоказателей] = 0;
		КонецЕсли;
	КонецЦикла;
	
	Расчет = Элемент.Значение;
	Если Расчет = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПособиеПоУходуЗаРебенкомДо3Лет Тогда
		ЭлементыФормы.ОсновныеНачисления.ТекущаяСтрока.Размер = мРазмерПособияПоУходуДо3Лет;
		ЭлементыФормы.ОсновныеНачисления.ТекущаяСтрока.Валюта = мВалютаРегламентированногоУчета;
	ИначеЕсли Расчет = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускПоУходуЗаРебенкомБезОплаты Тогда
		ЭлементыФормы.ОсновныеНачисления.ТекущаяСтрока.Размер = 1
	КонецЕсли;

	
КонецПроцедуры // ОсновныеНачисленияВидРасчетаПриИзменении()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОЙ ЧАСТИ ПлановыеУдержания

Процедура ПлановыеУдержанияПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	РаботаСДиалогами.ПриВыводеСтрокиПлановыхНачисленийИУдержаний(Элемент, ОформлениеСтроки, ДанныеСтроки, мСведенияОВидахРасчетаОснНачислений, Ложь);	

	УстановитьДоступностьРазмераРасчета(ДанныеСтроки.Действие,ОформлениеСтроки.Ячейки.Показатель1)
	
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" вида действия строки начислений
Процедура ПлановыеУдержанияДействиеПриИзменении(Элемент)
	
	ОбработатьПрекращениеРасчета(Элемент.Значение,ЭлементыФормы.ПлановыеУдержания.ТекущаяСтрока);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)

	РаботаСДиалогами.ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура выполняет открытие формы работы с категориями документа
//
Процедура ДействияФормыДействиеОткрытьКатегории(Кнопка)

	РаботаСДиалогами.ОткрытьКатегорииДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	// Установка кнопок печати
	УстановитьКнопкиПечати();

КонецПроцедуры
мСведенияОВидахРасчетаОснНачислений = Новый Соответствие;

