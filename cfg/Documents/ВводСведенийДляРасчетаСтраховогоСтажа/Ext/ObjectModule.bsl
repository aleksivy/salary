Перем НП Экспорт;

Функция ПредлагаемыйПериод() Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	МАКСИМУМ(СтраховойСтажПоДаннымПФУ.Месяц) КАК Месяц
	               |ИЗ
	               |	РегистрСведений.СтраховойСтажПоДаннымПФУ КАК СтраховойСтажПоДаннымПФУ
				   |ГДЕ
				   |    СтраховойСтажПоДаннымПФУ.ФизЛицо = &ФизЛицо
	               |";
	Запрос.УстановитьПараметр("ФизЛицо", Сотрудник.Физлицо);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() и ЗначениеЗаполнено(Выборка.Месяц) Тогда
		Возврат ДобавитьМесяц(Выборка.Месяц, 1);
	Иначе
		Возврат Дата(1, 1, 1);
	КонецЕсли;	
	
	
КонецФункции	

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизтов шапки, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по шапке,
// все проверяемые реквизиты должны быть включены в выборку по шапке.
//
// Параметры:
//  ВыборкаПоШапкеДокумента	- выборка из результата запроса по шапке документа,
//  Отказ					- флаг отказа в проведении.
//	Заголовок				- Заголовок для сообщений об ошибках проведения
//
Процедура ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок)

	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Организация) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru='Не указана организация';uk='Не зазначена організація'"), Отказ, Заголовок);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Сотрудник) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru='Не указан сотрудник';uk='Не вказаний співробітник'"), Отказ, Заголовок);
	КонецЕсли;

КонецПроцедуры // ПроверитьЗаполнениеШапки()

// Проверяет правильность заполнения табличной части документа.
// Если год в строке табличной части не входит в период справки полностью, 
// а стаж введен только итоговой суммой, то выставляется флаг отказа в проведении.
// Для строк, соответствующих годам, не входящим полностью в период справки, стаж должен вводиться помесячно.
//
// Параметры:
//  ВыборкаПоШапкеДокумента	- выборка из результата запроса по шапке документа,
//  Отказ					- флаг отказа в проведении.
//	Заголовок				- Заголовок для сообщений об ошибках проведения
//
Процедура ПроверитьЗаполнениеТабличнойЧасти(ВыборкаПоТабличнойЧастиДокумента, Отказ, Заголовок)

	Пока ВыборкаПоТабличнойЧастиДокумента.Следующий() Цикл
		Если Не ВыборкаПоТабличнойЧастиДокумента.УчитыватьИтогиГода Тогда
			ЧислоДнейПомесячно = 0;
			ЧислоДнейПомесячно = ВыборкаПоТабличнойЧастиДокумента.Месяц1 + ВыборкаПоТабличнойЧастиДокумента.Месяц2 + ВыборкаПоТабличнойЧастиДокумента.Месяц3 +
								 ВыборкаПоТабличнойЧастиДокумента.Месяц4 + ВыборкаПоТабличнойЧастиДокумента.Месяц5 + ВыборкаПоТабличнойЧастиДокумента.Месяц6 +
								 ВыборкаПоТабличнойЧастиДокумента.Месяц7 + ВыборкаПоТабличнойЧастиДокумента.Месяц8 + ВыборкаПоТабличнойЧастиДокумента.Месяц9 +
								 ВыборкаПоТабличнойЧастиДокумента.Месяц10 + ВыборкаПоТабличнойЧастиДокумента.Месяц11 + ВыборкаПоТабличнойЧастиДокумента.Месяц12;
			Если ЧислоДнейПомесячно = 0 и (ВыборкаПоТабличнойЧастиДокумента.ВсегоМесяцев > 0 Или ВыборкаПоТабличнойЧастиДокумента.ВсегоДней > 0) Тогда
				ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru='В строке №" + ВыборкаПоТабличнойЧастиДокумента.НомерСтроки + " год не входит в период справки полностью, заполните стаж помесячно';uk='В рядку №" + ВыборкаПоТабличнойЧастиДокумента.НомерСтроки + " рік не входить в період довідки повністю, заповніть стаж помісячно'"), Отказ, Заголовок);
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;	
	
КонецПроцедуры // ПроверитьЗаполнениеТабличнойЧасти()


// Формирует запрос по шапке документа
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросПоШапке(Режим)

	Запрос = Новый Запрос;

	Запрос.УстановитьПараметр("ДокументСсылка",	Ссылка);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВводСведенийДляРасчетаСтраховогоСтажа.Дата КАК Дата,
	|	ВводСведенийДляРасчетаСтраховогоСтажа.Организация КАК Организация,
	|	ВводСведенийДляРасчетаСтраховогоСтажа.Сотрудник КАК Сотрудник,
	|	ВводСведенийДляРасчетаСтраховогоСтажа.Ссылка КАК Ссылка,
	|	ВводСведенийДляРасчетаСтраховогоСтажа.ПериодС КАК ПериодС,
	|	ВводСведенийДляРасчетаСтраховогоСтажа.ПериодПо КАК ПериодПо
	|ИЗ
	|	Документ.ВводСведенийДляРасчетаСтраховогоСтажа КАК ВводСведенийДляРасчетаСтраховогоСтажа
	|ГДЕ
	|	ВводСведенийДляРасчетаСтраховогоСтажа.Ссылка = &ДокументСсылка";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоШапке()

// Формирует запрос по таблице "РаботникиОрганизации" документа
//
// Параметры: 
//	Режим - режим проведения
//
// Возвращаемое значение:
//	Результат запроса. В запросе данные документа дополняются значениями
//	проверяемых параметров из связанного с
//
Функция СформироватьЗапросПоСтраховойСтаж()
	
	Запрос = Новый Запрос;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка",			Ссылка);
	Запрос.УстановитьПараметр("ПериодС",				ПериодС);
	Запрос.УстановитьПараметр("ПериодПо",				ПериодПо);

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВводСведенийДляРасчетаСтраховогоСтажаСтраховойСтаж.Ссылка,
	|	ВводСведенийДляРасчетаСтраховогоСтажаСтраховойСтаж.НомерСтроки,
	|	ВводСведенийДляРасчетаСтраховогоСтажаСтраховойСтаж.Год,
	|	ВводСведенийДляРасчетаСтраховогоСтажаСтраховойСтаж.Месяц1,
	|	ВводСведенийДляРасчетаСтраховогоСтажаСтраховойСтаж.Месяц2,
	|	ВводСведенийДляРасчетаСтраховогоСтажаСтраховойСтаж.Месяц3,
	|	ВводСведенийДляРасчетаСтраховогоСтажаСтраховойСтаж.Месяц4,
	|	ВводСведенийДляРасчетаСтраховогоСтажаСтраховойСтаж.Месяц5,
	|	ВводСведенийДляРасчетаСтраховогоСтажаСтраховойСтаж.Месяц6,
	|	ВводСведенийДляРасчетаСтраховогоСтажаСтраховойСтаж.Месяц7,
	|	ВводСведенийДляРасчетаСтраховогоСтажаСтраховойСтаж.Месяц8,
	|	ВводСведенийДляРасчетаСтраховогоСтажаСтраховойСтаж.Месяц9,
	|	ВводСведенийДляРасчетаСтраховогоСтажаСтраховойСтаж.Месяц10,
	|	ВводСведенийДляРасчетаСтраховогоСтажаСтраховойСтаж.Месяц11,
	|	ВводСведенийДляРасчетаСтраховогоСтажаСтраховойСтаж.Месяц12,
	|	ВводСведенийДляРасчетаСтраховогоСтажаСтраховойСтаж.ВсегоМесяцев,
	|	ВводСведенийДляРасчетаСтраховогоСтажаСтраховойСтаж.ВсегоДней,
	|	ВЫБОР
	|		КОГДА ГОД(&ПериодС) = ВводСведенийДляРасчетаСтраховогоСтажаСтраховойСтаж.Год
	|				И МЕСЯЦ(&ПериодС) > 1
	|			ТОГДА ЛОЖЬ
	|		КОГДА ГОД(&ПериодПо) = ВводСведенийДляРасчетаСтраховогоСтажаСтраховойСтаж.Год
	|				И МЕСЯЦ(&ПериодПо) < 12
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК УчитыватьИтогиГода,
	|	ВводСведенийДляРасчетаСтраховогоСтажаСтраховойСтаж.ПолныйМесяц1,
	|	ВводСведенийДляРасчетаСтраховогоСтажаСтраховойСтаж.ПолныйМесяц2,
	|	ВводСведенийДляРасчетаСтраховогоСтажаСтраховойСтаж.ПолныйМесяц3,
	|	ВводСведенийДляРасчетаСтраховогоСтажаСтраховойСтаж.ПолныйМесяц4,
	|	ВводСведенийДляРасчетаСтраховогоСтажаСтраховойСтаж.ПолныйМесяц5,
	|	ВводСведенийДляРасчетаСтраховогоСтажаСтраховойСтаж.ПолныйМесяц6,
	|	ВводСведенийДляРасчетаСтраховогоСтажаСтраховойСтаж.ПолныйМесяц7,
	|	ВводСведенийДляРасчетаСтраховогоСтажаСтраховойСтаж.ПолныйМесяц8,
	|	ВводСведенийДляРасчетаСтраховогоСтажаСтраховойСтаж.ПолныйМесяц9,
	|	ВводСведенийДляРасчетаСтраховогоСтажаСтраховойСтаж.ПолныйМесяц10,
	|	ВводСведенийДляРасчетаСтраховогоСтажаСтраховойСтаж.ПолныйМесяц11,
	|	ВводСведенийДляРасчетаСтраховогоСтажаСтраховойСтаж.ПолныйМесяц12
	|ИЗ
	|	Документ.ВводСведенийДляРасчетаСтраховогоСтажа.СтраховойСтаж КАК ВводСведенийДляРасчетаСтраховогоСтажаСтраховойСтаж
	|ГДЕ
	|	ВводСведенийДляРасчетаСтраховогоСтажаСтраховойСтаж.Ссылка = &ДокументСсылка";
		
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить();
	
КонецФункции // СформироватьЗапросПоСтраховойСтаж()

// По строке выборки результата запроса по документу формируем движения по регистрам
//
// Параметры:
//	ВыборкаПоШапкеДокумента - выборка из результата запроса по шапке документа,
//	ВыборкаПоРаботникиОрганизации
//
// Возвращаемое значение:
//	Нет.
//
Процедура ДобавитьСтрокуВДвиженияПоРегиструСведений(ВыборкаПоШапкеДокумента, ВыборкаПоСтраховойСтаж)

	Пока ВыборкаПоСтраховойСтаж.Следующий() Цикл
		Для НомерМесяца = 1 По 12 Цикл
			МесяцЗаписи = Дата(ВыборкаПоСтраховойСтаж.Год, НомерМесяца, 1);
			Если МесяцЗаписи >= ВыборкаПоШапкеДокумента.ПериодС И МесяцЗаписи <= ВыборкаПоШапкеДокумента.ПериодПо Тогда
				Движение = Движения.СтраховойСтажПоДаннымПФУ.Добавить();
				// Свойства
				Движение.Период	= Дата;
				// Измерения
				Движение.Физлицо		= ВыборкаПоШапкеДокумента.Сотрудник.Физлицо;
				Движение.Организация	= ВыборкаПоШапкеДокумента.Организация;
				Движение.Год			= ВыборкаПоСтраховойСтаж.Год;
				Движение.Месяц			= МесяцЗаписи;
				// Ресурсы
				Движение.ДниСтажа		= ВыборкаПоСтраховойСтаж["Месяц"+НомерМесяца];
				Если ВыборкаПоСтраховойСтаж["ПолныйМесяц"+НомерМесяца] = 1 Тогда
					Движение.МесяцыСтажа = 1
				Иначе
					Движение.МесяцыСтажа = 0
				КонецЕсли;	
			КонецЕсли;
		КонецЦикла;	
		Если ВыборкаПоСтраховойСтаж.УчитыватьИтогиГода Тогда
			Движение = Движения.СтраховойСтажПоДаннымПФУ.Добавить();
			Движение.Период	= Дата;
			// Измерения
			Движение.Физлицо		= ВыборкаПоШапкеДокумента.Сотрудник.Физлицо;
			Движение.Организация	= ВыборкаПоШапкеДокумента.Организация;
			// Ресурсы
			Движение.Год			= ВыборкаПоСтраховойСтаж.Год;
			Движение.ДниСтажа		= ВыборкаПоСтраховойСтаж.ВсегоДней;
			Движение.МесяцыСтажа	= ВыборкаПоСтраховойСтаж.ВсегоМесяцев;
		КонецЕсли;
		
	КонецЦикла;	
	
КонецПроцедуры // ДобавитьСтрокуВДвиженияПоРегиструСведений()


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
	РезультатЗапросаПоШапке = СформироватьЗапросПоШапке(Режим);
	ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();
	Если ВыборкаПоШапкеДокумента.Следующий() Тогда
		ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок);
		Если НЕ Отказ Тогда
			ВыборкаПоТабличнойЧастиДокумента = СформироватьЗапросПоСтраховойСтаж().Выбрать();
			ПроверитьЗаполнениеТабличнойЧасти(ВыборкаПоТабличнойЧастиДокумента, Отказ, Заголовок);
		КонецЕсли;	
		Если НЕ Отказ Тогда
			ВыборкаПоТабличнойЧастиДокумента.Сбросить();
			// Заполним записи в наборах записей регистров
			ДобавитьСтрокуВДвиженияПоРегиструСведений(ВыборкаПоШапкеДокумента, ВыборкаПоТабличнойЧастиДокумента);
		КонецЕсли;
	КонецЕсли
	
КонецПроцедуры	

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ПроцедурыУправленияПерсоналом.ЗаполнитьФизЛицо(ЭтотОбъект);
	
КонецПроцедуры


#Если Клиент Тогда
НП = Новый НастройкаПериода;
#КонецЕсли
