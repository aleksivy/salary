////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
// Хранит дерево макетов печатных форм
Перем мДеревоМакетов;

// Хранит элемент управления подменю печати
Перем мПодменюПечати;

// Хранит элемент управления кнопку печать по умолчанию
Перем мПечатьПоУмолчанию;

Перем мТекущаяДатаДокумента; // Хранит текущую дату документа - для проверки перехода документа в другой период установки номера

// Хранит дерево кнопок подменю заполнение ТЧ
Перем мКнопкиЗаполненияТЧ;

////////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ПРОЦЕДУРЫ И ФУНКЦИИ
// Процедура устанавливает подменю "Заполнить" в командных панелях ТЧ документа при необходимости
//
Процедура УстановитьКнопкиПодменюЗаполненияТЧ();
	
	мКнопкиЗаполненияТЧ = УниверсальныеМеханизмы.ПолучитьДеревоКнопокЗаполненияТабличныхЧастей(Ссылка,Новый Действие("НажатиеНаДополнительнуюКнопкуЗаполненияТЧ"));
	
	СоответствиеТЧ = Новый Соответствие;
	СоответствиеТЧ.Вставить(ЭлементыФормы.СтраховойСтаж, ЭлементыФормы.КоманднаяПанель);
	
	УниверсальныеМеханизмы.СформироватьПодменюЗаполненияТЧПоДеревуКнопок(мКнопкиЗаполненияТЧ,СоответствиеТЧ);
	
КонецПроцедуры

// Процедура устанавливает подменю "Печать" и кнопку "Печать по умолчанию" при необходимости
//
Процедура УстановитьКнопкиПечати()
	
	ФормированиеПечатныхФорм.СоздатьКнопкиПечати(ЭтотОбъект, ЭтаФорма);	
	
КонецПроцедуры
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура - обработчик нажатия на любую из дополнительных кнопок по заполнению ТЧ
//
Процедура НажатиеНаДополнительнуюКнопкуЗаполненияТЧ(Кнопка)
	
	УниверсальныеМеханизмы.ОбработатьНажатиеНаДополнительнуюКнопкуЗаполненияТЧ(мКнопкиЗаполненияТЧ.Строки.Найти(Кнопка.Имя,"Имя",Истина),ЭтотОбъект);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
Процедура ОсновныеДействияФормыПечатьПоУмолчанию(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать"
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Установить печать по умолчанию"
//
Процедура ОсновныеДействияФормыУстановитьПечатьПоУмолчанию(Кнопка)
	
	Если УниверсальныеМеханизмы.НазначитьКнопкуПечатиПоУмолчанию(мДеревоМакетов, Метаданные().Имя) Тогда
		
		УстановитьКнопкиПечати();
		
	КонецЕсли; 
	
	
КонецПроцедуры

// Процедура разрешения/запрещения редактирования номера документа
Процедура ДействияФормыРедактироватьНомер(Кнопка)
	
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
			
КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	РаботаСДиалогами.НапечататьДвиженияДокумента(Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()



////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ
Процедура СотрудникПриИзменении(Элемент)
	
	Если ОчиститьСтраховойСтаж() Тогда
    	Возврат;
	КонецЕсли;
	
	ПериодС = ПредлагаемыйПериод();
	
КонецПроцедуры

Процедура ОрганизацияПриИзменении(Элемент)
		
	Если ОчиститьСтраховойСтаж() Тогда
    	Возврат;
	КонецЕсли;
	
	Если Не ПустаяСтрока(Номер) Тогда
		МеханизмНумерацииОбъектов.СброситьУстановленныйКодНомерОбъекта(ЭтотОбъект, "Номер", ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	КонецЕсли;

	
КонецПроцедуры

Процедура ПериодСПриИзменении(Элемент)
	
	ПериодС = НачалоМесяца(ПериодС);
	
	НП.УстановитьПериод(ПериодС, КонецДня(ПериодПо), Истина);

	ЗаполнитьСтраховойСтаж()
	
КонецПроцедуры

Процедура ПериодПоПриИзменении(Элемент)
	
	ПериодПо = КонецМесяца(ПериодПо);
	НП.УстановитьПериод(ПериодС, КонецДня(ПериодПо), Истина);
	ЗаполнитьСтраховойСтаж()
	
КонецПроцедуры

Процедура КнопкаНастройкаПериодаНажатие(Элемент)
	
	Если ОчиститьСтраховойСтаж() Тогда
    	Возврат;
	КонецЕсли;
	
	Если НП.Редактировать() Тогда
		ПериодС = НП.ПолучитьДатуНачала();
		ПериодПо = НП.ПолучитьДатуОкончания();
	КонецЕсли;
	
	ЗаполнитьСтраховойСтаж()

КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТАБЛИЧНОЙ ЧАСТИ

Процедура СтраховойСтажМесяц1ПриИзменении(Элемент)
	
	РасчетСтроки(1, Элемент);
	ОбновитьНадписьИтогПоДокументу();
	
КонецПроцедуры

Процедура СтраховойСтажМесяц2ПриИзменении(Элемент)
	
	РасчетСтроки(2, Элемент);
	ОбновитьНадписьИтогПоДокументу();
	
КонецПроцедуры

Процедура СтраховойСтажМесяц3ПриИзменении(Элемент)
	
	РасчетСтроки(3, Элемент);
	ОбновитьНадписьИтогПоДокументу();
	
КонецПроцедуры

Процедура СтраховойСтажМесяц4ПриИзменении(Элемент)
		
	РасчетСтроки(4, Элемент);
	ОбновитьНадписьИтогПоДокументу();
	
КонецПроцедуры

Процедура СтраховойСтажМесяц5ПриИзменении(Элемент)
		
	РасчетСтроки(5, Элемент);
	ОбновитьНадписьИтогПоДокументу();
	
КонецПроцедуры

Процедура СтраховойСтажМесяц6ПриИзменении(Элемент)
		
	РасчетСтроки(6, Элемент);
	ОбновитьНадписьИтогПоДокументу();
	
КонецПроцедуры

Процедура СтраховойСтажМесяц7ПриИзменении(Элемент)
		
	РасчетСтроки(7, Элемент);
	ОбновитьНадписьИтогПоДокументу();
	
КонецПроцедуры

Процедура СтраховойСтажМесяц8ПриИзменении(Элемент)
		
	РасчетСтроки(8, Элемент);
	ОбновитьНадписьИтогПоДокументу();
	
КонецПроцедуры

Процедура СтраховойСтажМесяц9ПриИзменении(Элемент)
		
	РасчетСтроки(9, Элемент);
	ОбновитьНадписьИтогПоДокументу();
	
КонецПроцедуры

Процедура СтраховойСтажМесяц10ПриИзменении(Элемент)
		
	РасчетСтроки(10, Элемент);
	ОбновитьНадписьИтогПоДокументу();
	
КонецПроцедуры

Процедура СтраховойСтажМесяц11ПриИзменении(Элемент)
		
	РасчетСтроки(11, Элемент);
	ОбновитьНадписьИтогПоДокументу();
	
КонецПроцедуры

Процедура СтраховойСтажМесяц12ПриИзменении(Элемент)
		
	РасчетСтроки(12, Элемент);
	ОбновитьНадписьИтогПоДокументу();
	
КонецПроцедуры

Процедура СтраховойСтажВсегоМесяцевПриИзменении(Элемент)
	
	ОбновитьНадписьИтогПоДокументу();
	
КонецПроцедуры

Процедура СтраховойСтажВсегоДнейПриИзменении(Элемент)
	
	ОбновитьНадписьИтогПоДокументу();

КонецПроцедуры

Процедура СтраховойСтажПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ДанныеСтроки.Год = Год(ПериодС) ИЛИ ДанныеСтроки.Год = Год(ПериодПо)  Тогда	
		Для НомерКолонки = 2 По 13 Цикл
			Если (НомерКолонки-1 < Месяц(ПериодС) И ДанныеСтроки.Год = Год(ПериодС)) ИЛИ (НомерКолонки-1 > Месяц(ПериодПо) И ДанныеСтроки.Год = Год(ПериодПо))  Тогда 
				ОформлениеСтроки.Ячейки[НомерКолонки].ТолькоПросмотр = Истина;
				ОформлениеСтроки.Ячейки[НомерКолонки].ЦветФона = ЦветаСтиля.ФонНедоступнойСтрокиДокумента;
			Иначе
				ОформлениеСтроки.Ячейки[НомерКолонки].ТолькоПросмотр = Ложь;
				ОформлениеСтроки.Ячейки[НомерКолонки].ЦветФона = ЦветаСтиля.ЦветФонаПоля;
			КонецЕсли;	
		КонецЦикла;	
	Иначе
		Для НомерКолонки = 2 По 13 Цикл
			ОформлениеСтроки.Ячейки[НомерКолонки].ТолькоПросмотр = Ложь;
			ОформлениеСтроки.Ячейки[НомерКолонки].ЦветФона = ЦветаСтиля.ЦветФонаПоля;
		КонецЦикла;	
	КонецЕсли;	

КонецПроцедуры

Процедура РасчетСтроки(ИндексКолонки, Элемент)
	
	ДнейВМесяце = День(КонецМесяца(Дата(ЭлементыФормы.СтраховойСтаж.ТекущаяСтрока.Год,ИндексКолонки,1))); 
	Если Элемент.Значение > ДнейВМесяце Тогда
		Элемент.Значение = ДнейВМесяце;
		ЭлементыФормы.СтраховойСтаж.ТекущаяСтрока["ПолныйМесяц"+ИндексКолонки] = 1;
	ИначеЕсли Элемент.Значение < ДнейВМесяце Тогда
		ЭлементыФормы.СтраховойСтаж.ТекущаяСтрока["ПолныйМесяц"+ИндексКолонки] = 0;
	Иначе
		ЭлементыФормы.СтраховойСтаж.ТекущаяСтрока["ПолныйМесяц"+ИндексКолонки] = 1;
	КонецЕсли;
	
	ВсегоДней = 0; ВсегоМесяцев = 0; ВсегоДнейВНеполныхМесяцах = 0; НеполныхМесяцев = 0;
	Для НомерКолонки = 1 По 12 Цикл
		Если ЭлементыФормы.СтраховойСтаж.ТекущаяСтрока["Месяц"+НомерКолонки] > 0 И ЭлементыФормы.СтраховойСтаж.ТекущаяСтрока["ПолныйМесяц"+НомерКолонки] = 0 Тогда
			ВсегоДнейВНеполныхМесяцах = ВсегоДнейВНеполныхМесяцах + ЭлементыФормы.СтраховойСтаж.ТекущаяСтрока["Месяц"+НомерКолонки];
		ИначеЕсли ЭлементыФормы.СтраховойСтаж.ТекущаяСтрока["Месяц"+НомерКолонки] > 0 И ЭлементыФормы.СтраховойСтаж.ТекущаяСтрока["ПолныйМесяц"+НомерКолонки] = 1 Тогда
			ВсегоМесяцев = ВсегоМесяцев + 1;
		КонецЕсли;	
	КонецЦикла;	
	
	Если ВсегоДнейВНеполныхМесяцах > 0  Тогда
		НеполныхМесяцев = Цел(ВсегоДнейВНеполныхМесяцах/30);	
        ВсегоДнейНеполногоМесяца = ВсегоДнейВНеполныхМесяцах - НеполныхМесяцев*30;
	КонецЕсли;
	ЭлементыФормы.СтраховойСтаж.ТекущаяСтрока.ВсегоМесяцев = ВсегоМесяцев + НеполныхМесяцев;
	ЭлементыФормы.СтраховойСтаж.ТекущаяСтрока.ВсегоДней = ВсегоДнейНеполногоМесяца;
	
КонецПроцедуры

Процедура ЗаполнитьСтраховойСтаж()
	
	Если Не ЗначениеЗаполнено(ПериодС) Или Не ЗначениеЗаполнено(ПериодПо) Тогда
		Возврат;
	КонецЕсли;
	
	Если ПериодС > ПериодПо Тогда
		ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru='Дата начала периода не может быть больше даты конца периода';uk='Дата початку періоду не може бути більше дати кінця періоду'"),,,СтатусСообщения.Важное);
	КонецЕсли;
	
	Индекс = 0;
	ГодаВТаблице = Новый Массив();
	Пока Индекс < Страховойстаж.Количество() Цикл
		Если СтраховойСтаж[Индекс].Год < Год(ПериодС) ИЛИ СтраховойСтаж[Индекс].Год > Год(ПериодПо) Тогда
			СтраховойСтаж.Удалить(Индекс);
			Продолжить;
		КонецЕсли;
		ГодаВТаблице.Добавить(СтраховойСтаж[Индекс].Год);
		Индекс = Индекс + 1;
	КонецЦикла;	
		
	Для Год = Год(ПериодС) по Год(ПериодПо) Цикл
		Если ГодаВтаблице.Найти(Год) = Неопределено Тогда 
			НоваяСтрока = СтраховойСтаж.Добавить();
			НоваяСтрока.Год = Год;
		Конецесли;	
	КонецЦикла;	
	
	СтраховойСтаж.Сортировать("Год");
	
КонецПроцедуры

Процедура ОбновитьНадписьИтогПоДокументу()
	
	НеполныхМесяцев = Цел(СтраховойСтаж.Итог("ВсегоДней")/30);
	ВсегоЛет = Цел((СтраховойСтаж.Итог("ВсегоМесяцев") + НеполныхМесяцев)/12);
	ВсегоМесяцев = СтраховойСтаж.Итог("ВсегоМесяцев") + НеполныхМесяцев - ВсегоЛет*12;
	ВсегоДней = СтраховойСтаж.Итог("ВсегоДней") - НеполныхМесяцев*30; 
	ЭлементыФормы.НадписьИтогПоДокументу.Значение = НСтр("ru='Страховой стаж за период с ';uk='Страховий стаж за період з '") + Формат(ПериодС,"ДФ=dd.MM.yyyy") + НСтр("ru=' по ';uk='до '") +  Формат(ПериодПо,"ДФ=dd.MM.yyyy") + НСтр("ru=': лет - ';uk=': років - '") + 
													ВсегоЛет + НСтр("ru=', месяцев - ';uk=', місяців - '") + ВсегоМесяцев + НСтр("ru=', дней - ';uk=', днів - '") + ВсегоДней; 
												КонецПроцедуры
												
Функция ОчиститьСтраховойСтаж()
	
	Если СтраховойСтаж.Количество() > 0 Тогда
		
		ТекстВопроса = НСтр("ru='Очистить табличную часть?';uk='Очистити табличну частину?'");

		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да,);
			
		Если Ответ = КодВозвратаДиалога.Да Тогда
			СтраховойСтаж.Очистить();
			Возврат Истина;
		Иначе
			Возврат Ложь;
		КонецЕсли; 
		
	КонецЕсли;
	Возврат Ложь;
КонецФункции	
												
/////////////////////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// Установка кнопок печати
	УстановитьКнопкиПечати();
	
	// Установка кнопок заполнение ТЧ
	УстановитьКнопкиПодменюЗаполненияТЧ();

КонецПроцедуры

Процедура ПриОткрытии()
	
	Если ЭтоНовый() Тогда // проверить объект на то, что он еще не внесен в ИБ
		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект);
	Иначе 
		// Установить доступность формы с учетом даты запрета редактирования	
		РаботаСДиалогами.УстановитьДоступностьФормыДляРедактирования(ЭтотОбъект, ЭтаФорма);
		ОбновитьНадписьИтогПоДокументу();	
	КонецЕсли;
	
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю1,ЭлементыФормы.Номер);

КонецПроцедуры

// Процедура - обработчик события "ПослеЗаписи" формы.
//
Процедура ПослеЗаписи()

	// Установка кнопок печати
	УстановитьКнопкиПечати();
	// Вывести в заголовке формы статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
КонецПроцедуры // ПослеЗаписи()



	
	
