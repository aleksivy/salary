////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

// Форматирует сумму прописью документа
//
// Параметры:
//  СуммаДок - число - реквизит, который надо представить прописью 
//  СуммаБезКопеек - булево - флаг представления суммы без копеек
//
// Возвращаемое значение
//  Отформатированную строку
//
Функция ФорматироватьСуммуПрописи(СуммаДок)
	
	Результат     = СуммаДок;
	ЦелаяЧасть    = Цел(СуммаДок);
	ФорматСтрока  = "Л=uk_UA; ДП=Ложь";
	ПарамПредмета = "гривна, гривні, гривень, ж, копійка, копійки, копійок, ж, 2";
	
	Результат = ЧислоПрописью(Результат,ФорматСтрока,ПарамПредмета);
	
	Возврат Результат;
	
КонецФункции // ФорматироватьСуммуПрописи()

////////////////////////////////////////////////////////////////////////////////
// ПЕЧАТЬ
//

Функция ПолучитьЗапросДляПечатиПриложения(ВыборкаПоШапкеДокумента)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПериодРегистрации", ВыборкаПоШапкеДокумента.ПериодРегистрации);
	Запрос.УстановитьПараметр("ДокументСсылка", ВыборкаПоШапкеДокумента.Ссылка);
	Запрос.УстановитьПараметр("ДатаДокумента", ВыборкаПоШапкеДокумента.Дата);
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДокументыПоНачислениям.Документ.СерияБольничногоЛиста КАК Серия,
	|	ДокументыПоНачислениям.Документ.НомерБольничногоЛиста КАК Номер,
	|	ДокументыПоНачислениям.Документ.ПричинаНетрудоспособности КАК ПричинаНетрудоспособности,
	|	ДокументыПоНачислениям.Документ.ДатаНачала КАК ПериодНачало,
	|	ДокументыПоНачислениям.Документ.ДатаОкончания КАК ПериодКонец,
	|	ДокументыПоНачислениям.Документ КАК Документ
	|ПОМЕСТИТЬ ВТДокументыПоНачислениям
	|ИЗ
	|	Документ.ЗаявлениеРасчетВФСС.ДокументыПоНачислениям КАК ДокументыПоНачислениям
	|ГДЕ
	|	ДокументыПоНачислениям.Ссылка = &ДокументСсылка
	|	И ДокументыПоНачислениям.Документ ССЫЛКА Документ.НачислениеПоБольничномуЛисту
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ
	|";
	Запрос.Выполнить();

	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Начисления.ВидРасчета.НачислениеЗаСчетФСС КАК НачислениеЗаСчетФСС,
	|	Начисления.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени КАК ОбозначениеВТабелеУчетаРабочегоВремени,
	|	Начисления.ОплаченоДнейЧасов КАК ОплаченоДнейЧасов,
	|	Начисления.НормаДней КАК НормаДней,
	|	Начисления.Результат КАК Результат,
	|	Начисления.Сотрудник КАК Сотрудник,
	|	Начисления.Сотрудник.Физлицо.КодПоДРФО КАК КодПоДРФО,
	|	Начисления.Регистратор КАК Регистратор,
	|	Начисления.Сторно КАК Сторно
	|ПОМЕСТИТЬ ВТНачисления
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Начисления
	|ГДЕ
	|	Начисления.Регистратор В
	|			(ВЫБРАТЬ
	|				ДокументыПоНачислениям.Документ
	|			ИЗ
	|				ВТДокументыПоНачислениям КАК ДокументыПоНачислениям)
	|	И Начисления.Назначение.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
	|	И (Начисления.ВидРасчета.ЭтоБольничные = ИСТИНА
	|       ИЛИ Начисления.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ОтпускПоБеременностиИРодам))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор";
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ФИОФизЛицСрезПоследних.ФизЛицо 	КАК Физлицо,
	|	ФИОФизЛицСрезПоследних.Фамилия	 КАК Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя 		КАК Имя,
	|	ФИОФизЛицСрезПоследних.Отчество КАК Отчество
	|ПОМЕСТИТЬ ВТФИО
	|ИЗ
	|	РегистрСведений.ФИОФизЛиц.СрезПоследних(
	|			&ДатаДокумента,
	|			Физлицо В
	|				(ВЫБРАТЬ
	|					ВТНачисления.Сотрудник.Физлицо
	|				ИЗ
	|					ВТНачисления КАК ВТНачисления)) КАК ФИОФизЛицСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо";
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДокументыПоНачислениям.Серия КАК Серия,
	|	ДокументыПоНачислениям.Номер КАК Номер,
	|	ДокументыПоНачислениям.ПричинаНетрудоспособности КАК ПричинаНетрудоспособности,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА Начисления.НачислениеЗаСчетФСС = ИСТИНА И Начисления.Сторно = ЛОЖЬ
	|						И Начисления.Регистратор.ВидУчетаВремениДляСредней = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремениДляСредней.ПоКалендарнымДнямСПраздниками)
	|					ТОГДА Начисления.ОплаченоДнейЧасов
	|				КОГДА Начисления.НачислениеЗаСчетФСС = ИСТИНА И Начисления.Сторно = ЛОЖЬ
	|					ТОГДА Начисления.НормаДней
	|				ИНАЧЕ NULL
	|			КОНЕЦ, 0)) КАК КоличествоДнейФСС,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА Начисления.НачислениеЗаСчетФСС = ЛОЖЬ И Начисления.Сторно = ЛОЖЬ
	|						И Начисления.Регистратор.ВидУчетаВремениДляСредней = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремениДляСредней.ПоКалендарнымДнямСПраздниками)
	|					ТОГДА Начисления.ОплаченоДнейЧасов
	|				КОГДА Начисления.НачислениеЗаСчетФСС = ЛОЖЬ И Начисления.Сторно = ЛОЖЬ
	|					ТОГДА Начисления.НормаДней
	|				ИНАЧЕ NULL
	|			КОНЕЦ, 0)) КАК КоличествоДней,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА Начисления.НачислениеЗаСчетФСС = ИСТИНА
	|					ТОГДА Начисления.Результат
	|				ИНАЧЕ NULL
	|			КОНЕЦ, 0)) КАК РезультатФСС,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА Начисления.НачислениеЗаСчетФСС = ЛОЖЬ
	|					ТОГДА Начисления.Результат
	|				ИНАЧЕ NULL
	|			КОНЕЦ, 0)) КАК Результат,
	|	Начисления.Сотрудник,
	|	ФИО.Фамилия,
	|	ФИО.Имя,
	|	ФИО.Отчество,
	|	Начисления.КодПоДРФО КАК ДРФО,
	|	ДокументыПоНачислениям.ПериодНачало КАК ПериодНачало,
	|	ДокументыПоНачислениям.ПериодКонец КАК ПериодКонец
	|ИЗ
	|	ВТДокументыПоНачислениям КАК ДокументыПоНачислениям
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачисления КАК Начисления
	|		ПО ДокументыПоНачислениям.Документ = Начисления.Регистратор
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИО КАК ФИО
	|		ПО Начисления.Сотрудник.Физлицо = ФИО.Физлицо
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыПоНачислениям.Документ,
	|	ДокументыПоНачислениям.ПричинаНетрудоспособности,
	|	Начисления.Сотрудник,
	|	ФИО.Фамилия,
	|	ФИО.Имя,
	|	ФИО.Отчество,
	|	ДокументыПоНачислениям.Серия,
	|	ДокументыПоНачислениям.Номер,
	|	Начисления.КодПоДРФО,
	|	ДокументыПоНачислениям.ПериодНачало,
	|	ДокументыПоНачислениям.ПериодКонец";
	Возврат Запрос.Выполнить();
	
КонецФункции
Функция ПолучитьЗапросДляПечатиПриложения1_1(ВыборкаПоШапкеДокумента)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПериодРегистрации", ВыборкаПоШапкеДокумента.ПериодРегистрации);
	Запрос.УстановитьПараметр("ДокументСсылка", ВыборкаПоШапкеДокумента.Ссылка);
	Запрос.УстановитьПараметр("ДатаДокумента", ВыборкаПоШапкеДокумента.Дата);
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДокументыПоНачислениям.Документ.СерияБольничногоЛиста КАК Серия,
	|	ДокументыПоНачислениям.Документ.НомерБольничногоЛиста КАК Номер,
	|	ДокументыПоНачислениям.Документ.ПричинаНетрудоспособности КАК ПричинаНетрудоспособности,
	|	ДокументыПоНачислениям.Документ.ДатаНачала КАК ПериодНачало,
	|	ДокументыПоНачислениям.Документ.ДатаОкончания КАК ПериодКонец,
	|	ДокументыПоНачислениям.Документ КАК Документ,
	|	ВЫБОР
	|		КОГДА ДокументыПоНачислениям.Документ.ПервичныйБольничныйЛист = ЗНАЧЕНИЕ(Документ.НачислениеПоБольничномуЛисту.ПустаяСсылка)
	|			ТОГДА ""1""
	|		ИНАЧЕ ""2""
	|	КОНЕЦ КАК ЭтоПродолжениеБольничного,
	|	ДокументыПоНачислениям.СуммаЧАЭС КАК СуммаЧАЭС,
	|	ДокументыПоНачислениям.ДниЧАЭС КАК ДниЧАЭС,
	|	ДокументыПоНачислениям.НомерЧАЭС КАК НомерЧАЭС,
	|	ДокументыПоНачислениям.Документ.СтажВМесяцах КАК СтажВМесяцах,
	|	ДокументыПоНачислениям.Документ.СтажЗа12МесяцевВМесяцах КАК СтажЗа12МесяцевВМесяцах
	|ПОМЕСТИТЬ ВТДокументыПоНачислениям
	|ИЗ
	|	Документ.ЗаявлениеРасчетВФСС.Больничные КАК ДокументыПоНачислениям
	|ГДЕ
	|	ДокументыПоНачислениям.Ссылка = &ДокументСсылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументыПоНачислениям.Документ.СерияБольничногоЛиста,
	|	ДокументыПоНачислениям.Документ.НомерБольничногоЛиста,
	|	ДокументыПоНачислениям.Документ.ПричинаНетрудоспособности,
	|	ДокументыПоНачислениям.Документ.ДатаНачала,
	|	ДокументыПоНачислениям.Документ.ДатаОкончания,
	|	ДокументыПоНачислениям.Документ,
	|	ВЫБОР
	|		КОГДА ДокументыПоНачислениям.Документ.ПервичныйБольничныйЛист = ЗНАЧЕНИЕ(Документ.НачислениеПоБольничномуЛисту.ПустаяСсылка)
	|			ТОГДА ""1""
	|		ИНАЧЕ ""2""
	|	КОНЕЦ,
	|	ДокументыПоНачислениям.СуммаЧАЭС КАК СуммаЧАЭС,
	|	ДокументыПоНачислениям.ДниЧАЭС КАК ДниЧАЭС,
	|	ДокументыПоНачислениям.НомерЧАЭС КАК НомерЧАЭС,
	|	ДокументыПоНачислениям.Документ.СтажВМесяцах,
	|	ДокументыПоНачислениям.Документ.СтажЗа12МесяцевВМесяцах
	|ИЗ
	|	Документ.ЗаявлениеРасчетВФСС.Декретные КАК ДокументыПоНачислениям
	|ГДЕ
	|	ДокументыПоНачислениям.Ссылка = &ДокументСсылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ";
	Запрос.Выполнить();

	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Начисления.ВидРасчета.НачислениеЗаСчетФСС КАК НачислениеЗаСчетФСС,
	|	Начисления.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени КАК ОбозначениеВТабелеУчетаРабочегоВремени,
	|	Начисления.ОплаченоДнейЧасов КАК ОплаченоДнейЧасов,
	|	Начисления.Результат КАК Результат,
	|	Начисления.Сотрудник КАК Сотрудник,
	|	ВЫБОР КОГДА Начисления.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы) 
	|				ТОГДА ""1"" 
	|				ИНАЧЕ ""2"" КОНЕЦ КАК ВидЗанятости,
	|	Начисления.Сотрудник.Физлицо.КодПоДРФО КАК КодПоДРФО,
	|	Начисления.Регистратор КАК Регистратор,
	|	Начисления.Сторно КАК Сторно
	|ПОМЕСТИТЬ ВТНачисления
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Начисления
	|ГДЕ
	|	Начисления.Регистратор В
	|			(ВЫБРАТЬ
	|				ДокументыПоНачислениям.Документ
	|			ИЗ
	|				ВТДокументыПоНачислениям КАК ДокументыПоНачислениям)
	|	И Начисления.Назначение.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
	|	И (Начисления.ВидРасчета.ЭтоБольничные = ИСТИНА
	|       ИЛИ Начисления.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени = ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ОтпускПоБеременностиИРодам))
	|   И Начисления.Результат > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор";
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ФИОФизЛицСрезПоследних.ФизЛицо 	КАК Физлицо,
	|	ФИОФизЛицСрезПоследних.Фамилия	 КАК Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя 		КАК Имя,
	|	ФИОФизЛицСрезПоследних.Отчество КАК Отчество
	|ПОМЕСТИТЬ ВТФИО
	|ИЗ
	|	РегистрСведений.ФИОФизЛиц.СрезПоследних(
	|			&ДатаДокумента,
	|			Физлицо В
	|				(ВЫБРАТЬ
	|					ВТНачисления.Сотрудник.Физлицо
	|				ИЗ
	|					ВТНачисления КАК ВТНачисления)) КАК ФИОФизЛицСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо";
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДокументыПоНачислениям.Серия КАК Серия,
	|	ДокументыПоНачислениям.Номер КАК Номер,
	|	ДокументыПоНачислениям.ПричинаНетрудоспособности КАК ПричинаНетрудоспособности,
	|   Начисления.ВидЗанятости КАК ВидЗанятости,
	|   ДокументыПоНачислениям.СтажЗа12МесяцевВМесяцах КАК СтажЗа12МесяцевВМесяцах,
	|   ДокументыПоНачислениям.СтажВМесяцах КАК СтажВМесяцах,
	|   ДокументыПоНачислениям.ЭтоПродолжениеБольничного КАК ЭтоПродолжениеБольничного,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА Начисления.НачислениеЗаСчетФСС = ИСТИНА И Начисления.Сторно = ЛОЖЬ
	|						И Начисления.Регистратор.ВидУчетаВремениДляСредней = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремениДляСредней.ПоКалендарнымДнямСПраздниками)
	|					ТОГДА Начисления.ОплаченоДнейЧасов
	|				ИНАЧЕ NULL
	|			КОНЕЦ, 0)) КАК КоличествоДнейФСС,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА Начисления.НачислениеЗаСчетФСС = ЛОЖЬ И Начисления.Сторно = ЛОЖЬ
	|						И Начисления.Регистратор.ВидУчетаВремениДляСредней = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремениДляСредней.ПоКалендарнымДнямСПраздниками)
	|					ТОГДА Начисления.ОплаченоДнейЧасов
	|				ИНАЧЕ NULL
	|			КОНЕЦ, 0)) КАК КоличествоДней,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА Начисления.НачислениеЗаСчетФСС = ИСТИНА
	|					ТОГДА Начисления.Результат
	|				ИНАЧЕ NULL
	|			КОНЕЦ, 0)) КАК РезультатФСС,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА Начисления.НачислениеЗаСчетФСС = ЛОЖЬ
	|					ТОГДА Начисления.Результат
	|				ИНАЧЕ NULL
	|			КОНЕЦ, 0)) КАК Результат,
	|	Начисления.Сотрудник,
	|	ФИО.Фамилия,
	|	ФИО.Имя,
	|	ФИО.Отчество,
	|	Начисления.КодПоДРФО КАК ДРФО,
	|	ДокументыПоНачислениям.СуммаЧАЭС КАК СуммаЧАЭС,
	|	ДокументыПоНачислениям.ДниЧАЭС КАК ДниЧАЭС,
	|	ДокументыПоНачислениям.НомерЧАЭС КАК НомерЧАЭС,
	|	ДокументыПоНачислениям.ПериодНачало КАК ПериодНачало,
	|	ДокументыПоНачислениям.ПериодКонец КАК ПериодКонец
	|ИЗ
	|	ВТДокументыПоНачислениям КАК ДокументыПоНачислениям
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачисления КАК Начисления
	|		ПО ДокументыПоНачислениям.Документ = Начисления.Регистратор
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИО КАК ФИО
	|		ПО Начисления.Сотрудник.Физлицо = ФИО.Физлицо
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыПоНачислениям.Документ,
	|	ДокументыПоНачислениям.ПричинаНетрудоспособности,
	|	Начисления.ВидЗанятости,
	|   ДокументыПоНачислениям.СтажЗа12МесяцевВМесяцах,
	|   ДокументыПоНачислениям.СтажВМесяцах,
	|   ДокументыПоНачислениям.ЭтоПродолжениеБольничного,
	|	Начисления.Сотрудник,
	|	ФИО.Фамилия,
	|	ФИО.Имя,
	|	ФИО.Отчество,
	|	ДокументыПоНачислениям.Серия,
	|	ДокументыПоНачислениям.Номер,
	|	Начисления.КодПоДРФО,
	|	ДокументыПоНачислениям.СуммаЧАЭС,
	|	ДокументыПоНачислениям.ДниЧАЭС,
	|	ДокументыПоНачислениям.НомерЧАЭС,
	|	ДокументыПоНачислениям.ПериодНачало,
	|	ДокументыПоНачислениям.ПериодКонец";
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ПолучитьЗапросДляПечатиПриложения1_2(ВыборкаПоШапкеДокумента)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПериодРегистрации", ВыборкаПоШапкеДокумента.ПериодРегистрации);
	Запрос.УстановитьПараметр("ДокументСсылка", ВыборкаПоШапкеДокумента.Ссылка);
	Запрос.УстановитьПараметр("ДатаДокумента", ВыборкаПоШапкеДокумента.Дата);
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДокументыПоНачислениям.Документ КАК Документ,
	|	ДокументыПоНачислениям.Сотрудник КАК Сотрудник,
	|	ДокументыПоНачислениям.Сумма КАК Сумма,
	|	НачислениеЕдиновременныхПособийЗаСчетФССНачисления.ФамилияУмершего КАК ФамилияУмершего,
	|	НачислениеЕдиновременныхПособийЗаСчетФССНачисления.ИмяУмершего КАК ИмяУмершего,
	|	НачислениеЕдиновременныхПособийЗаСчетФССНачисления.ОтчествоУмершего КАК ОтчествоУмершего,
	|	НачислениеЕдиновременныхПособийЗаСчетФССНачисления.СвидетельствоСерия КАК СвидетельствоСерия,
	|	НачислениеЕдиновременныхПособийЗаСчетФССНачисления.СвидетельствоНомер КАК СвидетельствоНомер
	|ПОМЕСТИТЬ ВТДокументыПоНачислениям
	|ИЗ
	|	Документ.ЗаявлениеРасчетВФСС.ПособияНаПогребение КАК ДокументыПоНачислениям
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.НачислениеЕдиновременныхПособийЗаСчетФСС.Начисления КАК НачислениеЕдиновременныхПособийЗаСчетФССНачисления
	|		ПО ДокументыПоНачислениям.Документ.Ссылка = НачислениеЕдиновременныхПособийЗаСчетФССНачисления.Ссылка
	|			И ДокументыПоНачислениям.Сотрудник = НачислениеЕдиновременныхПособийЗаСчетФССНачисления.Сотрудник
	|ГДЕ
	|	ДокументыПоНачислениям.Ссылка = &ДокументСсылка
	|
	|СГРУППИРОВАТЬ ПО
	|	НачислениеЕдиновременныхПособийЗаСчетФССНачисления.ФамилияУмершего,
	|	НачислениеЕдиновременныхПособийЗаСчетФССНачисления.ОтчествоУмершего,
	|	ДокументыПоНачислениям.Документ,
	|	НачислениеЕдиновременныхПособийЗаСчетФССНачисления.СвидетельствоСерия,
	|	ДокументыПоНачислениям.Сотрудник,
	|	НачислениеЕдиновременныхПособийЗаСчетФССНачисления.СвидетельствоНомер,
	|	НачислениеЕдиновременныхПособийЗаСчетФССНачисления.ИмяУмершего,
	|	ДокументыПоНачислениям.Сумма
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ";
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Начисления.ВидРасчета.НачислениеЗаСчетФСС КАК НачислениеЗаСчетФСС,
	|	Начисления.Результат КАК Результат,
	|	Начисления.Сотрудник КАК Сотрудник,
	|	Начисления.Сотрудник.Физлицо.КодПоДРФО КАК КодПоДРФО,
	|	Начисления.Регистратор КАК Регистратор,
	|	Начисления.Сторно КАК Сторно
	|ПОМЕСТИТЬ ВТНачисления
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Начисления
	|ГДЕ
	|	Начисления.Регистратор В
	|			(ВЫБРАТЬ
	|				ДокументыПоНачислениям.Документ
	|			ИЗ
	|				ВТДокументыПоНачислениям КАК ДокументыПоНачислениям)
	|	И Начисления.Назначение.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
	|   И Начисления.Результат > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор";
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ФИОФизЛицСрезПоследних.ФизЛицо 	КАК Физлицо,
	|	ФИОФизЛицСрезПоследних.Фамилия	 КАК Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя 		КАК Имя,
	|	ФИОФизЛицСрезПоследних.Отчество КАК Отчество
	|ПОМЕСТИТЬ ВТФИО
	|ИЗ
	|	РегистрСведений.ФИОФизЛиц.СрезПоследних(
	|			&ДатаДокумента,
	|			Физлицо В
	|				(ВЫБРАТЬ
	|					ВТНачисления.Сотрудник.Физлицо
	|				ИЗ
	|					ВТНачисления КАК ВТНачисления)) КАК ФИОФизЛицСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо";
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДокументыПоНачислениям.СвидетельствоСерия КАК СвидетельствоСерия,
	|	ДокументыПоНачислениям.СвидетельствоНомер КАК СвидетельствоНомер,
	|	Начисления.Результат КАК Сумма,
	|	Начисления.Сотрудник,
	|	ФИО.Фамилия КАК Фамилия,
	|	ФИО.Имя КАК Имя,
	|	ФИО.Отчество КАК Отчество,
	|	Начисления.КодПоДРФО КАК ДРФО,
	|	ДокументыПоНачислениям.ФамилияУмершего КАК ФамилияУмершего,
	|	ДокументыПоНачислениям.ИмяУмершего КАК ИмяУмершего,
	|	ДокументыПоНачислениям.ОтчествоУмершего КАК ОтчествоУмершего
	|ИЗ
	|	ВТДокументыПоНачислениям КАК ДокументыПоНачислениям
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачисления КАК Начисления
	|		ПО ДокументыПоНачислениям.Документ = Начисления.Регистратор
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИО КАК ФИО
	|		ПО (Начисления.Сотрудник.Физлицо = ФИО.Физлицо)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыПоНачислениям.Документ,
	|	Начисления.Сотрудник,
	|	ФИО.Фамилия,
	|	ФИО.Имя,
	|	ФИО.Отчество,
	|	ДокументыПоНачислениям.СвидетельствоСерия,
	|	ДокументыПоНачислениям.СвидетельствоНомер,
	|	Начисления.КодПоДРФО,
	|	ДокументыПоНачислениям.ФамилияУмершего,
	|	ДокументыПоНачислениям.ИмяУмершего,
	|	ДокументыПоНачислениям.ОтчествоУмершего,
	|	Начисления.Результат
	|
	|УПОРЯДОЧИТЬ ПО
	|	Фамилия,
	|	Имя,
	|	Отчество";
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ПолучитьЗапросДляПечатиПриложения1_3(ВыборкаПоШапкеДокумента)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПериодРегистрации", ВыборкаПоШапкеДокумента.ПериодРегистрации);
	Запрос.УстановитьПараметр("ДокументСсылка", ВыборкаПоШапкеДокумента.Ссылка);
	Запрос.УстановитьПараметр("ДатаДокумента", ВыборкаПоШапкеДокумента.Дата);
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДокументыПоНачислениям.Документ.СерияБольничногоЛиста КАК Серия,
	|	ДокументыПоНачислениям.Документ.НомерБольничногоЛиста КАК Номер,
	|	ДокументыПоНачислениям.Документ.ПричинаНетрудоспособности КАК ПричинаНетрудоспособности,
	|	ДокументыПоНачислениям.Документ.ДатаНачала КАК ПериодНачало,
	|	ДокументыПоНачислениям.Документ.ДатаОкончания КАК ПериодКонец,
	|	ДокументыПоНачислениям.Документ КАК Документ
	|ПОМЕСТИТЬ ВТДокументыПоНачислениям
	|ИЗ
	|	Документ.ЗаявлениеРасчетВФСС.БольничныеНС КАК ДокументыПоНачислениям
	|ГДЕ
	|	ДокументыПоНачислениям.Ссылка = &ДокументСсылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ";
	Запрос.Выполнить();

	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Начисления.ВидРасчета.НачислениеЗаСчетФСС КАК НачислениеЗаСчетФСС,
	|	Начисления.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени КАК ОбозначениеВТабелеУчетаРабочегоВремени,
	|	Начисления.ОплаченоДнейЧасов КАК ОплаченоДнейЧасов,
	|	Начисления.Результат КАК Результат,
	|	Начисления.Сотрудник КАК Сотрудник,
	|	ВЫБОР КОГДА Начисления.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы) 
	|				ТОГДА ""1"" 
	|				ИНАЧЕ ""2"" КОНЕЦ КАК ВидЗанятости,
	|	Начисления.Сотрудник.Физлицо.КодПоДРФО КАК КодПоДРФО,
	|	Начисления.Регистратор КАК Регистратор,
	|	Начисления.Сторно КАК Сторно
	|ПОМЕСТИТЬ ВТНачисления
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Начисления
	|ГДЕ
	|	Начисления.Регистратор В
	|			(ВЫБРАТЬ
	|				ДокументыПоНачислениям.Документ
	|			ИЗ
	|				ВТДокументыПоНачислениям КАК ДокументыПоНачислениям)
	|	И Начисления.Назначение.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
	|	И (Начисления.ВидРасчета.ЭтоБольничные = ИСТИНА)
	|   И Начисления.Результат > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор";
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ФИОФизЛицСрезПоследних.ФизЛицо 	КАК Физлицо,
	|	ФИОФизЛицСрезПоследних.Фамилия	 КАК Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя 		КАК Имя,
	|	ФИОФизЛицСрезПоследних.Отчество КАК Отчество
	|ПОМЕСТИТЬ ВТФИО
	|ИЗ
	|	РегистрСведений.ФИОФизЛиц.СрезПоследних(
	|			&ДатаДокумента,
	|			Физлицо В
	|				(ВЫБРАТЬ
	|					ВТНачисления.Сотрудник.Физлицо
	|				ИЗ
	|					ВТНачисления КАК ВТНачисления)) КАК ФИОФизЛицСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо";
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДокументыПоНачислениям.Серия КАК Серия,
	|	ДокументыПоНачислениям.Номер КАК Номер,
	|	ДокументыПоНачислениям.ПричинаНетрудоспособности КАК ПричинаНетрудоспособности,
	|   Начисления.ВидЗанятости КАК ВидЗанятости,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА Начисления.НачислениеЗаСчетФСС = ИСТИНА И Начисления.Сторно = ЛОЖЬ
	|						И Начисления.Регистратор.ВидУчетаВремениДляСредней = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремениДляСредней.ПоКалендарнымДнямСПраздниками)
	|					ТОГДА Начисления.ОплаченоДнейЧасов
	|				ИНАЧЕ NULL
	|			КОНЕЦ, 0)) КАК КоличествоДнейФСС,
	|	СУММА(ЕСТЬNULL(ВЫБОР
	|				КОГДА Начисления.НачислениеЗаСчетФСС = ИСТИНА
	|					ТОГДА Начисления.Результат
	|				ИНАЧЕ NULL
	|			КОНЕЦ, 0)) КАК РезультатФСС,
	|	Начисления.Сотрудник,
	|	ФИО.Фамилия,
	|	ФИО.Имя,
	|	ФИО.Отчество,
	|	Начисления.КодПоДРФО КАК ДРФО,
	|	ДокументыПоНачислениям.ПериодНачало КАК ПериодНачало,
	|	ДокументыПоНачислениям.ПериодКонец КАК ПериодКонец
	|ИЗ
	|	ВТДокументыПоНачислениям КАК ДокументыПоНачислениям
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачисления КАК Начисления
	|		ПО ДокументыПоНачислениям.Документ = Начисления.Регистратор
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИО КАК ФИО
	|		ПО Начисления.Сотрудник.Физлицо = ФИО.Физлицо
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыПоНачислениям.Документ,
	|	ДокументыПоНачислениям.ПричинаНетрудоспособности,
	|	Начисления.ВидЗанятости,
	|	Начисления.Сотрудник,
	|	ФИО.Фамилия,
	|	ФИО.Имя,
	|	ФИО.Отчество,
	|	ДокументыПоНачислениям.Серия,
	|	ДокументыПоНачислениям.Номер,
	|	Начисления.КодПоДРФО,
	|	ДокументыПоНачислениям.ПериодНачало,
	|	ДокументыПоНачислениям.ПериодКонец";
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ПолучитьЗапросПоКодам() 
	 
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	КодыОрганизацииСрезПоследних.НомерФСС КАК НомерРегистрации,
	               |	КодыОрганизацииСрезПоследних.КодПоЕДРПОУ,
	               |	КодыОрганизацииСрезПоследних.ИНН,
	               |	КодыОрганизацииСрезПоследних.КодКВЕД,
	               |	КодыОрганизацииСрезПоследних.ФИОДиректораФонда,
	               |	КодыОрганизацииСрезПоследних.КлассПрофессиональногоРиска,
	               |	КодыОрганизацииСрезПоследних.НазваниеРабочегоОрганаФонда
	               |ИЗ
	               |	РегистрСведений.КодыОрганизации.СрезПоследних(&ПериодРегистрации, Организация = &Организация) КАК КодыОрганизацииСрезПоследних";
	 
	 Запрос.УстановитьПараметр("Организация",Организация );
	 Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
	 
	 Возврат Запрос.Выполнить();

КонецФункции

#Если Клиент Тогда
	
Функция ПечатьЗаявка() Экспорт
	
	ТабДокумент = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("Заявка");
	
	//Шапка 
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");

	СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, ПериодРегистрации,, Организация.БанковскийСчетДляРасчетовСФСС);

	ОбластьШапка.Параметры.Организация = СведенияОбОрганизации.ПолноеНаименование;

	//Получим данные из РС КодыОрганизаций
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КодыОрганизацииСрезПоследних.НомерФСС КАК НомерРегистрации,
	|	КодыОрганизацииСрезПоследних.НазваниеРабочегоОрганаФонда,
	|	КодыОрганизацииСрезПоследних.ФИОДиректораФонда,
	|	КодыОрганизацииСрезПоследних.КодПоЕДРПОУ
	|ИЗ
	|	РегистрСведений.КодыОрганизации.СрезПоследних(&ПериодРегистрации, Организация = &Организация) КАК КодыОрганизацииСрезПоследних";

	Запрос.УстановитьПараметр("Организация",Организация );
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);

	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();

	Если Выборка.Следующий() Тогда
		ОбластьШапка.Параметры.ФИОДиректораФонда = Выборка.ФИОДиректораФонда;
		ОбластьШапка.Параметры.НазваниеРабочегоОрганаФонда = Выборка.НазваниеРабочегоОрганаФонда;
		ОбластьШапка.Параметры.КодПоЕДРПОУ = Выборка.КодПоЕДРПОУ;
		ОбластьШапка.Параметры.НомерРегистрации = Выборка.НомерРегистрации;
	КонецЕсли;

	ОбластьШапка.Параметры.Адрес = СведенияОбОрганизации.ЮридическийАдрес;	 
	ОбластьШапка.Параметры.Телефон = СведенияОбОрганизации.Телефоны;	 

	ОбластьШапка.Параметры.НомерСчета = СведенияОбОрганизации.НомерСчета;
	ОбластьШапка.Параметры.МФОБанкаОрганизации = СведенияОбОрганизации.МФО;
	ТабДокумент.Вывести(ОбластьШапка);
	
	//Заголовок
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
    ТабДокумент.Вывести(ОбластьЗаголовок);	
	
	//ШапкаТаблицы
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабДокумент.Вывести(ОбластьШапкаТаблицы);
	
	//СтрокаВремНетрудоспособность
	ОбластьВремНетрудоспособность = Макет.ПолучитьОбласть("СтрокаВремНетрудоспособность");
	ОбластьВремНетрудоспособность.Параметры.Сумма = Формат(ВсегоПоБольничным,"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
	ОбластьВремНетрудоспособность.Параметры.Дни = КоличествоДнейПоБольничным;
	ТабДокумент.Вывести(ОбластьВремНетрудоспособность);
	
	//СтрокаВремНетрудоспособностьУход
	ОбластьВремНетрудоспособностьУход = Макет.ПолучитьОбласть("СтрокаВремНетрудоспособностьУход");
	ОбластьВремНетрудоспособностьУход.Параметры.Сумма = Формат(ВсегоПоБольничнымПоУходу,"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
	ОбластьВремНетрудоспособностьУход.Параметры.Дни = КоличествоДнейПоБольничнымПоУходу;
	ТабДокумент.Вывести(ОбластьВремНетрудоспособностьУход);
	
	//СтрокаВремНетрудоспособностьБерем
	ОбластьВремНетрудоспособностьБерем = Макет.ПолучитьОбласть("СтрокаВремНетрудоспособностьБерем");
	ОбластьВремНетрудоспособностьБерем.Параметры.Сумма = Формат(ВсегоПоБеременностиИРодам,"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
	ОбластьВремНетрудоспособностьБерем.Параметры.Дни = КоличествоДнейПоБеременостиИРодам;
	ТабДокумент.Вывести(ОбластьВремНетрудоспособностьБерем);

	//СтрокаВремНетрудоспособностьПогребение 
	ОбластьВремНетрудоспособностьПогребение = Макет.ПолучитьОбласть("СтрокаВремНетрудоспособностьПогребение");
	ОбластьВремНетрудоспособностьПогребение.Параметры.Сумма = Формат(ВсегоНаПогребение,"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
	ТабДокумент.Вывести(ОбластьВремНетрудоспособностьПогребение);
	
	//Итог
	ОбластьИтог = Макет.ПолучитьОбласть("Итог");
	ОбластьИтог.Параметры.СуммаИтог = Формат(ВсегоПоДокументу,"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
	ТабДокумент.Вывести(ОбластьИтог);
	
	Возврат ТабДокумент;
	
КонецФункции	 

Функция ПечатьПриложение() Экспорт
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	Макет = ПолучитьМакет("Приложение");
	
	//Шапка 
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ТабДокумент.Вывести(ОбластьШапка);
	
	//СтрокаПоБольничным
	ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаПоБольничным");
	НомерСтроки = 1;
	РезультатЗапросаПоШапке = СформироватьЗапросПоШапке();
	ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();
	Если ВыборкаПоШапкеДокумента.Следующий() Тогда
		
		РезультатЗапросаПоДокументам = ПолучитьЗапросДляПечатиПриложения(ВыборкаПоШапкеДокумента);
		ВыборкаПоДокументам = РезультатЗапросаПоДокументам.Выбрать();
		ТаблицаНачислений = СгруппироватьПериодыНачислений(ВыборкаПоДокументам, "Приложение");
		
		Для Каждого Начисление ИЗ ТаблицаНачислений Цикл
			Если Не Начисление.РезультатФСС = 0 Тогда
			 ОбластьСтрока.Параметры.Номер = НомерСтроки;
			 ОбластьСтрока.Параметры.Сотрудник 					= Начисление.Фамилия + " " + Начисление.Имя + " " + Начисление.Отчество;
			 ОбластьСтрока.Параметры.КодПоДРФО 					= Начисление.ДРФО;
			 ОбластьСтрока.Параметры.СерияНомер 				= Начисление.Серия + " " + Начисление.Номер;
			 ОбластьСтрока.Параметры.ПричинаНетрудоспособности  = Начисление.ПричинаНетрудоспособности.КодПричины;
			 ОбластьСтрока.Параметры.ПериодНетрудоспособности   = "З " + Формат(Начисление.ПериодНачало, "ДЛФ=Д") + " по " + Формат(Начисление.ПериодКонец, "ДЛФ=Д");
			 ОбластьСтрока.Параметры.КоличествоДней 			= Начисление.КоличествоДней;
			 ОбластьСтрока.Параметры.КоличествоДнейФСС 			= Начисление.КоличествоДнейФСС;
			 ОбластьСтрока.Параметры.Результат 					= Формат(Начисление.Результат,"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
			 ОбластьСтрока.Параметры.РезультатФСС 				= Формат(Начисление.РезультатФСС,"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
			 
			 ТабДокумент.Присоединить(ОбластьСтрока);
			 
			 НомерСтроки = НомерСтроки +1;
		 КонецЕсли;
	    КонецЦикла;
		 
	КонецЕсли;
		
	//Подпись
	ОбластьПодпись = Макет.ПолучитьОбласть("Подпись");
	
	ЧислоДокумента                          = Формат(Дата,"ДФ='дд';Л=uk_UA");
    ДатаДокумента                           = Формат(Дата,"ДФ='дд ММММ ггггр.';Л=uk_UA");
	ДатаДокументаБезЧисла                   = Прав(ДатаДокумента, СтрДлина(ДатаДокумента) - 2);
	ОбластьПодпись.Параметры.ДатаДокумента 	= ЧислоДокумента + ДатаДокументаБезЧисла;

	Руководители = ФормированиеПечатныхФорм.ОтветственныеЛица(Организация, Дата);

	Если ЗначениеЗаполнено(Руководители.Руководитель) Тогда
		ОбластьПодпись.Параметры.ФИОРуководителя = Руководители.РуководительФИО.Фамилия	    + " " + Руководители.РуководительФИО.Имя	 + " " + Руководители.РуководительФИО.Отчество;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Руководители.ГлавныйБухгалтер) Тогда
		ОбластьПодпись.Параметры.ФИОБухгалтера   = Руководители.ГлавныйБухгалтерФИО.Фамилия + " " + Руководители.ГлавныйБухгалтерФИО.Имя + " " + Руководители.ГлавныйБухгалтерФИО.Отчество;
	КонецЕсли;

	ТабДокумент.Вывести(ОбластьПодпись);
   
	Возврат ТабДокумент;
	
КонецФункции

Функция ПечатьЗаявкаНС() Экспорт 
	
	ТабДокумент = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("ЗаявкаНС");
	
	//Шапка 
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	
	 
	 
	 
	 
	 
	 
	 
	 
	СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, ПериодРегистрации,, Организация.БанковскийСчетДляРасчетовСФСС);
	
	ОбластьШапка.Параметры.Организация = СведенияОбОрганизации.ПолноеНаименование;
	
	//Получим данные из РС КодыОрганизаций
	 Результат = ПолучитьЗапросПоКодам();
	 Выборка = Результат.Выбрать();
	 
	 Если Выборка.Следующий() Тогда
			 ОбластьШапка.Параметры.КодПоЕДРПОУ = Выборка.КодПоЕДРПОУ;
			 ОбластьШапка.Параметры.НомерРегистрации = Выборка.НомерРегистрации;
			 ОбластьШапка.Параметры.ИНН = Выборка.ИНН;
			 ОбластьШапка.Параметры.КВЕД = Выборка.КодКВЕД;
			 ОбластьШапка.Параметры.Риск = Выборка.КлассПрофессиональногоРиска;
	 КонецЕсли;
	 
	ОбластьШапка.Параметры.Адрес = СведенияОбОрганизации.ЮридическийАдрес;	 
	ОбластьШапка.Параметры.Телефон = СведенияОбОрганизации.Телефоны;	 

	ОбластьШапка.Параметры.НомерСчета = СведенияОбОрганизации.НомерСчета;
	ОбластьШапка.Параметры.МФОБанкаОрганизации = СведенияОбОрганизации.МФО;
	ОбластьШапка.Параметры.Банк = СведенияОбОрганизации.Банк;	
	
	ОбластьШапка.Параметры.Месяц = Формат(ПериодРегистрации, "ДФ=MMMM;Л = uk_UA");;
	ОбластьШапка.Параметры.Год = Год(ПериодРегистрации);
	 
	ТабДокумент.Вывести(ОбластьШапка);
	
	//Шапка помощь 
	ОбластьШапка = Макет.ПолучитьОбласть("ШапкаПомощь");
	ТабДокумент.Вывести(ОбластьШапка);
	
	//Строка Помощь
	ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаПомощь");
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаявлениеРасчетВФССДокументыПоНачислениям.НомерСтроки КАК Номер,
	               |	ЗаявлениеРасчетВФССДокументыПоНачислениям.Документ.НомерБольничногоЛиста КАК НомерБЛ,
	               |	ЗаявлениеРасчетВФССДокументыПоНачислениям.Документ.СерияБольничногоЛиста КАК СерияБЛ,
	               |	ЗаявлениеРасчетВФССДокументыПоНачислениям.Документ.Сотрудник КАК Сотрудник,
	               |	ЗаявлениеРасчетВФССДокументыПоНачислениям.Документ КАК Документ,
	               |	ЗаявлениеРасчетВФСС.Комментарий
	               |ИЗ
	               |	Документ.ЗаявлениеРасчетВФСС.ДокументыПоНачислениям КАК ЗаявлениеРасчетВФССДокументыПоНачислениям
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаявлениеРасчетВФСС КАК ЗаявлениеРасчетВФСС
	               |		ПО ЗаявлениеРасчетВФССДокументыПоНачислениям.Ссылка = ЗаявлениеРасчетВФСС.Ссылка
	               |ГДЕ
	               |	ЗаявлениеРасчетВФССДокументыПоНачислениям.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка",Ссылка );
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл  
		
		РезультатЗапросаПоШапке = СформироватьЗапросПоШапке();
		ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();
		Если ВыборкаПоШапкеДокумента.Следующий() Тогда
			РезультатЗапросаПоДокументам = ПолучитьЗапросДляРасчетаСумм(ВыборкаПоШапкеДокумента);
			ВыборкаПоДокументам = РезультатЗапросаПоДокументам.Выбрать();
					
			Пока ВыборкаПоДокументам.Следующий() Цикл
				Если ВыборкаПоДокументам.Документ = Выборка.Документ Тогда
					Если НЕ ВыборкаПоДокументам.Результат = 0 Тогда
					ОбластьСтрока.Параметры.Номер = Выборка.Номер;
					ОбластьСтрока.Параметры.СерияНомер = Выборка.СерияБЛ + " " + Выборка.НомерБЛ;
					ОбластьСтрока.Параметры.Сотрудник  = Выборка.Сотрудник;

					Сумма = ВыборкаПоДокументам.Результат;
					СтрокаСуммы = ОбщегоНазначения.СформироватьСуммуПрописью(Сумма, Константы.ВалютаРегламентированногоУчета.Получить(), "uk");
					СтрокаСуммы  = СтрокаСуммы + " (" + Цел(Сумма) + " грн. " + Формат((Сумма - Цел(Сумма)) * 100, "ЧЦ=2; ЧВН=") + " коп.)";
					ОбластьСтрока.Параметры.Результат  = СтрокаСуммы;  
					ОбластьСтрока.Параметры.Комментарий = Выборка.Комментарий;
					
					ТабДокумент.Присоединить(ОбластьСтрока);

					КонецЕсли;
				КонецЕсли;
            КонецЦикла;
		КонецЕсли;
		

	КонецЦикла;
	
	
	//Шапка траты 
	ОбластьШапка = Макет.ПолучитьОбласть("ШапкаТраты");
	ТабДокумент.Вывести(ОбластьШапка);

    //Шапка погребение
	ОбластьШапка = Макет.ПолучитьОбласть("ШапкаПогребение");
	ТабДокумент.Вывести(ОбластьШапка);
	
	//Подпись
	ОбластьПодпись = Макет.ПолучитьОбласть("Подпись");
	
	//Получим данные из РС КодыОрганизаций
	 Результат = ПолучитьЗапросПоКодам();
	 Выборка = Результат.Выбрать();
	 
	 Если Выборка.Следующий() Тогда
		 ОбластьПодпись.Параметры.ФИОДиректораФонда = Выборка.ФИОДиректораФонда;
	 КонецЕсли;
	 
	 Руководители = ФормированиеПечатныхФорм.ОтветственныеЛица(Организация, Дата);

	 Если ЗначениеЗаполнено(Руководители.Руководитель) Тогда
		 ОбластьПодпись.Параметры.ФИОРуководителя = Руководители.РуководительФИО.Фамилия	    + " " + Руководители.РуководительФИО.Имя	 + " " + Руководители.РуководительФИО.Отчество;
	 КонецЕсли;
	
	 Если ЗначениеЗаполнено(Руководители.ГлавныйБухгалтер) Тогда
		 ОбластьПодпись.Параметры.ФИОБухгалтера   = Руководители.ГлавныйБухгалтерФИО.Фамилия + " " + Руководители.ГлавныйБухгалтерФИО.Имя + " " + Руководители.ГлавныйБухгалтерФИО.Отчество;
	 КонецЕсли;


	 ТабДокумент.Вывести(ОбластьПодпись);

	
	Возврат ТабДокумент;

КонецФункции

Функция ПечатьЗаявка2018() Экспорт
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Заявка2018";
	Макет = ПолучитьМакет("Заявка2018");
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	//Шапка 
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	
	
	
	
	
	
	
	
	
	
	СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, Дата,, Организация.БанковскийСчетДляРасчетовСФСС);
	
	ОбластьШапка.Параметры.Организация = СведенияОбОрганизации.ПолноеНаименование;
	ОбластьШапка.Параметры.КодПоЕДРПОУ = СведенияОбОрганизации.КодПоЕДРПОУ;
	
	ОбластьШапка.Параметры.Адрес = СведенияОбОрганизации.ЮридическийАдрес;	 
	ОбластьШапка.Параметры.Телефон = СведенияОбОрганизации.Телефоны;	 
	Если Дата <= глЗначениеПеременной("ДатаОкончанияПереходаНаСтандартIBAN") Тогда
		ОбластьШапка.Параметры.НомерСчета = ?(ЗначениеЗаполнено(СведенияОбОрганизации.НомерСчетаУстаревший), СведенияОбОрганизации.НомерСчетаУстаревший, СведенияОбОрганизации.НомерСчета);
	Иначе
		ОбластьШапка.Параметры.НомерСчета = СведенияОбОрганизации.НомерСчета;
	КонецЕсли;	
	ОбластьШапка.Параметры.МФОБанкаОрганизации = СведенияОбОрганизации.МФО;
	ОбластьШапка.Параметры.НаименованиеБанка = СведенияОбОрганизации.Банк;	
	ТабДокумент.Вывести(ОбластьШапка);
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	//ШапкаТаблицы
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабДокумент.Вывести(ОбластьШапкаТаблицы);
	
	//СтрокаВремНетрудоспособность
	ОбластьВремНетрудоспособность = Макет.ПолучитьОбласть("СтрокаВремНетрудоспособность");
	ОбластьВремНетрудоспособность.Параметры.Сумма = Формат(Больничные.Итог("Сумма"),"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
	ОбластьВремНетрудоспособность.Параметры.Дни = Больничные.Итог("Дни");
	ОбластьВремНетрудоспособность.Параметры.СуммаЧАЭС = Формат(Больничные.Итог("СуммаЧАЭС"),"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
	ОбластьВремНетрудоспособность.Параметры.ДниЧАЭС = Больничные.Итог("ДниЧАЭС");
	ОбластьВремНетрудоспособность.Параметры.Отметка1 = (Больничные.Итог("Сумма") > 0);
	ТабДокумент.Вывести(ОбластьВремНетрудоспособность);
	
	//СтрокаВремНетрудоспособностьБерем
	ОбластьВремНетрудоспособностьБерем = Макет.ПолучитьОбласть("СтрокаВремНетрудоспособностьБерем");
	ОбластьВремНетрудоспособностьБерем.Параметры.Сумма = Формат(Декретные.Итог("Сумма"),"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
	ОбластьВремНетрудоспособностьБерем.Параметры.Дни = Декретные.Итог("Дни");
	ОбластьВремНетрудоспособностьБерем.Параметры.СуммаЧАЭС = Формат(Декретные.Итог("СуммаЧАЭС"),"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
	ОбластьВремНетрудоспособностьБерем.Параметры.ДниЧАЭС = Декретные.Итог("ДниЧАЭС");
	ОбластьВремНетрудоспособностьБерем.Параметры.Отметка11 = (Декретные.Итог("Сумма") > 0);
	ТабДокумент.Вывести(ОбластьВремНетрудоспособностьБерем);
	
	//СтрокаВремНетрудоспособностьПогребение 
	ОбластьВремНетрудоспособностьПогребение = Макет.ПолучитьОбласть("СтрокаВремНетрудоспособностьПогребение");
	ОбластьВремНетрудоспособностьПогребение.Параметры.Сумма = Формат(ПособияНаПогребение.Итог("Сумма"),"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
	ОбластьВремНетрудоспособностьПогребение.Параметры.КоличествоЛиц = ПособияНаПогребение.Количество();
	ОбластьВремНетрудоспособностьПогребение.Параметры.Отметка2 = (ПособияНаПогребение.Итог("Сумма") > 0);
	ТабДокумент.Вывести(ОбластьВремНетрудоспособностьПогребение);
	
	//СтрокаВремНетрудоспособностьНС
	ОбластьВремНетрудоспособностьНС = Макет.ПолучитьОбласть("СтрокаВремНетрудоспособностьНС");
	ОбластьВремНетрудоспособностьНС.Параметры.Сумма = Формат(БольничныеНС.Итог("Сумма"),"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
	ОбластьВремНетрудоспособностьНС.Параметры.Дни = БольничныеНС.Итог("Дни");
	ОбластьВремНетрудоспособностьНС.Параметры.Отметка3 = (БольничныеНС.Итог("Сумма") > 0);
	ТабДокумент.Вывести(ОбластьВремНетрудоспособностьНС);
	
	ОбластьПрочее = Макет.ПолучитьОбласть("СтрокаПрочее");
	ТабДокумент.Вывести(ОбластьПрочее);
	
	//Итог
	ОбластьИтог = Макет.ПолучитьОбласть("Итог");
	СуммаИтог = Больничные.Итог("Сумма") + БольничныеНС.Итог("Сумма") + Декретные.Итог("Сумма") + ПособияНаПогребение.Итог("Сумма"); 
	ОбластьИтог.Параметры.СуммаИтог = Формат(СуммаИтог,"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
	ТабДокумент.Вывести(ОбластьИтог);
	
	ОбластьПодпись = Макет.ПолучитьОбласть("Подпись");
	
	ЧислоДокумента                          = Формат(Дата,"ДФ='дд';Л=uk_UA");
	ДатаДокумента                           = Формат(Дата,"ДФ='дд ММММ ггггр.';Л=uk_UA");
	ДатаДокументаБезЧисла                   = Прав(ДатаДокумента, СтрДлина(ДатаДокумента) - 2);
	ОбластьПодпись.Параметры.ДатаДокумента 	= ЧислоДокумента + ДатаДокументаБезЧисла;
	
	Руководители = ФормированиеПечатныхФорм.ОтветственныеЛица(Организация, Дата);
	
	Если ЗначениеЗаполнено(Руководители.Руководитель) Тогда
		ОбластьПодпись.Параметры.ФИОРуководителя = Руководители.РуководительФИО.Фамилия	    + " " + Руководители.РуководительФИО.Имя	 + " " + Руководители.РуководительФИО.Отчество;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Руководители.ГлавныйБухгалтер) Тогда
		ОбластьПодпись.Параметры.ФИОБухгалтера   = Руководители.ГлавныйБухгалтерФИО.Фамилия + " " + Руководители.ГлавныйБухгалтерФИО.Имя + " " + Руководители.ГлавныйБухгалтерФИО.Отчество;
	КонецЕсли;
	
	ТабДокумент.Вывести(ОбластьПодпись);
	
	Возврат ТабДокумент;
	
КонецФункции	 

Функция ПечатьПриложение1_1() Экспорт
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Приложение1_1";
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	Макет = ПолучитьМакет("Приложение1_1");
	
	//Шапка 
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ТабДокумент.Вывести(ОбластьШапка);
	
	//СтрокаПоБольничным
	ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаПоБольничным");
	НомерСтроки = 1;
	РезультатЗапросаПоШапке = СформироватьЗапросПоШапке();
	ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();
	Если ВыборкаПоШапкеДокумента.Следующий() Тогда
		
		РезультатЗапросаПоДокументам = ПолучитьЗапросДляПечатиПриложения1_1(ВыборкаПоШапкеДокумента);
		ВыборкаПоДокументам = РезультатЗапросаПоДокументам.Выбрать();
		ТаблицаНачислений = СгруппироватьПериодыНачислений(ВыборкаПоДокументам, "Приложение1_1");
		
		Для Каждого Начисление ИЗ ТаблицаНачислений Цикл
			Если Не Начисление.РезультатФСС = 0 Тогда
				ОбластьСтрока.Параметры.НомерСтроки = НомерСтроки;
				ОбластьСтрока.Параметры.Фамилия 					= Начисление.Фамилия;
				ОбластьСтрока.Параметры.Имя							= Начисление.Имя;
				ОбластьСтрока.Параметры.Отчество					= Начисление.Отчество;
				ОбластьСтрока.Параметры.КодПоДРФО 					= Начисление.ДРФО;
				ОбластьСтрока.Параметры.Серия		 				= Начисление.Серия;
				ОбластьСтрока.Параметры.Номер						= Начисление.Номер;
				ОбластьСтрока.Параметры.ВидЗанятости 			    = Начисление.ВидЗанятости;
				ОбластьСтрока.Параметры.ПричинаНетрудоспособности   = Начисление.ПричинаНетрудоспособности.КодПричины;
				ОбластьСтрока.Параметры.ДатаНачала  				= Формат(Начисление.ПериодНачало, "ДЛФ=Д");
				ОбластьСтрока.Параметры.ДатаОкончания 				= Формат(Начисление.ПериодКонец, "ДЛФ=Д");
				ОбластьСтрока.Параметры.КоличествоДней 				= Начисление.КоличествоДней;
				ОбластьСтрока.Параметры.КоличествоДнейФСС 			= Начисление.КоличествоДнейФСС;
				ОбластьСтрока.Параметры.Результат 					= Формат(Начисление.Результат,"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
				ОбластьСтрока.Параметры.РезультатФСС 				= Формат(Начисление.РезультатФСС,"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
				ОбластьСтрока.Параметры.СтажВМесяцах				= Начисление.СтажВМесяцах;
				ОбластьСтрока.Параметры.СтажЗа12МесяцевВМесяцах		= Начисление.СтажЗа12МесяцевВМесяцах;
				ОбластьСтрока.Параметры.ЭтоПродолжениеБольничного	= Начисление.ЭтоПродолжениеБольничного;
				ОбластьСтрока.Параметры.СуммаЧАЭС 					= Формат(Начисление.СуммаЧАЭС,"ЧЦ=15; ЧДЦ=2; ЧГ=");
				ОбластьСтрока.Параметры.ДниЧАЭС 					= Начисление.ДниЧАЭС;
				ОбластьСтрока.Параметры.НомерЧАЭС 					= Начисление.НомерЧАЭС;
				ТабДокумент.Присоединить(ОбластьСтрока);
				
				НомерСтроки = НомерСтроки +1;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
		
	//Подпись
	ОбластьПодпись = Макет.ПолучитьОбласть("Подпись");
	Исполнитель = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Организация, Дата, Ответственный);
    ОбластьПодпись.Параметры.Ответственный = Исполнитель.Исполнитель;
	ОбластьПодпись.Параметры.ДолжностьОтветственного = Исполнитель.ИсполнительДолжность;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КонтактнаяИнформация.Представление КАК Телефон
	|ИЗ
	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ
	|	КонтактнаяИнформация.Объект = &Объект
	|	И КонтактнаяИнформация.Тип = &Тип
	|	И КонтактнаяИнформация.Вид = &Вид";
	
	Запрос.УстановитьПараметр("Объект", Организация );
	Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.Телефон);
	Запрос.УстановитьПараметр("Вид", Справочники.ВидыКонтактнойИнформации.ТелефонОрганизации);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		ОбластьПодпись.Параметры.Телефон = ФормированиеПечатныхФорм.ПолучитьТелефонДляНалоговойНакладной(Выборка.Телефон);;	 
	КонецЕсли;
	
	ТабДокумент.Вывести(ОбластьПодпись);
   
	Возврат ТабДокумент;
	
КонецФункции

Функция ПечатьПриложение1_2() Экспорт
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Приложение1_2";
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	Макет = ПолучитьМакет("Приложение1_2");
	
	//Шапка 
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ТабДокумент.Вывести(ОбластьШапка);
	
	//СтрокаПоПособиям
	ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаПоПособиям");
	НомерСтроки = 1;
	РезультатЗапросаПоШапке = СформироватьЗапросПоШапке();
	ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();
	Если ВыборкаПоШапкеДокумента.Следующий() Тогда
		
		РезультатЗапросаПоДокументам = ПолучитьЗапросДляПечатиПриложения1_2(ВыборкаПоШапкеДокумента);
		ВыборкаПоДокументам = РезультатЗапросаПоДокументам.Выбрать();
		
		Пока ВыборкаПоДокументам.Следующий() Цикл 
			ОбластьСтрока.Параметры.Номер = НомерСтроки;
			ОбластьСтрока.Параметры.Фамилия 					= ВыборкаПоДокументам.Фамилия;
			ОбластьСтрока.Параметры.Имя							= ВыборкаПоДокументам.Имя;
			ОбластьСтрока.Параметры.Отчество					= ВыборкаПоДокументам.Отчество;
			ОбластьСтрока.Параметры.КодПоДРФО 					= ВыборкаПоДокументам.ДРФО;
			ОбластьСтрока.Параметры.ФамилияУмершего 			= ВыборкаПоДокументам.ФамилияУмершего;
			ОбластьСтрока.Параметры.ИмяУмершего					= ВыборкаПоДокументам.ИмяУмершего;
			ОбластьСтрока.Параметры.ОтчествоУмершего			= ВыборкаПоДокументам.ОтчествоУмершего;
			ОбластьСтрока.Параметры.СвидетельствоСерия			= ВыборкаПоДокументам.СвидетельствоСерия;
			ОбластьСтрока.Параметры.СвидетельствоНомер			= ВыборкаПоДокументам.СвидетельствоНомер;
			ОбластьСтрока.Параметры.Сумма 					    = Формат(ВыборкаПоДокументам.Сумма,"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
			ТабДокумент.Присоединить(ОбластьСтрока);
			
			НомерСтроки = НомерСтроки +1;
		КонецЦикла;
		
	КонецЕсли;
	
	//Подпись
	ОбластьПодпись = Макет.ПолучитьОбласть("Подпись");
	Исполнитель = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Организация, Дата, Ответственный);
    ОбластьПодпись.Параметры.Ответственный = Исполнитель.Исполнитель;
	ОбластьПодпись.Параметры.ДолжностьОтветственного = Исполнитель.ИсполнительДолжность;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КонтактнаяИнформация.Представление КАК Телефон
	|ИЗ
	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ
	|	КонтактнаяИнформация.Объект = &Объект
	|	И КонтактнаяИнформация.Тип = &Тип
	|	И КонтактнаяИнформация.Вид = &Вид";
	
	Запрос.УстановитьПараметр("Объект", Организация );
	Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.Телефон);
	Запрос.УстановитьПараметр("Вид", Справочники.ВидыКонтактнойИнформации.ТелефонОрганизации);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		ОбластьПодпись.Параметры.Телефон = ФормированиеПечатныхФорм.ПолучитьТелефонДляНалоговойНакладной(Выборка.Телефон);;	 
	КонецЕсли;

	ТабДокумент.Вывести(ОбластьПодпись);
   
	Возврат ТабДокумент;
	
КонецФункции

Функция ПечатьПриложение1_3() Экспорт
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Приложение1_3";
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	Макет = ПолучитьМакет("Приложение1_3");
	
	//Шапка 
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ТабДокумент.Вывести(ОбластьШапка);
	
	//СтрокаПоБольничным
	ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаПоБольничным");
	НомерСтроки = 1;
	РезультатЗапросаПоШапке = СформироватьЗапросПоШапке();
	ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();
	Если ВыборкаПоШапкеДокумента.Следующий() Тогда
		
		РезультатЗапросаПоДокументам = ПолучитьЗапросДляПечатиПриложения1_3(ВыборкаПоШапкеДокумента);
		ВыборкаПоДокументам = РезультатЗапросаПоДокументам.Выбрать();
		ТаблицаНачислений = СгруппироватьПериодыНачислений(ВыборкаПоДокументам, "Приложение1_3");
		
		Для Каждого Начисление ИЗ ТаблицаНачислений Цикл
			Если Не Начисление.РезультатФСС = 0 Тогда
				ОбластьСтрока.Параметры.НомерСтроки 				= НомерСтроки;
				ОбластьСтрока.Параметры.Фамилия 					= Начисление.Фамилия;
				ОбластьСтрока.Параметры.Имя							= Начисление.Имя;
				ОбластьСтрока.Параметры.Отчество					= Начисление.Отчество;
				ОбластьСтрока.Параметры.КодПоДРФО 					= Начисление.ДРФО;
				ОбластьСтрока.Параметры.Серия		 				= Начисление.Серия;
				ОбластьСтрока.Параметры.Номер						= Начисление.Номер;
				ОбластьСтрока.Параметры.ВидЗанятости 			    = Начисление.ВидЗанятости;
				ОбластьСтрока.Параметры.ПричинаНетрудоспособности   = Начисление.ПричинаНетрудоспособности.КодПричины;
				ОбластьСтрока.Параметры.ДатаНачала  				= Формат(Начисление.ПериодНачало, "ДЛФ=Д");
				ОбластьСтрока.Параметры.ДатаОкончания 				= Формат(Начисление.ПериодКонец, "ДЛФ=Д");
				ОбластьСтрока.Параметры.КоличествоДнейФСС 			= Начисление.КоличествоДнейФСС;
				ОбластьСтрока.Параметры.РезультатФСС 				= Формат(Начисление.РезультатФСС,"ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
				ТабДокумент.Присоединить(ОбластьСтрока);
				
				НомерСтроки = НомерСтроки +1;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
		
	//Подпись
	ОбластьПодпись = Макет.ПолучитьОбласть("Подпись");
	Исполнитель = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Организация, Дата, Ответственный);
    ОбластьПодпись.Параметры.Ответственный = Исполнитель.Исполнитель;
	ОбластьПодпись.Параметры.ДолжностьОтветственного = Исполнитель.ИсполнительДолжность;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КонтактнаяИнформация.Представление КАК Телефон
	|ИЗ
	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ
	|	КонтактнаяИнформация.Объект = &Объект
	|	И КонтактнаяИнформация.Тип = &Тип
	|	И КонтактнаяИнформация.Вид = &Вид";
	
	Запрос.УстановитьПараметр("Объект", Организация );
	Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.Телефон);
	Запрос.УстановитьПараметр("Вид", Справочники.ВидыКонтактнойИнформации.ТелефонОрганизации);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		ОбластьПодпись.Параметры.Телефон = ФормированиеПечатныхФорм.ПолучитьТелефонДляНалоговойНакладной(Выборка.Телефон);;	 
	КонецЕсли;

	ТабДокумент.Вывести(ОбластьПодпись);
   
	Возврат ТабДокумент;
	
КонецФункции

Функция Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт
	
	// Получить экземпляр документа на печать
	Если  ИмяМакета = "Заявка" Тогда
		ТабДокумент = ПечатьЗаявка()
	ИначеЕсли ИмяМакета = "Приложение" Тогда
		Если ЗаСчетФССОтНС Тогда
			Предупреждение(НСтр("ru='При включенном флаге ""За счет ФСС от НС"" печать ""Приложения"" не производится!';uk='При включеному прапорі ""За рахунок ФСС від НВ"" друк ""Додатку"" не проводиться!'"));
		Иначе
			ТабДокумент = ПечатьПриложение()
		КонецЕсли;
	ИначеЕсли ИмяМакета = "ЗаявкаНС" Тогда
		ТабДокумент = ПечатьЗаявкаНС()
	ИначеЕсли ИмяМакета = "Заявка2018" Тогда
		ТабДокумент = ПечатьЗаявка2018()
	ИначеЕсли ИмяМакета = "Приложение1_1" Тогда
		ТабДокумент = ПечатьПриложение1_1()
	ИначеЕсли ИмяМакета = "Приложение1_2" Тогда
		ТабДокумент = ПечатьПриложение1_2()
	ИначеЕсли ИмяМакета = "Приложение1_3" Тогда
		ТабДокумент = ПечатьПриложение1_3()
	КонецЕсли;
	
	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер,ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект,НСтр("ru='Заявление - расчет в ФСС ';uk='Заява - розрахунок у ФСС '")));
	
КонецФункции	 

Процедура ВыгрузитьВоФРЕДО() Экспорт
	
	ВерсияОтчета = "01";
	
	Если глМенеджерЗвит1С = Неопределено Тогда
	     глПодключитьМенеджерЗвит1С();
	КонецЕсли;
	
	Если глМенеджерЗвит1С = Неопределено Тогда
		Предупреждение("Не удалось подключиться к FREDO, выгрузка не выполнена!");
		Возврат;
	КонецЕсли;
	
	Если НЕ глМенеджерЗвит1С.ЗапуситьЗвит1С(Ложь, Организация) Тогда
		Предупреждение("Не удалось подключиться к FREDO, выгрузка не выполнена!");
		Возврат;
	КонецЕсли;
	
	глМенеджерЗвит1С.Компонента.Bring1CToFront();
	
	СписокПоказателей = Новый СписокЗначений;
	СписокПоказателей.Добавить("","КодПоЕДРПОУ");	
	СписокПоказателей.Добавить("","НомерФССУ");
	КодПоЕДРПОУ = РегламентированнаяОтчетность.ПолучитьСведенияОбОрганизации(Организация, Дата, СписокПоказателей).КодПоЕДРПОУ;
	КодФСС 		= РегламентированнаяОтчетность.ПолучитьСведенияОбОрганизации(Организация, Дата, СписокПоказателей).НомерФССУ;
	
	// Создаем основной документ C11001..
	ТипПериода	   = 0; 
	НомерВПериоде  = Месяц(ПериодРегистрации);
	Год			   = Год(ПериодРегистрации);
	ИмяСхемыЗвит1С = "C11001"+ВерсияОтчета;
	
	ИдГоловнойОтчет = СтрЗаменить("" + Ссылка.УникальныйИдентификатор(), "-", "");
	Попытка
		ГоловнойОтчет = глМенеджерЗвит1С.Компонента.OpenCreateReport(КодПоЕДРПОУ, ИмяСхемыЗвит1С, ТипПериода, НомерВПериоде, Год, ИдГоловнойОтчет);
	Исключение
	    Сообщить(НСтр("ru='Ошибка создания отчета ';uk='Помилка створення звіту '") + ИмяСхемыЗвит1С + ": " + ОписаниеОшибки(), СтатусСообщения.Важное);
		Сообщить(НСтр("ru='Формирование отчета прервано!';uk='Формування звіту перервано!'"), СтатусСообщения.Важное);
		Возврат;
	КонецПопытки;
	
	ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "FIRM_NAME",     Организация.НаименованиеПолное);
	ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "FIRM_EDRPOU",   КодПоЕДРПОУ);
	ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "CODE_FSSU",     КодФСС);
	
							
							
	
	
	
	
	СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, Дата,, Организация.БанковскийСчетДляРасчетовСФСС);
	Телефон = ФормированиеПечатныхФорм.ПолучитьТелефонДляНалоговойНакладной(СведенияОбОрганизации.Телефоны);
	
	ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "FIRM_ADR", 	СведенияОбОрганизации.ЮридическийАдрес);
	ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "FIRM_TELORG", 	Телефон);

	Если Дата <= глЗначениеПеременной("ДатаОкончанияПереходаНаСтандартIBAN") Тогда
		ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "FIRM_FSSUACC",  ?(ЗначениеЗаполнено(СведенияОбОрганизации.НомерСчетаУстаревший), СведенияОбОрганизации.НомерСчетаУстаревший, СведенияОбОрганизации.НомерСчета));
	Иначе
		ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "FIRM_FSSUACC",  СведенияОбОрганизации.НомерСчета);
	КонецЕсли;
	
	ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "FIRM_FSSUBANK", СведенияОбОрганизации.Банк.Наименование);
	ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "FIRM_FSSUMFO",  СведенияОбОрганизации.МФО);
	
	//СтрокаВремНетрудоспособность
	ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "A1_3",  Больничные.Итог("Дни"));
	ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "A1_4",  Больничные.Итог("Сумма"));
	Если Больничные.Итог("Дни") > 0 Тогда
		ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "N16", 1);
	КонецЕсли;
	ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "A11_3",  Больничные.Итог("ДниЧАЭС"));
	ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "A11_4",  Больничные.Итог("СуммаЧАЭС"));
	
	
	//СтрокаВремНетрудоспособностьБерем
	ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "A2_3",  Декретные.Итог("Дни"));
	ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "A2_4",  Декретные.Итог("Сумма"));
	Если Декретные.Итог("Дни") > 0 Тогда
		ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "N17", 1);
	КонецЕсли;
	ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "A21_3",  Декретные.Итог("ДниЧАЭС"));
	ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "A21_4",  Декретные.Итог("СуммаЧАЭС"));
	
	//СтрокаВремНетрудоспособностьПогребение 
	ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "A3_3",  ПособияНаПогребение.Количество());
	ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "A3_4",  ПособияНаПогребение.Итог("Сумма"));
	Если ПособияНаПогребение.Количество() > 0 Тогда
		ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "N18", 1);
	КонецЕсли;
	
	//СтрокаВремНетрудоспособностьНС
	ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "A4_3",  БольничныеНС.Итог("Дни"));
	ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "A4_4",  БольничныеНС.Итог("Сумма"));
	Если БольничныеНС.Итог("Дни") > 0 Тогда
		ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "N19", 1);
	КонецЕсли;
	
	//Итог
	СуммаИтог = Больничные.Итог("Сумма") + БольничныеНС.Итог("Сумма") + Декретные.Итог("Сумма") + ПособияНаПогребение.Итог("Сумма"); 
	ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "A7_4",  Больничные.Итог("Сумма") + БольничныеНС.Итог("Сумма") + Декретные.Итог("Сумма") + ПособияНаПогребение.Итог("Сумма"));
	
	// подписи приложений
	Исполнитель = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Организация, Дата, Ответственный);
	Если Больничные.Итог("Дни") > 0 ИЛИ Декретные.Итог("Дни") > 0 Тогда
		ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "N1", Исполнитель.ИсполнительДолжность);	
		ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "N2", Исполнитель.Исполнитель);	
		ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "N3", Телефон);	
	КонецЕсли;	
	Если ПособияНаПогребение.Количество() > 0 Тогда
		ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "N4", Исполнитель.ИсполнительДолжность);	
		ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "N5", Исполнитель.Исполнитель);	
		ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "N6", Телефон);	
	КонецЕсли;	
	Если БольничныеНС.Итог("Дни") > 0 Тогда
		ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "N7", Исполнитель.ИсполнительДолжность);	
		ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "N8", Исполнитель.Исполнитель);
		ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "N9", Телефон);
	КонецЕсли;
	
	// Приложение 1.1
	НомерСтроки = 1;
	РезультатЗапросаПоШапке = СформироватьЗапросПоШапке();
	ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();
	Если ВыборкаПоШапкеДокумента.Следующий() Тогда
		
		РезультатЗапросаПоДокументам = ПолучитьЗапросДляПечатиПриложения1_1(ВыборкаПоШапкеДокумента);
		ВыборкаПоДокументам = РезультатЗапросаПоДокументам.Выбрать();
		ТаблицаНачислений = СгруппироватьПериодыНачислений(ВыборкаПоДокументам, "Приложение1_1");
		
		Для Каждого Начисление ИЗ ТаблицаНачислений Цикл
			Если Не Начисление.РезультатФСС = 0 Тогда
				
				ДобавитьСтрокуВОтчетЗвит1С(ГоловнойОтчет, "TAB1");
				
				ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB1", "TAB1_A1", НомерСтроки);
				ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB1", "TAB1_A2", Начисление.Фамилия);
				ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB1", "TAB1_A3", Начисление.Имя);
				ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB1", "TAB1_A4", Начисление.Отчество);
				ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB1", "TAB1_A5", Начисление.ДРФО);
				ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB1", "TAB1_A6", Начисление.ВидЗанятости);
				ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB1", "TAB1_A7", Начисление.Серия);
				ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB1", "TAB1_A8", Начисление.Номер);
				ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB1", "TAB1_A9", Начисление.ЭтоПродолжениеБольничного);
				ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB1", "TAB1_A10", Начисление.ПричинаНетрудоспособности.КодПричины);
				ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB1", "TAB1_A11", Начисление.ПериодНачало);
				ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB1", "TAB1_A12", Начисление.ПериодКонец);
				ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB1", "TAB1_A13", Начисление.КоличествоДней);
				ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB1", "TAB1_A14", Начисление.КоличествоДнейФСС);
				ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB1", "TAB1_A15", Начисление.Результат);
				ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB1", "TAB1_A16", Начисление.РезультатФСС);
				ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB1", "TAB1_A17", Начисление.ДниЧАЭС);
				ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB1", "TAB1_A18", Начисление.СуммаЧАЭС);
				ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB1", "TAB1_A19", Начисление.НомерЧАЭС);
				ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB1", "TAB1_A21", Начисление.СтажВМесяцах);
				ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB1", "TAB1_A22", Начисление.СтажЗа12МесяцевВМесяцах);
				
				НомерСтроки = НомерСтроки +1;
				
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
		
	//СтрокаПоПособиям
	НомерСтроки = 1;
	РезультатЗапросаПоШапке = СформироватьЗапросПоШапке();
	ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();
	Если ВыборкаПоШапкеДокумента.Следующий() Тогда
		
		РезультатЗапросаПоДокументам = ПолучитьЗапросДляПечатиПриложения1_2(ВыборкаПоШапкеДокумента);
		ВыборкаПоДокументам = РезультатЗапросаПоДокументам.Выбрать();
		
		Пока ВыборкаПоДокументам.Следующий() Цикл 
			
			ДобавитьСтрокуВОтчетЗвит1С(ГоловнойОтчет, "TAB2");
			
			ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB2", "TAB2_A1", НомерСтроки);
			
			ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB2", "TAB2_A1_1", 1); //получатель физ.лицо
			
			ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB2", "TAB2_A2", ВыборкаПоДокументам.Фамилия);
			ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB2", "TAB2_A3", ВыборкаПоДокументам.Имя);
			ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB2", "TAB2_A4", ВыборкаПоДокументам.Отчество);
			ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB2", "TAB2_A5", ВыборкаПоДокументам.ДРФО);
			ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB2", "TAB2_A6", ВыборкаПоДокументам.ФамилияУмершего);
			ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB2", "TAB2_A7", ВыборкаПоДокументам.ИмяУмершего);
			ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB2", "TAB2_A8", ВыборкаПоДокументам.ОтчествоУмершего);
			ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB2", "TAB2_A9", ВыборкаПоДокументам.СвидетельствоСерия);
			ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB2", "TAB2_A10", ВыборкаПоДокументам.СвидетельствоНомер);
			ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB2", "TAB2_A11", ВыборкаПоДокументам.Сумма);
			
			НомерСтроки = НомерСтроки +1;
			
		КонецЦикла;
		
	КонецЕсли;
	
	//СтрокаПоБольничным
	НомерСтроки = 1;
	РезультатЗапросаПоШапке = СформироватьЗапросПоШапке();
	ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();
	Если ВыборкаПоШапкеДокумента.Следующий() Тогда
		
		РезультатЗапросаПоДокументам = ПолучитьЗапросДляПечатиПриложения1_3(ВыборкаПоШапкеДокумента);
		ВыборкаПоДокументам = РезультатЗапросаПоДокументам.Выбрать();
		ТаблицаНачислений = СгруппироватьПериодыНачислений(ВыборкаПоДокументам, "Приложение1_3");
		
		Для Каждого Начисление ИЗ ТаблицаНачислений Цикл
			Если Не Начисление.РезультатФСС = 0 Тогда
				
				ДобавитьСтрокуВОтчетЗвит1С(ГоловнойОтчет, "TAB3");
				
				ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB3", "TAB3_A1", НомерСтроки);
				ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB3", "TAB3_A2", Начисление.Фамилия);
				ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB3", "TAB3_A3", Начисление.Имя);
				ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB3", "TAB3_A4", Начисление.Отчество);
				ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB3", "TAB3_A5", Начисление.ДРФО);
				ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB3", "TAB3_A6", Начисление.ВидЗанятости);
				ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB3", "TAB3_A9", Начисление.Серия);
				ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB3", "TAB3_A10", Начисление.Номер);
				ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB3", "TAB3_A11", Начисление.ПричинаНетрудоспособности.КодПричины);
				ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB3", "TAB3_A12", Начисление.ПериодНачало);
				ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB3", "TAB3_A13", Начисление.ПериодКонец);
				ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB3", "TAB3_A14", Начисление.КоличествоДнейФСС);
				ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, "TAB3", "TAB3_A15", Начисление.РезультатФСС);
				
				НомерСтроки = НомерСтроки +1;
				
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "REP_DATE", Дата);	
	
	Руководители = ФормированиеПечатныхФорм.ОтветственныеЛица(Организация, Дата);

	Если ЗначениеЗаполнено(Руководители.Руководитель) Тогда
		ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "FIRM_RUK", Руководители.РуководительФИО.Фамилия + " " + Руководители.РуководительФИО.Имя	 + " " + Руководители.РуководительФИО.Отчество);	
	КонецЕсли;

	Если ЗначениеЗаполнено(Руководители.ГлавныйБухгалтер) Тогда
		ДобавитьПоказательВОтчетЗвит1С(ГоловнойОтчет, , "FIRM_BUH", Руководители.ГлавныйБухгалтерФИО.Фамилия + " " + Руководители.ГлавныйБухгалтерФИО.Имя + " " + Руководители.ГлавныйБухгалтерФИО.Отчество);	
	КонецЕсли;

	глМенеджерЗвит1С.Компонента.SaveReportEx(ГоловнойОтчет, 1);
	
	ПоказатьПредупреждение(, "Заявление-расчет успешно выгружено во FREDO!");
	
	глМенеджерЗвит1С.Компонента.BringZvitToFront();
	
КонецПроцедуры

Процедура ДобавитьПоказательВОтчетЗвит1С(Отчет, ИмяТаблицыЗвит1С = "", ИмяЗвит1С, Значение, ЗаписыватьПустое = Ложь)
	
	Если НЕ ЗаписыватьПустое И НЕ ЗначениеЗаполнено(Значение) Тогда
		Возврат;	
	КонецЕсли;
	
	Попытка
		Отчет.SetValue(ИмяТаблицыЗвит1С, ИмяЗвит1С, Значение); 
	Исключение
		Если глМенеджерЗвит1С.ФлагОтладки Тогда
			Сообщить("FREDO. Ошибка установки показателя (схема """+Отчет.CharCode+?(ПустаяСтрока(ИмяТаблицыЗвит1С),"",НСтр("ru='"", имя таблицы ""';uk='"", ім''я таблиці ""'")+ИмяТаблицыЗвит1С)+НСтр("ru='"", поле ""';uk='"", поле ""'")+ИмяЗвит1С+НСтр("ru='"", тип значения ""';uk='"", тип значення ""'")+ТипЗнч(Значение)+НСтр("ru='"", значение ""';uk='"", значення ""'")+ Значение+""")", СтатусСообщения.Внимание);
		КонецЕсли;
	КонецПопытки;
		
КонецПроцедуры

Процедура ДобавитьСтрокуВОтчетЗвит1С(Отчет, ИмяТаблицыЗвит1С)

	Отчет.NewRow(ИмяТаблицыЗвит1С);

КонецПроцедуры


#КонецЕсли

// Возвращает доступные варианты печати документа
//
// Вовращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	 Если ЗаСчетФССОтНС Тогда
		 Возврат Новый Структура("ЗаявкаНС, Приложение", НСтр("ru='Заявка(до октября 2018)';uk='Заявка(до жовтня 2018)'"), НСтр("ru='Приложение(до октября 2018)';uk='Додаток(до жовтня 2018)'"));
	 Иначе 
		 Возврат Новый Структура("Заявка, Заявка2018, Приложение, Приложение1_1, Приложение1_2, Приложение1_3", НСтр("ru='Заявка(до октября 2018)';uk='Заявка(до жовтня 2018)'"), НСтр("ru='Заявка';uk='Заявка'"), НСтр("ru='Приложение(до октября 2018)';uk='Додаток(до жовтня 2018)'"), НСтр("ru='Приложение 1.1';uk='Додаток 1.1'"),
							  	 НСтр("ru='Приложение 1.2 (Пособие на погребение)';uk='Додаток 1.2 (Допомога на поховання)'"), НСтр("ru='Приложение 1.3 (НС)';uk='Додаток 1.3 (НВ)'"));
	 КонецЕсли;
	
КонецФункции // ПолучитьСтруктуруПечатныхФорм()
 
Процедура АвтозаполнениеДокумента() Экспорт
	
	Если ЭтоНовый() Тогда
		#Если Клиент Тогда
		ТекстВопроса = НСтр("ru='Перед заполнением документ необходимо записать. Продолжить?';uk='Перед заповненням документ необхідно записати. Продовжити?'");
		Если Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да,) <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;
		#КонецЕсли
		Записать();
	КонецЕсли;
	

	Запрос = ПолучитьЗапросДокументовПособий();
	
	ДокументыПоНачислениям.Загрузить(Запрос.Выполнить().Выгрузить());
	
	РасчитатьИтоговыеСуммы();
КонецПроцедуры

Функция ПолучитьЗапросДокументовПособий()
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПериодРегистрации", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Приход", ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("СтатьяНС", Справочники.СтатьиНалоговыхДеклараций.ФССНесчСлуч_ВремНетрудосп);
	Если ЗаСчетФССОтНС Тогда
		
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	               |	НачислениеПоБольничномуЛисту.Ссылка КАК Документ
	               |ИЗ
	               |	Документ.НачислениеПоБольничномуЛисту.Начисления КАК НачислениеПоБольничномуЛисту
	               |ГДЕ
	               |	НачислениеПоБольничномуЛисту.Ссылка.ПериодРегистрации = &ПериодРегистрации
	               |	И НачислениеПоБольничномуЛисту.Ссылка.ПричинаНетрудоспособности.СтатьяРасчетовСФСС = &СтатьяНС
	               |	И НачислениеПоБольничномуЛисту.Ссылка.Организация = &Организация
 				   |    И НачислениеПоБольничномуЛисту.Результат > 0
				   |	И НачислениеПоБольничномуЛисту.ВидРасчета.НачислениеЗаСчетФСС = ИСТИНА
				   |	И НЕ НачислениеПоБольничномуЛисту.Ссылка В
				   |			(ВЫБРАТЬ
				   |				РегистрНакопления.ВзаиморасчетыПоНачислениямЗаСчетФСС.Документ
				   |			ИЗ
				   |				РегистрНакопления.ВзаиморасчетыПоНачислениямЗаСчетФСС
				   |			ГДЕ
				   |				РегистрНакопления.ВзаиморасчетыПоНачислениямЗаСчетФСС.Период = &ПериодРегистрации
				   |				И РегистрНакопления.ВзаиморасчетыПоНачислениямЗаСчетФСС.ВидДвижения = &Приход
				   |				И РегистрНакопления.ВзаиморасчетыПоНачислениямЗаСчетФСС.Документ.Ссылка <> &Ссылка
				   |				И РегистрНакопления.ВзаиморасчетыПоНачислениямЗаСчетФСС.Регистратор <> &Ссылка)
				   |    И НачислениеПоБольничномуЛисту.Ссылка.Проведен = ИСТИНА";


	Иначе
		
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	Пособия.Документ КАК Документ
	               |ИЗ
	               |	(ВЫБРАТЬ
			       |		ЕдиновременныеПособия.Ссылка КАК Документ 
				   |	ИЗ
	               |		Документ.НачислениеЕдиновременныхПособийЗаСчетФСС КАК ЕдиновременныеПособия
	               |	ГДЕ
	               |		ЕдиновременныеПособия.Начисления.ВидРасчета.НачислениеЗаСчетФСС = ИСТИНА
	               |		И ЕдиновременныеПособия.ПериодРегистрации = &ПериодРегистрации
	               |		И ЕдиновременныеПособия.Организация = &Организация
				   |
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |		НачислениеПоБольничномуЛисту.Ссылка
	               |	ИЗ
	               |		Документ.НачислениеПоБольничномуЛисту.Начисления КАК НачислениеПоБольничномуЛисту
	               |	ГДЕ
	               |		НачислениеПоБольничномуЛисту.Ссылка.ПериодРегистрации = &ПериодРегистрации
				   |	    И НачислениеПоБольничномуЛисту.Ссылка.ПричинаНетрудоспособности.СтатьяРасчетовСФСС <> &СтатьяНС
				   |		И НачислениеПоБольничномуЛисту.Ссылка.Организация = &Организация
				   |	   	И НачислениеПоБольничномуЛисту.Результат > 0 
				   |	    И НачислениеПоБольничномуЛисту.ВидРасчета.НачислениеЗаСчетФСС = ИСТИНА) КАК Пособия
				   |
	               |ГДЕ
	               |	(НЕ Пособия.Документ В
	               |				(ВЫБРАТЬ
	               |					РегистрНакопления.ВзаиморасчетыПоНачислениямЗаСчетФСС.Документ
	               |				ИЗ
	               |					РегистрНакопления.ВзаиморасчетыПоНачислениямЗаСчетФСС
	               |				ГДЕ
	               |					РегистрНакопления.ВзаиморасчетыПоНачислениямЗаСчетФСС.ПериодВзаиморасчетов = &ПериодРегистрации
	               |					И РегистрНакопления.ВзаиморасчетыПоНачислениямЗаСчетФСС.ВидДвижения = &Приход
	               |					И РегистрНакопления.ВзаиморасчетыПоНачислениямЗаСчетФСС.Регистратор <> &Ссылка))
	               |	И Пособия.Документ.Проведен = ИСТИНА";
    КонецЕсли;
			   
	Возврат Запрос;
	
КонецФункции

Функция ПолучитьЗапросДляРасчетаСумм(ВыборкаПоШапкеДокумента)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПериодРегистрации", ВыборкаПоШапкеДокумента.ПериодРегистрации);
	Запрос.УстановитьПараметр("ДокументСсылка", ВыборкаПоШапкеДокумента.Ссылка);
	Запрос.УстановитьПараметр("Документ", ДокументыПоНачислениям.ВыгрузитьКолонку("Документ"));
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
				   |	ОсновнойЗапрос.Документ				КАК Документ,
				   |	ОсновнойЗапрос.Результат			КАК Результат,
				   |	ОсновнойЗапрос.СтатьяРасчетовСФСС	КАК СтатьяРасчетовСФСС,
				   |	ОсновнойЗапрос.КоличествоДней		КАК КоличествоДней
				   |ИЗ
				   |	(ВЫБРАТЬ
				   |	Начисления.Регистратор КАК Документ,
				   |	СУММА(Начисления.Результат) КАК Результат,
				   |	РазмерыВыплат.СтатьяРасчетовСФСС КАК СтатьяРасчетовСФСС,
				   |	NULL КАК КоличествоДней			
				   |ИЗ
				   |	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Начисления
				   |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерыЗаконодательноУстановленныхВыплат.СрезПоследних(&ПериодРегистрации, ) КАК РазмерыВыплат
				   |		ПО Начисления.ВидРасчета = РазмерыВыплат.ВидРасчета
				   |ГДЕ
				   |	Начисления.ВидРасчета.НачислениеЗаСчетФСС = ИСТИНА
				   |	И РазмерыВыплат.СтатьяРасчетовСФСС = ЗНАЧЕНИЕ(Справочник.СтатьиНалоговыхДеклараций.ФССУтрТрудосп_Погребен)
				   |	И Начисления.Регистратор В(&Документ)
				   |
				   |СГРУППИРОВАТЬ ПО
				   |	РазмерыВыплат.СтатьяРасчетовСФСС,
				   |	Начисления.Регистратор
				   |
				   |	ОБЪЕДИНИТЬ ВСЕ
				   |
				   | ВЫБРАТЬ
	  		       |	Начисления.Регистратор КАК Документ,
	               |	СУММА(Начисления.Результат) КАК Результат,
	               |	Начисления.Регистратор.ПричинаНетрудоспособности.СтатьяРасчетовСФСС КАК СтатьяРасчетовСФСС,
                   |	СУММА(ВЫБОР
				   |			КОГДА Начисления.Назначение.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
				   |				ТОГДА 
				   |	 				ВЫБОР
	               |						КОГДА Начисления.Регистратор.ВидУчетаВремениДляСредней = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаВремениДляСредней.ПоКалендарнымДнямСПраздниками)
	               |							ТОГДА Начисления.ОплаченоДнейЧасов
	               |						ИНАЧЕ Начисления.НормаДней
				   |					КОНЕЦ
				   |                ИНАЧЕ 0
	               |			КОНЕЦ) КАК КоличествоДней
				   |ИЗ
	               |	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Начисления
	               |ГДЕ
	               |	Начисления.Регистратор ССЫЛКА Документ.НачислениеПоБольничномуЛисту
	               |	И Начисления.ВидРасчета.НачислениеЗаСчетФСС = ИСТИНА
	               |	И Начисления.Регистратор В(&Документ)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Начисления.Регистратор,
	               |	Начисления.Регистратор.ПричинаНетрудоспособности.СтатьяРасчетовсФСС)КАК ОсновнойЗапрос
				   |";
    
	Возврат Запрос.Выполнить();
	
КонецФункции
	
Процедура РасчитатьИтоговыеСуммы() Экспорт
	
	ВсегоПоБольничным = 0;
	ВсегоПоБольничнымПоУходу = 0;
	ВсегоПоБеременностиИРодам = 0;
	ВсегоНаПогребение = 0;
	ВсегоПоДокументу = 0;
	КоличествоДнейПоБольничным = 0;
	КоличествоДнейПоБольничнымПоУходу = 0;
	КоличествоДнейПоБеременостиИРодам = 0;
	
	РезультатЗапросаПоШапке = СформироватьЗапросПоШапке();
	ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();
	Если ВыборкаПоШапкеДокумента.Следующий() Тогда
		Если ВыборкаПоШапкеДокумента.Дата >= Дата(2018,10,1) Тогда
			ВсегоПоДокументу = Больничные.Итог("Сумма") + Декретные.Итог("Сумма") + БольничныеНС.Итог("Сумма") + ПособияНаПогребение.Итог("Сумма");  
		Иначе	
			РезультатЗапросаПоДокументам = ПолучитьЗапросДляРасчетаСумм(ВыборкаПоШапкеДокумента);
			ВыборкаПоДокументам = РезультатЗапросаПоДокументам.Выбрать();
			
			Пока ВыборкаПоДокументам.Следующий() Цикл
				Сумма = ВыборкаПоДокументам.Результат;
				КоличествоДней = ВыборкаПоДокументам.КоличествоДней;
				//Для документа "Начисление по больничному листу"
				Если ТипЗнч(ВыборкаПоДокументам.Документ) = Тип("ДокументСсылка.НачислениеПоБольничномуЛисту") Тогда 
					СтатьяДокумента = ВыборкаПоДокументам.СтатьяРасчетовСФСС; 
					Если СтатьяДокумента = Справочники.СтатьиНалоговыхДеклараций.ФССУтрТрудосп_ВремНетрудосп ИЛИ СтатьяДокумента = Справочники.СтатьиНалоговыхДеклараций.ФССНесчСлуч_ВремНетрудосп Тогда
						ВсегоПоБольничным = ВсегоПоБольничным + Сумма;  
						КоличествоДнейПоБольничным = КоличествоДнейПоБольничным + КоличествоДней;
					ИначеЕсли СтатьяДокумента = Справочники.СтатьиНалоговыхДеклараций.ФССУтрТрудосп_Берем Тогда
						ВсегоПоБеременностиИРодам = ВсегоПоБеременностиИРодам + Сумма; 
						КоличествоДнейПоБеременостиИРодам = КоличествоДнейПоБеременостиИРодам + КоличествоДней;
					ИначеЕсли  СтатьяДокумента = Справочники.СтатьиНалоговыхДеклараций.ФССУтрТрудосп_ВремНетрудоспУход Тогда
						ВсегоПоБольничнымПоУходу = ВсегоПоБольничнымПоУходу + Сумма;
						КоличествоДнейПоБольничнымПоУходу = КоличествоДнейПоБольничнымПоУходу + КоличествоДней;
					КонецЕсли;
					//Для документа "Начисление единовременных пособий за счет ФСС"
				ИначеЕсли ТипЗнч(ВыборкаПоДокументам.Документ) = Тип("ДокументСсылка.НачислениеЕдиновременныхПособийЗаСчетФСС") Тогда
					ВсегоНаПогребение = ВсегоНаПогребение + Сумма;  
				КонецЕсли;     
			КонецЦикла;      
			ВсегоПоДокументу =  ВсегоПоБольничным + ВсегоПоБеременностиИРодам + ВсегоПоБольничнымПоУходу + ВсегоНаПогребение;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьТЧДляДокументовПособий2018(БЛ, БЛНС, Декр, ПособиеПогр, ЗаполнитьВсе)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПериодРегистрации", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Приход", ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("СтатьяНС", Справочники.СтатьиНалоговыхДеклараций.ФССНесчСлуч_ВремНетрудосп);
	Запрос.УстановитьПараметр("БольничныйПоБеременностиИРодам", Справочники.ПричиныНетрудоспособности.ПоБеременностиИРодам);
	
	МенеджерВременныхТаблиц	= Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Если БЛ Или БЛНС ИЛИ Декр Или ЗаполнитьВсе Тогда	
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	НачислениеПоБольничномуЛисту.Ссылка КАК Документ,
		|	НачислениеПоБольничномуЛисту.Сотрудник КАК Сотрудник,
		|	СУММА(НачислениеПоБольничномуЛисту.ОплаченоДнейЧасов) КАК Дни,
		|	СУММА(НачислениеПоБольничномуЛисту.Результат) КАК Сумма,
		|   НачислениеПоБольничномуЛисту.Ссылка.ПричинаНетрудоспособности.СтатьяРасчетовСФСС КАК СтатьяРасчетовСФСС,
		|   НачислениеПоБольничномуЛисту.Ссылка.ПричинаНетрудоспособности КАК ПричинаНетрудоспособности
		|ПОМЕСТИТЬ ВТБольничныеЛисты
		|ИЗ
		|	Документ.НачислениеПоБольничномуЛисту.Начисления КАК НачислениеПоБольничномуЛисту
		|ГДЕ
		|	НачислениеПоБольничномуЛисту.Ссылка.ПериодРегистрации = &ПериодРегистрации
		|	И НачислениеПоБольничномуЛисту.Ссылка.Организация = &Организация
		|	И НачислениеПоБольничномуЛисту.Результат > 0
		|	И НачислениеПоБольничномуЛисту.ВидРасчета.НачислениеЗаСчетФСС = ИСТИНА
		|	И НЕ НачислениеПоБольничномуЛисту.Ссылка В
		|				(ВЫБРАТЬ
		|					РегистрНакопления.ВзаиморасчетыПоНачислениямЗаСчетФСС.Документ
		|				ИЗ
		|					РегистрНакопления.ВзаиморасчетыПоНачислениямЗаСчетФСС
		|				ГДЕ
		|					РегистрНакопления.ВзаиморасчетыПоНачислениямЗаСчетФСС.ПериодВзаиморасчетов = &ПериодРегистрации
		|					И РегистрНакопления.ВзаиморасчетыПоНачислениямЗаСчетФСС.ВидДвижения = &Приход
		|					И РегистрНакопления.ВзаиморасчетыПоНачислениямЗаСчетФСС.Документ.Ссылка <> &Ссылка
		|					И РегистрНакопления.ВзаиморасчетыПоНачислениямЗаСчетФСС.Регистратор <> &Ссылка)
		|	И НачислениеПоБольничномуЛисту.Ссылка.Проведен = ИСТИНА
		|
		|СГРУППИРОВАТЬ ПО
		|	НачислениеПоБольничномуЛисту.Ссылка,
		|	НачислениеПоБольничномуЛисту.Сотрудник,
		|   НачислениеПоБольничномуЛисту.Ссылка.ПричинаНетрудоспособности.СтатьяРасчетовСФСС,
		|   НачислениеПоБольничномуЛисту.Ссылка.ПричинаНетрудоспособности";
		
		Запрос.Выполнить();
	КонецЕсли;	  
	Если БЛНС Или ЗаполнитьВсе Тогда 
		
		Запрос.Текст = "ВЫБРАТЬ 
		|	НачислениеПоБольничномуЛисту.Документ КАК Документ,
		|	НачислениеПоБольничномуЛисту.Сотрудник КАК Сотрудник,
		|	НачислениеПоБольничномуЛисту.Дни КАК Дни,
		|	НачислениеПоБольничномуЛисту.Сумма КАК Сумма
		|ИЗ
		|	ВТБольничныеЛисты КАК НачислениеПоБольничномуЛисту
		|ГДЕ
		|	НачислениеПоБольничномуЛисту.СтатьяРасчетовСФСС = &СтатьяНС
		|";
		
		БольничныеНС.Загрузить(Запрос.Выполнить().Выгрузить());				   
	КонецЕсли;
	Если Декр Или ЗаполнитьВсе Тогда 
		
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	НачислениеПоБольничномуЛисту.Документ КАК Документ,
		|	НачислениеПоБольничномуЛисту.Сотрудник КАК Сотрудник,
		|	НачислениеПоБольничномуЛисту.Дни КАК Дни,
		|	НачислениеПоБольничномуЛисту.Сумма КАК Сумма
		|ИЗ
		|	ВТБольничныеЛисты КАК НачислениеПоБольничномуЛисту
		|ГДЕ
		|	НачислениеПоБольничномуЛисту.ПричинаНетрудоспособности = &БольничныйПоБеременностиИРодам";
		
		Декретные.Загрузить(Запрос.Выполнить().Выгрузить());				   
	КонецЕсли;
	
	Если БЛ Или ЗаполнитьВсе  Тогда
		
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	НачислениеПоБольничномуЛисту.Документ КАК Документ,
		|	НачислениеПоБольничномуЛисту.Сотрудник КАК Сотрудник,
		|	НачислениеПоБольничномуЛисту.Дни КАК Дни,
		|	НачислениеПоБольничномуЛисту.Сумма КАК Сумма
		|ИЗ
		|	ВТБольничныеЛисты КАК НачислениеПоБольничномуЛисту
		|ГДЕ
		|	НачислениеПоБольничномуЛисту.ПричинаНетрудоспособности <> &БольничныйПоБеременностиИРодам
		|	И НачислениеПоБольничномуЛисту.СтатьяРасчетовСФСС <>  &СтатьяНС";
		
		Больничные.Загрузить(Запрос.Выполнить().Выгрузить());				   
	КонецЕсли;
	
	Если ПособиеПогр Или ЗаполнитьВсе  Тогда
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		               |	ЕдиновременныеПособия.Ссылка КАК Документ,
		               |	ЕдиновременныеПособия.Сотрудник КАК Сотрудник,
		               |	ЕдиновременныеПособия.Результат КАК Сумма,
		               |	ЕдиновременныеПособия.ФамилияУмершего КАК ФамилияУмершего,
		               |	ЕдиновременныеПособия.ИмяУмершего КАК ИмяУмершего,
		               |	ЕдиновременныеПособия.ОтчествоУмершего КАК ОтчествоУмершего
		               |ИЗ
		               |	Документ.НачислениеЕдиновременныхПособийЗаСчетФСС.Начисления КАК ЕдиновременныеПособия
		               |ГДЕ
		               |	ЕдиновременныеПособия.ВидРасчета.НачислениеЗаСчетФСС = ИСТИНА
		               |	И ЕдиновременныеПособия.Ссылка.ПериодРегистрации = &ПериодРегистрации
		               |	И ЕдиновременныеПособия.Ссылка.Организация = &Организация
		               |	И НЕ ЕдиновременныеПособия.Ссылка В
		               |			(ВЫБРАТЬ
		               |				РегистрНакопления.ВзаиморасчетыПоНачислениямЗаСчетФСС.Документ
		               |			ИЗ
		               |				РегистрНакопления.ВзаиморасчетыПоНачислениямЗаСчетФСС
		               |			ГДЕ
		               |				РегистрНакопления.ВзаиморасчетыПоНачислениямЗаСчетФСС.ПериодВзаиморасчетов = &ПериодРегистрации
		               |				И РегистрНакопления.ВзаиморасчетыПоНачислениямЗаСчетФСС.ВидДвижения = &Приход
		               |				И РегистрНакопления.ВзаиморасчетыПоНачислениямЗаСчетФСС.Регистратор <> &Ссылка)
		               |	И ЕдиновременныеПособия.Ссылка.Проведен = ИСТИНА";
		ПособияНаПогребение.Загрузить(Запрос.Выполнить().Выгрузить());				   
	КонецЕсли;

КонецПроцедуры

Процедура АвтозаполнениеТЧ2018(БЛ, БЛНС, Декр, ПособиеПогр, ЗаполнитьВсе) Экспорт
	
	Если ЭтоНовый() Тогда
		#Если Клиент Тогда
		ТекстВопроса = НСтр("ru='Перед заполнением документ необходимо записать. Продолжить?';uk='Перед заповненням документ необхідно записати. Продовжити?'");
		Если Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да,) <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;
		#КонецЕсли
		Записать();
	КонецЕсли;

	ЗаполнитьТЧДляДокументовПособий2018(БЛ, БЛНС, Декр, ПособиеПогр, ЗаполнитьВсе);
	РасчитатьИтоговыеСуммы();	
КонецПроцедуры	
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Формирует запрос по шапке документа
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросПоШапке()

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);
	Запрос.УстановитьПараметр("парамПустаяОрганизация", Справочники.Организации.ПустаяСсылка());

	Запрос.Текст = "
	|Выбрать РАЗРЕШЕННЫЕ
	|	Дата,
	|	ПериодРегистрации, 
	|	Организация,
	|	Ответственный, 
	| 	Ссылка
	|Из 
	|	Документ." + Метаданные().Имя + "
	|Где 
	|	Ссылка = &ДокументСсылка
	|";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоШапке()

Функция СформироватьЗапросПоДокументамТабличнойЧасти(ВыборкаПоШапкеДокумента)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПериодРегистрации", ВыборкаПоШапкеДокумента.ПериодРегистрации);
	Запрос.УстановитьПараметр("ДокументСсылка", ВыборкаПоШапкеДокумента.Ссылка);
	Если ВыборкаПоШапкеДокумента.Дата >= Дата(2018,10,1) Тогда 
		Запрос.Текст = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ОсновнойЗапрос.Документ				КАК Документ,
		|	ОсновнойЗапрос.Сотрудник			КАК Сотрудник,
		|	ОсновнойЗапрос.СчетУчета			КАК СчетУчета,
		|	ОсновнойЗапрос.Результат			КАК Результат,
		|	ОсновнойЗапрос.СтатьяРасчетовСФСС	КАК СтатьяРасчетовСФСС
		|ИЗ
		|	(ВЫБРАТЬ		
		|		Документы.Документ					КАК Документ,
		|		Начисления.Сотрудник				КАК Сотрудник,
		|		Начисления.ВидРасчета.СчетУчета		КАК СчетУчета,
		|		Начисления.Результат				КАК Результат,
		|		РазмерыВыплат.СтатьяРасчетовСФСС	КАК СтатьяРасчетовСФСС
		|	
		|	ИЗ
		|		Документ.ЗаявлениеРасчетВФСС.ПособияНаПогребение	КАК Документы
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Начисления
		|	ПО
		|		Документы.Документ = Начисления.Регистратор
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.РазмерыЗаконодательноУстановленныхВыплат.СрезПоследних(&ПериодРегистрации)	КАК РазмерыВыплат
		|	ПО
		|		Начисления.ВидРасчета = РазмерыВыплат.ВидРасчета
		|	ГДЕ
		|		Документы.Ссылка = &ДокументСсылка
		|		И Начисления.ВидРасчета.НачислениеЗаСчетФСС = ИСТИНА
		|		И Начисления.Результат > 0
		|   	
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		Документы.Документ,
		|		Начисления.Сотрудник,
		|		Начисления.ВидРасчета.СчетУчета,
		|		Начисления.Результат,
		|		Документы.Документ.ПричинаНетрудоспособности.СтатьяРасчетовСФСС
		|	
		|	ИЗ
		|		Документ.ЗаявлениеРасчетВФСС.Больничные	КАК Документы
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций	КАК Начисления
		|	ПО
		|		Документы.Документ	= Начисления.Регистратор
		|	
		|	ГДЕ
		|		Документы.Ссылка = &ДокументСсылка
		|		И Начисления.ВидРасчета.НачислениеЗаСчетФСС = ИСТИНА
		|		И Начисления.Результат > 0
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		Документы.Документ,
		|		Начисления.Сотрудник,
		|		Начисления.ВидРасчета.СчетУчета,
		|		Начисления.Результат,
		|		Документы.Документ.ПричинаНетрудоспособности.СтатьяРасчетовСФСС
		|	
		|	ИЗ
		|		Документ.ЗаявлениеРасчетВФСС.БольничныеНС	КАК Документы
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций	КАК Начисления
		|	ПО
		|		Документы.Документ	= Начисления.Регистратор
		|	
		|	ГДЕ
		|		Документы.Ссылка = &ДокументСсылка
		|		И Начисления.ВидРасчета.НачислениеЗаСчетФСС = ИСТИНА
		
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		Документы.Документ,
		|		Начисления.Сотрудник,
		|		Начисления.ВидРасчета.СчетУчета,
		|		Начисления.Результат,
		|		Документы.Документ.ПричинаНетрудоспособности.СтатьяРасчетовСФСС
		|	
		|	ИЗ
		|		Документ.ЗаявлениеРасчетВФСС.Декретные	КАК Документы
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций	КАК Начисления
		|	ПО
		|		Документы.Документ	= Начисления.Регистратор
		|	
		|	ГДЕ
		|		Документы.Ссылка = &ДокументСсылка
		|		И Начисления.ВидРасчета.НачислениеЗаСчетФСС = ИСТИНА
		|		И Начисления.Результат > 0
		|															) КАК ОсновнойЗапрос
		|
		|	
		|";
	Иначе	
		Запрос.Текст = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ОсновнойЗапрос.Документ				КАК Документ,
		|	ОсновнойЗапрос.Сотрудник			КАК Сотрудник,
		|	ОсновнойЗапрос.СчетУчета			КАК СчетУчета,
		|	ОсновнойЗапрос.Результат			КАК Результат,
		|	ОсновнойЗапрос.СтатьяРасчетовСФСС	КАК СтатьяРасчетовСФСС
		|ИЗ
		|	(ВЫБРАТЬ		
		|		Документы.Документ					КАК Документ,
		|		Начисления.Сотрудник				КАК Сотрудник,
		|		Начисления.ВидРасчета.СчетУчета		КАК СчетУчета,
		|		Начисления.Результат				КАК Результат,
		|		РазмерыВыплат.СтатьяРасчетовСФСС	КАК СтатьяРасчетовСФСС
		|	
		|	ИЗ
		|		Документ.ЗаявлениеРасчетВФСС.ДокументыПоНачислениям	КАК Документы
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Начисления
		|	ПО
		|		Документы.Документ = Начисления.Регистратор
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.РазмерыЗаконодательноУстановленныхВыплат.СрезПоследних(&ПериодРегистрации)	КАК РазмерыВыплат
		|	ПО
		|		Начисления.ВидРасчета = РазмерыВыплат.ВидРасчета
		|	ГДЕ
		|		Документы.Ссылка = &ДокументСсылка
		|		И Документы.Документ ССЫЛКА Документ.НачислениеЕдиновременныхПособийЗаСчетФСС
		|		И Начисления.ВидРасчета.НачислениеЗаСчетФСС = ИСТИНА
		|   	
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		Документы.Документ												КАК Документ,
		|		Начисления.Сотрудник											КАК Сотрудник,
		|		Начисления.ВидРасчета.СчетУчета 								КАК СчетУчета,
		|		Начисления.Результат											КАК Результат,
		|		Документы.Документ.ПричинаНетрудоспособности.СтатьяРасчетовСФСС	КАК СтатьяРасчетовСФСС
		|	
		|	ИЗ
		|		Документ.ЗаявлениеРасчетВФСС.ДокументыПоНачислениям	КАК Документы
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций		КАК Начисления
		|	ПО
		|		Документы.Документ	= Начисления.Регистратор
		|	
		|	ГДЕ
		|		Документы.Ссылка = &ДокументСсылка
		|		И Документы.Документ ССЫЛКА Документ.НачислениеПоБольничномуЛисту
		|		И Начисления.ВидРасчета.НачислениеЗаСчетФСС = ИСТИНА
		|	) КАК ОсновнойЗапрос
		|
		|	
		|";
	КонецЕсли;
	Возврат Запрос.Выполнить();
КонецФункции

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизтов шапки, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по шапке,
// все проверяемые реквизиты должны быть включены в выборку по шапке.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента	- выборка из результата запроса по шапке документа,
//  Отказ 					- флаг отказа в проведении.
//	Заголовок				- Заголовок для сообщений об ошибках проведения
//
Процедура ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок)

	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Организация) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru='Не указана организация!';uk='Не зазначена організація!'"), Отказ, Заголовок);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Ответственный) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru='Не указано ответственное лицо!';uk='Не вказана відповідальна особа!'"), Отказ, Заголовок);
	КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеШапки()

// Проверяет заполнена ли СтатьяРасчетовСФСС.
// Если реквизит не заполнен , то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по строке ТЧ документа,
//
// Параметры: 
//  ВыборкаПоШапкеДокумента		- выборка из результата запроса по шапке документа,
//  ВыборкаПоСтрокамДокумента	- спозиционированная на определеной строке выборка 
//  							  из результата запроса по документам, 
//  Отказ 						- флаг отказа в проведении.
//	Заголовок					- Заголовок для сообщений об ошибках проведения
//
Процедура ПроверитьЗаполнениеСтатьиРасчетовСФСС(ВыборкаПоШапкеДокумента, ВыборкаПоТЧ, Отказ, Заголовок)
	
	Если НЕ ЗначениеЗаполнено(ВыборкаПоТЧ.СтатьяРасчетовСФСС) Тогда
		СтрокаСообщения = НСтр("ru='В документе: ';uk='У документі: '") + ВыборкаПоТЧ.Документ + НСтр("ru=' не заполнена статья расчетов в ФСС';uk=' не заповнена стаття розрахунків в ФСС'"); 
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаСообщения, Отказ, Заголовок);
    КонецЕсли;
КонецПроцедуры

// По строке выборки результата запроса по документу формируем движения по регистрам
//
// Параметры: 
//  ВыборкаПоШапкеДокумента                  - выборка из результата запроса по шапке документа
//  СтруктураПроведенияПоРегистрамНакопления - структура, содержащая имена регистров 
//                                             накопления по которым надо проводить документ
//  СтруктураПараметров                      - структура параметров проведения.
//
// Возвращаемое значение:
//  Нет.
//
Процедура ДобавитьСтрокуВДвиженияПоРегистрамНакопления(ВыборкаПоШапкеДокумента, ВыборкаПоТЧ)
 
	Движение = Движения.ВзаиморасчетыПоНачислениямЗаСчетФСС.Добавить();
	
	// Свойства
	Движение.Период                 = ВыборкаПоШапкеДокумента.Дата;
	Движение.ВидДвижения			= ВидДвиженияНакопления.Приход;
	
	// Измерения
	Движение.Организация			= ВыборкаПоШапкеДокумента.Организация;
	Движение.ПериодВзаиморасчетов	= НачалоМесяца(ВыборкаПоШапкеДокумента.ПериодРегистрации);
	Движение.СтатьяРасчетовСФСС     = ВыборкаПоТЧ.СтатьяРасчетовСФСС;
	Движение.Сотрудник              = ВыборкаПоТЧ.Сотрудник;
	Движение.СчетУчета			    = ВыборкаПоТЧ.СчетУчета;
	
	// Ресурсы
	Движение.Сумма					= ВыборкаПоТЧ.Результат; 
	
	//Реквизиты
	Движение.Документ 				= ВыборкаПоТЧ.Документ;
	Движение.КодОперации			= Перечисления.КодыОперацийРасчетыСФСС.Начислено;
			
		
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);

	РезультатЗапросаПоШапке = СформироватьЗапросПоШапке();

	// Получим реквизиты шапки из запроса
	ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();
	
	Если ВыборкаПоШапкеДокумента.Следующий() Тогда

		//Надо позвать проверку заполнения реквизитов шапки
		ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок);

		// Движения стоит добавлять, если в проведении еще не отказано (отказ =ложь)
		Если НЕ Отказ Тогда
			
			РезультатЗапросаПоДокументам = СформироватьЗапросПоДокументамТабличнойЧасти(ВыборкаПоШапкеДокумента);
			ВыборкаПоДокументам = РезультатЗапросаПоДокументам.Выбрать();
			
			Пока ВыборкаПоДокументам.Следующий() Цикл
				
				ПроверитьЗаполнениеСтатьиРасчетовСФСС(ВыборкаПоШапкеДокумента, ВыборкаПоДокументам, Отказ, Заголовок);
				//Если не заполнена СтатьяРасчетовСФСС не проводим
				Если Не Отказ Тогда
					ДобавитьСтрокуВДвиженияПоРегистрамНакопления(ВыборкаПоШапкеДокумента, ВыборкаПоДокументам);	
				КонецЕсли;	                                                                                          				
			КонецЦикла;                                                                                               			
		КонецЕсли;
		
				
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(Основание)
	Если Не Основание = Неопределено И ТипЗнч(Основание) = Тип("Структура") Тогда
		Если Основание.Свойство("Организация") = Истина Тогда
			Организация = Основание.Организация;
		КонецЕсли;	
	ИначеЕсли Не Основание = Неопределено И Основание.Дата >= Дата(2018,10,1) Тогда 
		Дата = ТекущаяДата();
		ПериодРегистрации = Основание.ПериодРегистрации;
		Организация = Основание.Организация;
		Если ТипЗнч(Основание) = Тип("ДокументСсылка.НачислениеЕдиновременныхПособийЗаСчетФСС") Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	НачислениеЕдиновременныхПособийЗаСчетФССНачисления.ВидРасчета,
			|	НачислениеЕдиновременныхПособийЗаСчетФССНачисления.Сотрудник КАК Сотрудник,
			|	СУММА(НачислениеЕдиновременныхПособийЗаСчетФССНачисления.Результат) КАК Результат,
			|	НачислениеЕдиновременныхПособийЗаСчетФССНачисления.ФамилияУмершего КАК ФамилияУмершего,
			|	НачислениеЕдиновременныхПособийЗаСчетФССНачисления.ИмяУмершего КАК ИмяУмершего,
			|	НачислениеЕдиновременныхПособийЗаСчетФССНачисления.ОтчествоУмершего КАК ОтчествоУмершего
			|ИЗ
			|	Документ.НачислениеЕдиновременныхПособийЗаСчетФСС.Начисления КАК НачислениеЕдиновременныхПособийЗаСчетФССНачисления
			|ГДЕ
			|	НачислениеЕдиновременныхПособийЗаСчетФССНачисления.Ссылка = &Ссылка
			|	И НачислениеЕдиновременныхПособийЗаСчетФССНачисления.Результат > 0
			|	И НачислениеЕдиновременныхПособийЗаСчетФССНачисления.ВидРасчета.НачислениеЗаСчетФСС = ИСТИНА
			|
			|СГРУППИРОВАТЬ ПО
			|	НачислениеЕдиновременныхПособийЗаСчетФССНачисления.ВидРасчета,
			|	НачислениеЕдиновременныхПособийЗаСчетФССНачисления.Сотрудник,
			|	НачислениеЕдиновременныхПособийЗаСчетФССНачисления.ФамилияУмершего,
			|	НачислениеЕдиновременныхПособийЗаСчетФССНачисления.ИмяУмершего,
			|	НачислениеЕдиновременныхПособийЗаСчетФССНачисления.ОтчествоУмершего";
			
			Запрос.УстановитьПараметр("Ссылка", Основание );
			
			Результат = Запрос.Выполнить();
			Выборка = Результат.Выбрать();
			
			Если Выборка.Следующий() Тогда
				НоваяСтрока = ПособияНаПогребение.Добавить();
				НоваяСтрока.Документ = Основание;
				НоваяСтрока.Сотрудник = Выборка.Сотрудник;
				НоваяСтрока.Сумма = Выборка.Результат;
				Ответственный = Основание.Ответственный;
				Записать();
			Иначе 
				#Если Клиент Тогда
					Предупреждение(НСтр("ru='Нет данных для создания заявления-расчета в ФСС';uk='Немає даних для створення заяви-розрахунку у ФСС'"));
				#КонецЕсли
				Возврат;	
			КонецЕсли;
		ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.НачислениеПоБольничномуЛисту") Тогда
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ
				|	НачислениеПоБольничномуЛисту.Ссылка.ПричинаНетрудоспособности.СтатьяРасчетовСФСС КАК Статья,
				|	НачислениеПоБольничномуЛисту.Ссылка.ПричинаНетрудоспособности КАК ПричинаНетрудоспособности,
				|	НачислениеПоБольничномуЛисту.Ссылка КАК Документ,
				|	НачислениеПоБольничномуЛисту.Сотрудник КАК Сотрудник,
				|	СУММА(НачислениеПоБольничномуЛисту.ОплаченоДнейЧасов) КАК Дни,
				|	СУММА(НачислениеПоБольничномуЛисту.Результат) КАК Сумма,
				|	НачислениеПоБольничномуЛисту.ВидРасчета
				|ИЗ
				|	Документ.НачислениеПоБольничномуЛисту.Начисления КАК НачислениеПоБольничномуЛисту
				|ГДЕ
				|	НачислениеПоБольничномуЛисту.Ссылка = &Ссылка
				|	И НачислениеПоБольничномуЛисту.Результат > 0
				|	И НачислениеПоБольничномуЛисту.ВидРасчета.НачислениеЗаСчетФСС = ИСТИНА
				|
				|СГРУППИРОВАТЬ ПО
				|	НачислениеПоБольничномуЛисту.Ссылка.ПричинаНетрудоспособности.СтатьяРасчетовСФСС,
				|	НачислениеПоБольничномуЛисту.Ссылка.ПричинаНетрудоспособности,
				|	НачислениеПоБольничномуЛисту.Ссылка,
				|	НачислениеПоБольничномуЛисту.Сотрудник,
				|	НачислениеПоБольничномуЛисту.ВидРасчета";
				
				Запрос.УстановитьПараметр("Ссылка", Основание );
				
				Результат = Запрос.Выполнить();
				Выборка = Результат.Выбрать();
				
				Если Выборка.Следующий() Тогда
					Если Выборка.Статья = Справочники.СтатьиНалоговыхДеклараций.ФССНесчСлуч_ВремНетрудосп Тогда
						НоваяСтрока = БольничныеНС.Добавить();
					ИначеЕсли Выборка.ВидРасчета = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускПоБеременностиИРодам Тогда
						НоваяСтрока = Декретные.Добавить();
					Иначе
						НоваяСтрока = Больничные.Добавить();
					КонецЕсли;
					Сотрудник = Выборка.Сотрудник;
					Сумма = Выборка.Сумма;
					Дни = Выборка.Дни;
				Иначе 
					#Если Клиент Тогда
						Предупреждение(НСтр("ru='Нет данных для создания заявления-расчета в ФСС';uk='Немає даних для створення заяви-розрахунку у ФСС'"));
					#КонецЕсли
					Возврат;	
				КонецЕсли;
			
			НоваяСтрока.Документ = Основание;
			НоваяСтрока.Сотрудник = Сотрудник;
			НоваяСтрока.Сумма = Сумма;
			НоваяСтрока.Дни = Дни;
			Ответственный = Основание.Ответственный;
			Записать();
		КонецЕсли;	
		РасчитатьИтоговыеСуммы();
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.НачислениеПоБольничномуЛисту")  ИЛИ ТипЗнч(Основание) = Тип("ДокументСсылка.НачислениеЕдиновременныхПособийЗаСчетФСС") Тогда
			Дата = ТекущаяДата();
			ПериодРегистрации = Основание.ПериодРегистрации;
			Организация = Основание.Организация;
			Если ТипЗнч(Основание) = Тип("ДокументСсылка.НачислениеПоБольничномуЛисту") Тогда
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ
				|	НачислениеПоБольничномуЛисту.Ссылка.ПричинаНетрудоспособности.СтатьяРасчетовСФСС КАК Статья
				|ИЗ
				|	Документ.НачислениеПоБольничномуЛисту.Начисления КАК НачислениеПоБольничномуЛисту
				|ГДЕ
				|	НачислениеПоБольничномуЛисту.Ссылка = &Ссылка
				|	И НачислениеПоБольничномуЛисту.Результат > 0
				|	И НачислениеПоБольничномуЛисту.ВидРасчета.НачислениеЗаСчетФСС = ИСТИНА";
				
				Запрос.УстановитьПараметр("Ссылка", Основание );
				
				Результат = Запрос.Выполнить();
				Выборка = Результат.Выбрать();
				
				Если Выборка.Следующий() Тогда
					Если  Выборка.Статья = Справочники.СтатьиНалоговыхДеклараций.ФССНесчСлуч_ВремНетрудосп Тогда
						ЗаСчетФССОтНС = Истина;
					Иначе
						ЗаСчетФССОтНС = Ложь;
					КонецЕсли;
				Иначе 
					#Если Клиент Тогда
						Предупреждение(НСтр("ru='Нет данных для создания заявления-расчета в ФСС';uk='Немає даних для створення заяви-розрахунку у ФСС'"));
					#КонецЕсли
					Возврат;	
				КонецЕсли;
			КонецЕсли;
			
			НоваяСтрока = ДокументыПоНачислениям.Добавить();
			НоваяСтрока.Документ = Основание;
			Ответственный = Основание.Ответственный;
			//Необходимо записать документ, для правильного расчета итоговых сумм.
			Записать();
			РасчитатьИтоговыеСуммы();
		КонецЕсли;
	
КонецПроцедуры

Функция СгруппироватьПериодыНачислений(Выборка, ИмяМакета)
	Перем прСотрудник, прПричинаНетрудоспособности, прДРФО, прСерия, прНомер; //переменные содержащие информацию с прошлой строки выборки при обходе ее в цикле
	Перем прПериодНачало;
	Перем прПериодКонец;
	Перем прКоличествоДней, прКоличествоДнейФСС, прРезультат, прРезультатФСС;
	Перем НоваяСтрока; //Строка табличной части
	
	прПериодНачало = Дата(1,1,1);
	прПериодКонец = Дата(1,1,1);
		    	
	ТаблицаНачислений = Новый ТаблицаЗначений;
	
	ТаблицаНачислений.Колонки.Добавить("Сотрудник");
	ТаблицаНачислений.Колонки.Добавить("Фамилия");
	ТаблицаНачислений.Колонки.Добавить("Имя");
	ТаблицаНачислений.Колонки.Добавить("Отчество");
	ТаблицаНачислений.Колонки.Добавить("ПричинаНетрудоспособности");
	ТаблицаНачислений.Колонки.Добавить("ДРФО");
	ТаблицаНачислений.Колонки.Добавить("Серия");
	ТаблицаНачислений.Колонки.Добавить("Номер");
	ТаблицаНачислений.Колонки.Добавить("ПериодНачало");
	ТаблицаНачислений.Колонки.Добавить("ПериодКонец");
	Если НЕ ИмяМакета = "Приложение1_3" Тогда			
		ТаблицаНачислений.Колонки.Добавить("КоличествоДней");
		ТаблицаНачислений.Колонки.Добавить("Результат");
	КонецЕсли;	
	ТаблицаНачислений.Колонки.Добавить("КоличествоДнейФСС");
	ТаблицаНачислений.Колонки.Добавить("РезультатФСС");
	Если ИмяМакета = "Приложение1_1" ИЛИ ИмяМакета = "Приложение1_3" Тогда
		ТаблицаНачислений.Колонки.Добавить("ВидЗанятости");
		ТаблицаНачислений.Колонки.Добавить("СтажВМесяцах");
		ТаблицаНачислений.Колонки.Добавить("СтажЗа12МесяцевВМесяцах");
		ТаблицаНачислений.Колонки.Добавить("ЭтоПродолжениеБольничного");
	КонецЕсли;
	Если ИмяМакета = "Приложение1_1" Тогда
		ТаблицаНачислений.Колонки.Добавить("СуммаЧАЭС");
		ТаблицаНачислений.Колонки.Добавить("ДниЧАЭС");
		ТаблицаНачислений.Колонки.Добавить("НомерЧАЭС");
	КонецЕсли;
	Пока Выборка.Следующий() Цикл
	    //если строки абсолютно разные добавляем новые
		Если Выборка.Сотрудник <> прСотрудник ИЛИ Выборка.ПричинаНетрудоспособности <> прПричинаНетрудоспособности ИЛИ НачалоДня(Выборка.ПериодНачало) <> (НачалоДня(прПериодКонец)+ 1*60*60*24) ИЛИ
	      Выборка.ДРФО <> прДРФО ИЛИ Выборка.Серия <> прСерия ИЛИ Выборка.Номер <> прНомер Тогда
			НоваяСтрока = ТаблицаНачислений.Добавить();
			НоваяСтрока.Сотрудник = Выборка.Сотрудник;
			НоваяСтрока.Фамилия = Выборка.Фамилия;
			НоваяСтрока.Имя = Выборка.Имя;
			НоваяСтрока.Отчество = Выборка.Отчество;
			НоваяСтрока.ПричинаНетрудоспособности = Выборка.ПричинаНетрудоспособности;
			НоваяСтрока.ДРФО = Выборка.ДРФО;
			НоваяСтрока.Серия = Выборка.Серия;
			НоваяСтрока.Номер = Выборка.Номер;
			НоваяСтрока.ПериодНачало = Выборка.ПериодНачало;
			НоваяСтрока.ПериодКонец = Выборка.ПериодКонец;
			Если НЕ ИмяМакета = "Приложение1_3" Тогда			
				НоваяСтрока.КоличествоДней = Выборка.КоличествоДней + Выборка.КоличествоДнейФСС;
				НоваяСтрока.Результат = Выборка.Результат + Выборка.РезультатФСС;
			КонецЕсли;	
			НоваяСтрока.КоличествоДнейФСС = Выборка.КоличествоДнейФСС;
			НоваяСтрока.РезультатФСС = Выборка.РезультатФСС;
			Если ИмяМакета = "Приложение1_1" ИЛИ ИмяМакета = "Приложение1_3" Тогда
				НоваяСтрока.ВидЗанятости = Выборка.ВидЗанятости;
			КонецЕсли;	
			Если ИмяМакета = "Приложение1_1" Тогда
				НоваяСтрока.СтажВМесяцах = Выборка.СтажВМесяцах;
				НоваяСтрока.СтажЗа12МесяцевВМесяцах = Выборка.СтажЗа12МесяцевВМесяцах;
				НоваяСтрока.ЭтоПродолжениеБольничного = Выборка.ЭтоПродолжениеБольничного;
			КонецЕсли;	
			Если ИмяМакета = "Приложение1_1" Тогда
				НоваяСтрока.СуммаЧАЭС = Выборка.СуммаЧАЭС;
				НоваяСтрока.ДниЧАЭС = Выборка.ДниЧАЭС;
				НоваяСтрока.НомерЧАЭС = Выборка.НомерЧАЭС;
			КонецЕсли;

			
			прСотрудник = Выборка.Сотрудник;
			прПричинаНетрудоспособности = Выборка.ПричинаНетрудоспособности;
			прДРФО = Выборка.ДРФО;
			прСерия = Выборка.Серия;
			прНомер = Выборка.Номер;
			
			прПериодНачало = Выборка.ПериодНачало;
			прПериодКонец = Выборка.ПериодКонец;
		//если строки одинаковые и если дата конца первой строки на один день меньше даты второй строки , совмещаем их, делаем одну строку.	
		ИначеЕсли Выборка.Сотрудник = прСотрудник И Выборка.ПричинаНетрудоспособности = прПричинаНетрудоспособности И
	      Выборка.ДРФО = прДРФО И Выборка.Серия = прСерия И Выборка.Номер = прНомер И НачалоДня(Выборка.ПериодНачало) = (НачалоДня(прПериодКонец)+ 1*60*60*24)   Тогда
			НоваяСтрока.ПериодНачало = прПериодНачало;
			НоваяСтрока.ПериодКонец = Выборка.ПериодКонец;
			Если НЕ ИмяМакета = "Приложение1_3" Тогда			
				НоваяСтрока.КоличествоДней = НоваяСтрока.КоличествоДней + Выборка.КоличествоДней + Выборка.КоличествоДнейФСС;
				НоваяСтрока.Результат = НоваяСтрока.Результат + Выборка.Результат + Выборка.РезультатФСС;
			КонецЕсли;	
			НоваяСтрока.КоличествоДнейФСС = НоваяСтрока.КоличествоДнейФСС + Выборка.КоличествоДнейФСС;
			НоваяСтрока.РезультатФСС = НоваяСтрока.РезультатФСС + Выборка.РезультатФСС;
			Если ИмяМакета = "Приложение1_1" ИЛИ ИмяМакета = "Приложение1_3" Тогда
				НоваяСтрока.ВидЗанятости = Выборка.ВидЗанятости;
			КонецЕсли;	
			Если ИмяМакета = "Приложение1_1" Тогда
				НоваяСтрока.СтажВМесяцах = Выборка.СтажВМесяцах;
				НоваяСтрока.СтажЗа12МесяцевВМесяцах = Выборка.СтажЗа12МесяцевВМесяцах;
				НоваяСтрока.ЭтоПродолжениеБольничного = Выборка.ЭтоПродолжениеБольничного;
			КонецЕсли;	
			прСотрудник = Выборка.Сотрудник;
			прПричинаНетрудоспособности = Выборка.ПричинаНетрудоспособности;
			прДРФО = Выборка.ДРФО;
			прСерия = Выборка.Серия;
			прНомер = Выборка.Номер;
			
			прПериодКонец = Выборка.ПериодКонец;
	КонецЕсли;
				
	КонецЦикла;
	
	Возврат ТаблицаНачислений;
	
КонецФункции
