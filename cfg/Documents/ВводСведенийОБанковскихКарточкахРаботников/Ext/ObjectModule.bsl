////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ РАБОТЫ ФОРМ


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

Функция СформироватьЗапросПоШапке()

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);

	Запрос.Текст = "
	|Выбрать 
	|	Дата, 
	|	Организация,
	| 	Ссылка 
	|Из 
	|	Документ." + Метаданные().Имя + "
	|Где 
	|	Ссылка = &ДокументСсылка
	|";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоШапке()

Функция СформироватьЗапросПоРаботникиОрганизации()

	Запрос = Новый Запрос;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	Запрос.УстановитьПараметр("Организация", Организация);

	ТекстЗапроса = "
	|	ВЫБРАТЬ
	|	ТЧРаботникиОрганизации.Ссылка.Дата			КАК Дата,
	|	ТЧРаботникиОрганизации.Ссылка.Организация	КАК Организация,
	|	ТЧРаботникиОрганизации.НомерСтроки,
	|	ТЧРаботникиОрганизации.Сотрудник,
	|	ТЧРаботникиОрганизации.СпособВыплаты,
	|	ТЧРаботникиОрганизации.ДатаДействия,
	|	ТЧРаботникиОрганизации.Банк,
	|	ТЧРаботникиОрганизации.НомерКарточки	
	|
	|ИЗ	Документ." + Метаданные().Имя + ".РаботникиОрганизации КАК ТЧРаботникиОрганизации
	|	
	|ГДЕ	ТЧРаботникиОрганизации.Ссылка = &ДокументСсылка
	|	
	|";			   
	
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить();

КонецФункции

Процедура ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ)

	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Организация) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru='Не указана организация, в которой работает работник!';uk='Не зазначена організація, у якій працює працівник!'"), Отказ);
	КонецЕсли;

КонецПроцедуры // ПроверитьЗаполнениеШапки()

Процедура ПроверитьЗаполнениеСтрокиРаботникиОрганизации(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, Отказ)

	СтрокаНачалаСообщенияОбОшибке = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='В строке номер ""%1"" табл. части ""Работники организации"": ';uk='У рядку номер ""%1"" табл. частини ""Працівники організації"": '"), СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки));
	
	// Сотрудник
	Если Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Сотрудник) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + НСтр("ru='не выбран Работник!';uk='не обраний Працівник!'"), Отказ);
	КонецЕсли;
	
	// СпособВыплаты
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.СпособВыплаты) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + НСтр("ru='не указан способ выплаты зарплаты!';uk='не зазначений спосіб виплати зарплати!'"), Отказ);
	КонецЕсли;
	
	Если ВыборкаПоСтрокамДокумента.СпособВыплаты = Перечисления.СпособыВыплатыЗарплаты.ЧерезБанк Тогда
		
		// ДатаДействия
		Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДатаДействия) Тогда
			ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + НСтр("ru='не указана дата действия карточки!';uk='не зазначена дата дії картки!'"), Отказ);
		КонецЕсли;
		
		// Банк
		Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Банк) Тогда
			ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + НСтр("ru='не указан банк!';uk='не зазначений банк!'"), Отказ);
		КонецЕсли;
		
		// НомерКарточки
		Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.НомерКарточки) Тогда
			ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + НСтр("ru='не указан номер счета карточки!';uk='не зазначений номер рахунку картки!'"), Отказ);
		КонецЕсли;
		
	КонецЕсли;	
		
КонецПроцедуры // ПроверитьЗаполнениеСтрокиРаботникаОрганизации()

Процедура ДобавитьСтрокуПараметрыВыплатыЗПРаботников( ВыборкаПоРаботникиОрганизации )

	Движение = Движения.ПараметрыВыплатыЗПРаботников.Добавить();
	
	// Свойства
	Движение.Период				= ВыборкаПоРаботникиОрганизации.Дата;
	
	// Измерения
	Движение.Сотрудник			= ВыборкаПоРаботникиОрганизации.Сотрудник;
	Движение.Организация		= ВыборкаПоРаботникиОрганизации.Организация;
	
	// ресурсы
	Движение.СпособВыплаты		= ВыборкаПоРаботникиОрганизации.СпособВыплаты;
	Движение.Банк				= ВыборкаПоРаботникиОрганизации.Банк;
	Движение.НомерКарточки		= ВыборкаПоРаботникиОрганизации.НомерКарточки;
	Движение.ДатаДействия		= ВыборкаПоРаботникиОрганизации.ДатаДействия;
	
КонецПроцедуры // ДобавитьСтрокуПараметрыВыплатыЗПРаботников

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, Режим)

	РезультатЗапросаПоШапке = СформироватьЗапросПоШапке();

	// Получим реквизиты шапки из запроса
	ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();

	ВыборкаПоШапкеДокумента.Следующий();
	ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ);
	
	// Движения стоит добавлять, если в проведении еще не отказано (отказ =ложь)
	Если НЕ Отказ Тогда
		
		// получим реквизиты табличной части
		РезультатЗапросаПоРаботники = СформироватьЗапросПоРаботникиОрганизации();
		ВыборкаПоРаботникиОрганизации = РезультатЗапросаПоРаботники.Выбрать();
		
		Пока ВыборкаПоРаботникиОрганизации.Следующий() Цикл 
			
			// проверим очередную строку табличной части
			ПроверитьЗаполнениеСтрокиРаботникиОрганизации(ВыборкаПоШапкеДокумента, ВыборкаПоРаботникиОрганизации, Отказ);
			
			Если НЕ Отказ Тогда
				
				// Заполним записи в наборах записей регистров
				ДобавитьСтрокуПараметрыВыплатыЗПРаботников( ВыборкаПоРаботникиОрганизации);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(РаботникиОрганизации);
	ПроцедурыУправленияПерсоналом.ЗаполнитьФизЛицоПоТЧ(РаботникиОрганизации);
		
КонецПроцедуры

Процедура ОбработкаЗаполнения(Основание)
	
	ТипОснования = ТипЗнч(Основание);
	Если ТипОснования = Тип("ДокументСсылка.ПриемНаРаботуВОрганизацию") Тогда
		
		Организация = Основание.Организация;
		Ответственный = Основание.Ответственный;
		
		Для каждого ТекСтрока Из Основание.РаботникиОрганизации Цикл
			
			НоваяСтрока = РаботникиОрганизации.Добавить();
			
			НоваяСтрока.Сотрудник = ТекСтрока.Сотрудник;
			НоваяСтрока.СпособВыплаты = Перечисления.СпособыВыплатыЗарплаты.ЧерезКассу;
			
		КонецЦикла
		
	КонецЕсли;	
	
КонецПроцедуры

