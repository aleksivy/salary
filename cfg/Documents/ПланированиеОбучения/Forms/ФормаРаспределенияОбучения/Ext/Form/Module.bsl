////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

// Диалог настройки периода
Перем мНастройкаПериода;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура распределяет заданное количество человек по месяцам заданного периода.
// Результат распределения записывается в табличную часть.
// Это позволяет реализовать возможность планирования за период
//
// Параметры
//  КурсРаспределяемый  – Справочники.КурсОбучения.Ссылка – Курс обучения.
//                 
//  КоличествоРаспределяемое  – Число – распределяемое количество обучающихся.
//                 
//  ДатаПериодаС  – Дата – Дата начала периода распределения.
//                 
//  ДатаПериодаПо – Дата – Дата окончания периода распределения.
//
Функция РаспределитьОбучение(КурсРаспределяемый,КоличествоРаспределяемое,ДатаПериодаС,ДатаПериодаПо)
	
	// Создать таблицу для распределения.
	ТаблицаРаспределения = Новый ТаблицаЗначений;
	ТаблицаРаспределения.Колонки.Добавить("Даты");
	ТаблицаРаспределения.Колонки.Добавить("Люди");
	
	ТекущийМесяц = Месяц(ДатаПериодаС);
	ТекущийГод   = Год(ДатаПериодаС);
	
	ДатаПробега = КонецМесяца(ДатаПериодаС);
	
	Пока ДатаПериодаПо >= ДатаПробега Цикл
		
		НоваяСтрока = ТаблицаРаспределения.Добавить();
		НоваяСтрока.Даты = КонецМесяца(ДатаПробега);
		НоваяСтрока.Люди = 0;
		ДатаПробега =  ДобавитьМесяц(ДатаПробега,1)
		
	КонецЦикла;
	
	// Алгоритм линейного распределения.
	
	КоличествоСтрок = ТаблицаРаспределения.Количество() - 1;
	ИндексТаблицы = 0;
	Для индекс = 1 по КоличествоРаспределяемое Цикл
		
		ТаблицаРаспределения[ИндексТаблицы].Люди = ТаблицаРаспределения[ИндексТаблицы].Люди + 1;
		ИндексТаблицы = ИндексТаблицы + 1;
		
		Если ИндексТаблицы > КоличествоСтрок Тогда
			ИндексТаблицы = 0;		
		КонецЕсли;
		
		
	КонецЦикла;
	
	ТаблицаРаспределения.Колонки.Добавить("КурсОбучения");
	ТаблицаРаспределения.ЗаполнитьЗначения(КурсРаспределяемый,"КурсОбучения");
	ТаблицаРаспределения.Колонки.Даты.Имя = "ДатаОкончанияОбучения";
	ТаблицаРаспределения.Колонки.Люди.Имя = "КоличествоРаботников";
	
	Возврат ТаблицаРаспределения
	
КонецФункции // РаспределитьОбучение()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПриОткрытии" формы
//
Процедура ПриОткрытии()
	
	// Установить настройку периода по умолчанию 
	мНастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период; 
	
	// Установим период, как начало и конец следующего года.
	ДатаС  = КонецГода(ТекущаяДата()) + 1;
	ДатаПо = КонецГода(ДатаС);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

Процедура ОсновныеДействияФормыРаспределить(Кнопка)
	
	// Проверить заполнение.
	Если НЕ ЗначениеЗаполнено(КурсОбученияДляРаспределения) Тогда
		Предупреждение(НСтр("ru='Выберите курс обучения!';uk='Виберіть курс навчання!'"), 10);
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДатаС) Тогда
		Предупреждение(НСтр("ru='Выберите дату начала периода!';uk='Виберіть дату початку періоду!'"), 10);
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДатаПо) Тогда
		Предупреждение(НСтр("ru='Выберите дату окончания периода!';uk='Виберіть дату закінчення періоду!'"), 10);
		Возврат;
	КонецЕсли;
	
	Если РаспределяемоеКоличество < 1  Тогда
		Предупреждение(НСтр("ru='Распределяемое количество обучающихся должно быть больше единицы!';uk='Кількість учнів, що розподіляється, повинна бути більше одиниці!'"), 10);
		Возврат;
	КонецЕсли;
	
	ЭтаФорма.Закрыть(РаспределитьОбучение(КурсОбученияДляРаспределения,РаспределяемоеКоличество,ДатаС,КонецДня(ДатаПо)));
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ФОРМЫ

Процедура ВыбПериодНажатие(Элемент)
	
	мНастройкаПериода.УстановитьПериод(ДатаС, ?(ДатаПо='0001-01-01', ДатаПо, КонецДня(ДатаПо)));
	
	Если мНастройкаПериода.Редактировать() Тогда
		ДатаС	= мНастройкаПериода.ПолучитьДатуНачала();
		ДатаПо	= мНастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

мНастройкаПериода = Новый НастройкаПериода;
