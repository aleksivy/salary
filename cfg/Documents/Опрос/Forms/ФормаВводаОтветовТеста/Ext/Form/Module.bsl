////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем ПрошлоСекунд;

Перем ВыданоПредупреждение;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Функция УстановитьЗакладкуПоТипуВопроса(Направление = 1)
	
	// Получим по вопросу типовой ответ и установим видимость кнопок "Далее" и "Назад"
	СтрокаДокумента = Вопросы.Найти(Вопрос);
	Если СтрокаДокумента <> Неопределено Тогда
		
		ТиповойОтвет     = СтрокаДокумента.ТиповойОтвет;
		РазвернутыйОтвет = СтрокаДокумента.Ответ;
		
		Если СтрокаДокумента.НомерСтроки = 1 Тогда
			ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Назад.Доступность = Ложь;
		Иначе
			ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Назад.Доступность = Истина;
		КонецЕсли;
		
		Если СтрокаДокумента.НомерСтроки < Вопросы.Количество() Тогда
			ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Далее.Доступность = Истина;
		Иначе
			ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Далее.Доступность = Ложь;
		КонецЕсли;
		
		ЭтаФорма.Заголовок = НСтр("ru='Вопрос ';uk='Питання '")+СтрокаДокумента.НомерСтроки+НСтр("ru=' из ';uk=' з '")+Вопросы.Количество();
		
	КонецЕсли;
	
	// установим страницу по типу значения
	Если НЕ Вопрос.ТипВопроса.Пустая() Тогда
		ИмяЗакладки = Метаданные.Перечисления.ТипВопросаАнкеты.ЗначенияПеречисления[Перечисления.ТипВопросаАнкеты.Индекс(Вопрос.ТипВопроса)].Имя;
	Иначе
		ИмяЗакладки = "Строка";
	КонецЕсли;
	
	// если страница не найдена - используем универсальную для одного значения - "Строка"
	Если ЭлементыФормы.ПанельТиповВопросов.Страницы.Найти(ИмяЗакладки) = Неопределено Тогда
		ИмяЗакладки = "Строка";
	КонецЕсли;
	
	// Для страницы "Строка" настроим элемент формы
	Если ИмяЗакладки = "Строка" Тогда
		Строка = Вопрос.ТипЗначения.ПривестиЗначение();
		Если ТипЗнч(Строка) = Тип("Строка") Тогда
			ЭлементыФормы.Строка.КнопкаВыбора = Ложь;
		Иначе
			ЭлементыФормы.Строка.КнопкаВыбора = Истина;
		КонецЕсли;
	КонецЕсли;
	
	ЭлементыФормы.ПанельТиповВопросов.ТекущаяСтраница = ЭлементыФормы.ПанельТиповВопросов.Страницы[ИмяЗакладки];
	
	ФормулировкаВопроса = Вопрос.ПолнаяФормулировка;  
	
	Если Вопрос.ОсновноеИзображение = Неопределено ИЛИ Вопрос.ОсновноеИзображение.Пустая() Тогда
		ЭлементыФормы.ПанельКартинки.Свертка = РежимСверткиЭлементаУправления.Верх;
	Иначе
		ЭлементыФормы.ПанельКартинки.Свертка = РежимСверткиЭлементаУправления.Нет;
		ЭлементыФормы.КартинкаВопроса.Картинка = Вопрос.ОсновноеИзображение.Хранилище.Получить();
	КонецЕсли;
	
	// Заполним реквизиты в зависимости от закладки
	Если ИмяЗакладки = "Адрес" Тогда
		
		МассивПолей = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(ТиповойОтвет, "¤");
		Если МассивПолей.Количество() > 1 тогда
			Регион  = МассивПолей[1];
		КонецЕсли;
		Если МассивПолей.Количество() > 2 тогда
			Район   = МассивПолей[2];
		КонецЕсли;
		Если МассивПолей.Количество() > 3 тогда
			Город   = МассивПолей[3];
		КонецЕсли;
		Если МассивПолей.Количество() > 4 тогда
			НаселенныйПункт = МассивПолей[4];
		КонецЕсли;
		Если МассивПолей.Количество() > 5 тогда
			Улица   = МассивПолей[5];
		КонецЕсли;
		Если МассивПолей.Количество() > 6 тогда
			Дом     = МассивПолей[6];
		КонецЕсли;
		Если МассивПолей.Количество() > 7 тогда
			Корпус  = МассивПолей[7];
		КонецЕсли;
		Если МассивПолей.Количество() > 8 тогда
			Квартира= МассивПолей[8];
		КонецЕсли;
		Если МассивПолей.Количество() > 0 тогда
			Индекс  = МассивПолей[0];
		КонецЕсли;
		Если МассивПолей.Количество() > 9 тогда
			КомментарийАдрес  = МассивПолей[9];
		КонецЕсли;
		
	ИначеЕсли ИмяЗакладки = "Телефон" Тогда
		
		МассивПолей = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(ТиповойОтвет, "¤");
		Если МассивПолей.Количество() > 0 тогда
			Поле1 = МассивПолей[0];
		КонецЕсли;
		Если МассивПолей.Количество() > 1 тогда
			Поле2 = МассивПолей[1];
		КонецЕсли;
		Если МассивПолей.Количество() > 2 тогда
			Поле3 = МассивПолей[2];
		КонецЕсли;
		Если МассивПолей.Количество() > 3 тогда
			Поле4 = МассивПолей[3];
		КонецЕсли;
		Если МассивПолей.Количество() > 4 тогда
			КомментарийТелефон = МассивПолей[4];
		КонецЕсли;
		
	ИначеЕсли ИмяЗакладки = "СправочникСсылка_ВариантыОтветов" Тогда
		
		ИндексОтвета = 0;
		Сч = 0;
		
		ЗапросКАнкете = Новый Запрос();
		ЗапросКАнкете.УстановитьПараметр("Вопрос", Вопрос);
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ВариантыОтветовОпросов.ТребуетРазвернутыйОтвет КАК ТребуетРазвернутыйОтвет,
		|	ВариантыОтветовОпросов.Ссылка КАК Ответ
		|ИЗ
		|	Справочник.ВариантыОтветовОпросов КАК ВариантыОтветовОпросов
		|ГДЕ
		|	ВариантыОтветовОпросов.Владелец = &Вопрос";
		
		ЗапросКАнкете.Текст = ТекстЗапроса;
		
		МассивОтветов = ЗапросКАнкете.Выполнить().Выгрузить();
		
		Сч = 2;
		Пока 1=1 Цикл
			Переключатель = ЭлементыФормы.Найти("Переключатель" + Сч);
			Если Переключатель <> Неопределено Тогда
				ЭлементыФормы.Удалить(Переключатель);
				Сч = Сч + 1;
			Иначе
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если МассивОтветов.Количество() <= 10 Тогда
			
			ПолеВвода = Тип("ПолеВвода");
			
			ЭлементыФормыДляУдаления = Новый СписокЗначений;
			Для каждого ЭУ Из ЭлементыФормы Цикл
				Если (Тип(ЭУ) = ПолеВвода) И Лев(ЭУ.Имя,15)="ПолеВводаОтвета" Тогда
					ЭлементыФормыДляУдаления.Добавить(ЭУ);
				КонецЕсли;
			КонецЦикла;
			Для каждого СтрокаСписка из ЭлементыФормыДляУдаления Цикл
				ЭлементыФормы.Удалить(СтрокаСписка.Значение);
			КонецЦикла;
			
			ВысотаФормы = ЭлементыФормы.Переключатель1.Верх; 
			
			Сч = 0;
			Для каждого СтрокаМассива Из МассивОтветов Цикл
				
				ВысотаФормы = ВысотаФормы + 19 + ?(СтрокаМассива.ТребуетРазвернутыйОтвет,24,3);
				
				Сч = Сч + 1;
				
				Если Сч > 1 Тогда
					
					Переключатель = ЭлементыФормы.Добавить(Тип("Переключатель"), "Переключатель" + Сч, Истина,ЭлементыФормы.ПанельТиповВопросов);
					
					ВерхЭУ = ЭлементыФормы["Переключатель" + (Сч-1)].Верх + 19 + ?(ЭлементыФормы.Найти("ПолеВводаОтвета" + (Сч-1)) <> Неопределено,24,3); 
					Переключатель.ПорядокОбхода = Сч + 1;
					Переключатель.Верх   = ВерхЭУ;
					Переключатель.Лево   = ЭлементыФормы.Переключатель1.Лево;
					Переключатель.Ширина = ЭлементыФормы.Переключатель1.Ширина;
					Переключатель.Высота = ЭлементыФормы.Переключатель1.Высота;
					Переключатель.ВыбираемоеЗначение = Сч;
					              
					// установка привязок
					Переключатель.УстановитьПривязку(ГраницаЭлементаУправления.Низ,   Переключатель, ГраницаЭлементаУправления.Верх);
					Переключатель.УстановитьПривязку(ГраницаЭлементаУправления.Лево, ЭтаФорма.Панель, ГраницаЭлементаУправления.Лево);
					Переключатель.УстановитьПривязку(ГраницаЭлементаУправления.Право, ЭтаФорма.Панель, ГраницаЭлементаУправления.Право);
					
				Иначе
					Переключатель = ЭлементыФормы.Переключатель1; 
				КонецЕсли;
				
				Переключатель.Заголовок = СтрокаМассива.Ответ;
				
				Если СтрокаМассива.ТребуетРазвернутыйОтвет Тогда
					
					ПолеВвода = ЭлементыФормы.Добавить(Тип("ПолеВвода"), "ПолеВводаОтвета" + Сч, Истина,ЭлементыФормы.ПанельТиповВопросов);
					
					ПолеВвода.Верх   = Переключатель.Верх + Переключатель.Высота;
					ПолеВвода.Лево   = Переключатель.Лево;
					ПолеВвода.Ширина = Переключатель.Ширина;
					ПолеВвода.Высота = Переключатель.Высота;
					
					ПолеВвода.Доступность = Ложь;
					
					// установка привязок
					ПолеВвода.УстановитьПривязку(ГраницаЭлементаУправления.Низ,   ПолеВвода, ГраницаЭлементаУправления.Верх);
					ПолеВвода.УстановитьПривязку(ГраницаЭлементаУправления.Лево, ЭтаФорма.Панель, ГраницаЭлементаУправления.Лево);
					ПолеВвода.УстановитьПривязку(ГраницаЭлементаУправления.Право, ЭтаФорма.Панель, ГраницаЭлементаУправления.Право);
					
				КонецЕсли;
				
				Если СтрокаМассива.Ответ = ТиповойОтвет Тогда
					Переключатель1 = Сч;
					ИндексОтвета = Сч;
					ЭлементыФормы["Переключатель" + Сч].АктивизироватьПоУмолчанию = Истина;
					Если СтрокаМассива.ТребуетРазвернутыйОтвет Тогда
						ПолеВвода.Доступность = Истина;
						ЭлементыФормы["ПолеВводаОтвета" + Сч].Значение = РазвернутыйОтвет;
					КонецЕсли; 
				КонецЕсли; 
				
			КонецЦикла;
			
			Если ИндексОтвета = 0 Тогда
				ЭлементыФормы.Переключатель1.АктивизироватьПоУмолчанию = Истина;
			КонецЕсли;
			
			ЭлементыФормы.Переключатель1.Видимость = Истина;
			ЭлементыФормы.ПолеВыбора.Видимость     = Ложь;
			ЭлементыФормы.НадписьРазвернутыйОтвет.Видимость = Ложь;
			
		Иначе
			
			ПолеВыбора = ЭлементыФормы.ПолеВыбора;
			Надпись = ЭлементыФормы.НадписьРазвернутыйОтвет;
			ПолеВыбора.Верх = ЭлементыФормы.Переключатель1.Верх + 5;
			Надпись.Верх = ПолеВыбора.Верх + ПолеВыбора.Высота + 5;
			
			Для каждого СтрокаМассива Из МассивОтветов Цикл
				ПолеВыбора.СписокВыбора.Добавить(СтрокаМассива.Ответ);
				Если СтрокаМассива.ТребуетРазвернутыйОтвет Тогда
					Если ЭлементыФормы.Найти("ПолеВвода") = Неопределено Тогда
						
						ПолеВвода = ЭлементыФормы.Добавить(Тип("ПолеВвода"), "ПолеВвода", Истина, ЭлементыФормы.ПанельТиповВопросов);
						
						ПолеВвода.Верх   = Надпись.Верх + Надпись.Высота + 5;
						ПолеВвода.Лево   = ЭлементыФормы.Переключатель1.Лево;
						ПолеВвода.Ширина = ЭлементыФормы.Переключатель1.Ширина;
						ПолеВвода.Высота = ЭлементыФормы.Переключатель1.Высота;
						
						ПолеВвода.Доступность = Ложь;
						
						// установка привязок
						ПолеВвода.УстановитьПривязку(ГраницаЭлементаУправления.Низ,   ПолеВвода, ГраницаЭлементаУправления.Верх);
						ПолеВвода.УстановитьПривязку(ГраницаЭлементаУправления.Лево, ЭтаФорма.Панель, ГраницаЭлементаУправления.Лево);
						ПолеВвода.УстановитьПривязку(ГраницаЭлементаУправления.Право, ЭтаФорма.Панель, ГраницаЭлементаУправления.Право);
						
					КонецЕсли;
					Если СтрокаМассива.Ответ = ТиповойОтвет Тогда
						ПолеВвода.Доступность = Истина;
						ЭлементыФормы.ПолеВвода.Значение = РазвернутыйОтвет;
					КонецЕсли; 
				КонецЕсли; 
			КонецЦикла;
			ПолеВыбора.Значение = ТиповойОтвет;
			
			ЭлементыФормы.ПолеВыбора.АктивизироватьПоУмолчанию = Истина;
			ВысотаФормы = ?(ЭлементыФормы.Найти("ПолеВвода") <> Неопределено,ЭлементыФормы.ПолеВвода,ЭлементыФормы.ПолеВыбора).Верх + 19;
			
			ЭлементыФормы.Переключатель1.Видимость = Ложь;
			ЭлементыФормы.ПолеВыбора.Видимость = Истина;
			ЭлементыФормы.НадписьРазвернутыйОтвет.Видимость = Истина;
			
		КонецЕсли;
		
	ИначеЕсли ИмяЗакладки = "СправочникСсылка_ВариантыОтветов_Несколько" Тогда
		
		НесколькоВариантовОтветов.Очистить();
		
		Запрос = Новый Запрос;
		
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	ВариантыОтветовОпросов.Ссылка
		|ИЗ
		|	Справочник.ВариантыОтветовОпросов КАК ВариантыОтветовОпросов
		|ГДЕ
		|	ВариантыОтветовОпросов.Владелец = &Вопрос";
		
		Запрос.УстановитьПараметр("Вопрос",Вопрос);
		
		Варианты = Запрос.Выполнить().Выбрать();
		
		НомерСтрокиТаблицы = 0;
		Пока Варианты.Следующий() Цикл
			
			НомерСтрокиТаблицы = НомерСтрокиТаблицы + 1;
			
			НоваяСтрока = НесколькоВариантовОтветов.Добавить();
			НоваяСтрока.НомерСтроки   = НомерСтрокиТаблицы;
			НоваяСтрока.ВариантОтвета = Варианты.Ссылка;
			
		КонецЦикла;
		
		СтруктураПоиска = Новый Структура("ВопросВладелец");
		СтруктураПоиска.Вставить("ВопросВладелец", Вопрос); 
		
		СтрокиПоиска = СоставнойОтвет.НайтиСтроки(СтруктураПоиска);
		Для каждого СтрокаПоиска из СтрокиПоиска Цикл
			СтрокаОтвета = НесколькоВариантовОтветов.Найти(СтрокаПоиска.ТиповойОтвет);
			Если СтрокаОтвета <> Неопределено Тогда
				СтрокаОтвета.Выбор = Истина;
				СтрокаОтвета.Ответ = СтрокаПоиска.Ответ;
			КонецЕсли;
		КонецЦикла;
		
	ИначеЕсли ИмяЗакладки = "Табличный" Тогда
		
		ЭлементыФормы.ТабличноеПолеСоставногоОтвета.ИзменятьПорядокСтрок = Ложь;
		ЭлементыФормы.ТабличноеПолеСоставногоОтвета.ИзменятьСоставСтрок  = Ложь;
		
		ТаблицаСоставногоОтвета = Новый ТаблицаЗначений;
		
		ТаблицаСоставногоОтвета.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число"), "№");
		КолонкиТабличногоВопроса = Вопрос.КолонкиТаблицы;
		
		Для каждого КолонкаТВ из КолонкиТабличногоВопроса Цикл
			ТаблицаСоставногоОтвета.Колонки.Добавить("Колонка"+КолонкаТВ.НомерСтроки, КолонкаТВ.КолонкаТаблицы.ТипЗначения, КолонкаТВ.КолонкаТаблицы.Наименование);
		КонецЦикла;
		
		ЭлементыФормы.ТабличноеПолеСоставногоОтвета.СоздатьКолонки();
		
		ПараметрыПоиска = Новый Структура("ВопросВладелец");
		ПараметрыПоиска.ВопросВладелец = Вопрос;
		
		МассивСтрок = СоставнойОтвет.НайтиСтроки(ПараметрыПоиска);
		
		СписокНомеровСтрок = Новый СписокЗначений;
		
		Для каждого ИндексНомераСтроки из МассивСтрок Цикл
			Если СписокНомеровСтрок.НайтиПоЗначению(ИндексНомераСтроки.НомерСтрокиВТаблице) = Неопределено тогда
				СписокНомеровСтрок.Добавить(ИндексНомераСтроки.НомерСтрокиВТаблице);
			КонецЕсли;
		КонецЦикла;
		
		ВсегоСтрок = Вопрос.КоличествоСтрокТаблицы;
		
		Для ИндексНомераСтроки = 1 по ВсегоСтрок Цикл
			
			ПараметрыПоиска = Новый Структура("ВопросВладелец, НомерСтрокиВТаблице");
			ПараметрыПоиска.ВопросВладелец = Вопрос;
			ПараметрыПоиска.НомерСтрокиВТаблице = ИндексНомераСтроки;
			
			ОтветНаТабличныйВопрос = СоставнойОтвет.НайтиСтроки(ПараметрыПоиска);
			
			СтрокаОтвет = ТаблицаСоставногоОтвета.Добавить();
			СтрокаОтвет.НомерСтроки = ИндексНомераСтроки;
			
			НомерКолонки = 1; // пропустим номер строки
			Для каждого КолонкаОтвет из ОтветНаТабличныйВопрос Цикл
				СтрокаОтвет[НомерКолонки] = КолонкаОтвет.ТиповойОтвет;
				НомерКолонки = НомерКолонки + 1;
				Если НомерКолонки >= ТаблицаСоставногоОтвета.Колонки.Количество() тогда
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
		КонецЦикла;
		
	ИначеЕсли ИмяЗакладки = "Текст" Тогда
		ПолеВводаТекст = ТиповойОтвет;
		
	Иначе
		Строка = ТиповойОтвет;
		
	КонецЕсли;
	
	ПрошлоСекунд = СтрокаДокумента.СекундОтвета;
	
	Если Вопрос.СекундОтвета = 0 Тогда
		ЭлементыФормы.Осталось.Видимость = Ложь;
		ЭлементыФормы.НадписьПредставлениеОсталосьСекунд.Видимость = Ложь;
	Иначе
		ЭлементыФормы.Осталось.Видимость = Истина;
		ЭлементыФормы.НадписьПредставлениеОсталосьСекунд.Видимость = Истина;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Процедура АктуализироватьТЧСоставногоОтвета(Элемент,Данные)
	
	Если Данные.Количество() = 0 тогда
		
		СтруктураПоиска = Новый Структура("ВопросВладелец");
		СтруктураПоиска.Вставить("ВопросВладелец", Вопрос); 
		
		СтрокиКУдалению = СоставнойОтвет.НайтиСтроки(СтруктураПоиска);
		Для каждого СтрокаДляУдаления из СтрокиКУдалению Цикл
			СоставнойОтвет.Удалить(СтрокаДляУдаления);
		КонецЦикла;
		
	Иначе
		
		// здесь при редактировании составного ответа удаляем все строки соответствуюшие вопросу владельцу
		// и заново их добавляем
		// для табличного вопроса удаляем все ответы соответствующие данной строке таблицы и заново их добавляем
		// связано с тем, что у табличного вопроса строки фиксированы, а у составного их может быть в общем случае
		// столько, сколько у него вариантов ответа
		
		СтруктураПоиска = Новый Структура("ВопросВладелец");
		СтруктураПоиска.Вставить("ВопросВладелец",Вопрос); 
		
		СтрокиКУдалению = СоставнойОтвет.НайтиСтроки(СтруктураПоиска);
		Для каждого СтрокаДляУдаления из СтрокиКУдалению Цикл
			СоставнойОтвет.Удалить(СтрокаДляУдаления);
		КонецЦикла;
		
		Если Вопрос.ТипВопроса = Перечисления.ТипВопросаАнкеты.СправочникСсылка_ВариантыОтветов_Несколько тогда
			
			НомерСтрокиОтвета = 0;
			
			Для Каждого СтрокаОтвета Из Данные Цикл
				
				Если НЕ СтрокаОтвета.Выбор Тогда Продолжить; КонецЕсли;
				
				НомерСтрокиОтвета = НомерСтрокиОтвета + 1;
				
				НоваяСтрокаОтвета                       = СоставнойОтвет.Добавить();
				НоваяСтрокаОтвета.Вопрос                = Вопрос;
				НоваяСтрокаОтвета.ВопросВладелец        = Вопрос;
				НоваяСтрокаОтвета.НомерСтрокиВТаблице   = НомерСтрокиОтвета;
				НоваяСтрокаОтвета.ТиповойОтвет          = СтрокаОтвета.ВариантОтвета;
				НоваяСтрокаОтвета.Ответ                 = СтрокаОтвета.Ответ;
			КонецЦикла;
			
		Иначе
			
			Для Каждого СтрокаОтвета Из Данные Цикл
				
				Для Каждого КолонкаОтвета Из Вопрос.КолонкиТаблицы Цикл
					
					НоваяСтрокаОтвета                       = СоставнойОтвет.Добавить();
					НоваяСтрокаОтвета.Вопрос                = КолонкаОтвета.КолонкаТаблицы;
					НоваяСтрокаОтвета.ВопросВладелец        = Вопрос;
					НоваяСтрокаОтвета.НомерСтрокиВТаблице   = СтрокаОтвета.НомерСтроки;
					НоваяСтрокаОтвета.ТиповойОтвет          = СтрокаОтвета["Колонка"+КолонкаОтвета.НомерСтроки];
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ПрочестьТиповойОтвет()
	
	ИмяТекущейЗакладки = ЭлементыФормы.ПанельТиповВопросов.ТекущаяСтраница.Имя;
	
	Если ИмяТекущейЗакладки = "Адрес" Тогда
		
		ТиповойОтвет = "";
		
		ТиповойОтвет = ТиповойОтвет + "¤" + СокрЛП(Индекс);
		ТиповойОтвет = ТиповойОтвет + "¤" + СокрЛП(Регион);
		ТиповойОтвет = ТиповойОтвет + "¤" + СокрЛП(Район);
		ТиповойОтвет = ТиповойОтвет + "¤" + СокрЛП(Город);
		ТиповойОтвет = ТиповойОтвет + "¤" + СокрЛП(НаселенныйПункт);
		ТиповойОтвет = ТиповойОтвет + "¤" + СокрЛП(Улица);
		ТиповойОтвет = ТиповойОтвет + "¤" + СокрЛП(Дом);
		ТиповойОтвет = ТиповойОтвет + "¤" + СокрЛП(Корпус);
		ТиповойОтвет = ТиповойОтвет + "¤" + СокрЛП(Квартира);
		ТиповойОтвет = ТиповойОтвет + "¤" + СокрЛП(КомментарийАдрес);
		ТиповойОтвет = Сред(ТиповойОтвет, 2);
		
	ИначеЕсли ИмяТекущейЗакладки = "Телефон" Тогда
		
		ТиповойОтвет = Поле1 + "¤" + Поле2 + "¤" + Поле3 + "¤" + Поле4 + "¤" + КомментарийТелефон;
		
	ИначеЕсли ИмяТекущейЗакладки = "Булево" Тогда
		
		ТиповойОтвет = СписокБулево;
		
	ИначеЕсли ИмяТекущейЗакладки = "Текст" Тогда
		
		ТиповойОтвет = ПолеВводаТекст;
		
	ИначеЕсли ИмяТекущейЗакладки = "СправочникСсылка_ВариантыОтветов" Тогда
		
		Если МассивОтветов.Количество() > 10 Тогда
			ТиповойОтвет = ЭлементыФормы.ПолеВыбора.Значение;
			ПолеВвода = ЭлементыФормы.Найти("ПолеВвода");
			Если ПолеВвода <> Неопределено Тогда
				РазвернутыйОтвет = ?(ПолеВвода.Доступность,ПолеВвода.Значение,"")
			КонецЕсли;
		ИначеЕсли Переключатель1 > 0 Тогда
			ТиповойОтвет = МассивОтветов[Переключатель1-1].Ответ;
			РазвернутыйОтвет = ?(ЭлементыФормы.Найти("ПолеВводаОтвета" + Переключатель1) = Неопределено,"",ЭлементыФормы["ПолеВводаОтвета" + Переключатель1].Значение);
		Иначе
			ТиповойОтвет     = Неопределено;
			РазвернутыйОтвет = Неопределено;
		КонецЕсли;
		
	ИначеЕсли ИмяТекущейЗакладки = "СправочникСсылка_ВариантыОтветов_Несколько" Тогда
		
		АктуализироватьТЧСоставногоОтвета(ЭлементыФормы.НесколькоВариантовОтветов,НесколькоВариантовОтветов);
		
	ИначеЕсли ИмяТекущейЗакладки = "Табличный" Тогда
		
		АктуализироватьТЧСоставногоОтвета(ЭлементыФормы.ТабличноеПолеСоставногоОтвета,ТаблицаСоставногоОтвета);
		
	Иначе
		
		ТиповойОтвет = Строка;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ЗаписатьОтветНаТекущийВопрос()
	
	СтрокаДокумента = Вопросы.Найти(Вопрос);
	
	Если СтрокаДокумента <> Неопределено Тогда
		ПрочестьТиповойОтвет();
		СтрокаДокумента.ТиповойОтвет = ТиповойОтвет;
		СтрокаДокумента.Ответ        = РазвернутыйОтвет;
		СтрокаДокумента.СекундОтвета = ПрошлоСекунд;
		Записать();
	КонецЕсли;
	
	Если ПроверитьОбязательноЗаполняемыеОтветы(Вопрос) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

// Процедура отбрабатывает отчет времени через обработчик ожидания
//
Процедура ОтчетВремени()
	
	Если ВыданоПредупреждение Тогда
		Возврат;
	КонецЕсли;
	
	Если Вопрос.СекундОтвета > 0 Тогда
		ОсталосьСекунд = Макс(0,Вопрос.СекундОтвета - ПрошлоСекунд-1);
		
		ПредставлениеМинут          = Цел(ОсталосьСекунд/60);
		ПредставлениеСекунд         = ОсталосьСекунд - ПредставлениеМинут*60;	
		ПредставлениеОсталосьСекунд = Формат(ПредставлениеМинут,"ЧЦ=2;ЧВН=1;ЧН='00'")+":"+Формат(ПредставлениеСекунд,"ЧЦ=2;ЧВН=1;ЧН='00'");
			
		Если ОсталосьСекунд = 0  Тогда
			
			ВыданоПредупреждение = Истина;
			Предупреждение(НСтр("ru='Время ответа на текущий вопрос истекло!';uk='Час відповіді на поточне питання минув!'"),5);
			ВыданоПредупреждение = Ложь;
			
			Если НЕ ПолучитьСледующийВопрос(1) Тогда
				ЭтаФорма.Закрыть();
			КонецЕсли;
		Иначе
			Если ОсталосьСекунд < 10 Тогда
				ЭлементыФормы.НадписьПредставлениеОсталосьСекунд.ЦветТекста = WebЦвета.Красный;
				Сигнал();
			Иначе
				ЭлементыФормы.НадписьПредставлениеОсталосьСекунд.ЦветТекста = WebЦвета.Черный;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ПрошлоСекунд = ПрошлоСекунд + 1;
	
	ПредставлениеМинут        = Цел(ПрошлоСекунд/60);
	ПредставлениеСекунд       = ПрошлоСекунд - ПредставлениеМинут*60;	
	ПредставлениеПрошлоСекунд = Формат(ПредставлениеМинут,"ЧЦ=2;ЧВН=1;ЧН='00'")+":"+Формат(ПредставлениеСекунд,"ЧЦ=2;ЧВН=1;ЧН='00'");
	
КонецПроцедуры

Функция ПолучитьСледующийВопрос(Направление = 1, РежимПроверки = Ложь)
	
	КоличествоВопросов = Вопросы.Количество();
	
	Для а=1 по КоличествоВопросов Цикл
		
		ТекВопрос = Вопросы[а-1].Вопрос;
		
		Если ТекВопрос = Вопрос Тогда
			
			ИндексСледующегоВопроса = а-1 + Направление;
			
			Если ИндексСледующегоВопроса < 0 ИЛИ ИндексСледующегоВопроса > КоличествоВопросов-1 Тогда
				Возврат Ложь;
			КонецЕсли;
			
			Вопрос = Вопросы[ИндексСледующегоВопроса].Вопрос;
			
			Если ПроверитьОбязательноЗаполняемыеОтветы(Вопрос,Ложь) Тогда
				Если НЕ ПолучитьСледующийВопрос(Направление, Истина) Тогда
					ЭтаФорма.Закрыть();
					Возврат Ложь; 
				КонецЕсли;
			КонецЕсли;
			
			Если Не РежимПроверки Тогда
				УстановитьЗакладкуПоТипуВопроса(Направление);
			КонецЕсли;
			
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Если Вопрос.СекундОтвета > 0 Тогда
		ВремяОтветаНаВопрос = Вопросы[ИндексСледующегоВопроса].СекундОтвета;
		Если Вопрос.СекундОтвета <= ВремяОтветаНаВопрос Тогда
			
			ВыданоПредупреждение = Истина;
			Предупреждение(НСтр("ru='Время ответа на текущий вопрос истекло!';uk='Час відповіді на поточне питання минув!'"),5);
			ВыданоПредупреждение = Ложь;
			
			Если НЕ ПолучитьСледующийВопрос(Направление) Тогда
				ЭтаФорма.Закрыть();
				Возврат Ложь; 
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Вопрос) Тогда
		
		Если Вопросы.Количество() = 0 Тогда
			Отказ = Истина;
			Возврат;
		Иначе
			Вопрос = Вопросы[0].Вопрос;
		КонецЕсли;
		
	КонецЕсли;
	
	Отказ = НЕ УстановитьЗакладкуПоТипуВопроса();
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ПодключитьОбработчикОжидания("ОтчетВремени",1);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

Процедура КоманднаяПанельФормыОК(Кнопка)
	
	ЗаписатьОтветНаТекущийВопрос();
	ЭтаФорма.Закрыть();
	
КонецПроцедуры

Процедура КоманднаяПанельФормыДалее(Кнопка)
	
	Если ЗаписатьОтветНаТекущийВопрос() Тогда
		ПолучитьСледующийВопрос(1);
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельФормыНазад(Кнопка)
	
	Если ЗаписатьОтветНаТекущийВопрос() Тогда
		ПолучитьСледующийВопрос(-1);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

Процедура Переключатель1ПриИзменении(Элемент)
	
	ПолеВвода = Тип("ПолеВвода");
	
	Для каждого ЭУ Из ЭлементыФормы Цикл
	    Если (Тип(ЭУ) = ПолеВвода) И Лев(ЭУ.Имя,15)="ПолеВводаОтвета" Тогда
			ЭУ.Доступность = Число(Сред(ЭУ.Имя,16)) = Переключатель1;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

Процедура ПолеВыбораПриИзменении(Элемент)
	
	ПолеВвода = ЭлементыФормы.Найти("ПолеВвода");
	Если ПолеВвода <> Неопределено Тогда
		ПолеВвода.Доступность = Элемент.Значение.ТребуетРазвернутыйОтвет
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ

Процедура НесколькоВариантовОтветовПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Элемент.Колонки.Ответ.ЭлементУправления.Доступность = Элемент.ТекущиеДанные.ВариантОтвета.ТребуетРазвернутыйОтвет
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

БулевоСписок = Новый СписокЗначений;
БулевоСписок.Добавить(Истина,"Да");
БулевоСписок.Добавить(Ложь,"Нет");

ЭлементыФормы.СписокБулево.СписокВыбора = БулевоСписок;

ВремяОтветаНаВопросы = Новый Соответствие();

ВыданоПредупреждение = Ложь;

ПрошлоСекунд = 0;
