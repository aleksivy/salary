Перем мТекущаяДатаДокумента; // Хранит последнюю установленную дату документа - для проверки перехода документа в другой период
Перем мФормаВыбораВидаНадбавки;// Форма выбора вида надбавки
Перем мСпособыРасчетов; // список способов расчета надбавок
Перем мСписокПредопределенныхВР; // список ненужных видов расчета

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	Если ЭтоНовый() Тогда
		Отказ = Истина;
		Предупреждение(НСтр("ru='Документ не используется в работе. Данные трудового договора регистрируются в форме справочника ""Сотрудники организаций""';uk='Документ не використовується в роботі. Дані трудового договору реєструються у формі довідника ""Співробітники організацій""'"),10);
		Возврат;
	КонецЕсли;
КонецПроцедуры

// Процедура - обработчик события "ПриОткрытии" формы
//
Процедура ПриОткрытии()

	Если ЭтоНовый() Тогда
		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект);
        ВидЗанятости = Перечисления.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы;
		ЗанимаемыхСтавок = 1;
		ГрафикРаботы     = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(Ответственный, "ГрафикРаботы");
	КонецЕсли;	

	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);
	
	СтруктураКолонок = Новый Структура();

	// Установить колонки, видимостью которых пользователь управлять не может.
	СтруктураКолонок.Вставить("Надбавка");
	СтруктураКолонок.Вставить("Размер");

	// Установить ограничение - изменять видимость колонок табличной части
	ОбработкаТабличныхЧастей.УстановитьИзменятьВидимостьКолонокТабЧасти(ЭлементыФормы.ПерсональныеНадбавки.Колонки, СтруктураКолонок);

	// Вывести в заголовке формы вид операции и статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);

	// Запомнить текущие значения реквизитов формы.
	мТекущаяДатаДокумента        = Дата;

	// Установить активный реквизит.
	Если НЕ ЗначениеЗаполнено(ФизЛицо) Тогда
	    ТекущийЭлемент = ЭлементыФормы.ФизЛицо;
	Иначе	
		РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма);
	КонецЕсли;
	
	ЭлементыФормы.СпособРасчета.СписокВыбора = ПроведениеРасчетов.ПолучитьСписокВариантовОсновныхНачислений()
	
КонецПроцедуры

// Процедура - обработчик события "ПослеЗаписи" формы.
//
Процедура ПослеЗаписи()
	// Вывести в заголовке формы статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
КонецПроцедуры

// Процедура - обработчик события "ОбработкаВыбора" формы
//
Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)

	Если Источник = мФормаВыбораВидаНадбавки Тогда

		Если ЭлементыФормы.ПерсональныеНадбавки.ТекущаяСтрока  = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
	    ЭлементыФормы.ПерсональныеНадбавки.ТекущаяСтрока.Надбавка  = ЗначениеВыбора;

	КонецЕсли; 

КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

// Процедура - обработчик события "ПриИзменении" поля ввода даты документа
//
Процедура ДатаПриИзменении(Элемент = Неопределено)

	РаботаСДиалогами.ПроверитьНомерДокумента(ДокументОбъект, мТекущаяДатаДокумента);

	мТекущаяДатаДокумента = Дата;

КонецПроцедуры // ДатаПриИзменении

// Процедура - обработчик события "ПриИзменении" поля ввода организации.
//
Процедура ОрганизацияПриИзменении(Элемент)

	ОбщегоНазначения.УстановитьНомерДокумента(ЭтотОбъект);
	ПодразделениеОрганизации = "";

КонецПроцедуры // ОрганизацияПриИзменении()

// Процедура обеспечивает нестандартный шаг регулирования 
//
// Параметры:
//  Элемент - поле ввода т.ч., которое отображает занимаемые ставки
//  Направление - число, определяет, какая из кнопок регулирования была нажата
//  СтандартнаяОбработка - булево, признак выполнения системной обработки события
//  
Процедура ЗанимаемыхСтавокРегулирование(Элемент, Направление, СтандартнаяОбработка)
	Если Направление = 1 Тогда // увеличиваем значение
		ЗанимаемыхСтавок = ЗанимаемыхСтавок + 0.5
	Иначе // = -1 - уменьшаем значение
		ЗанимаемыхСтавок = ЗанимаемыхСтавок - 0.5
	КонецЕсли;
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)

	РаботаСДиалогами.ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура выполняет открытие формы работы с категориями документа
//
Процедура ДействияФормыДействиеОткрытьКатегории(Кнопка)

	РаботаСДиалогами.ОткрытьКатегорииДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ ИЗМЕНЕНИЯ ЗНАЧЕНИЙ РЕКВИЗИТОВ ТЧ Надбавки

// Процедура - обработчик события "НачалоВыбора" значения реквизита "ВидНадбавки"
//
Процедура НадбавкиВидНадбавкиНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	мФормаВыбораВидаНадбавки = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПолучитьФормуВыбора("ФормаВыбора", ЭтаФорма, "дляДокументаТрудовойДоговор");

	мФормаВыбораВидаНадбавки.Отбор.СпособРасчета.ВидСравнения	= ВидСравнения.ВСписке;
	мФормаВыбораВидаНадбавки.Отбор.СпособРасчета.Значение		= мСпособыРасчетов;
	мФормаВыбораВидаНадбавки.Отбор.СпособРасчета.Использование	= Истина;
	
	мФормаВыбораВидаНадбавки.Отбор.Ссылка.ВидСравнения	= ВидСравнения.НеВСписке;
	мФормаВыбораВидаНадбавки.Отбор.Ссылка.Значение		= мСписокПредопределенныхВР;
	мФормаВыбораВидаНадбавки.Отбор.Ссылка.Использование	= Истина;
	
	мФормаВыбораВидаНадбавки.Открыть();
	СтандартнаяОбработка = Ложь;

КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 

мСпособыРасчетов = ПроведениеРасчетов.ПолучитьСписокВариантовНадбавок();
мСписокПредопределенныхВР = ПроведениеРасчетов.ПредопределенныеНачисленияОрганизации();
