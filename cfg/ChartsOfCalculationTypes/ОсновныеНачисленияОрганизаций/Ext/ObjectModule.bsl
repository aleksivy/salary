//////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТИРУЕМЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Процедура выполняет обновление реквизитов "ЗачетОтработанногоВремени" и
// "ЗачетНормыВремени" в зависимости от значения ОбозначениеВТабелеУчетаРабочегоВремени.ВидВремени
//
// Параметры:
//  Нет.
//
Процедура ОбновитьПризнакиУчетаВремени() Экспорт
	
	Если ВидВремени = Перечисления.ВидыВремени.ОтработанноеВПределахНормы Тогда
		ЗачетОтработанногоВремени 	= Истина;
		ЗачетНормыВремени 			= Истина;
		ЗачетКалендарных			= Истина;

	ИначеЕсли ВидВремени = Перечисления.ВидыВремени.ОтработанноеСверхНормы Тогда
		ЗачетОтработанногоВремени 	= Истина;
		ЗачетНормыВремени 			= Ложь;
		ЗачетКалендарных			= Ложь;

	ИначеЕсли ВидВремени = Перечисления.ВидыВремени.ЦелодневноеНеотработанное Тогда
		ЗачетОтработанногоВремени 	= Ложь;
		ЗачетНормыВремени 			= Истина;
		ЗачетКалендарных			= Истина;

	ИначеЕсли ВидВремени = Перечисления.ВидыВремени.ЧасовоеНеотработанное Тогда
		ЗачетОтработанногоВремени 	= Ложь;
		ЗачетНормыВремени 			= Истина;
		ЗачетКалендарных			= Ложь;

	ИначеЕсли ВидВремени = Перечисления.ВидыВремени.ЧасовоеОтработанноеВПределахНормы Тогда
		ЗачетОтработанногоВремени 	= Истина;
		ЗачетНормыВремени			= Истина;
		ЗачетКалендарных			= Ложь;

	Иначе
		ЗачетОтработанногоВремени 	= Ложь;
		ЗачетНормыВремени 			= Ложь;
		ЗачетКалендарных			= Ложь;

	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда // проверки не выполняем
		Возврат
	КонецЕсли;
	
	Если ВидВремени = Перечисления.ВидыВремени.ОтработанноеСверхНормы Тогда
		Если ОбозначениеВТабелеУчетаРабочегоВремени <> Справочники.КлассификаторИспользованияРабочегоВремени.Сверхурочные Тогда
			ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru='Указан неверный вид времени по классификатору использования рабочего времени!';uk='Вказаний невірний вид часу за класифікатором використання робочого часу!'"), Отказ);
		КонецЕсли;
	ИначеЕсли ЗначениеЗаполнено(ВидВремени) и ВидВремени <> Перечисления.ВидыВремени.ДополнительноОплачиваемоеВПределахНормы Тогда
		Если ОбозначениеВТабелеУчетаРабочегоВремени.Пустая() Тогда
			ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru='Для начисления, по которому регистрируется отработанное (или неотработанное время), необходимо задать конкретный вид времени по классификатору использования рабочего времени!';uk='Для нарахування, за яким реєструється відпрацьований (або невідпрацьований час), необхідно задати конкретний вид часу за класифікатором використання робочого часу!'"), Отказ);
		ИначеЕсли (ВидВремени = Перечисления.ВидыВремени.ЦелодневноеНеотработанное 
			Или ВидВремени = Перечисления.ВидыВремени.ЧасовоеНеотработанное) и ОбозначениеВТабелеУчетаРабочегоВремени.РабочееВремя Тогда
			ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru='Указан неверный вид времени по классификатору использования рабочего времени!';uk='Вказаний невірний вид часу за класифікатором використання робочого часу!'"), Отказ);
		ИначеЕсли (ВидВремени = Перечисления.ВидыВремени.ОтработанноеВПределахНормы 
			Или ВидВремени = Перечисления.ВидыВремени.ЧасовоеОтработанноеВПределахНормы) и Не ОбозначениеВТабелеУчетаРабочегоВремени.РабочееВремя Тогда 
			ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru='Указан неверный вид времени по классификатору использования рабочего времени!';uk='Вказаний невірний вид часу за класифікатором використання робочого часу!'"), Отказ);
		КонецЕсли;
	КонецЕсли;
	
	// Описание текста запроса:
	// Первая часть запроса - поиск видов расчета, которые вытесняЮт текущий, являющийся почасовым отклонением: 
	//		Выбираются виды расчета, которые вытесняЕт текущий, проверяется отсутствие таких видов
	//
	// Вторая часть запроса - поиск видов расчета, которые вытесняЕт текущий, являющийся почасовым отклонением: 
	//		Выбираются виды расчета, которые вытесняЕт текущий, проверяется отсутствие таких видов
	//
	// Третья часть запроса - поиск видов расчета, являющихся почасовыми отклонениями, которые вытесняЮт текущий: 
	//		Для вида расчета, не являющегося почасовым отклонением, поиск вытесняющий его видов - почасовых отклонений
	// 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("парамСсылка", Ссылка);
	НецелосменноеВремя = Новый Массив;
	НецелосменноеВремя.Добавить(Перечисления.ВидыВремени.ЧасовоеНеотработанное);
	НецелосменноеВремя.Добавить(Перечисления.ВидыВремени.ЧасовоеОтработанноеВПределахНормы);
	Запрос.УстановитьПараметр("НецелосменноеВремя", НецелосменноеВремя);
	Запрос.УстановитьПараметр("Сообщение1", НСтр("ru='Для нецелодевных начислений нельзя назначать вытесняющие виды расчета';uk='Для нецілоденних нарахувань не можна призначати витісняючі види розрахунку'"));
	Запрос.УстановитьПараметр("Сообщение2", НСтр("ru='Недопустимо назначение нецелодевного начисления ';uk='Неприпустимо призначення нецілоденного нарахування '"));
	Запрос.УстановитьПараметр("Сообщение3", НСтр("ru=' как вытесняющего для ';uk=' як витісняючого для '"));
	Запрос.УстановитьПараметр("Сообщение4", НСтр("ru='Недопустимо назначение нецелодевного начисления ';uk='Неприпустимо призначення нецілоденного нарахування '"));
	Запрос.УстановитьПараметр("Сообщение5", НСтр("ru=' в качестве вытесняющего вида расчета';uk=' в якості витісняючого виду розрахунку'"));
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	&Сообщение1 КАК ОписаниеКонфликта
	|ИЗ
	|	(ВЫБРАТЬ
	|		КОЛИЧЕСТВО(*) КАК КоличествоВР
	|	ИЗ
	|		ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ВытесняющиеВидыРасчета КАК ВытесняющиеВР
	|	ГДЕ
	|		ВытесняющиеВР.Ссылка = &парамСсылка
	|		И ВытесняющиеВР.Ссылка.ВидВремени В(&НецелосменноеВремя)) КАК ДанныеПоВытесняющимВР
	|ГДЕ
	|	ДанныеПоВытесняющимВР.КоличествоВР > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Сообщение2 + ОсновныеНачисления.Ссылка.Наименование + &Сообщение3 + ВытесняемыеНачисления.Ссылка.Наименование
	|ИЗ
	|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ВытесняющиеВидыРасчета КАК ВытесняемыеНачисления
	|		ПО ОсновныеНачисления.Ссылка = ВытесняемыеНачисления.ВидРасчета
	|ГДЕ
	|	ОсновныеНачисления.Ссылка = &парамСсылка
	|	И ОсновныеНачисления.ВидВремени В(&НецелосменноеВремя)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Сообщение4 + ВытесняющиеВР.ВидРасчета.Наименование + &Сообщение5
	|ИЗ
	|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ВытесняющиеВидыРасчета КАК ВытесняющиеВР
	|ГДЕ
	|	ВытесняющиеВР.Ссылка = &парамСсылка
	|	И ВытесняющиеВР.ВидРасчета.ВидВремени В(&НецелосменноеВремя)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если ЗначениеЗаполнено(Выборка.ОписаниеКонфликта) Тогда
			ТекстСообщения = Выборка.ОписаниеКонфликта; 
			ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, Отказ);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры
